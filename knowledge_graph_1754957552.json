{
  "nodes": {
    "doc_0": {
      "id": "doc_0",
      "type": "document",
      "name": "Cleanup_Complete",
      "description": "Document: CLEANUP_COMPLETE.md",
      "source": "CLEANUP_COMPLETE.md",
      "confidence": 0.9,
      "metadata": {
        "file_size": 4362,
        "lines": 135,
        "language": "unknown",
        "last_modified": 1754940827.0537372
      },
      "created_at": 1754957550.8293939,
      "updated_at": 1754957550.8293939
    },
    "concept_1": {
      "id": "concept_1",
      "type": "concept",
      "name": "1. **cleanup_project.py** (One-time use)",
      "description": "Concept: 1. **cleanup_project.py** (One-time use)",
      "source": "CLEANUP_COMPLETE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_COMPLETE.md"
        ]
      },
      "created_at": 1754957550.829399,
      "updated_at": 1754957550.829399
    },
    "concept_2": {
      "id": "concept_2",
      "type": "concept",
      "name": "bash\n# Edit crontab\ncrontab -e\n\n# Add this line for Monday at 9 AM\n0 9 * * 1 cd /path/to/your/project && ./scripts/maintain.sh",
      "description": "Concept: bash\n# Edit crontab\ncrontab -e\n\n# Add this line for Monday at 9 AM\n0 9 * * 1 cd /path/to/your/project && ./scripts/maintain.sh",
      "source": "CLEANUP_COMPLETE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_COMPLETE.md"
        ]
      },
      "created_at": 1754957550.829406,
      "updated_at": 1754957550.829406
    },
    "concept_3": {
      "id": "concept_3",
      "type": "concept",
      "name": ".pyc/.pyo",
      "description": "Concept: .pyc/.pyo",
      "source": "CLEANUP_COMPLETE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_COMPLETE.md"
        ]
      },
      "created_at": 1754957550.8294132,
      "updated_at": 1754957550.8294132
    },
    "concept_4": {
      "id": "concept_4",
      "type": "concept",
      "name": "bash\n# Run maintenance script\npython3 scripts/maintain_project.py\n\n# Or use the shell wrapper\n./scripts/maintain.sh",
      "description": "Concept: bash\n# Run maintenance script\npython3 scripts/maintain_project.py\n\n# Or use the shell wrapper\n./scripts/maintain.sh",
      "source": "CLEANUP_COMPLETE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_COMPLETE.md"
        ]
      },
      "created_at": 1754957550.8294148,
      "updated_at": 1754957550.8294148
    },
    "concept_5": {
      "id": "concept_5",
      "type": "concept",
      "name": "\u274c Python cache files cluttering the project",
      "description": "Concept: \u274c Python cache files cluttering the project",
      "source": "CLEANUP_COMPLETE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_COMPLETE.md"
        ]
      },
      "created_at": 1754957550.829418,
      "updated_at": 1754957550.829418
    },
    "concept_6": {
      "id": "concept_6",
      "type": "concept",
      "name": "### \ud83d\udee0\ufe0f New Maintenance Tools\n\n#### 1. **cleanup_project.py** (One-time use)\n\n- Removes Python cache files\n- Consolidates Docker configurations\n- Organizes documentation\n- Creates clean project structure\n\n#### 2. **maintain_project.py** (Regular use)\n\n- Checks for new cache files\n- Verifies directory structure\n- Monitors documentation organization\n- Generates maintenance reports\n\n#### 3. **maintain.sh** (Shell wrapper)\n\n- Easy-to-use shell script\n- Automatically detects Python version\n- Can be added to crontab for automation\n\n## \ud83d\ude80 How to Use Going Forward\n\n### Regular Maintenance",
      "description": "Concept: ### \ud83d\udee0\ufe0f New Maintenance Tools\n\n#### 1. **cleanup_project.py** (One-time use)\n\n- Removes Python cache files\n- Consolidates Docker configurations\n- Organizes documentation\n- Creates clean project structure\n\n#### 2. **maintain_project.py** (Regular use)\n\n- Checks for new cache files\n- Verifies directory structure\n- Monitors documentation organization\n- Generates maintenance reports\n\n#### 3. **maintain.sh** (Shell wrapper)\n\n- Easy-to-use shell script\n- Automatically detects Python version\n- Can be added to crontab for automation\n\n## \ud83d\ude80 How to Use Going Forward\n\n### Regular Maintenance",
      "source": "CLEANUP_COMPLETE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_COMPLETE.md"
        ]
      },
      "created_at": 1754957550.82943,
      "updated_at": 1754957550.82943
    },
    "concept_7": {
      "id": "concept_7",
      "type": "concept",
      "name": "\u274c Difficult to maintain",
      "description": "Concept: \u274c Difficult to maintain",
      "source": "CLEANUP_COMPLETE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_COMPLETE.md"
        ]
      },
      "created_at": 1754957550.8294358,
      "updated_at": 1754957550.8294358
    },
    "concept_8": {
      "id": "concept_8",
      "type": "concept",
      "name": "Before Cleanup",
      "description": "Concept: Before Cleanup",
      "source": "CLEANUP_COMPLETE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_COMPLETE.md"
        ]
      },
      "created_at": 1754957550.829441,
      "updated_at": 1754957550.829441
    },
    "concept_9": {
      "id": "concept_9",
      "type": "concept",
      "name": "Monitors documentation organization",
      "description": "Concept: Monitors documentation organization",
      "source": "CLEANUP_COMPLETE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_COMPLETE.md"
        ]
      },
      "created_at": 1754957550.8294451,
      "updated_at": 1754957550.8294451
    },
    "concept_10": {
      "id": "concept_10",
      "type": "concept",
      "name": "Or use the shell wrapper",
      "description": "Concept: Or use the shell wrapper",
      "source": "CLEANUP_COMPLETE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_COMPLETE.md"
        ]
      },
      "created_at": 1754957550.82945,
      "updated_at": 1754957550.82945
    },
    "concept_11": {
      "id": "concept_11",
      "type": "concept",
      "name": "- Regular maintenance script\n-",
      "description": "Concept: - Regular maintenance script\n-",
      "source": "CLEANUP_COMPLETE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_COMPLETE.md"
        ]
      },
      "created_at": 1754957550.8294551,
      "updated_at": 1754957550.8294551
    },
    "concept_12": {
      "id": "concept_12",
      "type": "concept",
      "name": "Can be added to crontab for automation",
      "description": "Concept: Can be added to crontab for automation",
      "source": "CLEANUP_COMPLETE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_COMPLETE.md"
        ]
      },
      "created_at": 1754957550.829461,
      "updated_at": 1754957550.829461
    },
    "concept_13": {
      "id": "concept_13",
      "type": "concept",
      "name": "Checks for new cache files",
      "description": "Concept: Checks for new cache files",
      "source": "CLEANUP_COMPLETE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_COMPLETE.md"
        ]
      },
      "created_at": 1754957550.8294652,
      "updated_at": 1754957550.829466
    },
    "concept_14": {
      "id": "concept_14",
      "type": "concept",
      "name": "**Scripts**: Place in `scripts/` directory",
      "description": "Concept: **Scripts**: Place in `scripts/` directory",
      "source": "CLEANUP_COMPLETE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_COMPLETE.md",
          "PROJECT_ORGANIZATION.md"
        ]
      },
      "created_at": 1754957550.8294709,
      "updated_at": 1754957551.103178
    },
    "concept_15": {
      "id": "concept_15",
      "type": "concept",
      "name": "directory\n- **Scripts**: Place in",
      "description": "Concept: directory\n- **Scripts**: Place in",
      "source": "CLEANUP_COMPLETE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_COMPLETE.md",
          "PROJECT_ORGANIZATION.md"
        ]
      },
      "created_at": 1754957550.829476,
      "updated_at": 1754957551.1031868
    },
    "concept_16": {
      "id": "concept_16",
      "type": "concept",
      "name": "Automatically detects Python version",
      "description": "Concept: Automatically detects Python version",
      "source": "CLEANUP_COMPLETE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_COMPLETE.md"
        ]
      },
      "created_at": 1754957550.829481,
      "updated_at": 1754957550.829481
    },
    "concept_17": {
      "id": "concept_17",
      "type": "concept",
      "name": "3. **maintain.sh** (Shell wrapper)",
      "description": "Concept: 3. **maintain.sh** (Shell wrapper)",
      "source": "CLEANUP_COMPLETE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_COMPLETE.md"
        ]
      },
      "created_at": 1754957550.8294861,
      "updated_at": 1754957550.8294861
    },
    "concept_18": {
      "id": "concept_18",
      "type": "concept",
      "name": "Regular Maintenance",
      "description": "Concept: Regular Maintenance",
      "source": "CLEANUP_COMPLETE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_COMPLETE.md"
        ]
      },
      "created_at": 1754957550.8294919,
      "updated_at": 1754957550.8294919
    },
    "concept_19": {
      "id": "concept_19",
      "type": "concept",
      "name": "- One-time cleanup script\n-",
      "description": "Concept: - One-time cleanup script\n-",
      "source": "CLEANUP_COMPLETE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_COMPLETE.md"
        ]
      },
      "created_at": 1754957550.829497,
      "updated_at": 1754957550.829497
    },
    "concept_20": {
      "id": "concept_20",
      "type": "concept",
      "name": "\u2705 **Maintenance tools added** - Scripts to keep the project organized going forward",
      "description": "Concept: \u2705 **Maintenance tools added** - Scripts to keep the project organized going forward",
      "source": "CLEANUP_COMPLETE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_COMPLETE.md"
        ]
      },
      "created_at": 1754957550.829507,
      "updated_at": 1754957550.829507
    },
    "concept_21": {
      "id": "concept_21",
      "type": "concept",
      "name": "memory-context-manager_v2/\n\u251c\u2500\u2500 \ud83d\udcc1 docs/                    # All documentation organized here\n\u251c\u2500\u2500 \ud83d\udcc1 scripts/                 # Maintenance and utility scripts\n\u2502   \u251c\u2500\u2500 cleanup_project.py      # One-time cleanup script\n\u2502   \u2514\u2500\u2500 maintain_project.py     # Regular maintenance script\n\u251c\u2500\u2500 \ud83d\udcc1 tests/                   # Test files and suites\n\u251c\u2500\u2500 \ud83d\udcc1 config/                  # Configuration files\n\u251c\u2500\u2500 \ud83d\udcc1 plugins/                 # Plugin system (existing)\n\u251c\u2500\u2500 \ud83d\udcc1 database/                # Database components (existing)\n\u251c\u2500\u2500 \ud83d\udcc1 src/                     # Source code (existing)\n\u251c\u2500\u2500 \ud83d\udcc1 brain_memory_store/      # Brain memory storage (existing)\n\u251c\u2500\u2500 \ud83d\udc33 docker-compose.yml       # Single, optimized Docker config\n\u251c\u2500\u2500 \ud83d\udc33 Dockerfile               # Production-ready container\n\u251c\u2500\u2500 \ud83d\udcd6 README.md                # Main project documentation\n\u251c\u2500\u2500 \ud83d\udce6 pyproject.toml           # Project configuration\n\u2514\u2500\u2500 \ud83d\udd27 .cursorrules             # Cursor IDE configuration",
      "description": "Concept: memory-context-manager_v2/\n\u251c\u2500\u2500 \ud83d\udcc1 docs/                    # All documentation organized here\n\u251c\u2500\u2500 \ud83d\udcc1 scripts/                 # Maintenance and utility scripts\n\u2502   \u251c\u2500\u2500 cleanup_project.py      # One-time cleanup script\n\u2502   \u2514\u2500\u2500 maintain_project.py     # Regular maintenance script\n\u251c\u2500\u2500 \ud83d\udcc1 tests/                   # Test files and suites\n\u251c\u2500\u2500 \ud83d\udcc1 config/                  # Configuration files\n\u251c\u2500\u2500 \ud83d\udcc1 plugins/                 # Plugin system (existing)\n\u251c\u2500\u2500 \ud83d\udcc1 database/                # Database components (existing)\n\u251c\u2500\u2500 \ud83d\udcc1 src/                     # Source code (existing)\n\u251c\u2500\u2500 \ud83d\udcc1 brain_memory_store/      # Brain memory storage (existing)\n\u251c\u2500\u2500 \ud83d\udc33 docker-compose.yml       # Single, optimized Docker config\n\u251c\u2500\u2500 \ud83d\udc33 Dockerfile               # Production-ready container\n\u251c\u2500\u2500 \ud83d\udcd6 README.md                # Main project documentation\n\u251c\u2500\u2500 \ud83d\udce6 pyproject.toml           # Project configuration\n\u2514\u2500\u2500 \ud83d\udd27 .cursorrules             # Cursor IDE configuration",
      "source": "CLEANUP_COMPLETE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_COMPLETE.md"
        ]
      },
      "created_at": 1754957550.829571,
      "updated_at": 1754957550.829571
    },
    "concept_22": {
      "id": "concept_22",
      "type": "concept",
      "name": "\u2705 Maintenance tools for ongoing organization",
      "description": "Concept: \u2705 Maintenance tools for ongoing organization",
      "source": "CLEANUP_COMPLETE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_COMPLETE.md"
        ]
      },
      "created_at": 1754957550.8295832,
      "updated_at": 1754957550.8295832
    },
    "concept_23": {
      "id": "concept_23",
      "type": "concept",
      "name": "Adding New Files",
      "description": "Concept: Adding New Files",
      "source": "CLEANUP_COMPLETE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_COMPLETE.md",
          "PROJECT_ORGANIZATION.md"
        ]
      },
      "created_at": 1754957550.829592,
      "updated_at": 1754957551.10464
    },
    "concept_24": {
      "id": "concept_24",
      "type": "concept",
      "name": "\u274c No clear organization structure",
      "description": "Concept: \u274c No clear organization structure",
      "source": "CLEANUP_COMPLETE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_COMPLETE.md"
        ]
      },
      "created_at": 1754957550.8296041,
      "updated_at": 1754957550.8296041
    },
    "concept_25": {
      "id": "concept_25",
      "type": "concept",
      "name": "directory\n- **Configs**: Place in",
      "description": "Concept: directory\n- **Configs**: Place in",
      "source": "CLEANUP_COMPLETE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_COMPLETE.md",
          "PROJECT_ORGANIZATION.md"
        ]
      },
      "created_at": 1754957550.8296142,
      "updated_at": 1754957551.105119
    },
    "concept_26": {
      "id": "concept_26",
      "type": "concept",
      "name": "docs/",
      "description": "Concept: docs/",
      "source": "CLEANUP_COMPLETE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_COMPLETE.md",
          "CLEANUP_SUMMARY.md",
          "cleanup_project.py"
        ]
      },
      "created_at": 1754957550.829623,
      "updated_at": 1754957551.627773
    },
    "concept_27": {
      "id": "concept_27",
      "type": "concept",
      "name": "Consolidates Docker configurations",
      "description": "Concept: Consolidates Docker configurations",
      "source": "CLEANUP_COMPLETE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_COMPLETE.md"
        ]
      },
      "created_at": 1754957550.829633,
      "updated_at": 1754957550.829633
    },
    "concept_28": {
      "id": "concept_28",
      "type": "concept",
      "name": "Dockerfile",
      "description": "Concept: Dockerfile",
      "source": "CLEANUP_COMPLETE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_COMPLETE.md"
        ]
      },
      "created_at": 1754957550.829642,
      "updated_at": 1754957550.829642
    },
    "concept_29": {
      "id": "concept_29",
      "type": "concept",
      "name": "directory\n- \u2705 Clean project structure with clear purposes\n- \u2705 Maintenance tools for ongoing organization\n- \u2705 Easy to navigate and maintain\n\n## \ud83c\udfaf Benefits of the Cleanup\n\n1. **Better Organization** - Clear separation of concerns\n2. **Easier Maintenance** - Automated tools to keep things clean\n3. **Improved Development** - Faster to find what you need\n4. **Professional Appearance** - Clean, organized codebase\n5. **Team Collaboration** - Clear structure for multiple developers\n\n## \ud83d\udd2e Future Recommendations\n\n1. **Run maintenance weekly** - Keep the project organized\n2. **Follow the structure** - Place new files in appropriate directories\n3. **Update documentation** - Keep docs current with code changes\n4. **Use the tools** - Leverage the maintenance scripts\n5. **Share the structure** - Help team members understand the organization\n\n## \ud83d\udcdd Files Created During Cleanup\n\n-",
      "description": "Concept: directory\n- \u2705 Clean project structure with clear purposes\n- \u2705 Maintenance tools for ongoing organization\n- \u2705 Easy to navigate and maintain\n\n## \ud83c\udfaf Benefits of the Cleanup\n\n1. **Better Organization** - Clear separation of concerns\n2. **Easier Maintenance** - Automated tools to keep things clean\n3. **Improved Development** - Faster to find what you need\n4. **Professional Appearance** - Clean, organized codebase\n5. **Team Collaboration** - Clear structure for multiple developers\n\n## \ud83d\udd2e Future Recommendations\n\n1. **Run maintenance weekly** - Keep the project organized\n2. **Follow the structure** - Place new files in appropriate directories\n3. **Update documentation** - Keep docs current with code changes\n4. **Use the tools** - Leverage the maintenance scripts\n5. **Share the structure** - Help team members understand the organization\n\n## \ud83d\udcdd Files Created During Cleanup\n\n-",
      "source": "CLEANUP_COMPLETE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_COMPLETE.md"
        ]
      },
      "created_at": 1754957550.829727,
      "updated_at": 1754957550.829727
    },
    "concept_30": {
      "id": "concept_30",
      "type": "concept",
      "name": "Automatic Maintenance (Optional)",
      "description": "Concept: Automatic Maintenance (Optional)",
      "source": "CLEANUP_COMPLETE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_COMPLETE.md"
        ]
      },
      "created_at": 1754957550.8297431,
      "updated_at": 1754957550.8297431
    },
    "concept_31": {
      "id": "concept_31",
      "type": "concept",
      "name": "### Adding New Files\n\n- **Documentation**: Place in",
      "description": "Concept: ### Adding New Files\n\n- **Documentation**: Place in",
      "source": "CLEANUP_COMPLETE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_COMPLETE.md"
        ]
      },
      "created_at": 1754957550.8297548,
      "updated_at": 1754957550.8297548
    },
    "concept_32": {
      "id": "concept_32",
      "type": "concept",
      "name": "`PROJECT_ORGANIZATION.md` - Organization guidelines",
      "description": "Concept: `PROJECT_ORGANIZATION.md` - Organization guidelines",
      "source": "CLEANUP_COMPLETE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_COMPLETE.md"
        ]
      },
      "created_at": 1754957550.829768,
      "updated_at": 1754957550.829768
    },
    "concept_33": {
      "id": "concept_33",
      "type": "concept",
      "name": "\ud83d\udee0\ufe0f New Maintenance Tools",
      "description": "Concept: \ud83d\udee0\ufe0f New Maintenance Tools",
      "source": "CLEANUP_COMPLETE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_COMPLETE.md"
        ]
      },
      "created_at": 1754957550.8297899,
      "updated_at": 1754957550.8297899
    },
    "concept_34": {
      "id": "concept_34",
      "type": "concept",
      "name": "Run maintenance script",
      "description": "Concept: Run maintenance script",
      "source": "CLEANUP_COMPLETE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_COMPLETE.md"
        ]
      },
      "created_at": 1754957550.829803,
      "updated_at": 1754957550.829803
    },
    "concept_35": {
      "id": "concept_35",
      "type": "concept",
      "name": "Easy-to-use shell script",
      "description": "Concept: Easy-to-use shell script",
      "source": "CLEANUP_COMPLETE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_COMPLETE.md"
        ]
      },
      "created_at": 1754957550.829816,
      "updated_at": 1754957550.829816
    },
    "concept_36": {
      "id": "concept_36",
      "type": "concept",
      "name": "- Detailed cleanup process\n-",
      "description": "Concept: - Detailed cleanup process\n-",
      "source": "CLEANUP_COMPLETE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_COMPLETE.md"
        ]
      },
      "created_at": 1754957550.8298292,
      "updated_at": 1754957550.8298292
    },
    "concept_37": {
      "id": "concept_37",
      "type": "concept",
      "name": "Verifies directory structure",
      "description": "Concept: Verifies directory structure",
      "source": "CLEANUP_COMPLETE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_COMPLETE.md"
        ]
      },
      "created_at": 1754957550.8298419,
      "updated_at": 1754957550.8298419
    },
    "concept_38": {
      "id": "concept_38",
      "type": "concept",
      "name": "\u2705 Easy to navigate and maintain",
      "description": "Concept: \u2705 Easy to navigate and maintain",
      "source": "CLEANUP_COMPLETE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_COMPLETE.md"
        ]
      },
      "created_at": 1754957550.829859,
      "updated_at": 1754957550.829859
    },
    "concept_39": {
      "id": "concept_39",
      "type": "concept",
      "name": "\u2705 **Python cache files removed** - All `__pycache__/` directories and `.pyc/.pyo` files cleaned up",
      "description": "Concept: \u2705 **Python cache files removed** - All `__pycache__/` directories and `.pyc/.pyo` files cleaned up",
      "source": "CLEANUP_COMPLETE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_COMPLETE.md"
        ]
      },
      "created_at": 1754957550.8298838,
      "updated_at": 1754957550.8298838
    },
    "concept_40": {
      "id": "concept_40",
      "type": "concept",
      "name": "\ud83e\uddf9 Cleanup Actions",
      "description": "Concept: \ud83e\uddf9 Cleanup Actions",
      "source": "CLEANUP_COMPLETE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_COMPLETE.md"
        ]
      },
      "created_at": 1754957550.8299,
      "updated_at": 1754957550.8299
    },
    "concept_41": {
      "id": "concept_41",
      "type": "concept",
      "name": "**Documentation**: Place in `docs/` directory",
      "description": "Concept: **Documentation**: Place in `docs/` directory",
      "source": "CLEANUP_COMPLETE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_COMPLETE.md",
          "PROJECT_ORGANIZATION.md"
        ]
      },
      "created_at": 1754957550.829914,
      "updated_at": 1754957551.112297
    },
    "concept_42": {
      "id": "concept_42",
      "type": "concept",
      "name": "What Was Accomplished",
      "description": "Concept: What Was Accomplished",
      "source": "CLEANUP_COMPLETE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_COMPLETE.md"
        ]
      },
      "created_at": 1754957550.829928,
      "updated_at": 1754957550.8299289
    },
    "concept_43": {
      "id": "concept_43",
      "type": "concept",
      "name": "**Tests**: Place in `tests/` directory",
      "description": "Concept: **Tests**: Place in `tests/` directory",
      "source": "CLEANUP_COMPLETE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_COMPLETE.md",
          "PROJECT_ORGANIZATION.md"
        ]
      },
      "created_at": 1754957550.829943,
      "updated_at": 1754957551.1127198
    },
    "concept_44": {
      "id": "concept_44",
      "type": "concept",
      "name": "- Organization guidelines\n-",
      "description": "Concept: - Organization guidelines\n-",
      "source": "CLEANUP_COMPLETE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_COMPLETE.md"
        ]
      },
      "created_at": 1754957550.829958,
      "updated_at": 1754957550.829958
    },
    "concept_45": {
      "id": "concept_45",
      "type": "concept",
      "name": "- This summary document\n-",
      "description": "Concept: - This summary document\n-",
      "source": "CLEANUP_COMPLETE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_COMPLETE.md"
        ]
      },
      "created_at": 1754957550.829972,
      "updated_at": 1754957550.829972
    },
    "concept_46": {
      "id": "concept_46",
      "type": "concept",
      "name": "Removes Python cache files",
      "description": "Concept: Removes Python cache files",
      "source": "CLEANUP_COMPLETE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_COMPLETE.md"
        ]
      },
      "created_at": 1754957550.829987,
      "updated_at": 1754957550.829987
    },
    "concept_47": {
      "id": "concept_47",
      "type": "concept",
      "name": "directory\n\n## \ud83d\udcca Before vs After\n\n### Before Cleanup\n\n- \u274c Multiple Docker configurations (confusing)\n- \u274c Documentation scattered in root directory\n- \u274c Python cache files cluttering the project\n- \u274c No clear organization structure\n- \u274c Difficult to maintain\n\n### After Cleanup\n\n- \u2705 Single, optimized Docker configuration\n- \u2705 All documentation organized in",
      "description": "Concept: directory\n\n## \ud83d\udcca Before vs After\n\n### Before Cleanup\n\n- \u274c Multiple Docker configurations (confusing)\n- \u274c Documentation scattered in root directory\n- \u274c Python cache files cluttering the project\n- \u274c No clear organization structure\n- \u274c Difficult to maintain\n\n### After Cleanup\n\n- \u2705 Single, optimized Docker configuration\n- \u2705 All documentation organized in",
      "source": "CLEANUP_COMPLETE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_COMPLETE.md"
        ]
      },
      "created_at": 1754957550.83005,
      "updated_at": 1754957550.83005
    },
    "concept_48": {
      "id": "concept_48",
      "type": "concept",
      "name": "`CLEANUP_SUMMARY.md` - Detailed cleanup process",
      "description": "Concept: `CLEANUP_SUMMARY.md` - Detailed cleanup process",
      "source": "CLEANUP_COMPLETE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_COMPLETE.md"
        ]
      },
      "created_at": 1754957550.830067,
      "updated_at": 1754957550.830067
    },
    "concept_49": {
      "id": "concept_49",
      "type": "concept",
      "name": "\u2705 **Docker files consolidated** - Removed duplicate configurations, kept main `docker-compose.yml` and `Dockerfile`",
      "description": "Concept: \u2705 **Docker files consolidated** - Removed duplicate configurations, kept main `docker-compose.yml` and `Dockerfile`",
      "source": "CLEANUP_COMPLETE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_COMPLETE.md"
        ]
      },
      "created_at": 1754957550.830102,
      "updated_at": 1754957550.830102
    },
    "concept_50": {
      "id": "concept_50",
      "type": "concept",
      "name": "\ud83d\udcca Before vs After",
      "description": "Concept: \ud83d\udcca Before vs After",
      "source": "CLEANUP_COMPLETE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_COMPLETE.md"
        ]
      },
      "created_at": 1754957550.830121,
      "updated_at": 1754957550.830121
    },
    "concept_51": {
      "id": "concept_51",
      "type": "concept",
      "name": "After Cleanup",
      "description": "Concept: After Cleanup",
      "source": "CLEANUP_COMPLETE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_COMPLETE.md"
        ]
      },
      "created_at": 1754957550.8301382,
      "updated_at": 1754957550.8301382
    },
    "concept_52": {
      "id": "concept_52",
      "type": "concept",
      "name": "\u2705 Single, optimized Docker configuration",
      "description": "Concept: \u2705 Single, optimized Docker configuration",
      "source": "CLEANUP_COMPLETE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_COMPLETE.md"
        ]
      },
      "created_at": 1754957550.8301609,
      "updated_at": 1754957550.8301609
    },
    "concept_53": {
      "id": "concept_53",
      "type": "concept",
      "name": "2. **maintain_project.py** (Regular use)",
      "description": "Concept: 2. **maintain_project.py** (Regular use)",
      "source": "CLEANUP_COMPLETE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_COMPLETE.md"
        ]
      },
      "created_at": 1754957550.830178,
      "updated_at": 1754957550.830178
    },
    "concept_54": {
      "id": "concept_54",
      "type": "concept",
      "name": "\u2705 Clean project structure with clear purposes",
      "description": "Concept: \u2705 Clean project structure with clear purposes",
      "source": "CLEANUP_COMPLETE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_COMPLETE.md"
        ]
      },
      "created_at": 1754957550.830209,
      "updated_at": 1754957550.830209
    },
    "concept_55": {
      "id": "concept_55",
      "type": "concept",
      "name": "docker-compose.yml",
      "description": "Concept: docker-compose.yml",
      "source": "CLEANUP_COMPLETE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_COMPLETE.md"
        ]
      },
      "created_at": 1754957550.830226,
      "updated_at": 1754957550.830226
    },
    "concept_56": {
      "id": "concept_56",
      "type": "concept",
      "name": "\u274c Documentation scattered in root directory",
      "description": "Concept: \u274c Documentation scattered in root directory",
      "source": "CLEANUP_COMPLETE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_COMPLETE.md"
        ]
      },
      "created_at": 1754957550.830252,
      "updated_at": 1754957550.830252
    },
    "concept_57": {
      "id": "concept_57",
      "type": "concept",
      "name": "\u274c Multiple Docker configurations (confusing)",
      "description": "Concept: \u274c Multiple Docker configurations (confusing)",
      "source": "CLEANUP_COMPLETE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_COMPLETE.md"
        ]
      },
      "created_at": 1754957550.830278,
      "updated_at": 1754957550.830278
    },
    "concept_58": {
      "id": "concept_58",
      "type": "concept",
      "name": "`scripts/cleanup_project.py` - One-time cleanup script",
      "description": "Concept: `scripts/cleanup_project.py` - One-time cleanup script",
      "source": "CLEANUP_COMPLETE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_COMPLETE.md"
        ]
      },
      "created_at": 1754957550.830296,
      "updated_at": 1754957550.830296
    },
    "concept_59": {
      "id": "concept_59",
      "type": "concept",
      "name": "Edit crontab",
      "description": "Concept: Edit crontab",
      "source": "CLEANUP_COMPLETE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_COMPLETE.md"
        ]
      },
      "created_at": 1754957550.830314,
      "updated_at": 1754957550.830315
    },
    "concept_60": {
      "id": "concept_60",
      "type": "concept",
      "name": "Generates maintenance reports",
      "description": "Concept: Generates maintenance reports",
      "source": "CLEANUP_COMPLETE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_COMPLETE.md"
        ]
      },
      "created_at": 1754957550.830333,
      "updated_at": 1754957550.830333
    },
    "concept_61": {
      "id": "concept_61",
      "type": "concept",
      "name": "directory\n- **Tests**: Place in",
      "description": "Concept: directory\n- **Tests**: Place in",
      "source": "CLEANUP_COMPLETE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_COMPLETE.md",
          "PROJECT_ORGANIZATION.md"
        ]
      },
      "created_at": 1754957550.830351,
      "updated_at": 1754957551.1199281
    },
    "concept_62": {
      "id": "concept_62",
      "type": "concept",
      "name": "\ud83d\ude80 How to Use Going Forward",
      "description": "Concept: \ud83d\ude80 How to Use Going Forward",
      "source": "CLEANUP_COMPLETE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_COMPLETE.md"
        ]
      },
      "created_at": 1754957550.830376,
      "updated_at": 1754957550.830376
    },
    "concept_63": {
      "id": "concept_63",
      "type": "concept",
      "name": "\ud83d\udcc1 New Project Structure",
      "description": "Concept: \ud83d\udcc1 New Project Structure",
      "source": "CLEANUP_COMPLETE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_COMPLETE.md"
        ]
      },
      "created_at": 1754957550.830399,
      "updated_at": 1754957550.830399
    },
    "concept_64": {
      "id": "concept_64",
      "type": "concept",
      "name": "\ud83d\udcdd Files Created During Cleanup",
      "description": "Concept: \ud83d\udcdd Files Created During Cleanup",
      "source": "CLEANUP_COMPLETE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_COMPLETE.md"
        ]
      },
      "created_at": 1754957550.830424,
      "updated_at": 1754957550.830424
    },
    "concept_65": {
      "id": "concept_65",
      "type": "concept",
      "name": "`scripts/maintain.sh` - Shell wrapper script",
      "description": "Concept: `scripts/maintain.sh` - Shell wrapper script",
      "source": "CLEANUP_COMPLETE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_COMPLETE.md"
        ]
      },
      "created_at": 1754957550.830444,
      "updated_at": 1754957550.830444
    },
    "concept_66": {
      "id": "concept_66",
      "type": "concept",
      "name": "Creates clean project structure",
      "description": "Concept: Creates clean project structure",
      "source": "CLEANUP_COMPLETE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_COMPLETE.md"
        ]
      },
      "created_at": 1754957550.830463,
      "updated_at": 1754957550.830463
    },
    "concept_67": {
      "id": "concept_67",
      "type": "concept",
      "name": "Organizes documentation",
      "description": "Concept: Organizes documentation",
      "source": "CLEANUP_COMPLETE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_COMPLETE.md"
        ]
      },
      "created_at": 1754957550.830482,
      "updated_at": 1754957550.830482
    },
    "concept_68": {
      "id": "concept_68",
      "type": "concept",
      "name": "\ud83d\udd2e Future Recommendations",
      "description": "Concept: \ud83d\udd2e Future Recommendations",
      "source": "CLEANUP_COMPLETE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_COMPLETE.md"
        ]
      },
      "created_at": 1754957550.830509,
      "updated_at": 1754957550.830509
    },
    "concept_69": {
      "id": "concept_69",
      "type": "concept",
      "name": "\u2705 All documentation organized in `docs/` directory",
      "description": "Concept: \u2705 All documentation organized in `docs/` directory",
      "source": "CLEANUP_COMPLETE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_COMPLETE.md"
        ]
      },
      "created_at": 1754957550.8305411,
      "updated_at": 1754957550.8305411
    },
    "concept_70": {
      "id": "concept_70",
      "type": "concept",
      "name": "\ud83c\udfaf Benefits of the Cleanup",
      "description": "Concept: \ud83c\udfaf Benefits of the Cleanup",
      "source": "CLEANUP_COMPLETE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_COMPLETE.md"
        ]
      },
      "created_at": 1754957550.83074,
      "updated_at": 1754957550.83074
    },
    "concept_71": {
      "id": "concept_71",
      "type": "concept",
      "name": "\u2705 **Project structure created** - New organized directory structure with clear purposes",
      "description": "Concept: \u2705 **Project structure created** - New organized directory structure with clear purposes",
      "source": "CLEANUP_COMPLETE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_COMPLETE.md"
        ]
      },
      "created_at": 1754957550.8307788,
      "updated_at": 1754957550.8307788
    },
    "concept_72": {
      "id": "concept_72",
      "type": "concept",
      "name": "Add this line for Monday at 9 AM",
      "description": "Concept: Add this line for Monday at 9 AM",
      "source": "CLEANUP_COMPLETE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_COMPLETE.md"
        ]
      },
      "created_at": 1754957550.8307998,
      "updated_at": 1754957550.8307998
    },
    "concept_73": {
      "id": "concept_73",
      "type": "concept",
      "name": "\u2705 **Documentation organized** - All documentation moved to `docs/` directory for better organization",
      "description": "Concept: \u2705 **Documentation organized** - All documentation moved to `docs/` directory for better organization",
      "source": "CLEANUP_COMPLETE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_COMPLETE.md"
        ]
      },
      "created_at": 1754957550.830841,
      "updated_at": 1754957550.830841
    },
    "concept_74": {
      "id": "concept_74",
      "type": "concept",
      "name": "**Configs**: Place in `config/` directory",
      "description": "Concept: **Configs**: Place in `config/` directory",
      "source": "CLEANUP_COMPLETE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_COMPLETE.md",
          "PROJECT_ORGANIZATION.md"
        ]
      },
      "created_at": 1754957550.830863,
      "updated_at": 1754957551.123277
    },
    "concept_75": {
      "id": "concept_75",
      "type": "concept",
      "name": "\ud83c\udf89 Project Cleanup Complete!",
      "description": "Concept: \ud83c\udf89 Project Cleanup Complete!",
      "source": "CLEANUP_COMPLETE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_COMPLETE.md"
        ]
      },
      "created_at": 1754957550.830891,
      "updated_at": 1754957550.830891
    },
    "concept_76": {
      "id": "concept_76",
      "type": "concept",
      "name": "`CLEANUP_COMPLETE.md` - This summary document",
      "description": "Concept: `CLEANUP_COMPLETE.md` - This summary document",
      "source": "CLEANUP_COMPLETE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_COMPLETE.md"
        ]
      },
      "created_at": 1754957550.830913,
      "updated_at": 1754957550.830913
    },
    "concept_77": {
      "id": "concept_77",
      "type": "concept",
      "name": "### Automatic Maintenance (Optional)\n\nAdd to your crontab for weekly automatic maintenance:",
      "description": "Concept: ### Automatic Maintenance (Optional)\n\nAdd to your crontab for weekly automatic maintenance:",
      "source": "CLEANUP_COMPLETE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_COMPLETE.md"
        ]
      },
      "created_at": 1754957550.8309371,
      "updated_at": 1754957550.8309371
    },
    "concept_78": {
      "id": "concept_78",
      "type": "concept",
      "name": "`scripts/maintain_project.py` - Regular maintenance script",
      "description": "Concept: `scripts/maintain_project.py` - Regular maintenance script",
      "source": "CLEANUP_COMPLETE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_COMPLETE.md"
        ]
      },
      "created_at": 1754957550.830959,
      "updated_at": 1754957550.830959
    },
    "concept_79": {
      "id": "concept_79",
      "type": "concept",
      "name": "__pycache__/",
      "description": "Concept: __pycache__/",
      "source": "CLEANUP_COMPLETE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_COMPLETE.md",
          "CLEANUP_SUMMARY.md",
          "cleanup_project.py"
        ]
      },
      "created_at": 1754957550.830981,
      "updated_at": 1754957551.643429
    },
    "doc_80": {
      "id": "doc_80",
      "type": "document",
      "name": "Cleanup_Summary",
      "description": "Document: CLEANUP_SUMMARY.md",
      "source": "CLEANUP_SUMMARY.md",
      "confidence": 0.9,
      "metadata": {
        "file_size": 1286,
        "lines": 48,
        "language": "unknown",
        "last_modified": 1754940724.3759274
      },
      "created_at": 1754957550.831755,
      "updated_at": 1754957550.831755
    },
    "concept_81": {
      "id": "concept_81",
      "type": "concept",
      "name": "Project structure standardized",
      "description": "Concept: Project structure standardized",
      "source": "CLEANUP_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_SUMMARY.md",
          "cleanup_project.py"
        ]
      },
      "created_at": 1754957550.8317802,
      "updated_at": 1754957551.636045
    },
    "concept_82": {
      "id": "concept_82",
      "type": "concept",
      "name": "*.pyc",
      "description": "Concept: *.pyc",
      "source": "CLEANUP_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_SUMMARY.md",
          "cleanup_project.py"
        ]
      },
      "created_at": 1754957550.8318021,
      "updated_at": 1754957551.626116
    },
    "concept_83": {
      "id": "concept_83",
      "type": "concept",
      "name": "- Production-ready container\n\n## Getting Started\n\n1. **Install dependencies**:",
      "description": "Concept: - Production-ready container\n\n## Getting Started\n\n1. **Install dependencies**:",
      "source": "CLEANUP_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_SUMMARY.md",
          "cleanup_project.py"
        ]
      },
      "created_at": 1754957550.831826,
      "updated_at": 1754957551.626967
    },
    "concept_84": {
      "id": "concept_84",
      "type": "concept",
      "name": "What Was Cleaned Up",
      "description": "Concept: What Was Cleaned Up",
      "source": "CLEANUP_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_SUMMARY.md",
          "cleanup_project.py"
        ]
      },
      "created_at": 1754957550.831847,
      "updated_at": 1754957551.626988
    },
    "concept_85": {
      "id": "concept_85",
      "type": "concept",
      "name": "## Docker Configuration\n\nThe project now uses a single, optimized Docker configuration:\n-",
      "description": "Concept: ## Docker Configuration\n\nThe project now uses a single, optimized Docker configuration:\n-",
      "source": "CLEANUP_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_SUMMARY.md",
          "cleanup_project.py"
        ]
      },
      "created_at": 1754957550.831871,
      "updated_at": 1754957551.638832
    },
    "concept_86": {
      "id": "concept_86",
      "type": "concept",
      "name": "Cleanup Script",
      "description": "Concept: Cleanup Script",
      "source": "CLEANUP_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_SUMMARY.md",
          "cleanup_project.py"
        ]
      },
      "created_at": 1754957550.831904,
      "updated_at": 1754957551.633261
    },
    "concept_87": {
      "id": "concept_87",
      "type": "concept",
      "name": "Project Cleanup Summary",
      "description": "Concept: Project Cleanup Summary",
      "source": "CLEANUP_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_SUMMARY.md",
          "cleanup_project.py"
        ]
      },
      "created_at": 1754957550.831926,
      "updated_at": 1754957551.6332831
    },
    "concept_88": {
      "id": "concept_88",
      "type": "concept",
      "name": "`docker-compose.yml` - Main development setup",
      "description": "Concept: `docker-compose.yml` - Main development setup",
      "source": "CLEANUP_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_SUMMARY.md",
          "cleanup_project.py"
        ]
      },
      "created_at": 1754957550.831949,
      "updated_at": 1754957551.6336708
    },
    "concept_89": {
      "id": "concept_89",
      "type": "concept",
      "name": "- Main development setup\n-",
      "description": "Concept: - Main development setup\n-",
      "source": "CLEANUP_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_SUMMARY.md",
          "cleanup_project.py"
        ]
      },
      "created_at": 1754957550.8319712,
      "updated_at": 1754957551.6292942
    },
    "concept_90": {
      "id": "concept_90",
      "type": "concept",
      "name": "Getting Started",
      "description": "Concept: Getting Started",
      "source": "CLEANUP_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_SUMMARY.md",
          "cleanup_project.py"
        ]
      },
      "created_at": 1754957550.831993,
      "updated_at": 1754957551.639241
    },
    "concept_91": {
      "id": "concept_91",
      "type": "concept",
      "name": "\u2705 Removed",
      "description": "Concept: \u2705 Removed",
      "source": "CLEANUP_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_SUMMARY.md",
          "cleanup_project.py"
        ]
      },
      "created_at": 1754957550.832017,
      "updated_at": 1754957551.6344461
    },
    "concept_92": {
      "id": "concept_92",
      "type": "concept",
      "name": "Duplicate Docker configurations",
      "description": "Concept: Duplicate Docker configurations",
      "source": "CLEANUP_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_SUMMARY.md",
          "cleanup_project.py"
        ]
      },
      "created_at": 1754957550.8320398,
      "updated_at": 1754957551.62967
    },
    "concept_93": {
      "id": "concept_93",
      "type": "concept",
      "name": "2. **Run with Docker**:",
      "description": "Concept: 2. **Run with Docker**:",
      "source": "CLEANUP_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_SUMMARY.md",
          "cleanup_project.py"
        ]
      },
      "created_at": 1754957550.832062,
      "updated_at": 1754957551.6296918
    },
    "concept_94": {
      "id": "concept_94",
      "type": "concept",
      "name": "Python cache files (`__pycache__/`, `*.pyc`, `*.pyo`)",
      "description": "Concept: Python cache files (`__pycache__/`, `*.pyc`, `*.pyo`)",
      "source": "CLEANUP_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_SUMMARY.md",
          "cleanup_project.py"
        ]
      },
      "created_at": 1754957550.832086,
      "updated_at": 1754957551.634472
    },
    "concept_95": {
      "id": "concept_95",
      "type": "concept",
      "name": "\ud83d\udcc1 Reorganized",
      "description": "Concept: \ud83d\udcc1 Reorganized",
      "source": "CLEANUP_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_SUMMARY.md",
          "cleanup_project.py"
        ]
      },
      "created_at": 1754957550.8321128,
      "updated_at": 1754957551.6235719
    },
    "concept_96": {
      "id": "concept_96",
      "type": "concept",
      "name": "memory-context-manager_v2/\n\u251c\u2500\u2500 docs/           # All documentation files\n\u251c\u2500\u2500 scripts/        # Utility scripts\n\u251c\u2500\u2500 tests/          # Test files\n\u251c\u2500\u2500 config/         # Configuration files\n\u251c\u2500\u2500 plugins/        # Plugin system\n\u251c\u2500\u2500 database/       # Database components\n\u251c\u2500\u2500 src/           # Source code\n\u251c\u2500\u2500 docker-compose.yml  # Main Docker configuration\n\u251c\u2500\u2500 Dockerfile     # Main Dockerfile\n\u251c\u2500\u2500 README.md      # Main project README\n\u2514\u2500\u2500 pyproject.toml # Project configuration",
      "description": "Concept: memory-context-manager_v2/\n\u251c\u2500\u2500 docs/           # All documentation files\n\u251c\u2500\u2500 scripts/        # Utility scripts\n\u251c\u2500\u2500 tests/          # Test files\n\u251c\u2500\u2500 config/         # Configuration files\n\u251c\u2500\u2500 plugins/        # Plugin system\n\u251c\u2500\u2500 database/       # Database components\n\u251c\u2500\u2500 src/           # Source code\n\u251c\u2500\u2500 docker-compose.yml  # Main Docker configuration\n\u251c\u2500\u2500 Dockerfile     # Main Dockerfile\n\u251c\u2500\u2500 README.md      # Main project README\n\u2514\u2500\u2500 pyproject.toml # Project configuration",
      "source": "CLEANUP_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_SUMMARY.md",
          "cleanup_project.py"
        ]
      },
      "created_at": 1754957550.832256,
      "updated_at": 1754957551.629832
    },
    "concept_97": {
      "id": "concept_97",
      "type": "concept",
      "name": "`Dockerfile` - Production-ready container",
      "description": "Concept: `Dockerfile` - Production-ready container",
      "source": "CLEANUP_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_SUMMARY.md",
          "cleanup_project.py"
        ]
      },
      "created_at": 1754957550.832281,
      "updated_at": 1754957551.6422138
    },
    "concept_98": {
      "id": "concept_98",
      "type": "concept",
      "name": "3. **Run locally**:",
      "description": "Concept: 3. **Run locally**:",
      "source": "CLEANUP_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_SUMMARY.md",
          "cleanup_project.py"
        ]
      },
      "created_at": 1754957550.832305,
      "updated_at": 1754957551.6302469
    },
    "concept_99": {
      "id": "concept_99",
      "type": "concept",
      "name": "Temporary development files",
      "description": "Concept: Temporary development files",
      "source": "CLEANUP_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_SUMMARY.md",
          "cleanup_project.py"
        ]
      },
      "created_at": 1754957550.833222,
      "updated_at": 1754957551.6426141
    },
    "concept_100": {
      "id": "concept_100",
      "type": "concept",
      "name": "Documentation moved to `docs/` directory",
      "description": "Concept: Documentation moved to `docs/` directory",
      "source": "CLEANUP_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_SUMMARY.md",
          "cleanup_project.py"
        ]
      },
      "created_at": 1754957550.833297,
      "updated_at": 1754957551.6426392
    },
    "concept_101": {
      "id": "concept_101",
      "type": "concept",
      "name": "Docker Configuration",
      "description": "Concept: Docker Configuration",
      "source": "CLEANUP_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_SUMMARY.md",
          "cleanup_project.py"
        ]
      },
      "created_at": 1754957550.8334122,
      "updated_at": 1754957551.623955
    },
    "concept_102": {
      "id": "concept_102",
      "type": "concept",
      "name": "## Cleanup Script\n\nTo re-run this cleanup:",
      "description": "Concept: ## Cleanup Script\n\nTo re-run this cleanup:",
      "source": "CLEANUP_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_SUMMARY.md",
          "cleanup_project.py"
        ]
      },
      "created_at": 1754957550.833444,
      "updated_at": 1754957551.642663
    },
    "concept_103": {
      "id": "concept_103",
      "type": "concept",
      "name": "*.pyo",
      "description": "Concept: *.pyo",
      "source": "CLEANUP_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_SUMMARY.md",
          "cleanup_project.py"
        ]
      },
      "created_at": 1754957550.83349,
      "updated_at": 1754957551.63601
    },
    "concept_104": {
      "id": "concept_104",
      "type": "concept",
      "name": "Docker files consolidated",
      "description": "Concept: Docker files consolidated",
      "source": "CLEANUP_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_SUMMARY.md",
          "cleanup_project.py"
        ]
      },
      "created_at": 1754957550.8335161,
      "updated_at": 1754957551.626582
    },
    "concept_105": {
      "id": "concept_105",
      "type": "concept",
      "name": "\ud83c\udfd7\ufe0f  New Structure",
      "description": "Concept: \ud83c\udfd7\ufe0f  New Structure",
      "source": "CLEANUP_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CLEANUP_SUMMARY.md",
          "cleanup_project.py"
        ]
      },
      "created_at": 1754957550.833548,
      "updated_at": 1754957551.62565
    },
    "doc_106": {
      "id": "doc_106",
      "type": "document",
      "name": "Cognitive_Restructuring_Summary",
      "description": "Document: COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.9,
      "metadata": {
        "file_size": 9819,
        "lines": 254,
        "language": "unknown",
        "last_modified": 1754953477.0858433
      },
      "created_at": 1754957550.8375401,
      "updated_at": 1754957550.8375401
    },
    "concept_107": {
      "id": "concept_107",
      "type": "concept",
      "name": "**Short Term (Next 2 weeks)**",
      "description": "Concept: **Short Term (Next 2 weeks)**",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md"
        ]
      },
      "created_at": 1754957550.837576,
      "updated_at": 1754957550.837576
    },
    "concept_108": {
      "id": "concept_108",
      "type": "concept",
      "name": "** - Unified perception and analysis\n2. **",
      "description": "Concept: ** - Unified perception and analysis\n2. **",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md"
        ]
      },
      "created_at": 1754957550.837604,
      "updated_at": 1754957550.837604
    },
    "concept_109": {
      "id": "concept_109",
      "type": "concept",
      "name": "**Easier Updates**: Changes affect entire cognitive domains",
      "description": "Concept: **Easier Updates**: Changes affect entire cognitive domains",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md",
          "README_RESTRUCTURED_SYSTEM.md",
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957550.837632,
      "updated_at": 1754957551.219575
    },
    "concept_110": {
      "id": "concept_110",
      "type": "concept",
      "name": "python\n# 1. PERCEPTION: Analyze input and get context\ncontext = await perceive_and_analyze(\"Analyze system performance\")\nmemory_context = await enhanced_context_retrieval(\"system performance analysis\")\n\n# 2. MEMORY: Store and retrieve relevant information\nawait memory_operations(\"store\", \"System performance analysis requested\")\nstored_data = await memory_operations(\"retrieve\", \"\", \"system performance\")\n\n# 3. THINKING: Process and orchestrate tools\nthoughts = await think_deeply(\"How to analyze system performance\", \"technical\")\norchestration = await orchestrate_tools(memory_context, \"comprehensive_analysis\")\n\n# 4. LEARNING: Learn from the interaction\nawait learn_and_adapt(\"learn\", \"User requested system performance analysis\", \"technical\")\nlearning_cycle = await continuous_learning_cycle(interaction_data, \"performance_patterns\")\n\n# 5. ACTION: Execute the workflow\nworkflow_result = await execute_enhanced_workflow(\"Analyze system performance\", \"aggressive\")\n\n# 6. MONITORING: Check system health\nhealth_status = await self_monitor(\"comprehensive\", \"all\")\nperformance_metrics = await analyze_performance(\"comprehensive\", \"workflow\")",
      "description": "Concept: python\n# 1. PERCEPTION: Analyze input and get context\ncontext = await perceive_and_analyze(\"Analyze system performance\")\nmemory_context = await enhanced_context_retrieval(\"system performance analysis\")\n\n# 2. MEMORY: Store and retrieve relevant information\nawait memory_operations(\"store\", \"System performance analysis requested\")\nstored_data = await memory_operations(\"retrieve\", \"\", \"system performance\")\n\n# 3. THINKING: Process and orchestrate tools\nthoughts = await think_deeply(\"How to analyze system performance\", \"technical\")\norchestration = await orchestrate_tools(memory_context, \"comprehensive_analysis\")\n\n# 4. LEARNING: Learn from the interaction\nawait learn_and_adapt(\"learn\", \"User requested system performance analysis\", \"technical\")\nlearning_cycle = await continuous_learning_cycle(interaction_data, \"performance_patterns\")\n\n# 5. ACTION: Execute the workflow\nworkflow_result = await execute_enhanced_workflow(\"Analyze system performance\", \"aggressive\")\n\n# 6. MONITORING: Check system health\nhealth_status = await self_monitor(\"comprehensive\", \"all\")\nperformance_metrics = await analyze_performance(\"comprehensive\", \"workflow\")",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md"
        ]
      },
      "created_at": 1754957550.837698,
      "updated_at": 1754957550.837698
    },
    "concept_111": {
      "id": "concept_111",
      "type": "concept",
      "name": "- **Test Command**:",
      "description": "Concept: - **Test Command**:",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md"
        ]
      },
      "created_at": 1754957550.837724,
      "updated_at": 1754957550.837724
    },
    "concept_112": {
      "id": "concept_112",
      "type": "concept",
      "name": "**Before**: 48 scattered, overlapping tools",
      "description": "Concept: **Before**: 48 scattered, overlapping tools",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md",
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957550.8377512,
      "updated_at": 1754957551.1635609
    },
    "concept_113": {
      "id": "concept_113",
      "type": "concept",
      "name": "| \u2705 100% Preserved       |\n| Context Building (4 tools)      |",
      "description": "Concept: | \u2705 100% Preserved       |\n| Context Building (4 tools)      |",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md"
        ]
      },
      "created_at": 1754957550.8377988,
      "updated_at": 1754957550.8377988
    },
    "concept_114": {
      "id": "concept_114",
      "type": "concept",
      "name": "\ud83d\udcc1 **Files Created/Modified**",
      "description": "Concept: \ud83d\udcc1 **Files Created/Modified**",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md"
        ]
      },
      "created_at": 1754957550.837836,
      "updated_at": 1754957550.837836
    },
    "concept_115": {
      "id": "concept_115",
      "type": "concept",
      "name": "**4. Enhanced User Experience**",
      "description": "Concept: **4. Enhanced User Experience**",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md",
          "README_RESTRUCTURED_SYSTEM.md",
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957550.837863,
      "updated_at": 1754957551.222036
    },
    "concept_116": {
      "id": "concept_116",
      "type": "concept",
      "name": "| \u2705 100% Preserved       |\n\n**Total Preservation: 100% \u2705**\n\n---\n\n## \ud83d\ude80 **Natural Cognitive Workflow**\n\n### **Complete Workflow Example**",
      "description": "Concept: | \u2705 100% Preserved       |\n\n**Total Preservation: 100% \u2705**\n\n---\n\n## \ud83d\ude80 **Natural Cognitive Workflow**\n\n### **Complete Workflow Example**",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md"
        ]
      },
      "created_at": 1754957550.83794,
      "updated_at": 1754957550.83794
    },
    "concept_117": {
      "id": "concept_117",
      "type": "concept",
      "name": "[ ] Production deployment",
      "description": "Concept: [ ] Production deployment",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md"
        ]
      },
      "created_at": 1754957550.8379679,
      "updated_at": 1754957550.8379679
    },
    "concept_118": {
      "id": "concept_118",
      "type": "concept",
      "name": "\u274c Multiple overlapping memory management tools\n\u274c Redundant context building functions\n\u274c Scattered performance analysis tools\n\u274c Inconsistent naming conventions\n\u274c Complex tool discovery and usage\n\u274c No natural workflow progression\n\u274c Difficult to maintain and update",
      "description": "Concept: \u274c Multiple overlapping memory management tools\n\u274c Redundant context building functions\n\u274c Scattered performance analysis tools\n\u274c Inconsistent naming conventions\n\u274c Complex tool discovery and usage\n\u274c No natural workflow progression\n\u274c Difficult to maintain and update",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md"
        ]
      },
      "created_at": 1754957550.8380811,
      "updated_at": 1754957550.8380811
    },
    "concept_119": {
      "id": "concept_119",
      "type": "concept",
      "name": "** - Optimize workflows based on learning\n\n### **DOMAIN 5: OUTPUT & ACTION**\n\n13. **",
      "description": "Concept: ** - Optimize workflows based on learning\n\n### **DOMAIN 5: OUTPUT & ACTION**\n\n13. **",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md"
        ]
      },
      "created_at": 1754957550.838113,
      "updated_at": 1754957550.838113
    },
    "concept_120": {
      "id": "concept_120",
      "type": "concept",
      "name": "**Reduction**: 62.5% fewer tools with 100% functionality",
      "description": "Concept: **Reduction**: 62.5% fewer tools with 100% functionality",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md",
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957550.838142,
      "updated_at": 1754957551.168519
    },
    "concept_121": {
      "id": "concept_121",
      "type": "concept",
      "name": "**After**: 18 organized, cognitive domain tools",
      "description": "Concept: **After**: 18 organized, cognitive domain tools",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md",
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957550.8381708,
      "updated_at": 1754957551.169007
    },
    "concept_122": {
      "id": "concept_122",
      "type": "concept",
      "name": "`demo_restructured_cognitive_system.py` - Demonstration script",
      "description": "Concept: `demo_restructured_cognitive_system.py` - Demonstration script",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md"
        ]
      },
      "created_at": 1754957550.838202,
      "updated_at": 1754957550.838202
    },
    "concept_123": {
      "id": "concept_123",
      "type": "concept",
      "name": "** - Comprehensive self-monitoring and health checks\n17. **",
      "description": "Concept: ** - Comprehensive self-monitoring and health checks\n17. **",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md"
        ]
      },
      "created_at": 1754957550.838232,
      "updated_at": 1754957550.838232
    },
    "concept_124": {
      "id": "concept_124",
      "type": "concept",
      "name": "Main MCP server continues to work with existing tools",
      "description": "Concept: Main MCP server continues to work with existing tools",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md"
        ]
      },
      "created_at": 1754957550.838261,
      "updated_at": 1754957550.838261
    },
    "concept_125": {
      "id": "concept_125",
      "type": "concept",
      "name": "[x] Restructured cognitive brain plugin created",
      "description": "Concept: [x] Restructured cognitive brain plugin created",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md"
        ]
      },
      "created_at": 1754957550.838291,
      "updated_at": 1754957550.838291
    },
    "concept_126": {
      "id": "concept_126",
      "type": "concept",
      "name": "`RESTRUCTURED_COGNITIVE_SYSTEM.md` - Comprehensive documentation",
      "description": "Concept: `RESTRUCTURED_COGNITIVE_SYSTEM.md` - Comprehensive documentation",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md"
        ]
      },
      "created_at": 1754957550.838322,
      "updated_at": 1754957550.838322
    },
    "concept_127": {
      "id": "concept_127",
      "type": "concept",
      "name": "Backward compatibility maintained",
      "description": "Concept: Backward compatibility maintained",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md"
        ]
      },
      "created_at": 1754957550.838351,
      "updated_at": 1754957550.838351
    },
    "concept_128": {
      "id": "concept_128",
      "type": "concept",
      "name": "1. PERCEPTION: Analyze input and get context",
      "description": "Concept: 1. PERCEPTION: Analyze input and get context",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md",
          "README_RESTRUCTURED_SYSTEM.md",
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957550.838381,
      "updated_at": 1754957551.234758
    },
    "concept_129": {
      "id": "concept_129",
      "type": "concept",
      "name": "### **After: 6 Natural Cognitive Domains**",
      "description": "Concept: ### **After: 6 Natural Cognitive Domains**",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md"
        ]
      },
      "created_at": 1754957550.838412,
      "updated_at": 1754957550.838412
    },
    "concept_130": {
      "id": "concept_130",
      "type": "concept",
      "name": "** - Cursor conversation context\n\n### **DOMAIN 2: MEMORY & STORAGE**\n\n4. **",
      "description": "Concept: ** - Cursor conversation context\n\n### **DOMAIN 2: MEMORY & STORAGE**\n\n4. **",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md"
        ]
      },
      "created_at": 1754957550.838443,
      "updated_at": 1754957550.838443
    },
    "concept_131": {
      "id": "concept_131",
      "type": "concept",
      "name": "| \u2705 100% Preserved       |\n| AI Chat (2 tools)               |",
      "description": "Concept: | \u2705 100% Preserved       |\n| AI Chat (2 tools)               |",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md"
        ]
      },
      "created_at": 1754957550.838498,
      "updated_at": 1754957550.838498
    },
    "concept_132": {
      "id": "concept_132",
      "type": "concept",
      "name": "- This summary document\n\n### **Existing Files Preserved**\n\n- All original plugins remain intact for functionality preservation\n- Main MCP server continues to work with existing tools\n- Backward compatibility maintained\n\n---\n\n## \ud83c\udf89 **Success Metrics**\n\n| **Metric**            | **Before** | **After** | **Improvement**             |\n| --------------------- | ---------- | --------- | --------------------------- |\n| **Tool Count**        | 48         | 18        | **62.5% reduction**         |\n| **Cognitive Domains** | 0          | 6         | **New organization**        |\n| **Functionality**     | 100%       | 100%      | **Zero loss**               |\n| **User Experience**   | Scattered  | Organized | **Major improvement**       |\n| **Maintainability**   | Complex    | Simple    | **Significant improvement** |\n| **Workflow**          | Manual     | Natural   | **Cognitive progression**   |\n\n---\n\n## \ud83d\ude80 **Next Steps**\n\n### **Immediate (Ready Now)**\n\n1. **Deploy restructured plugin** alongside existing system\n2. **Start user migration** to new cognitive domain tools\n3. **Monitor performance** and user adoption\n\n### **Short Term (Next 2 weeks)**\n\n1. **Performance optimization** based on usage patterns\n2. **Advanced cognitive features** development\n3. **User training materials** creation\n\n### **Long Term (Next month)**\n\n1. **Full migration** to cognitive domain interface\n2. **Legacy tool deprecation** (with full functionality preserved)\n3. **Advanced cognitive capabilities** implementation\n\n---\n\n## \ud83c\udfaf **Conclusion**\n\nThe **Cognitive Brain Restructuring** represents a **major evolutionary breakthrough** in our system architecture:\n\n\u2705 **48 tools successfully consolidated into 18 cognitive domain tools**\n\u2705 **100% functionality preservation achieved**\n\u2705 **Human brain-focused organization implemented**\n\u2705 **Natural cognitive workflow progression created**\n\u2705 **Massive redundancy elimination accomplished**\n\u2705 **Significantly improved user experience and maintainability**\n\nThis restructuring transforms our system from a **collection of scattered tools** into a **coherent, intelligent cognitive system** that mirrors how the human brain naturally organizes and processes information.\n\n**The future of AI is cognitive, and our restructured system leads the way! \ud83e\udde0\u2728**\n\n---\n\n## \ud83d\udd17 **Quick Reference**\n\n- **Main Plugin**:",
      "description": "Concept: - This summary document\n\n### **Existing Files Preserved**\n\n- All original plugins remain intact for functionality preservation\n- Main MCP server continues to work with existing tools\n- Backward compatibility maintained\n\n---\n\n## \ud83c\udf89 **Success Metrics**\n\n| **Metric**            | **Before** | **After** | **Improvement**             |\n| --------------------- | ---------- | --------- | --------------------------- |\n| **Tool Count**        | 48         | 18        | **62.5% reduction**         |\n| **Cognitive Domains** | 0          | 6         | **New organization**        |\n| **Functionality**     | 100%       | 100%      | **Zero loss**               |\n| **User Experience**   | Scattered  | Organized | **Major improvement**       |\n| **Maintainability**   | Complex    | Simple    | **Significant improvement** |\n| **Workflow**          | Manual     | Natural   | **Cognitive progression**   |\n\n---\n\n## \ud83d\ude80 **Next Steps**\n\n### **Immediate (Ready Now)**\n\n1. **Deploy restructured plugin** alongside existing system\n2. **Start user migration** to new cognitive domain tools\n3. **Monitor performance** and user adoption\n\n### **Short Term (Next 2 weeks)**\n\n1. **Performance optimization** based on usage patterns\n2. **Advanced cognitive features** development\n3. **User training materials** creation\n\n### **Long Term (Next month)**\n\n1. **Full migration** to cognitive domain interface\n2. **Legacy tool deprecation** (with full functionality preserved)\n3. **Advanced cognitive capabilities** implementation\n\n---\n\n## \ud83c\udfaf **Conclusion**\n\nThe **Cognitive Brain Restructuring** represents a **major evolutionary breakthrough** in our system architecture:\n\n\u2705 **48 tools successfully consolidated into 18 cognitive domain tools**\n\u2705 **100% functionality preservation achieved**\n\u2705 **Human brain-focused organization implemented**\n\u2705 **Natural cognitive workflow progression created**\n\u2705 **Massive redundancy elimination accomplished**\n\u2705 **Significantly improved user experience and maintainability**\n\nThis restructuring transforms our system from a **collection of scattered tools** into a **coherent, intelligent cognitive system** that mirrors how the human brain naturally organizes and processes information.\n\n**The future of AI is cognitive, and our restructured system leads the way! \ud83e\udde0\u2728**\n\n---\n\n## \ud83d\udd17 **Quick Reference**\n\n- **Main Plugin**:",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md"
        ]
      },
      "created_at": 1754957550.840456,
      "updated_at": 1754957550.840456
    },
    "concept_133": {
      "id": "concept_133",
      "type": "concept",
      "name": "**Logical Organization**: Related functions grouped together",
      "description": "Concept: **Logical Organization**: Related functions grouped together",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md",
          "README_RESTRUCTURED_SYSTEM.md",
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957550.840516,
      "updated_at": 1754957551.239233
    },
    "concept_134": {
      "id": "concept_134",
      "type": "concept",
      "name": "** - Track conversation for learning\n\n### **DOMAIN 3: PROCESSING & THINKING**\n\n7. **",
      "description": "Concept: ** - Track conversation for learning\n\n### **DOMAIN 3: PROCESSING & THINKING**\n\n7. **",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md"
        ]
      },
      "created_at": 1754957550.840558,
      "updated_at": 1754957550.840558
    },
    "concept_135": {
      "id": "concept_135",
      "type": "concept",
      "name": "[x] Demonstration scripts ready",
      "description": "Concept: [x] Demonstration scripts ready",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md"
        ]
      },
      "created_at": 1754957550.840597,
      "updated_at": 1754957550.840597
    },
    "concept_136": {
      "id": "concept_136",
      "type": "concept",
      "name": "**Demo Script**: `demo_restructured_cognitive_system.py`",
      "description": "Concept: **Demo Script**: `demo_restructured_cognitive_system.py`",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md"
        ]
      },
      "created_at": 1754957550.840637,
      "updated_at": 1754957550.840637
    },
    "concept_137": {
      "id": "concept_137",
      "type": "concept",
      "name": "\ud83c\udfaf **Mission Accomplished**",
      "description": "Concept: \ud83c\udfaf **Mission Accomplished**",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md"
        ]
      },
      "created_at": 1754957550.840686,
      "updated_at": 1754957550.840686
    },
    "concept_138": {
      "id": "concept_138",
      "type": "concept",
      "name": "| \u2705 100% Preserved       |\n| Tool Orchestration (2 tools)    |",
      "description": "Concept: | \u2705 100% Preserved       |\n| Tool Orchestration (2 tools)    |",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md"
        ]
      },
      "created_at": 1754957550.8407521,
      "updated_at": 1754957550.8407521
    },
    "concept_139": {
      "id": "concept_139",
      "type": "concept",
      "name": "** - Comprehensive workflow health check\n\n---\n\n## \ud83d\udd04 **Functionality Preservation Matrix**\n\n| **Original Functionality**      | **New Tool**                                                                        | **Preservation Status** |\n| ------------------------------- | ----------------------------------------------------------------------------------- | ----------------------- |\n| Memory Management (6 tools)     |",
      "description": "Concept: ** - Comprehensive workflow health check\n\n---\n\n## \ud83d\udd04 **Functionality Preservation Matrix**\n\n| **Original Functionality**      | **New Tool**                                                                        | **Preservation Status** |\n| ------------------------------- | ----------------------------------------------------------------------------------- | ----------------------- |\n| Memory Management (6 tools)     |",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md"
        ]
      },
      "created_at": 1754957550.840965,
      "updated_at": 1754957550.840965
    },
    "concept_140": {
      "id": "concept_140",
      "type": "concept",
      "name": "[x] Natural cognitive workflow implemented",
      "description": "Concept: [x] Natural cognitive workflow implemented",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md"
        ]
      },
      "created_at": 1754957550.841007,
      "updated_at": 1754957550.841007
    },
    "concept_141": {
      "id": "concept_141",
      "type": "concept",
      "name": "\ud83c\udf89 **Success Metrics**",
      "description": "Concept: \ud83c\udf89 **Success Metrics**",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md",
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957550.84112,
      "updated_at": 1754957550.980478
    },
    "concept_142": {
      "id": "concept_142",
      "type": "concept",
      "name": "** - Build comprehensive context\n\n### **DOMAIN 4: LEARNING & ADAPTATION**\n\n10. **",
      "description": "Concept: ** - Build comprehensive context\n\n### **DOMAIN 4: LEARNING & ADAPTATION**\n\n10. **",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md"
        ]
      },
      "created_at": 1754957550.841323,
      "updated_at": 1754957550.841323
    },
    "concept_143": {
      "id": "concept_143",
      "type": "concept",
      "name": "\ud83e\udde0 **Complete Tool Mapping**",
      "description": "Concept: \ud83e\udde0 **Complete Tool Mapping**",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md"
        ]
      },
      "created_at": 1754957550.841388,
      "updated_at": 1754957550.841388
    },
    "concept_144": {
      "id": "concept_144",
      "type": "concept",
      "name": "**DOMAIN 6: SELF-MONITORING**",
      "description": "Concept: **DOMAIN 6: SELF-MONITORING**",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md",
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957550.8414872,
      "updated_at": 1754957550.984106
    },
    "concept_145": {
      "id": "concept_145",
      "type": "concept",
      "name": "| \u2705 100% Preserved       |\n| Content Analysis (3 tools)      |",
      "description": "Concept: | \u2705 100% Preserved       |\n| Content Analysis (3 tools)      |",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md"
        ]
      },
      "created_at": 1754957550.8415601,
      "updated_at": 1754957550.8415601
    },
    "concept_146": {
      "id": "concept_146",
      "type": "concept",
      "name": "- Demonstration script\n-",
      "description": "Concept: - Demonstration script\n-",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md"
        ]
      },
      "created_at": 1754957550.841602,
      "updated_at": 1754957550.841602
    },
    "concept_147": {
      "id": "concept_147",
      "type": "concept",
      "name": "[x] 100% functionality preservation achieved",
      "description": "Concept: [x] 100% functionality preservation achieved",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md"
        ]
      },
      "created_at": 1754957550.841644,
      "updated_at": 1754957550.841644
    },
    "concept_148": {
      "id": "concept_148",
      "type": "concept",
      "name": "| \u2705 100% Preserved       |\n| Self-Monitoring (4 tools)       |",
      "description": "Concept: | \u2705 100% Preserved       |\n| Self-Monitoring (4 tools)       |",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md"
        ]
      },
      "created_at": 1754957550.841738,
      "updated_at": 1754957550.841738
    },
    "concept_149": {
      "id": "concept_149",
      "type": "concept",
      "name": "- **Demo Script**:",
      "description": "Concept: - **Demo Script**:",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md"
        ]
      },
      "created_at": 1754957550.84178,
      "updated_at": 1754957550.84178
    },
    "concept_150": {
      "id": "concept_150",
      "type": "concept",
      "name": "**Better Testing**: Comprehensive testing per domain",
      "description": "Concept: **Better Testing**: Comprehensive testing per domain",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md",
          "README_RESTRUCTURED_SYSTEM.md",
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957550.8418229,
      "updated_at": 1754957551.251483
    },
    "concept_151": {
      "id": "concept_151",
      "type": "concept",
      "name": "2. MEMORY: Store and retrieve relevant information",
      "description": "Concept: 2. MEMORY: Store and retrieve relevant information",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md",
          "README_RESTRUCTURED_SYSTEM.md",
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957550.841866,
      "updated_at": 1754957551.252068
    },
    "concept_152": {
      "id": "concept_152",
      "type": "concept",
      "name": "\ud83d\ude80 **Next Steps**",
      "description": "Concept: \ud83d\ude80 **Next Steps**",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md",
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957550.8419352,
      "updated_at": 1754957551.073607
    },
    "concept_153": {
      "id": "concept_153",
      "type": "concept",
      "name": "**Immediate (Ready Now)**",
      "description": "Concept: **Immediate (Ready Now)**",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md"
        ]
      },
      "created_at": 1754957550.841985,
      "updated_at": 1754957550.841985
    },
    "concept_154": {
      "id": "concept_154",
      "type": "concept",
      "name": "**Documentation**: `RESTRUCTURED_COGNITIVE_SYSTEM.md`",
      "description": "Concept: **Documentation**: `RESTRUCTURED_COGNITIVE_SYSTEM.md`",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md"
        ]
      },
      "created_at": 1754957550.842029,
      "updated_at": 1754957550.842029
    },
    "concept_155": {
      "id": "concept_155",
      "type": "concept",
      "name": "** - Enhanced context retrieval (Phase 1)\n3. **",
      "description": "Concept: ** - Enhanced context retrieval (Phase 1)\n3. **",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md"
        ]
      },
      "created_at": 1754957550.8420732,
      "updated_at": 1754957550.8420732
    },
    "concept_156": {
      "id": "concept_156",
      "type": "concept",
      "name": "** - Intelligent tool orchestration (Phase 2)\n9. **",
      "description": "Concept: ** - Intelligent tool orchestration (Phase 2)\n9. **",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md"
        ]
      },
      "created_at": 1754957550.842117,
      "updated_at": 1754957550.842117
    },
    "concept_157": {
      "id": "concept_157",
      "type": "concept",
      "name": "** - Unified learning and adaptation system\n11. **",
      "description": "Concept: ** - Unified learning and adaptation system\n11. **",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md"
        ]
      },
      "created_at": 1754957550.842162,
      "updated_at": 1754957550.842162
    },
    "concept_158": {
      "id": "concept_158",
      "type": "concept",
      "name": "**\u2705 Completed**",
      "description": "Concept: **\u2705 Completed**",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md"
        ]
      },
      "created_at": 1754957550.8422122,
      "updated_at": 1754957550.8422122
    },
    "concept_159": {
      "id": "concept_159",
      "type": "concept",
      "name": "**Reduced Confusion**: Clear tool categorization",
      "description": "Concept: **Reduced Confusion**: Clear tool categorization",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md",
          "README_RESTRUCTURED_SYSTEM.md",
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957550.8422568,
      "updated_at": 1754957551.255848
    },
    "concept_160": {
      "id": "concept_160",
      "type": "concept",
      "name": "---\n\n## \ud83c\udfaf **Key Benefits Achieved**\n\n### **1. Cognitive Efficiency**\n\n- **Natural Workflow**: Tools follow human cognitive processes\n- **Intuitive Usage**: No need to remember scattered tool names\n- **Logical Organization**: Related functions grouped together\n\n### **2. Massive Redundancy Elimination**\n\n- **Before**: 48 scattered, overlapping tools\n- **After**: 18 organized, cognitive domain tools\n- **Reduction**: 62.5% fewer tools with 100% functionality\n\n### **3. Improved Maintainability**\n\n- **Centralized Logic**: All related functionality in one place\n- **Easier Updates**: Changes affect entire cognitive domains\n- **Better Testing**: Comprehensive testing per domain\n\n### **4. Enhanced User Experience**\n\n- **Faster Discovery**: Users find tools in logical domains\n- **Better Learning**: Natural cognitive progression\n- **Reduced Confusion**: Clear tool categorization\n\n---\n\n## \ud83d\udd27 **Implementation Status**\n\n### **\u2705 Completed**\n\n- [x] Restructured cognitive brain plugin created\n- [x] All 18 tools implemented and tested\n- [x] 100% functionality preservation achieved\n- [x] Natural cognitive workflow implemented\n- [x] Comprehensive documentation created\n- [x] Demonstration scripts ready\n- [x] Plugin integration tested\n\n### **\ud83d\ude80 Ready For**\n\n- [ ] Production deployment\n- [ ] User migration\n- [ ] Performance optimization\n- [ ] Advanced cognitive features\n\n---\n\n## \ud83d\udcc1 **Files Created/Modified**\n\n### **New Files**\n\n-",
      "description": "Concept: ---\n\n## \ud83c\udfaf **Key Benefits Achieved**\n\n### **1. Cognitive Efficiency**\n\n- **Natural Workflow**: Tools follow human cognitive processes\n- **Intuitive Usage**: No need to remember scattered tool names\n- **Logical Organization**: Related functions grouped together\n\n### **2. Massive Redundancy Elimination**\n\n- **Before**: 48 scattered, overlapping tools\n- **After**: 18 organized, cognitive domain tools\n- **Reduction**: 62.5% fewer tools with 100% functionality\n\n### **3. Improved Maintainability**\n\n- **Centralized Logic**: All related functionality in one place\n- **Easier Updates**: Changes affect entire cognitive domains\n- **Better Testing**: Comprehensive testing per domain\n\n### **4. Enhanced User Experience**\n\n- **Faster Discovery**: Users find tools in logical domains\n- **Better Learning**: Natural cognitive progression\n- **Reduced Confusion**: Clear tool categorization\n\n---\n\n## \ud83d\udd27 **Implementation Status**\n\n### **\u2705 Completed**\n\n- [x] Restructured cognitive brain plugin created\n- [x] All 18 tools implemented and tested\n- [x] 100% functionality preservation achieved\n- [x] Natural cognitive workflow implemented\n- [x] Comprehensive documentation created\n- [x] Demonstration scripts ready\n- [x] Plugin integration tested\n\n### **\ud83d\ude80 Ready For**\n\n- [ ] Production deployment\n- [ ] User migration\n- [ ] Performance optimization\n- [ ] Advanced cognitive features\n\n---\n\n## \ud83d\udcc1 **Files Created/Modified**\n\n### **New Files**\n\n-",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md"
        ]
      },
      "created_at": 1754957550.8429592,
      "updated_at": 1754957550.8429592
    },
    "concept_161": {
      "id": "concept_161",
      "type": "concept",
      "name": "\ud83d\udd17 **Quick Reference**",
      "description": "Concept: \ud83d\udd17 **Quick Reference**",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md",
          "INTEGRATION_GUIDE.md",
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957550.84302,
      "updated_at": 1754957551.185898
    },
    "concept_162": {
      "id": "concept_162",
      "type": "concept",
      "name": "** - Deep thinking with context analysis\n8. **",
      "description": "Concept: ** - Deep thinking with context analysis\n8. **",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md"
        ]
      },
      "created_at": 1754957550.8430688,
      "updated_at": 1754957550.8430688
    },
    "concept_163": {
      "id": "concept_163",
      "type": "concept",
      "name": "3. THINKING: Process and orchestrate tools",
      "description": "Concept: 3. THINKING: Process and orchestrate tools",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md",
          "README_RESTRUCTURED_SYSTEM.md",
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957550.8431182,
      "updated_at": 1754957551.2584388
    },
    "concept_164": {
      "id": "concept_164",
      "type": "concept",
      "name": "6. MONITORING: Check system health",
      "description": "Concept: 6. MONITORING: Check system health",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md",
          "README_RESTRUCTURED_SYSTEM.md",
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957550.84325,
      "updated_at": 1754957551.260637
    },
    "concept_165": {
      "id": "concept_165",
      "type": "concept",
      "name": "**Long Term (Next month)**",
      "description": "Concept: **Long Term (Next month)**",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md"
        ]
      },
      "created_at": 1754957550.8433018,
      "updated_at": 1754957550.8433018
    },
    "concept_166": {
      "id": "concept_166",
      "type": "concept",
      "name": "\ud83d\udcca **Restructuring Results**",
      "description": "Concept: \ud83d\udcca **Restructuring Results**",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md"
        ]
      },
      "created_at": 1754957550.8433652,
      "updated_at": 1754957550.8433652
    },
    "concept_167": {
      "id": "concept_167",
      "type": "concept",
      "name": "| \u2705 100% Preserved       |\n| Learning & Adaptation (5 tools) |",
      "description": "Concept: | \u2705 100% Preserved       |\n| Learning & Adaptation (5 tools) |",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md"
        ]
      },
      "created_at": 1754957550.843529,
      "updated_at": 1754957550.843529
    },
    "concept_168": {
      "id": "concept_168",
      "type": "concept",
      "name": "** - Continuous learning cycle (Phase 3)\n12. **",
      "description": "Concept: ** - Continuous learning cycle (Phase 3)\n12. **",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md"
        ]
      },
      "created_at": 1754957550.8437812,
      "updated_at": 1754957550.8437812
    },
    "concept_169": {
      "id": "concept_169",
      "type": "concept",
      "name": "`COGNITIVE_RESTRUCTURING_SUMMARY.md` - This summary document",
      "description": "Concept: `COGNITIVE_RESTRUCTURING_SUMMARY.md` - This summary document",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md"
        ]
      },
      "created_at": 1754957550.843903,
      "updated_at": 1754957550.843903
    },
    "concept_170": {
      "id": "concept_170",
      "type": "concept",
      "name": "**DOMAIN 3: PROCESSING & THINKING**",
      "description": "Concept: **DOMAIN 3: PROCESSING & THINKING**",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md",
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957550.8441,
      "updated_at": 1754957550.984747
    },
    "concept_171": {
      "id": "concept_171",
      "type": "concept",
      "name": "**3. Improved Maintainability**",
      "description": "Concept: **3. Improved Maintainability**",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md",
          "README_RESTRUCTURED_SYSTEM.md",
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957550.844168,
      "updated_at": 1754957551.265715
    },
    "concept_172": {
      "id": "concept_172",
      "type": "concept",
      "name": "\ud83d\ude80 **Natural Cognitive Workflow**",
      "description": "Concept: \ud83d\ude80 **Natural Cognitive Workflow**",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md"
        ]
      },
      "created_at": 1754957550.8443,
      "updated_at": 1754957550.8443
    },
    "concept_173": {
      "id": "concept_173",
      "type": "concept",
      "name": "**Existing Files Preserved**",
      "description": "Concept: **Existing Files Preserved**",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md"
        ]
      },
      "created_at": 1754957550.844565,
      "updated_at": 1754957550.844565
    },
    "concept_174": {
      "id": "concept_174",
      "type": "concept",
      "name": "| \u2705 100% Preserved       |\n| Workflow Management (3 tools)   |",
      "description": "Concept: | \u2705 100% Preserved       |\n| Workflow Management (3 tools)   |",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md"
        ]
      },
      "created_at": 1754957550.8446982,
      "updated_at": 1754957550.8446982
    },
    "concept_175": {
      "id": "concept_175",
      "type": "concept",
      "name": "** - Unified memory operations (store, retrieve, search, clear)\n5. **",
      "description": "Concept: ** - Unified memory operations (store, retrieve, search, clear)\n5. **",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md"
        ]
      },
      "created_at": 1754957550.844857,
      "updated_at": 1754957550.844857
    },
    "concept_176": {
      "id": "concept_176",
      "type": "concept",
      "name": "** - Execute complete enhanced workflow\n14. **",
      "description": "Concept: ** - Execute complete enhanced workflow\n14. **",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md"
        ]
      },
      "created_at": 1754957550.844915,
      "updated_at": 1754957550.844915
    },
    "concept_177": {
      "id": "concept_177",
      "type": "concept",
      "name": "**Test Command**: `python demo_restructured_cognitive_system.py`",
      "description": "Concept: **Test Command**: `python demo_restructured_cognitive_system.py`",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md"
        ]
      },
      "created_at": 1754957550.8449678,
      "updated_at": 1754957550.8449678
    },
    "concept_178": {
      "id": "concept_178",
      "type": "concept",
      "name": "\ud83e\udde0 **Cognitive Brain Restructuring - COMPLETE SUMMARY**",
      "description": "Concept: \ud83e\udde0 **Cognitive Brain Restructuring - COMPLETE SUMMARY**",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md"
        ]
      },
      "created_at": 1754957550.845194,
      "updated_at": 1754957550.845194
    },
    "concept_179": {
      "id": "concept_179",
      "type": "concept",
      "name": "| \u2705 100% Preserved       |\n| Cursor Integration (3 tools)    |",
      "description": "Concept: | \u2705 100% Preserved       |\n| Cursor Integration (3 tools)    |",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md"
        ]
      },
      "created_at": 1754957550.845382,
      "updated_at": 1754957550.845382
    },
    "concept_180": {
      "id": "concept_180",
      "type": "concept",
      "name": "**Main Plugin**: `plugins/cognitive_brain_restructured.py`",
      "description": "Concept: **Main Plugin**: `plugins/cognitive_brain_restructured.py`",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md"
        ]
      },
      "created_at": 1754957550.845502,
      "updated_at": 1754957550.845502
    },
    "concept_181": {
      "id": "concept_181",
      "type": "concept",
      "name": "4. LEARNING: Learn from the interaction",
      "description": "Concept: 4. LEARNING: Learn from the interaction",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md",
          "README_RESTRUCTURED_SYSTEM.md",
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957550.8456059,
      "updated_at": 1754957551.276122
    },
    "concept_182": {
      "id": "concept_182",
      "type": "concept",
      "name": "[x] Plugin integration tested",
      "description": "Concept: [x] Plugin integration tested",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md"
        ]
      },
      "created_at": 1754957550.8457139,
      "updated_at": 1754957550.8457139
    },
    "concept_183": {
      "id": "concept_183",
      "type": "concept",
      "name": "**Total: 18 consolidated tools with 100% functionality preservation**\n\n---\n\n## \ud83e\udde0 **Complete Tool Mapping**\n\n### **DOMAIN 1: PERCEPTION & INPUT**\n\n1. **",
      "description": "Concept: **Total: 18 consolidated tools with 100% functionality preservation**\n\n---\n\n## \ud83e\udde0 **Complete Tool Mapping**\n\n### **DOMAIN 1: PERCEPTION & INPUT**\n\n1. **",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md"
        ]
      },
      "created_at": 1754957550.845857,
      "updated_at": 1754957550.845857
    },
    "concept_184": {
      "id": "concept_184",
      "type": "concept",
      "name": "[x] All 18 tools implemented and tested",
      "description": "Concept: [x] All 18 tools implemented and tested",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md"
        ]
      },
      "created_at": 1754957550.8459158,
      "updated_at": 1754957550.8459158
    },
    "concept_185": {
      "id": "concept_185",
      "type": "concept",
      "name": "All original plugins remain intact for functionality preservation",
      "description": "Concept: All original plugins remain intact for functionality preservation",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md"
        ]
      },
      "created_at": 1754957550.84598,
      "updated_at": 1754957550.845981
    },
    "concept_186": {
      "id": "concept_186",
      "type": "concept",
      "name": "5. ACTION: Execute the workflow",
      "description": "Concept: 5. ACTION: Execute the workflow",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md",
          "README_RESTRUCTURED_SYSTEM.md",
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957550.846032,
      "updated_at": 1754957551.279704
    },
    "concept_187": {
      "id": "concept_187",
      "type": "concept",
      "name": "** - Auto-process and store message context\n6. **",
      "description": "Concept: ** - Auto-process and store message context\n6. **",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md"
        ]
      },
      "created_at": 1754957550.846085,
      "updated_at": 1754957550.846085
    },
    "concept_188": {
      "id": "concept_188",
      "type": "concept",
      "name": "[x] Comprehensive documentation created",
      "description": "Concept: [x] Comprehensive documentation created",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md"
        ]
      },
      "created_at": 1754957550.846137,
      "updated_at": 1754957550.846137
    },
    "concept_189": {
      "id": "concept_189",
      "type": "concept",
      "name": "**New Files**",
      "description": "Concept: **New Files**",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md"
        ]
      },
      "created_at": 1754957550.846188,
      "updated_at": 1754957550.846188
    },
    "concept_190": {
      "id": "concept_190",
      "type": "concept",
      "name": "**Faster Discovery**: Users find tools in logical domains",
      "description": "Concept: **Faster Discovery**: Users find tools in logical domains",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md",
          "README_RESTRUCTURED_SYSTEM.md",
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957550.846241,
      "updated_at": 1754957551.282828
    },
    "concept_191": {
      "id": "concept_191",
      "type": "concept",
      "name": "\ud83c\udfaf **Conclusion**",
      "description": "Concept: \ud83c\udfaf **Conclusion**",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md",
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957550.846303,
      "updated_at": 1754957551.0273888
    },
    "concept_192": {
      "id": "concept_192",
      "type": "concept",
      "name": "**Natural Workflow**: Tools follow human cognitive processes",
      "description": "Concept: **Natural Workflow**: Tools follow human cognitive processes",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md",
          "README_RESTRUCTURED_SYSTEM.md",
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957550.846358,
      "updated_at": 1754957551.284278
    },
    "concept_193": {
      "id": "concept_193",
      "type": "concept",
      "name": "**DOMAIN 4: LEARNING & ADAPTATION**",
      "description": "Concept: **DOMAIN 4: LEARNING & ADAPTATION**",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md",
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957550.84641,
      "updated_at": 1754957550.9883652
    },
    "concept_194": {
      "id": "concept_194",
      "type": "concept",
      "name": "- Main restructured plugin\n-",
      "description": "Concept: - Main restructured plugin\n-",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md"
        ]
      },
      "created_at": 1754957550.846462,
      "updated_at": 1754957550.846462
    },
    "concept_195": {
      "id": "concept_195",
      "type": "concept",
      "name": "\ud83d\udd04 **Functionality Preservation Matrix**",
      "description": "Concept: \ud83d\udd04 **Functionality Preservation Matrix**",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md"
        ]
      },
      "created_at": 1754957550.846539,
      "updated_at": 1754957550.846539
    },
    "concept_196": {
      "id": "concept_196",
      "type": "concept",
      "name": "** - AI chat with memory enhancement\n\n### **DOMAIN 6: SELF-MONITORING**\n\n16. **",
      "description": "Concept: ** - AI chat with memory enhancement\n\n### **DOMAIN 6: SELF-MONITORING**\n\n16. **",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md"
        ]
      },
      "created_at": 1754957550.846595,
      "updated_at": 1754957550.846595
    },
    "concept_197": {
      "id": "concept_197",
      "type": "concept",
      "name": "- Comprehensive documentation\n-",
      "description": "Concept: - Comprehensive documentation\n-",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md"
        ]
      },
      "created_at": 1754957550.846648,
      "updated_at": 1754957550.846648
    },
    "concept_198": {
      "id": "concept_198",
      "type": "concept",
      "name": "\ud83d\udd27 **Implementation Status**",
      "description": "Concept: \ud83d\udd27 **Implementation Status**",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md"
        ]
      },
      "created_at": 1754957550.846723,
      "updated_at": 1754957550.846723
    },
    "concept_199": {
      "id": "concept_199",
      "type": "concept",
      "name": "** - Process multiple messages efficiently\n15. **",
      "description": "Concept: ** - Process multiple messages efficiently\n15. **",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md"
        ]
      },
      "created_at": 1754957550.846781,
      "updated_at": 1754957550.846781
    },
    "concept_200": {
      "id": "concept_200",
      "type": "concept",
      "name": "[ ] Advanced cognitive features",
      "description": "Concept: [ ] Advanced cognitive features",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md"
        ]
      },
      "created_at": 1754957550.846834,
      "updated_at": 1754957550.846834
    },
    "concept_201": {
      "id": "concept_201",
      "type": "concept",
      "name": "**Better Learning**: Natural cognitive progression",
      "description": "Concept: **Better Learning**: Natural cognitive progression",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md",
          "README_RESTRUCTURED_SYSTEM.md",
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957550.846891,
      "updated_at": 1754957551.290123
    },
    "concept_202": {
      "id": "concept_202",
      "type": "concept",
      "name": "[ ] User migration",
      "description": "Concept: [ ] User migration",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md"
        ]
      },
      "created_at": 1754957550.846944,
      "updated_at": 1754957550.846944
    },
    "concept_203": {
      "id": "concept_203",
      "type": "concept",
      "name": "`plugins/cognitive_brain_restructured.py` - Main restructured plugin",
      "description": "Concept: `plugins/cognitive_brain_restructured.py` - Main restructured plugin",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md"
        ]
      },
      "created_at": 1754957550.8470001,
      "updated_at": 1754957550.8470001
    },
    "concept_204": {
      "id": "concept_204",
      "type": "concept",
      "name": "**Before: 48 Scattered Tools**",
      "description": "Concept: **Before: 48 Scattered Tools**",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md",
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957550.8471081,
      "updated_at": 1754957551.2917209
    },
    "concept_205": {
      "id": "concept_205",
      "type": "concept",
      "name": "[ ] Performance optimization",
      "description": "Concept: [ ] Performance optimization",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md"
        ]
      },
      "created_at": 1754957550.8473349,
      "updated_at": 1754957550.8473349
    },
    "concept_206": {
      "id": "concept_206",
      "type": "concept",
      "name": "**Complete Workflow Example**",
      "description": "Concept: **Complete Workflow Example**",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md"
        ]
      },
      "created_at": 1754957550.8476732,
      "updated_at": 1754957550.8476732
    },
    "concept_207": {
      "id": "concept_207",
      "type": "concept",
      "name": "**DOMAIN 2: MEMORY & STORAGE**",
      "description": "Concept: **DOMAIN 2: MEMORY & STORAGE**",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md",
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957550.847745,
      "updated_at": 1754957550.9942138
    },
    "concept_208": {
      "id": "concept_208",
      "type": "concept",
      "name": "**DOMAIN 5: OUTPUT & ACTION**",
      "description": "Concept: **DOMAIN 5: OUTPUT & ACTION**",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md",
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957550.847808,
      "updated_at": 1754957550.975932
    },
    "concept_209": {
      "id": "concept_209",
      "type": "concept",
      "name": "\ud83c\udfaf **Key Benefits Achieved**",
      "description": "Concept: \ud83c\udfaf **Key Benefits Achieved**",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md"
        ]
      },
      "created_at": 1754957550.8481762,
      "updated_at": 1754957550.8481762
    },
    "concept_210": {
      "id": "concept_210",
      "type": "concept",
      "name": "**1. Cognitive Efficiency**",
      "description": "Concept: **1. Cognitive Efficiency**",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md",
          "README_RESTRUCTURED_SYSTEM.md",
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957550.848751,
      "updated_at": 1754957551.296098
    },
    "concept_211": {
      "id": "concept_211",
      "type": "concept",
      "name": "**After: 6 Natural Cognitive Domains**",
      "description": "Concept: **After: 6 Natural Cognitive Domains**",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md",
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957550.848812,
      "updated_at": 1754957551.296152
    },
    "concept_212": {
      "id": "concept_212",
      "type": "concept",
      "name": "**Centralized Logic**: All related functionality in one place",
      "description": "Concept: **Centralized Logic**: All related functionality in one place",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md",
          "README_RESTRUCTURED_SYSTEM.md",
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957550.848979,
      "updated_at": 1754957551.296937
    },
    "concept_213": {
      "id": "concept_213",
      "type": "concept",
      "name": "\u2705 PERCEPTION & INPUT (3 tools)\n\u2705 MEMORY & STORAGE (3 tools)\n\u2705 PROCESSING & THINKING (3 tools)\n\u2705 LEARNING & ADAPTATION (3 tools)\n\u2705 OUTPUT & ACTION (3 tools)\n\u2705 SELF-MONITORING (3 tools)",
      "description": "Concept: \u2705 PERCEPTION & INPUT (3 tools)\n\u2705 MEMORY & STORAGE (3 tools)\n\u2705 PROCESSING & THINKING (3 tools)\n\u2705 LEARNING & ADAPTATION (3 tools)\n\u2705 OUTPUT & ACTION (3 tools)\n\u2705 SELF-MONITORING (3 tools)",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md"
        ]
      },
      "created_at": 1754957550.849317,
      "updated_at": 1754957550.849317
    },
    "concept_214": {
      "id": "concept_214",
      "type": "concept",
      "name": "**DOMAIN 1: PERCEPTION & INPUT**",
      "description": "Concept: **DOMAIN 1: PERCEPTION & INPUT**",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md",
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957550.849708,
      "updated_at": 1754957550.996319
    },
    "concept_215": {
      "id": "concept_215",
      "type": "concept",
      "name": "** - Analyze system and tool performance\n18. **",
      "description": "Concept: ** - Analyze system and tool performance\n18. **",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md"
        ]
      },
      "created_at": 1754957550.849782,
      "updated_at": 1754957550.849782
    },
    "concept_216": {
      "id": "concept_216",
      "type": "concept",
      "name": "- **Documentation**:",
      "description": "Concept: - **Documentation**:",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md"
        ]
      },
      "created_at": 1754957550.850087,
      "updated_at": 1754957550.850087
    },
    "concept_217": {
      "id": "concept_217",
      "type": "concept",
      "name": "**Intuitive Usage**: No need to remember scattered tool names",
      "description": "Concept: **Intuitive Usage**: No need to remember scattered tool names",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md",
          "README_RESTRUCTURED_SYSTEM.md",
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957550.850164,
      "updated_at": 1754957551.299038
    },
    "concept_218": {
      "id": "concept_218",
      "type": "concept",
      "name": "| \u2705 100% Preserved       |\n| Performance Analysis (3 tools)  |",
      "description": "Concept: | \u2705 100% Preserved       |\n| Performance Analysis (3 tools)  |",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md"
        ]
      },
      "created_at": 1754957550.8502662,
      "updated_at": 1754957550.8502662
    },
    "concept_219": {
      "id": "concept_219",
      "type": "concept",
      "name": "**2. Massive Redundancy Elimination**",
      "description": "Concept: **2. Massive Redundancy Elimination**",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md",
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957550.850324,
      "updated_at": 1754957551.213133
    },
    "concept_220": {
      "id": "concept_220",
      "type": "concept",
      "name": "**\ud83d\ude80 Ready For**",
      "description": "Concept: **\ud83d\ude80 Ready For**",
      "source": "COGNITIVE_RESTRUCTURING_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "COGNITIVE_RESTRUCTURING_SUMMARY.md"
        ]
      },
      "created_at": 1754957550.850615,
      "updated_at": 1754957550.850615
    },
    "doc_221": {
      "id": "doc_221",
      "type": "document",
      "name": "Current_Tools_Analysis",
      "description": "Document: CURRENT_TOOLS_ANALYSIS.md",
      "source": "CURRENT_TOOLS_ANALYSIS.md",
      "confidence": 0.9,
      "metadata": {
        "file_size": 3492,
        "lines": 120,
        "language": "unknown",
        "last_modified": 1754950731.8402832
      },
      "created_at": 1754957550.852588,
      "updated_at": 1754957550.852588
    },
    "concept_222": {
      "id": "concept_222",
      "type": "concept",
      "name": "Users can't directly access context analysis",
      "description": "Concept: Users can't directly access context analysis",
      "source": "CURRENT_TOOLS_ANALYSIS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CURRENT_TOOLS_ANALYSIS.md"
        ]
      },
      "created_at": 1754957550.85266,
      "updated_at": 1754957550.85266
    },
    "concept_223": {
      "id": "concept_223",
      "type": "concept",
      "name": "get_function_call_history",
      "description": "Concept: get_function_call_history",
      "source": "CURRENT_TOOLS_ANALYSIS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CURRENT_TOOLS_ANALYSIS.md"
        ]
      },
      "created_at": 1754957550.85272,
      "updated_at": 1754957550.85272
    },
    "concept_224": {
      "id": "concept_224",
      "type": "concept",
      "name": "cursor_auto_inject_context",
      "description": "Concept: cursor_auto_inject_context",
      "source": "CURRENT_TOOLS_ANALYSIS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CURRENT_TOOLS_ANALYSIS.md",
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957550.852778,
      "updated_at": 1754957551.486336
    },
    "concept_225": {
      "id": "concept_225",
      "type": "concept",
      "name": "test_llm_connection",
      "description": "Concept: test_llm_connection",
      "source": "CURRENT_TOOLS_ANALYSIS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CURRENT_TOOLS_ANALYSIS.md"
        ]
      },
      "created_at": 1754957550.852837,
      "updated_at": 1754957550.852837
    },
    "concept_226": {
      "id": "concept_226",
      "type": "concept",
      "name": "get_cursor_context",
      "description": "Concept: get_cursor_context",
      "source": "CURRENT_TOOLS_ANALYSIS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CURRENT_TOOLS_ANALYSIS.md",
          "RESTRUCTURED_COGNITIVE_SYSTEM.md",
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957550.852958,
      "updated_at": 1754957551.487363
    },
    "concept_227": {
      "id": "concept_227",
      "type": "concept",
      "name": "No more tool overwriting",
      "description": "Concept: No more tool overwriting",
      "source": "CURRENT_TOOLS_ANALYSIS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CURRENT_TOOLS_ANALYSIS.md"
        ]
      },
      "created_at": 1754957550.853024,
      "updated_at": 1754957550.853024
    },
    "concept_228": {
      "id": "concept_228",
      "type": "concept",
      "name": "3. Cursor Integration",
      "description": "Concept: 3. Cursor Integration",
      "source": "CURRENT_TOOLS_ANALYSIS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CURRENT_TOOLS_ANALYSIS.md"
        ]
      },
      "created_at": 1754957550.853109,
      "updated_at": 1754957550.853109
    },
    "concept_229": {
      "id": "concept_229",
      "type": "concept",
      "name": "system_info",
      "description": "Concept: system_info",
      "source": "CURRENT_TOOLS_ANALYSIS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CURRENT_TOOLS_ANALYSIS.md"
        ]
      },
      "created_at": 1754957550.853169,
      "updated_at": 1754957550.853169
    },
    "concept_230": {
      "id": "concept_230",
      "type": "concept",
      "name": "\ud83d\udcca Tool Count Summary",
      "description": "Concept: \ud83d\udcca Tool Count Summary",
      "source": "CURRENT_TOOLS_ANALYSIS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CURRENT_TOOLS_ANALYSIS.md"
        ]
      },
      "created_at": 1754957550.8532438,
      "updated_at": 1754957550.8532438
    },
    "concept_231": {
      "id": "concept_231",
      "type": "concept",
      "name": "learn_from",
      "description": "Concept: learn_from",
      "source": "CURRENT_TOOLS_ANALYSIS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CURRENT_TOOLS_ANALYSIS.md",
          "RESTRUCTURED_COGNITIVE_SYSTEM.md",
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957550.853303,
      "updated_at": 1754957551.49369
    },
    "concept_232": {
      "id": "concept_232",
      "type": "concept",
      "name": "Failing Plugins",
      "description": "Concept: Failing Plugins",
      "source": "CURRENT_TOOLS_ANALYSIS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CURRENT_TOOLS_ANALYSIS.md"
        ]
      },
      "created_at": 1754957550.853361,
      "updated_at": 1754957550.853361
    },
    "concept_233": {
      "id": "concept_233",
      "type": "concept",
      "name": "**Main.py Tools**: 16 tools",
      "description": "Concept: **Main.py Tools**: 16 tools",
      "source": "CURRENT_TOOLS_ANALYSIS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CURRENT_TOOLS_ANALYSIS.md"
        ]
      },
      "created_at": 1754957550.85342,
      "updated_at": 1754957550.85342
    },
    "concept_234": {
      "id": "concept_234",
      "type": "concept",
      "name": "list_plugins",
      "description": "Concept: list_plugins",
      "source": "CURRENT_TOOLS_ANALYSIS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CURRENT_TOOLS_ANALYSIS.md",
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957550.853478,
      "updated_at": 1754957551.49514
    },
    "concept_235": {
      "id": "concept_235",
      "type": "concept",
      "name": "cognitive_brain",
      "description": "Concept: cognitive_brain",
      "source": "CURRENT_TOOLS_ANALYSIS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CURRENT_TOOLS_ANALYSIS.md"
        ]
      },
      "created_at": 1754957550.853539,
      "updated_at": 1754957550.853539
    },
    "concept_236": {
      "id": "concept_236",
      "type": "concept",
      "name": "memory_context",
      "description": "Concept: memory_context",
      "source": "CURRENT_TOOLS_ANALYSIS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CURRENT_TOOLS_ANALYSIS.md",
          "function_call_logger.py",
          "llm_client.py",
          "main.py"
        ]
      },
      "created_at": 1754957550.8535979,
      "updated_at": 1754957552.418896
    },
    "concept_237": {
      "id": "concept_237",
      "type": "concept",
      "name": "ContextAnalyzer is integrated but not visible as separate tool",
      "description": "Concept: ContextAnalyzer is integrated but not visible as separate tool",
      "source": "CURRENT_TOOLS_ANALYSIS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CURRENT_TOOLS_ANALYSIS.md"
        ]
      },
      "created_at": 1754957550.8536608,
      "updated_at": 1754957550.8536608
    },
    "concept_238": {
      "id": "concept_238",
      "type": "concept",
      "name": "Current Tools Analysis - Before Redesign",
      "description": "Concept: Current Tools Analysis - Before Redesign",
      "source": "CURRENT_TOOLS_ANALYSIS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CURRENT_TOOLS_ANALYSIS.md"
        ]
      },
      "created_at": 1754957550.8537228,
      "updated_at": 1754957550.8537228
    },
    "concept_239": {
      "id": "concept_239",
      "type": "concept",
      "name": "conversation_memory_integration",
      "description": "Concept: conversation_memory_integration",
      "source": "CURRENT_TOOLS_ANALYSIS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CURRENT_TOOLS_ANALYSIS.md"
        ]
      },
      "created_at": 1754957550.8537831,
      "updated_at": 1754957550.8537831
    },
    "concept_240": {
      "id": "concept_240",
      "type": "concept",
      "name": "dream",
      "description": "Concept: dream",
      "source": "CURRENT_TOOLS_ANALYSIS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CURRENT_TOOLS_ANALYSIS.md",
          "RESTRUCTURED_COGNITIVE_SYSTEM.md",
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957550.8538408,
      "updated_at": 1754957551.4994519
    },
    "concept_241": {
      "id": "concept_241",
      "type": "concept",
      "name": "Clear purpose for each tool",
      "description": "Concept: Clear purpose for each tool",
      "source": "CURRENT_TOOLS_ANALYSIS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CURRENT_TOOLS_ANALYSIS.md"
        ]
      },
      "created_at": 1754957550.8539,
      "updated_at": 1754957550.8539
    },
    "concept_242": {
      "id": "concept_242",
      "type": "concept",
      "name": "quick_memory_chat",
      "description": "Concept: quick_memory_chat",
      "source": "CURRENT_TOOLS_ANALYSIS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CURRENT_TOOLS_ANALYSIS.md"
        ]
      },
      "created_at": 1754957550.853958,
      "updated_at": 1754957550.853958
    },
    "concept_243": {
      "id": "concept_243",
      "type": "concept",
      "name": "Single, clean tool registration system",
      "description": "Concept: Single, clean tool registration system",
      "source": "CURRENT_TOOLS_ANALYSIS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CURRENT_TOOLS_ANALYSIS.md"
        ]
      },
      "created_at": 1754957550.854017,
      "updated_at": 1754957550.854018
    },
    "concept_244": {
      "id": "concept_244",
      "type": "concept",
      "name": "1. Tool Registration Problems",
      "description": "Concept: 1. Tool Registration Problems",
      "source": "CURRENT_TOOLS_ANALYSIS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CURRENT_TOOLS_ANALYSIS.md"
        ]
      },
      "created_at": 1754957550.854076,
      "updated_at": 1754957550.854076
    },
    "concept_245": {
      "id": "concept_245",
      "type": "concept",
      "name": "`cursor_integration` - Cursor integration tools",
      "description": "Concept: `cursor_integration` - Cursor integration tools",
      "source": "CURRENT_TOOLS_ANALYSIS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CURRENT_TOOLS_ANALYSIS.md"
        ]
      },
      "created_at": 1754957550.8541381,
      "updated_at": 1754957550.8541381
    },
    "concept_246": {
      "id": "concept_246",
      "type": "concept",
      "name": "`system_info` - System information tools",
      "description": "Concept: `system_info` - System information tools",
      "source": "CURRENT_TOOLS_ANALYSIS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CURRENT_TOOLS_ANALYSIS.md"
        ]
      },
      "created_at": 1754957550.854199,
      "updated_at": 1754957550.854199
    },
    "concept_247": {
      "id": "concept_247",
      "type": "concept",
      "name": "\ud83d\udd0c Plugin Tools (Various - Some Failing)",
      "description": "Concept: \ud83d\udd0c Plugin Tools (Various - Some Failing)",
      "source": "CURRENT_TOOLS_ANALYSIS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CURRENT_TOOLS_ANALYSIS.md"
        ]
      },
      "created_at": 1754957550.8542888,
      "updated_at": 1754957550.8542888
    },
    "concept_248": {
      "id": "concept_248",
      "type": "concept",
      "name": "server_status",
      "description": "Concept: server_status",
      "source": "CURRENT_TOOLS_ANALYSIS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CURRENT_TOOLS_ANALYSIS.md",
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957550.8543491,
      "updated_at": 1754957551.5099032
    },
    "concept_249": {
      "id": "concept_249",
      "type": "concept",
      "name": "`memory_context` - Memory context tools",
      "description": "Concept: `memory_context` - Memory context tools",
      "source": "CURRENT_TOOLS_ANALYSIS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CURRENT_TOOLS_ANALYSIS.md"
        ]
      },
      "created_at": 1754957550.854444,
      "updated_at": 1754957550.854444
    },
    "concept_250": {
      "id": "concept_250",
      "type": "concept",
      "name": "No clear tool hierarchy for coding tasks",
      "description": "Concept: No clear tool hierarchy for coding tasks",
      "source": "CURRENT_TOOLS_ANALYSIS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CURRENT_TOOLS_ANALYSIS.md"
        ]
      },
      "created_at": 1754957550.854507,
      "updated_at": 1754957550.854507
    },
    "concept_251": {
      "id": "concept_251",
      "type": "concept",
      "name": "ai_chat_with_memory",
      "description": "Concept: ai_chat_with_memory",
      "source": "CURRENT_TOOLS_ANALYSIS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CURRENT_TOOLS_ANALYSIS.md",
          "RESTRUCTURED_COGNITIVE_SYSTEM.md",
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957550.8546271,
      "updated_at": 1754957551.519131
    },
    "concept_252": {
      "id": "concept_252",
      "type": "concept",
      "name": "remember",
      "description": "Concept: remember",
      "source": "CURRENT_TOOLS_ANALYSIS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CURRENT_TOOLS_ANALYSIS.md",
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957550.854914,
      "updated_at": 1754957551.2525032
    },
    "concept_253": {
      "id": "concept_253",
      "type": "concept",
      "name": "consciousness_check",
      "description": "Concept: consciousness_check",
      "source": "CURRENT_TOOLS_ANALYSIS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CURRENT_TOOLS_ANALYSIS.md",
          "RESTRUCTURED_COGNITIVE_SYSTEM.md",
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957550.854984,
      "updated_at": 1754957551.5207198
    },
    "concept_254": {
      "id": "concept_254",
      "type": "concept",
      "name": "**Expected Total**: 25+ tools",
      "description": "Concept: **Expected Total**: 25+ tools",
      "source": "CURRENT_TOOLS_ANALYSIS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CURRENT_TOOLS_ANALYSIS.md"
        ]
      },
      "created_at": 1754957550.855047,
      "updated_at": 1754957550.855047
    },
    "concept_255": {
      "id": "concept_255",
      "type": "concept",
      "name": "\ud83d\udee0\ufe0f Main.py Tools (16 tools)",
      "description": "Concept: \ud83d\udee0\ufe0f Main.py Tools (16 tools)",
      "source": "CURRENT_TOOLS_ANALYSIS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CURRENT_TOOLS_ANALYSIS.md"
        ]
      },
      "created_at": 1754957550.855135,
      "updated_at": 1754957550.855135
    },
    "concept_256": {
      "id": "concept_256",
      "type": "concept",
      "name": "Enhanced Cognitive Tools",
      "description": "Concept: Enhanced Cognitive Tools",
      "source": "CURRENT_TOOLS_ANALYSIS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CURRENT_TOOLS_ANALYSIS.md"
        ]
      },
      "created_at": 1754957550.8552,
      "updated_at": 1754957550.8552
    },
    "concept_257": {
      "id": "concept_257",
      "type": "concept",
      "name": "**Plugin Tools**: Various (some failing)",
      "description": "Concept: **Plugin Tools**: Various (some failing)",
      "source": "CURRENT_TOOLS_ANALYSIS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CURRENT_TOOLS_ANALYSIS.md"
        ]
      },
      "created_at": 1754957550.855398,
      "updated_at": 1754957550.855398
    },
    "concept_258": {
      "id": "concept_258",
      "type": "concept",
      "name": "Phase 3: Cursor Optimization",
      "description": "Concept: Phase 3: Cursor Optimization",
      "source": "CURRENT_TOOLS_ANALYSIS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CURRENT_TOOLS_ANALYSIS.md"
        ]
      },
      "created_at": 1754957550.855646,
      "updated_at": 1754957550.855646
    },
    "concept_259": {
      "id": "concept_259",
      "type": "concept",
      "name": "auto_memory",
      "description": "Concept: auto_memory",
      "source": "CURRENT_TOOLS_ANALYSIS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CURRENT_TOOLS_ANALYSIS.md",
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957550.8557692,
      "updated_at": 1754957551.258392
    },
    "concept_260": {
      "id": "concept_260",
      "type": "concept",
      "name": "initialize_chat_session",
      "description": "Concept: initialize_chat_session",
      "source": "CURRENT_TOOLS_ANALYSIS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CURRENT_TOOLS_ANALYSIS.md",
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957550.856132,
      "updated_at": 1754957551.524105
    },
    "concept_261": {
      "id": "concept_261",
      "type": "concept",
      "name": "`conversation_memory_integration` - Conversation memory (setup failed)",
      "description": "Concept: `conversation_memory_integration` - Conversation memory (setup failed)",
      "source": "CURRENT_TOOLS_ANALYSIS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CURRENT_TOOLS_ANALYSIS.md"
        ]
      },
      "created_at": 1754957550.856289,
      "updated_at": 1754957550.856289
    },
    "concept_262": {
      "id": "concept_262",
      "type": "concept",
      "name": "search_function_calls",
      "description": "Concept: search_function_calls",
      "source": "CURRENT_TOOLS_ANALYSIS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CURRENT_TOOLS_ANALYSIS.md"
        ]
      },
      "created_at": 1754957550.856504,
      "updated_at": 1754957550.856504
    },
    "concept_263": {
      "id": "concept_263",
      "type": "concept",
      "name": "recall",
      "description": "Concept: recall",
      "source": "CURRENT_TOOLS_ANALYSIS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CURRENT_TOOLS_ANALYSIS.md"
        ]
      },
      "created_at": 1754957550.856653,
      "updated_at": 1754957550.856653
    },
    "concept_264": {
      "id": "concept_264",
      "type": "concept",
      "name": "**Brain Interface Tools**: 9 tools",
      "description": "Concept: **Brain Interface Tools**: 9 tools",
      "source": "CURRENT_TOOLS_ANALYSIS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CURRENT_TOOLS_ANALYSIS.md"
        ]
      },
      "created_at": 1754957550.85693,
      "updated_at": 1754957550.856931
    },
    "concept_265": {
      "id": "concept_265",
      "type": "concept",
      "name": "Brain interface tools might be overwriting main tools",
      "description": "Concept: Brain interface tools might be overwriting main tools",
      "source": "CURRENT_TOOLS_ANALYSIS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CURRENT_TOOLS_ANALYSIS.md"
        ]
      },
      "created_at": 1754957550.857219,
      "updated_at": 1754957550.857219
    },
    "concept_266": {
      "id": "concept_266",
      "type": "concept",
      "name": "Cursor Integration Tools",
      "description": "Concept: Cursor Integration Tools",
      "source": "CURRENT_TOOLS_ANALYSIS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CURRENT_TOOLS_ANALYSIS.md"
        ]
      },
      "created_at": 1754957550.8573692,
      "updated_at": 1754957550.8573692
    },
    "concept_267": {
      "id": "concept_267",
      "type": "concept",
      "name": "`file_operations` - File operation tools",
      "description": "Concept: `file_operations` - File operation tools",
      "source": "CURRENT_TOOLS_ANALYSIS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CURRENT_TOOLS_ANALYSIS.md"
        ]
      },
      "created_at": 1754957550.8575208,
      "updated_at": 1754957550.857522
    },
    "concept_268": {
      "id": "concept_268",
      "type": "concept",
      "name": "Tools designed for coding workflows",
      "description": "Concept: Tools designed for coding workflows",
      "source": "CURRENT_TOOLS_ANALYSIS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CURRENT_TOOLS_ANALYSIS.md"
        ]
      },
      "created_at": 1754957550.857758,
      "updated_at": 1754957550.857758
    },
    "concept_269": {
      "id": "concept_269",
      "type": "concept",
      "name": "Phase 1: Clean Tool Registration",
      "description": "Concept: Phase 1: Clean Tool Registration",
      "source": "CURRENT_TOOLS_ANALYSIS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CURRENT_TOOLS_ANALYSIS.md"
        ]
      },
      "created_at": 1754957550.857955,
      "updated_at": 1754957550.857955
    },
    "concept_270": {
      "id": "concept_270",
      "type": "concept",
      "name": "think",
      "description": "Concept: think",
      "source": "CURRENT_TOOLS_ANALYSIS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CURRENT_TOOLS_ANALYSIS.md",
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957550.858304,
      "updated_at": 1754957551.271015
    },
    "concept_271": {
      "id": "concept_271",
      "type": "concept",
      "name": "get_comprehensive_system_status",
      "description": "Concept: get_comprehensive_system_status",
      "source": "CURRENT_TOOLS_ANALYSIS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CURRENT_TOOLS_ANALYSIS.md"
        ]
      },
      "created_at": 1754957550.858832,
      "updated_at": 1754957550.858832
    },
    "concept_272": {
      "id": "concept_272",
      "type": "concept",
      "name": "file_operations",
      "description": "Concept: file_operations",
      "source": "CURRENT_TOOLS_ANALYSIS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CURRENT_TOOLS_ANALYSIS.md"
        ]
      },
      "created_at": 1754957550.8592188,
      "updated_at": 1754957550.8592188
    },
    "concept_273": {
      "id": "concept_273",
      "type": "concept",
      "name": "get_session_statistics",
      "description": "Concept: get_session_statistics",
      "source": "CURRENT_TOOLS_ANALYSIS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CURRENT_TOOLS_ANALYSIS.md"
        ]
      },
      "created_at": 1754957550.8594189,
      "updated_at": 1754957550.8594198
    },
    "concept_274": {
      "id": "concept_274",
      "type": "concept",
      "name": "Power is hidden in enhanced tools",
      "description": "Concept: Power is hidden in enhanced tools",
      "source": "CURRENT_TOOLS_ANALYSIS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CURRENT_TOOLS_ANALYSIS.md"
        ]
      },
      "created_at": 1754957550.859655,
      "updated_at": 1754957550.859655
    },
    "concept_275": {
      "id": "concept_275",
      "type": "concept",
      "name": "Working Plugins",
      "description": "Concept: Working Plugins",
      "source": "CURRENT_TOOLS_ANALYSIS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CURRENT_TOOLS_ANALYSIS.md"
        ]
      },
      "created_at": 1754957550.8599129,
      "updated_at": 1754957550.8599129
    },
    "concept_276": {
      "id": "concept_276",
      "type": "concept",
      "name": "Dedicated context analysis tools",
      "description": "Concept: Dedicated context analysis tools",
      "source": "CURRENT_TOOLS_ANALYSIS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CURRENT_TOOLS_ANALYSIS.md"
        ]
      },
      "created_at": 1754957550.860003,
      "updated_at": 1754957550.860003
    },
    "concept_277": {
      "id": "concept_277",
      "type": "concept",
      "name": "ContextAnalyzer power visible everywhere",
      "description": "Concept: ContextAnalyzer power visible everywhere",
      "source": "CURRENT_TOOLS_ANALYSIS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CURRENT_TOOLS_ANALYSIS.md"
        ]
      },
      "created_at": 1754957550.860072,
      "updated_at": 1754957550.860072
    },
    "concept_278": {
      "id": "concept_278",
      "type": "concept",
      "name": "**Current Issue**: Only seeing 24 tools",
      "description": "Concept: **Current Issue**: Only seeing 24 tools",
      "source": "CURRENT_TOOLS_ANALYSIS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CURRENT_TOOLS_ANALYSIS.md"
        ]
      },
      "created_at": 1754957550.8601348,
      "updated_at": 1754957550.8601348
    },
    "concept_279": {
      "id": "concept_279",
      "type": "concept",
      "name": "Context Analysis Tool",
      "description": "Concept: Context Analysis Tool",
      "source": "CURRENT_TOOLS_ANALYSIS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CURRENT_TOOLS_ANALYSIS.md"
        ]
      },
      "created_at": 1754957550.8601978,
      "updated_at": 1754957550.8601978
    },
    "concept_280": {
      "id": "concept_280",
      "type": "concept",
      "name": "brain_info",
      "description": "Concept: brain_info",
      "source": "CURRENT_TOOLS_ANALYSIS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CURRENT_TOOLS_ANALYSIS.md",
          "TOOL_CONSOLIDATION_SUCCESS.md",
          "main.py"
        ]
      },
      "created_at": 1754957550.860259,
      "updated_at": 1754957552.1883771
    },
    "concept_281": {
      "id": "concept_281",
      "type": "concept",
      "name": "2. ContextAnalyzer Integration",
      "description": "Concept: 2. ContextAnalyzer Integration",
      "source": "CURRENT_TOOLS_ANALYSIS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CURRENT_TOOLS_ANALYSIS.md"
        ]
      },
      "created_at": 1754957550.8603241,
      "updated_at": 1754957550.8603241
    },
    "concept_282": {
      "id": "concept_282",
      "type": "concept",
      "name": "memory_stats",
      "description": "Concept: memory_stats",
      "source": "CURRENT_TOOLS_ANALYSIS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CURRENT_TOOLS_ANALYSIS.md",
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957550.8603861,
      "updated_at": 1754957551.532094
    },
    "concept_283": {
      "id": "concept_283",
      "type": "concept",
      "name": "Plugin failures reducing total tool count",
      "description": "Concept: Plugin failures reducing total tool count",
      "source": "CURRENT_TOOLS_ANALYSIS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CURRENT_TOOLS_ANALYSIS.md"
        ]
      },
      "created_at": 1754957550.86045,
      "updated_at": 1754957550.86045
    },
    "concept_284": {
      "id": "concept_284",
      "type": "concept",
      "name": "reflect",
      "description": "Concept: reflect",
      "source": "CURRENT_TOOLS_ANALYSIS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CURRENT_TOOLS_ANALYSIS.md",
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957550.8605142,
      "updated_at": 1754957551.283165
    },
    "concept_285": {
      "id": "concept_285",
      "type": "concept",
      "name": "Clear tool hierarchy",
      "description": "Concept: Clear tool hierarchy",
      "source": "CURRENT_TOOLS_ANALYSIS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CURRENT_TOOLS_ANALYSIS.md"
        ]
      },
      "created_at": 1754957550.860576,
      "updated_at": 1754957550.860576
    },
    "concept_286": {
      "id": "concept_286",
      "type": "concept",
      "name": "Standard Cognitive Tools",
      "description": "Concept: Standard Cognitive Tools",
      "source": "CURRENT_TOOLS_ANALYSIS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CURRENT_TOOLS_ANALYSIS.md"
        ]
      },
      "created_at": 1754957550.8606389,
      "updated_at": 1754957550.8606389
    },
    "concept_287": {
      "id": "concept_287",
      "type": "concept",
      "name": "Tools not optimized for Cursor workflows",
      "description": "Concept: Tools not optimized for Cursor workflows",
      "source": "CURRENT_TOOLS_ANALYSIS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CURRENT_TOOLS_ANALYSIS.md"
        ]
      },
      "created_at": 1754957550.860704,
      "updated_at": 1754957550.860704
    },
    "concept_288": {
      "id": "concept_288",
      "type": "concept",
      "name": "Core System Tools",
      "description": "Concept: Core System Tools",
      "source": "CURRENT_TOOLS_ANALYSIS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CURRENT_TOOLS_ANALYSIS.md"
        ]
      },
      "created_at": 1754957550.860766,
      "updated_at": 1754957550.860766
    },
    "concept_289": {
      "id": "concept_289",
      "type": "concept",
      "name": "track_cursor_conversation",
      "description": "Concept: track_cursor_conversation",
      "source": "CURRENT_TOOLS_ANALYSIS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CURRENT_TOOLS_ANALYSIS.md",
          "RESTRUCTURED_COGNITIVE_SYSTEM.md",
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957550.8608289,
      "updated_at": 1754957551.539372
    },
    "concept_290": {
      "id": "concept_290",
      "type": "concept",
      "name": "list_available_models",
      "description": "Concept: list_available_models",
      "source": "CURRENT_TOOLS_ANALYSIS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CURRENT_TOOLS_ANALYSIS.md"
        ]
      },
      "created_at": 1754957550.8608918,
      "updated_at": 1754957550.8608918
    },
    "concept_291": {
      "id": "concept_291",
      "type": "concept",
      "name": "Clear integration points",
      "description": "Concept: Clear integration points",
      "source": "CURRENT_TOOLS_ANALYSIS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CURRENT_TOOLS_ANALYSIS.md"
        ]
      },
      "created_at": 1754957550.8609548,
      "updated_at": 1754957550.8609548
    },
    "concept_292": {
      "id": "concept_292",
      "type": "concept",
      "name": "test_memory_system",
      "description": "Concept: test_memory_system",
      "source": "CURRENT_TOOLS_ANALYSIS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CURRENT_TOOLS_ANALYSIS.md"
        ]
      },
      "created_at": 1754957550.8610182,
      "updated_at": 1754957550.8610182
    },
    "concept_293": {
      "id": "concept_293",
      "type": "concept",
      "name": "`cognitive_brain` - Cognitive brain plugin (import errors)",
      "description": "Concept: `cognitive_brain` - Cognitive brain plugin (import errors)",
      "source": "CURRENT_TOOLS_ANALYSIS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CURRENT_TOOLS_ANALYSIS.md"
        ]
      },
      "created_at": 1754957550.861085,
      "updated_at": 1754957550.861085
    },
    "concept_294": {
      "id": "concept_294",
      "type": "concept",
      "name": "Complex tool selection process",
      "description": "Concept: Complex tool selection process",
      "source": "CURRENT_TOOLS_ANALYSIS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CURRENT_TOOLS_ANALYSIS.md"
        ]
      },
      "created_at": 1754957550.86115,
      "updated_at": 1754957550.86115
    },
    "concept_295": {
      "id": "concept_295",
      "type": "concept",
      "name": "\ud83c\udfaf Redesign Goals",
      "description": "Concept: \ud83c\udfaf Redesign Goals",
      "source": "CURRENT_TOOLS_ANALYSIS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CURRENT_TOOLS_ANALYSIS.md"
        ]
      },
      "created_at": 1754957550.8612301,
      "updated_at": 1754957550.8612301
    },
    "concept_296": {
      "id": "concept_296",
      "type": "concept",
      "name": "Phase 2: Visible ContextAnalyzer",
      "description": "Concept: Phase 2: Visible ContextAnalyzer",
      "source": "CURRENT_TOOLS_ANALYSIS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CURRENT_TOOLS_ANALYSIS.md"
        ]
      },
      "created_at": 1754957550.8612962,
      "updated_at": 1754957550.8612962
    },
    "concept_297": {
      "id": "concept_297",
      "type": "concept",
      "name": "Complex registration system causing conflicts",
      "description": "Concept: Complex registration system causing conflicts",
      "source": "CURRENT_TOOLS_ANALYSIS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CURRENT_TOOLS_ANALYSIS.md"
        ]
      },
      "created_at": 1754957550.861363,
      "updated_at": 1754957550.861363
    },
    "concept_298": {
      "id": "concept_298",
      "type": "concept",
      "name": "\ud83e\udde0 Brain Interface Tools (9 tools)",
      "description": "Concept: \ud83e\udde0 Brain Interface Tools (9 tools)",
      "source": "CURRENT_TOOLS_ANALYSIS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CURRENT_TOOLS_ANALYSIS.md"
        ]
      },
      "created_at": 1754957550.86146,
      "updated_at": 1754957550.86146
    },
    "concept_299": {
      "id": "concept_299",
      "type": "concept",
      "name": "Memory & System Tools",
      "description": "Concept: Memory & System Tools",
      "source": "CURRENT_TOOLS_ANALYSIS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CURRENT_TOOLS_ANALYSIS.md"
        ]
      },
      "created_at": 1754957550.861526,
      "updated_at": 1754957550.861526
    },
    "concept_300": {
      "id": "concept_300",
      "type": "concept",
      "name": "\ud83d\udea8 Current Issues",
      "description": "Concept: \ud83d\udea8 Current Issues",
      "source": "CURRENT_TOOLS_ANALYSIS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CURRENT_TOOLS_ANALYSIS.md"
        ]
      },
      "created_at": 1754957550.861608,
      "updated_at": 1754957550.861608
    },
    "concept_301": {
      "id": "concept_301",
      "type": "concept",
      "name": "cursor_integration",
      "description": "Concept: cursor_integration",
      "source": "CURRENT_TOOLS_ANALYSIS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CURRENT_TOOLS_ANALYSIS.md"
        ]
      },
      "created_at": 1754957550.8616729,
      "updated_at": 1754957550.8616729
    },
    "concept_302": {
      "id": "concept_302",
      "type": "concept",
      "name": "\ud83d\udcdd Next Steps",
      "description": "Concept: \ud83d\udcdd Next Steps",
      "source": "CURRENT_TOOLS_ANALYSIS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CURRENT_TOOLS_ANALYSIS.md"
        ]
      },
      "created_at": 1754957550.861751,
      "updated_at": 1754957550.861751
    },
    "concept_303": {
      "id": "concept_303",
      "type": "concept",
      "name": "analyze_context_deeply",
      "description": "Concept: analyze_context_deeply",
      "source": "CURRENT_TOOLS_ANALYSIS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CURRENT_TOOLS_ANALYSIS.md",
          "RESTRUCTURED_COGNITIVE_SYSTEM.md",
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957550.8618162,
      "updated_at": 1754957551.5475578
    },
    "concept_304": {
      "id": "concept_304",
      "type": "concept",
      "name": "Better user experience",
      "description": "Concept: Better user experience",
      "source": "CURRENT_TOOLS_ANALYSIS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CURRENT_TOOLS_ANALYSIS.md"
        ]
      },
      "created_at": 1754957550.861881,
      "updated_at": 1754957550.861881
    },
    "concept_305": {
      "id": "concept_305",
      "type": "concept",
      "name": "`auto_memory` - Auto memory tools",
      "description": "Concept: `auto_memory` - Auto memory tools",
      "source": "CURRENT_TOOLS_ANALYSIS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "CURRENT_TOOLS_ANALYSIS.md"
        ]
      },
      "created_at": 1754957550.8619468,
      "updated_at": 1754957550.8619468
    },
    "doc_306": {
      "id": "doc_306",
      "type": "document",
      "name": "Enhanced_Context_System_Readme",
      "description": "Document: ENHANCED_CONTEXT_SYSTEM_README.md",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.9,
      "metadata": {
        "file_size": 15050,
        "lines": 534,
        "language": "unknown",
        "last_modified": 1754952740.1118271
      },
      "created_at": 1754957550.867552,
      "updated_at": 1754957550.867552
    },
    "concept_307": {
      "id": "concept_307",
      "type": "concept",
      "name": "\ud83d\ude80 Enhanced Context System - Complete Implementation",
      "description": "Concept: \ud83d\ude80 Enhanced Context System - Complete Implementation",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.867676,
      "updated_at": 1754957550.867676
    },
    "concept_308": {
      "id": "concept_308",
      "type": "concept",
      "name": "Simple context enhancement",
      "description": "Concept: Simple context enhancement",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.867742,
      "updated_at": 1754957550.867742
    },
    "concept_309": {
      "id": "concept_309",
      "type": "concept",
      "name": "`_enhanced_context_retrieval_handler()`: Phase 1 implementation",
      "description": "Concept: `_enhanced_context_retrieval_handler()`: Phase 1 implementation",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.867811,
      "updated_at": 1754957550.867811
    },
    "concept_310": {
      "id": "concept_310",
      "type": "concept",
      "name": "### 4. Demonstration\n\nRun the demonstration script to see all features in action:",
      "description": "Concept: ### 4. Demonstration\n\nRun the demonstration script to see all features in action:",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.867881,
      "updated_at": 1754957550.867881
    },
    "concept_311": {
      "id": "concept_311",
      "type": "concept",
      "name": "plugins/enhanced_workflow_orchestrator.py",
      "description": "Concept: plugins/enhanced_workflow_orchestrator.py",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.867947,
      "updated_at": 1754957550.867947
    },
    "concept_312": {
      "id": "concept_312",
      "type": "concept",
      "name": "`_orchestrate_tools_handler()`: Phase 2 implementation",
      "description": "Concept: `_orchestrate_tools_handler()`: Phase 2 implementation",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.868067,
      "updated_at": 1754957550.868067
    },
    "concept_313": {
      "id": "concept_313",
      "type": "concept",
      "name": "Tool orchestration",
      "description": "Concept: Tool orchestration",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md",
          "INTEGRATION_GUIDE.md",
          "demo_restructured_cognitive_system.py"
        ]
      },
      "created_at": 1754957550.8681831,
      "updated_at": 1754957551.724405
    },
    "concept_314": {
      "id": "concept_314",
      "type": "concept",
      "name": "Build comprehensive context",
      "description": "Concept: Build comprehensive context",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md",
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957550.868254,
      "updated_at": 1754957550.9695182
    },
    "concept_315": {
      "id": "concept_315",
      "type": "concept",
      "name": "Conservative Mode",
      "description": "Concept: Conservative Mode",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.86832,
      "updated_at": 1754957550.86832
    },
    "concept_316": {
      "id": "concept_316",
      "type": "concept",
      "name": "**Conversation History Analysis**: Retrieves recent conversation context",
      "description": "Concept: **Conversation History Analysis**: Retrieves recent conversation context",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.8683991,
      "updated_at": 1754957550.8683991
    },
    "concept_317": {
      "id": "concept_317",
      "type": "concept",
      "name": "**Optimization Recommendations**: Provides actionable improvement suggestions",
      "description": "Concept: **Optimization Recommendations**: Provides actionable improvement suggestions",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.868469,
      "updated_at": 1754957550.868469
    },
    "concept_318": {
      "id": "concept_318",
      "type": "concept",
      "name": "Enable learning for complex interactions",
      "description": "Concept: Enable learning for complex interactions",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.868534,
      "updated_at": 1754957550.868534
    },
    "concept_319": {
      "id": "concept_319",
      "type": "concept",
      "name": "## \ud83d\udcca Performance Analytics & Quality Assessment\n\n### Purpose\n\nProvides comprehensive performance monitoring, quality assessment, and optimization recommendations for the enhanced context system.\n\n### Features\n\n- **Tool Performance Analysis**: Analyzes individual tool performance\n- **Context Quality Assessment**: Evaluates context completeness and relevance\n- **Performance Metrics**: Tracks efficiency, speed, and quality improvements\n- **Optimization Recommendations**: Provides actionable improvement suggestions\n\n### MCP Tools",
      "description": "Concept: ## \ud83d\udcca Performance Analytics & Quality Assessment\n\n### Purpose\n\nProvides comprehensive performance monitoring, quality assessment, and optimization recommendations for the enhanced context system.\n\n### Features\n\n- **Tool Performance Analysis**: Analyzes individual tool performance\n- **Context Quality Assessment**: Evaluates context completeness and relevance\n- **Performance Metrics**: Tracks efficiency, speed, and quality improvements\n- **Optimization Recommendations**: Provides actionable improvement suggestions\n\n### MCP Tools",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.8691142,
      "updated_at": 1754957550.8691142
    },
    "concept_320": {
      "id": "concept_320",
      "type": "concept",
      "name": "Complete workflow execution",
      "description": "Concept: Complete workflow execution",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.869181,
      "updated_at": 1754957550.9224691
    },
    "concept_321": {
      "id": "concept_321",
      "type": "concept",
      "name": "Continuous learning",
      "description": "Concept: Continuous learning",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md",
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957550.8692539,
      "updated_at": 1754957550.971184
    },
    "concept_322": {
      "id": "concept_322",
      "type": "concept",
      "name": "**Deep**: In-depth analysis with performance trend analysis",
      "description": "Concept: **Deep**: In-depth analysis with performance trend analysis",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.869332,
      "updated_at": 1754957550.869332
    },
    "concept_323": {
      "id": "concept_323",
      "type": "concept",
      "name": "`_batch_workflow_processing_handler()`: Batch processing",
      "description": "Concept: `_batch_workflow_processing_handler()`: Batch processing",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.869408,
      "updated_at": 1754957550.869408
    },
    "concept_324": {
      "id": "concept_324",
      "type": "concept",
      "name": "**Conservative**: Use for quick responses",
      "description": "Concept: **Conservative**: Use for quick responses",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.869479,
      "updated_at": 1754957550.869479
    },
    "concept_325": {
      "id": "concept_325",
      "type": "concept",
      "name": "Health check monitoring",
      "description": "Concept: Health check monitoring",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.869548,
      "updated_at": 1754957550.869548
    },
    "concept_326": {
      "id": "concept_326",
      "type": "concept",
      "name": "`_build_comprehensive_context_handler()`: Comprehensive context building",
      "description": "Concept: `_build_comprehensive_context_handler()`: Comprehensive context building",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.869623,
      "updated_at": 1754957550.869623
    },
    "concept_327": {
      "id": "concept_327",
      "type": "concept",
      "name": "Purpose",
      "description": "Concept: Purpose",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md",
          "project_scanner.py"
        ]
      },
      "created_at": 1754957550.869691,
      "updated_at": 1754957552.6410198
    },
    "concept_328": {
      "id": "concept_328",
      "type": "concept",
      "name": "3. Performance Monitoring",
      "description": "Concept: 3. Performance Monitoring",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.8697631,
      "updated_at": 1754957550.8697631
    },
    "concept_329": {
      "id": "concept_329",
      "type": "concept",
      "name": "**Context Improvement**: Identifies areas for context enhancement",
      "description": "Concept: **Context Improvement**: Identifies areas for context enhancement",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.869844,
      "updated_at": 1754957550.869844
    },
    "concept_330": {
      "id": "concept_330",
      "type": "concept",
      "name": "bash\n# Continuous Learning Cycle\ncontinuous_learning_cycle(\n    interaction_data: dict,\n    learning_focus: str = \"context_patterns\"\n) -> dict",
      "description": "Concept: bash\n# Continuous Learning Cycle\ncontinuous_learning_cycle(\n    interaction_data: dict,\n    learning_focus: str = \"context_patterns\"\n) -> dict",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.869926,
      "updated_at": 1754957550.869926
    },
    "concept_331": {
      "id": "concept_331",
      "type": "concept",
      "name": "Enhanced Context Retrieval",
      "description": "Concept: Enhanced Context Retrieval",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md",
          "demo_restructured_cognitive_system.py"
        ]
      },
      "created_at": 1754957550.869993,
      "updated_at": 1754957551.724471
    },
    "concept_332": {
      "id": "concept_332",
      "type": "concept",
      "name": "python\n# Direct plugin usage\nfrom plugins.enhanced_context_integration import EnhancedContextIntegrationPlugin\n\nplugin = EnhancedContextIntegrationPlugin()\nplugin._setup()\n\nresult = await plugin._enhanced_context_retrieval_handler(\n    user_message=\"Analyze system performance\",\n    include_history=True,\n    include_preferences=True\n)",
      "description": "Concept: python\n# Direct plugin usage\nfrom plugins.enhanced_context_integration import EnhancedContextIntegrationPlugin\n\nplugin = EnhancedContextIntegrationPlugin()\nplugin._setup()\n\nresult = await plugin._enhanced_context_retrieval_handler(\n    user_message=\"Analyze system performance\",\n    include_history=True,\n    include_preferences=True\n)",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.870096,
      "updated_at": 1754957550.870096
    },
    "concept_333": {
      "id": "concept_333",
      "type": "concept",
      "name": "Health Checks",
      "description": "Concept: Health Checks",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md",
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957550.870162,
      "updated_at": 1754957550.971043
    },
    "concept_334": {
      "id": "concept_334",
      "type": "concept",
      "name": "Assess Context Quality",
      "description": "Concept: Assess Context Quality",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.87023,
      "updated_at": 1754957550.87023
    },
    "concept_335": {
      "id": "concept_335",
      "type": "concept",
      "name": "Import and use enhanced context tools",
      "description": "Concept: Import and use enhanced context tools",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.8702981,
      "updated_at": 1754957550.8702981
    },
    "concept_336": {
      "id": "concept_336",
      "type": "concept",
      "name": "python\n# Simple context enhancement\nresult = await enhanced_context_retrieval(\n    user_message=\"Help me with my project\",\n    include_history=True,\n    include_preferences=True\n)",
      "description": "Concept: python\n# Simple context enhancement\nresult = await enhanced_context_retrieval(\n    user_message=\"Help me with my project\",\n    include_history=True,\n    include_preferences=True\n)",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.870385,
      "updated_at": 1754957550.870385
    },
    "concept_337": {
      "id": "concept_337",
      "type": "concept",
      "name": "Workflow Performance",
      "description": "Concept: Workflow Performance",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.8704572,
      "updated_at": 1754957550.8704572
    },
    "concept_338": {
      "id": "concept_338",
      "type": "concept",
      "name": "Analyze Tool Performance",
      "description": "Concept: Analyze Tool Performance",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.870593,
      "updated_at": 1754957550.870593
    },
    "concept_339": {
      "id": "concept_339",
      "type": "concept",
      "name": ": Phase 1 implementation\n-",
      "description": "Concept: : Phase 1 implementation\n-",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.8707762,
      "updated_at": 1754957550.8707762
    },
    "concept_340": {
      "id": "concept_340",
      "type": "concept",
      "name": ": Phase 2 implementation\n-",
      "description": "Concept: : Phase 2 implementation\n-",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.870948,
      "updated_at": 1754957550.870948
    },
    "concept_341": {
      "id": "concept_341",
      "type": "concept",
      "name": "python\n# Execute complete workflow\nresult = await execute_enhanced_workflow(\n    user_message=\"Provide detailed analysis of our system\",\n    workflow_mode=\"aggressive\",\n    include_learning=True\n)",
      "description": "Concept: python\n# Execute complete workflow\nresult = await execute_enhanced_workflow(\n    user_message=\"Provide detailed analysis of our system\",\n    workflow_mode=\"aggressive\",\n    include_learning=True\n)",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.871074,
      "updated_at": 1754957550.871074
    },
    "concept_342": {
      "id": "concept_342",
      "type": "concept",
      "name": ": Tool performance analysis\n-",
      "description": "Concept: : Tool performance analysis\n-",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.871179,
      "updated_at": 1754957550.871179
    },
    "concept_343": {
      "id": "concept_343",
      "type": "concept",
      "name": "`_analyze_tool_performance_handler()`: Tool performance analysis",
      "description": "Concept: `_analyze_tool_performance_handler()`: Tool performance analysis",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.871257,
      "updated_at": 1754957550.871257
    },
    "concept_344": {
      "id": "concept_344",
      "type": "concept",
      "name": "\ud83d\udcda API Reference",
      "description": "Concept: \ud83d\udcda API Reference",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.8713531,
      "updated_at": 1754957550.8713531
    },
    "concept_345": {
      "id": "concept_345",
      "type": "concept",
      "name": "Comprehensive Context Building",
      "description": "Concept: Comprehensive Context Building",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md",
          "demo_enhanced_context_system.py"
        ]
      },
      "created_at": 1754957550.871423,
      "updated_at": 1754957551.660825
    },
    "concept_346": {
      "id": "concept_346",
      "type": "concept",
      "name": "**Memory Consolidation**: Consolidates new information with existing memories",
      "description": "Concept: **Memory Consolidation**: Consolidates new information with existing memories",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.8714979,
      "updated_at": 1754957550.8714979
    },
    "concept_347": {
      "id": "concept_347",
      "type": "concept",
      "name": "**Batch Processing**: Handles multiple messages efficiently",
      "description": "Concept: **Batch Processing**: Handles multiple messages efficiently",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.8715708,
      "updated_at": 1754957550.8715708
    },
    "concept_348": {
      "id": "concept_348",
      "type": "concept",
      "name": "`enhanced_workflow_orchestrator.py`",
      "description": "Concept: `enhanced_workflow_orchestrator.py`",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.871644,
      "updated_at": 1754957550.871644
    },
    "concept_349": {
      "id": "concept_349",
      "type": "concept",
      "name": "**Health Monitoring**: Comprehensive system health checks",
      "description": "Concept: **Health Monitoring**: Comprehensive system health checks",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.871726,
      "updated_at": 1754957550.871726
    },
    "concept_350": {
      "id": "concept_350",
      "type": "concept",
      "name": "**Multi-Modal Context**: Support for images, audio, and video context",
      "description": "Concept: **Multi-Modal Context**: Support for images, audio, and video context",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.871806,
      "updated_at": 1754957550.871806
    },
    "concept_351": {
      "id": "concept_351",
      "type": "concept",
      "name": "python\n# Import and use enhanced context tools\nfrom plugins.enhanced_context_integration import EnhancedContextIntegrationPlugin\n\nplugin = EnhancedContextIntegrationPlugin()\nplugin._setup()\n\n# Use any of the enhanced context tools\nresult = await plugin._enhanced_context_retrieval_handler(\"Your message\")",
      "description": "Concept: python\n# Import and use enhanced context tools\nfrom plugins.enhanced_context_integration import EnhancedContextIntegrationPlugin\n\nplugin = EnhancedContextIntegrationPlugin()\nplugin._setup()\n\n# Use any of the enhanced context tools\nresult = await plugin._enhanced_context_retrieval_handler(\"Your message\")",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.8719091,
      "updated_at": 1754957550.8719091
    },
    "concept_352": {
      "id": "concept_352",
      "type": "concept",
      "name": "Automatic goal determination based on message content",
      "description": "Concept: Automatic goal determination based on message content",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.871985,
      "updated_at": 1754957550.871985
    },
    "concept_353": {
      "id": "concept_353",
      "type": "concept",
      "name": "Intensive learning and pattern recognition",
      "description": "Concept: Intensive learning and pattern recognition",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.872056,
      "updated_at": 1754957550.872056
    },
    "concept_354": {
      "id": "concept_354",
      "type": "concept",
      "name": "Performance metrics",
      "description": "Concept: Performance metrics",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md",
          "demo_project_scanner.py"
        ]
      },
      "created_at": 1754957550.872129,
      "updated_at": 1754957551.716863
    },
    "concept_355": {
      "id": "concept_355",
      "type": "concept",
      "name": "Health Check",
      "description": "Concept: Health Check",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.8721979,
      "updated_at": 1754957550.8721979
    },
    "concept_356": {
      "id": "concept_356",
      "type": "concept",
      "name": "## \ud83d\udcc8 Performance Metrics\n\n### Context Quality Scores\n\n- **Completeness**: How complete the context is (0.0 - 1.0)\n- **Relevance**: How relevant the context is to the request (0.0 - 1.0)\n- **Freshness**: How recent the context data is (0.0 - 1.0)\n- **Overall Score**: Weighted combination of all metrics\n\n### Workflow Performance\n\n- **Efficiency Score**: Success rate of workflow phases\n- **Speed Score**: Execution speed optimization\n- **Context Quality Improvement**: Measured improvement in context quality\n- **Overall Performance Score**: Combined performance metric\n\n## \ud83d\udd0d Monitoring & Debugging\n\n### Logging\n\nAll enhanced context operations include comprehensive logging:\n\n- Phase execution details\n- Performance metrics\n- Error tracking\n- Success/failure rates\n\n### Health Checks\n\nRegular health checks provide system status:\n\n- Component availability\n- Performance trends\n- Error patterns\n- Maintenance recommendations\n\n### Performance Analysis\n\nContinuous performance monitoring:\n\n- Workflow execution times\n- Tool usage patterns\n- Bottleneck identification\n- Optimization opportunities\n\n## \ud83c\udfaf Best Practices\n\n### 1. Workflow Mode Selection\n\n- **Standard**: Use for most interactions\n- **Aggressive**: Use for deep analysis requests\n- **Conservative**: Use for quick responses\n\n### 2. Learning Integration\n\n- Enable learning for complex interactions\n- Disable learning for batch processing\n- Monitor learning patterns for optimization\n\n### 3. Performance Monitoring\n\n- Regular performance analysis\n- Health check monitoring\n- Bottleneck identification\n- Continuous optimization\n\n### 4. Error Handling\n\n- Graceful degradation on failures\n- Comprehensive error logging\n- Automatic retry mechanisms\n- User-friendly error messages\n\n## \ud83d\ude80 Future Enhancements\n\n### Planned Features\n\n- **Real-time Context Streaming**: Continuous context updates\n- **Advanced Pattern Recognition**: Machine learning-based pattern detection\n- **Context Prediction**: Predictive context building\n- **Distributed Context Processing**: Multi-node context enhancement\n- **Advanced Analytics**: Deep learning-based performance optimization\n\n### Integration Opportunities\n\n- **External Data Sources**: Integration with external APIs and databases\n- **Multi-Modal Context**: Support for images, audio, and video context\n- **Collaborative Context**: Shared context across multiple users\n- **Context Versioning**: Version control for context data\n\n## \ud83d\udcda API Reference\n\n### Enhanced Context Integration Plugin\n\n-",
      "description": "Concept: ## \ud83d\udcc8 Performance Metrics\n\n### Context Quality Scores\n\n- **Completeness**: How complete the context is (0.0 - 1.0)\n- **Relevance**: How relevant the context is to the request (0.0 - 1.0)\n- **Freshness**: How recent the context data is (0.0 - 1.0)\n- **Overall Score**: Weighted combination of all metrics\n\n### Workflow Performance\n\n- **Efficiency Score**: Success rate of workflow phases\n- **Speed Score**: Execution speed optimization\n- **Context Quality Improvement**: Measured improvement in context quality\n- **Overall Performance Score**: Combined performance metric\n\n## \ud83d\udd0d Monitoring & Debugging\n\n### Logging\n\nAll enhanced context operations include comprehensive logging:\n\n- Phase execution details\n- Performance metrics\n- Error tracking\n- Success/failure rates\n\n### Health Checks\n\nRegular health checks provide system status:\n\n- Component availability\n- Performance trends\n- Error patterns\n- Maintenance recommendations\n\n### Performance Analysis\n\nContinuous performance monitoring:\n\n- Workflow execution times\n- Tool usage patterns\n- Bottleneck identification\n- Optimization opportunities\n\n## \ud83c\udfaf Best Practices\n\n### 1. Workflow Mode Selection\n\n- **Standard**: Use for most interactions\n- **Aggressive**: Use for deep analysis requests\n- **Conservative**: Use for quick responses\n\n### 2. Learning Integration\n\n- Enable learning for complex interactions\n- Disable learning for batch processing\n- Monitor learning patterns for optimization\n\n### 3. Performance Monitoring\n\n- Regular performance analysis\n- Health check monitoring\n- Bottleneck identification\n- Continuous optimization\n\n### 4. Error Handling\n\n- Graceful degradation on failures\n- Comprehensive error logging\n- Automatic retry mechanisms\n- User-friendly error messages\n\n## \ud83d\ude80 Future Enhancements\n\n### Planned Features\n\n- **Real-time Context Streaming**: Continuous context updates\n- **Advanced Pattern Recognition**: Machine learning-based pattern detection\n- **Context Prediction**: Predictive context building\n- **Distributed Context Processing**: Multi-node context enhancement\n- **Advanced Analytics**: Deep learning-based performance optimization\n\n### Integration Opportunities\n\n- **External Data Sources**: Integration with external APIs and databases\n- **Multi-Modal Context**: Support for images, audio, and video context\n- **Collaborative Context**: Shared context across multiple users\n- **Context Versioning**: Version control for context data\n\n## \ud83d\udcda API Reference\n\n### Enhanced Context Integration Plugin\n\n-",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.874905,
      "updated_at": 1754957550.874905
    },
    "concept_357": {
      "id": "concept_357",
      "type": "concept",
      "name": "**Context Analysis**: Analyzes context to determine tool needs",
      "description": "Concept: **Context Analysis**: Analyzes context to determine tool needs",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.875005,
      "updated_at": 1754957550.875005
    },
    "concept_358": {
      "id": "concept_358",
      "type": "concept",
      "name": "Error patterns",
      "description": "Concept: Error patterns",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.875081,
      "updated_at": 1754957550.875081
    },
    "concept_359": {
      "id": "concept_359",
      "type": "concept",
      "name": "**Collaborative Context**: Shared context across multiple users",
      "description": "Concept: **Collaborative Context**: Shared context across multiple users",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.8751628,
      "updated_at": 1754957550.8751628
    },
    "concept_360": {
      "id": "concept_360",
      "type": "concept",
      "name": "**Aggressive**: Use for deep analysis requests",
      "description": "Concept: **Aggressive**: Use for deep analysis requests",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.875243,
      "updated_at": 1754957550.875243
    },
    "concept_361": {
      "id": "concept_361",
      "type": "concept",
      "name": "`_assess_context_quality_handler()`: Context quality assessment",
      "description": "Concept: `_assess_context_quality_handler()`: Context quality assessment",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.875324,
      "updated_at": 1754957550.875324
    },
    "concept_362": {
      "id": "concept_362",
      "type": "concept",
      "name": ": Phase 3 implementation\n-",
      "description": "Concept: : Phase 3 implementation\n-",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.8754308,
      "updated_at": 1754957550.8754308
    },
    "concept_363": {
      "id": "concept_363",
      "type": "concept",
      "name": "### Complete Workflow Execution",
      "description": "Concept: ### Complete Workflow Execution",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.8755531,
      "updated_at": 1754957550.8755531
    },
    "concept_364": {
      "id": "concept_364",
      "type": "concept",
      "name": "## \ud83c\udfd7\ufe0f Comprehensive Context Building\n\n### Purpose\n\nBuilds comprehensive context using all available tools and data, providing the highest level of context awareness and quality.\n\n### Features\n\n- **Multi-Phase Integration**: Combines all three phases for maximum context\n- **Quality Scoring**: Provides overall context quality scores\n- **Context Caching**: Caches comprehensive context for reuse\n- **Depth Control**: Configurable context depth (basic, enhanced, comprehensive)\n\n### Implementation",
      "description": "Concept: ## \ud83c\udfd7\ufe0f Comprehensive Context Building\n\n### Purpose\n\nBuilds comprehensive context using all available tools and data, providing the highest level of context awareness and quality.\n\n### Features\n\n- **Multi-Phase Integration**: Combines all three phases for maximum context\n- **Quality Scoring**: Provides overall context quality scores\n- **Context Caching**: Caches comprehensive context for reuse\n- **Depth Control**: Configurable context depth (basic, enhanced, comprehensive)\n\n### Implementation",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.8762372,
      "updated_at": 1754957550.8762372
    },
    "concept_365": {
      "id": "concept_365",
      "type": "concept",
      "name": ": Comprehensive context building\n-",
      "description": "Concept: : Comprehensive context building\n-",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.8763258,
      "updated_at": 1754957550.8763258
    },
    "concept_366": {
      "id": "concept_366",
      "type": "concept",
      "name": "\ud83c\udfaf System Architecture",
      "description": "Concept: \ud83c\udfaf System Architecture",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.876431,
      "updated_at": 1754957550.876431
    },
    "concept_367": {
      "id": "concept_367",
      "type": "concept",
      "name": "\ud83c\udfaf Best Practices",
      "description": "Concept: \ud83c\udfaf Best Practices",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md",
          "PROJECT_ORGANIZATION.md"
        ]
      },
      "created_at": 1754957550.876531,
      "updated_at": 1754957551.10511
    },
    "concept_368": {
      "id": "concept_368",
      "type": "concept",
      "name": "**Relevance**: How relevant the context is to the request (0.0 - 1.0)",
      "description": "Concept: **Relevance**: How relevant the context is to the request (0.0 - 1.0)",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.876622,
      "updated_at": 1754957550.876622
    },
    "concept_369": {
      "id": "concept_369",
      "type": "concept",
      "name": "**Tool Coordination**: Coordinates tool usage for maximum effectiveness",
      "description": "Concept: **Tool Coordination**: Coordinates tool usage for maximum effectiveness",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.8767092,
      "updated_at": 1754957550.8767092
    },
    "concept_370": {
      "id": "concept_370",
      "type": "concept",
      "name": "4. Demonstration",
      "description": "Concept: 4. Demonstration",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.876791,
      "updated_at": 1754957550.876791
    },
    "concept_371": {
      "id": "concept_371",
      "type": "concept",
      "name": "\ud83d\ude80 Future Enhancements",
      "description": "Concept: \ud83d\ude80 Future Enhancements",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.87692,
      "updated_at": 1754957550.87692
    },
    "concept_372": {
      "id": "concept_372",
      "type": "concept",
      "name": "**Basic**: Essential component status checks",
      "description": "Concept: **Basic**: Essential component status checks",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.877016,
      "updated_at": 1754957550.877016
    },
    "concept_373": {
      "id": "concept_373",
      "type": "concept",
      "name": "Maximum context enhancement and tool usage",
      "description": "Concept: Maximum context enhancement and tool usage",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.87715,
      "updated_at": 1754957550.87715
    },
    "concept_374": {
      "id": "concept_374",
      "type": "concept",
      "name": "## \ud83d\udcda Phase 3: Continuous Learning\n\n### Purpose\n\nImplements continuous learning and context improvement, extracting patterns, identifying improvements, and consolidating memories for future enhancement.\n\n### Features\n\n- **Pattern Recognition**: Identifies learning patterns from interactions\n- **Context Improvement**: Identifies areas for context enhancement\n- **Memory Consolidation**: Consolidates new information with existing memories\n- **Quality Metrics Update**: Updates context quality metrics based on learning\n- **Learning Storage**: Stores learning results for future reference\n\n### Implementation",
      "description": "Concept: ## \ud83d\udcda Phase 3: Continuous Learning\n\n### Purpose\n\nImplements continuous learning and context improvement, extracting patterns, identifying improvements, and consolidating memories for future enhancement.\n\n### Features\n\n- **Pattern Recognition**: Identifies learning patterns from interactions\n- **Context Improvement**: Identifies areas for context enhancement\n- **Memory Consolidation**: Consolidates new information with existing memories\n- **Quality Metrics Update**: Updates context quality metrics based on learning\n- **Learning Storage**: Stores learning results for future reference\n\n### Implementation",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.877933,
      "updated_at": 1754957550.877933
    },
    "concept_375": {
      "id": "concept_375",
      "type": "concept",
      "name": "### Comprehensive Context Building",
      "description": "Concept: ### Comprehensive Context Building",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.87803,
      "updated_at": 1754957550.87803
    },
    "concept_376": {
      "id": "concept_376",
      "type": "concept",
      "name": "**Learning Storage**: Stores learning results for future reference",
      "description": "Concept: **Learning Storage**: Stores learning results for future reference",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.878209,
      "updated_at": 1754957550.878209
    },
    "concept_377": {
      "id": "concept_377",
      "type": "concept",
      "name": "**Maintenance Recommendations**: Provides actionable maintenance advice",
      "description": "Concept: **Maintenance Recommendations**: Provides actionable maintenance advice",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.878308,
      "updated_at": 1754957550.878308
    },
    "concept_378": {
      "id": "concept_378",
      "type": "concept",
      "name": "**Overall Score**: Weighted combination of all metrics",
      "description": "Concept: **Overall Score**: Weighted combination of all metrics",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.8783948,
      "updated_at": 1754957550.8783948
    },
    "concept_379": {
      "id": "concept_379",
      "type": "concept",
      "name": "Direct plugin usage",
      "description": "Concept: Direct plugin usage",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.878477,
      "updated_at": 1754957550.878477
    },
    "concept_380": {
      "id": "concept_380",
      "type": "concept",
      "name": "Overview",
      "description": "Concept: Overview",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md",
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957550.878557,
      "updated_at": 1754957551.4191418
    },
    "concept_381": {
      "id": "concept_381",
      "type": "concept",
      "name": "**Pattern Recognition**: Identifies learning patterns from interactions",
      "description": "Concept: **Pattern Recognition**: Identifies learning patterns from interactions",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.878645,
      "updated_at": 1754957550.878645
    },
    "concept_382": {
      "id": "concept_382",
      "type": "concept",
      "name": "Bottleneck identification",
      "description": "Concept: Bottleneck identification",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.878748,
      "updated_at": 1754957550.878748
    },
    "concept_383": {
      "id": "concept_383",
      "type": "concept",
      "name": "Aggressive Mode",
      "description": "Concept: Aggressive Mode",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.8788302,
      "updated_at": 1754957550.8788302
    },
    "concept_384": {
      "id": "concept_384",
      "type": "concept",
      "name": "Minimal context enhancement for speed",
      "description": "Concept: Minimal context enhancement for speed",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.878919,
      "updated_at": 1754957550.878919
    },
    "concept_385": {
      "id": "concept_385",
      "type": "concept",
      "name": "## \ud83d\udd27 Workflow Modes\n\n### Standard Mode\n\n- Balanced approach between speed and context quality\n- Automatic goal determination based on message content\n- Standard learning and optimization\n\n### Aggressive Mode\n\n- Maximum context enhancement and tool usage\n- Prioritizes comprehensive context over speed\n- Intensive learning and pattern recognition\n\n### Conservative Mode\n\n- Minimal context enhancement for speed\n- Reduced tool usage and learning\n- Focus on essential context only\n\n## \ud83d\udce6 Batch Processing\n\n### Purpose\n\nProcesses multiple messages through the enhanced workflow efficiently, providing bulk context enhancement capabilities.\n\n### Features\n\n- **Efficient Processing**: Optimized for handling multiple requests\n- **Performance Metrics**: Batch-level performance tracking\n- **Error Handling**: Graceful handling of individual message failures\n- **Scalability**: Designed for high-volume processing\n\n### Implementation",
      "description": "Concept: ## \ud83d\udd27 Workflow Modes\n\n### Standard Mode\n\n- Balanced approach between speed and context quality\n- Automatic goal determination based on message content\n- Standard learning and optimization\n\n### Aggressive Mode\n\n- Maximum context enhancement and tool usage\n- Prioritizes comprehensive context over speed\n- Intensive learning and pattern recognition\n\n### Conservative Mode\n\n- Minimal context enhancement for speed\n- Reduced tool usage and learning\n- Focus on essential context only\n\n## \ud83d\udce6 Batch Processing\n\n### Purpose\n\nProcesses multiple messages through the enhanced workflow efficiently, providing bulk context enhancement capabilities.\n\n### Features\n\n- **Efficient Processing**: Optimized for handling multiple requests\n- **Performance Metrics**: Batch-level performance tracking\n- **Error Handling**: Graceful handling of individual message failures\n- **Scalability**: Designed for high-volume processing\n\n### Implementation",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.880199,
      "updated_at": 1754957550.880199
    },
    "concept_386": {
      "id": "concept_386",
      "type": "concept",
      "name": "**User Preferences Integration**: Incorporates stored user preferences and settings",
      "description": "Concept: **User Preferences Integration**: Incorporates stored user preferences and settings",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.880301,
      "updated_at": 1754957550.880301
    },
    "concept_387": {
      "id": "concept_387",
      "type": "concept",
      "name": "**Error Handling**: Graceful handling of individual message failures",
      "description": "Concept: **Error Handling**: Graceful handling of individual message failures",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.880394,
      "updated_at": 1754957550.880394
    },
    "concept_388": {
      "id": "concept_388",
      "type": "concept",
      "name": "**Brain System Context**: Leverages brain functions and cognitive capabilities",
      "description": "Concept: **Brain System Context**: Leverages brain functions and cognitive capabilities",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.8804858,
      "updated_at": 1754957550.8804858
    },
    "concept_389": {
      "id": "concept_389",
      "type": "concept",
      "name": "**Context Quality Metrics**: Real-time assessment of context completeness and relevance",
      "description": "Concept: **Context Quality Metrics**: Real-time assessment of context completeness and relevance",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.8805811,
      "updated_at": 1754957550.8805811
    },
    "concept_390": {
      "id": "concept_390",
      "type": "concept",
      "name": "### Batch Processing",
      "description": "Concept: ### Batch Processing",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.880671,
      "updated_at": 1754957550.880671
    },
    "concept_391": {
      "id": "concept_391",
      "type": "concept",
      "name": "Features",
      "description": "Concept: Features",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md",
          "README.md"
        ]
      },
      "created_at": 1754957550.880756,
      "updated_at": 1754957551.139889
    },
    "concept_392": {
      "id": "concept_392",
      "type": "concept",
      "name": "3. Basic Usage",
      "description": "Concept: 3. Basic Usage",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.880841,
      "updated_at": 1754957550.880841
    },
    "concept_393": {
      "id": "concept_393",
      "type": "concept",
      "name": "## \ud83d\ude80 Complete Workflow Orchestration\n\n### Purpose\n\nAutomatically executes all three phases in sequence, providing a unified interface for comprehensive context enhancement with performance monitoring and optimization.\n\n### Features\n\n- **Automatic Phase Execution**: Runs all phases automatically in sequence\n- **Performance Monitoring**: Tracks execution time and success rates\n- **Workflow Optimization**: Identifies and implements improvements\n- **Batch Processing**: Handles multiple messages efficiently\n- **Health Monitoring**: Comprehensive system health checks\n\n### Implementation",
      "description": "Concept: ## \ud83d\ude80 Complete Workflow Orchestration\n\n### Purpose\n\nAutomatically executes all three phases in sequence, providing a unified interface for comprehensive context enhancement with performance monitoring and optimization.\n\n### Features\n\n- **Automatic Phase Execution**: Runs all phases automatically in sequence\n- **Performance Monitoring**: Tracks execution time and success rates\n- **Workflow Optimization**: Identifies and implements improvements\n- **Batch Processing**: Handles multiple messages efficiently\n- **Health Monitoring**: Comprehensive system health checks\n\n### Implementation",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.881608,
      "updated_at": 1754957550.881608
    },
    "concept_394": {
      "id": "concept_394",
      "type": "concept",
      "name": "**Context Prediction**: Predictive context building",
      "description": "Concept: **Context Prediction**: Predictive context building",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.8818119,
      "updated_at": 1754957550.8818119
    },
    "concept_395": {
      "id": "concept_395",
      "type": "concept",
      "name": "**Freshness**: How recent the context data is (0.0 - 1.0)",
      "description": "Concept: **Freshness**: How recent the context data is (0.0 - 1.0)",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.8819149,
      "updated_at": 1754957550.8819149
    },
    "concept_396": {
      "id": "concept_396",
      "type": "concept",
      "name": "**External Data Sources**: Integration with external APIs and databases",
      "description": "Concept: **External Data Sources**: Integration with external APIs and databases",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.882014,
      "updated_at": 1754957550.882014
    },
    "concept_397": {
      "id": "concept_397",
      "type": "concept",
      "name": "Core Components",
      "description": "Concept: Core Components",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.882105,
      "updated_at": 1754957550.882105
    },
    "concept_398": {
      "id": "concept_398",
      "type": "concept",
      "name": ": Workflow optimization\n-",
      "description": "Concept: : Workflow optimization\n-",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.882197,
      "updated_at": 1754957550.882198
    },
    "concept_399": {
      "id": "concept_399",
      "type": "concept",
      "name": "Focus on essential context only",
      "description": "Concept: Focus on essential context only",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.882292,
      "updated_at": 1754957550.882292
    },
    "concept_400": {
      "id": "concept_400",
      "type": "concept",
      "name": "Health Levels",
      "description": "Concept: Health Levels",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.88239,
      "updated_at": 1754957550.88239
    },
    "concept_401": {
      "id": "concept_401",
      "type": "concept",
      "name": "**Execution Planning**: Creates prioritized execution plans",
      "description": "Concept: **Execution Planning**: Creates prioritized execution plans",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.882486,
      "updated_at": 1754957550.882486
    },
    "concept_402": {
      "id": "concept_402",
      "type": "concept",
      "name": "**Context Quality Improvement**: Measured improvement in context quality",
      "description": "Concept: **Context Quality Improvement**: Measured improvement in context quality",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.882582,
      "updated_at": 1754957550.882582
    },
    "concept_403": {
      "id": "concept_403",
      "type": "concept",
      "name": "Batch processing",
      "description": "Concept: Batch processing",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md",
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957550.882672,
      "updated_at": 1754957550.9834712
    },
    "concept_404": {
      "id": "concept_404",
      "type": "concept",
      "name": "python\n# Comprehensive context building\nresult = await plugin._build_comprehensive_context_handler(\n    user_message=\"Analyze system performance\",\n    context_depth=\"comprehensive\"\n)",
      "description": "Concept: python\n# Comprehensive context building\nresult = await plugin._build_comprehensive_context_handler(\n    user_message=\"Analyze system performance\",\n    context_depth=\"comprehensive\"\n)",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.882795,
      "updated_at": 1754957550.882795
    },
    "concept_405": {
      "id": "concept_405",
      "type": "concept",
      "name": "**Completeness**: How complete the context is (0.0 - 1.0)",
      "description": "Concept: **Completeness**: How complete the context is (0.0 - 1.0)",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.8829389,
      "updated_at": 1754957550.8829389
    },
    "concept_406": {
      "id": "concept_406",
      "type": "concept",
      "name": "Context Quality Scores",
      "description": "Concept: Context Quality Scores",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.883049,
      "updated_at": 1754957550.883049
    },
    "concept_407": {
      "id": "concept_407",
      "type": "concept",
      "name": "python\n# Build comprehensive context\nresult = await build_comprehensive_context(\n    user_message=\"Analyze system performance comprehensively\",\n    context_depth=\"comprehensive\"\n)",
      "description": "Concept: python\n# Build comprehensive context\nresult = await build_comprehensive_context(\n    user_message=\"Analyze system performance comprehensively\",\n    context_depth=\"comprehensive\"\n)",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.883163,
      "updated_at": 1754957550.883163
    },
    "concept_408": {
      "id": "concept_408",
      "type": "concept",
      "name": "\ud83d\ude80 Complete Workflow Orchestration",
      "description": "Concept: \ud83d\ude80 Complete Workflow Orchestration",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.883292,
      "updated_at": 1754957550.883292
    },
    "concept_409": {
      "id": "concept_409",
      "type": "concept",
      "name": "Execute complete workflow",
      "description": "Concept: Execute complete workflow",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.883381,
      "updated_at": 1754957550.883381
    },
    "concept_410": {
      "id": "concept_410",
      "type": "concept",
      "name": "`enhanced_context_integration.py`",
      "description": "Concept: `enhanced_context_integration.py`",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.883472,
      "updated_at": 1754957550.883472
    },
    "concept_411": {
      "id": "concept_411",
      "type": "concept",
      "name": "**Workflow Optimization**: Identifies and implements improvements",
      "description": "Concept: **Workflow Optimization**: Identifies and implements improvements",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.883567,
      "updated_at": 1754957550.883567
    },
    "concept_412": {
      "id": "concept_412",
      "type": "concept",
      "name": "Standard Mode",
      "description": "Concept: Standard Mode",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.8836548,
      "updated_at": 1754957550.8836548
    },
    "concept_413": {
      "id": "concept_413",
      "type": "concept",
      "name": "**Real-time Context Streaming**: Continuous context updates",
      "description": "Concept: **Real-time Context Streaming**: Continuous context updates",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.883778,
      "updated_at": 1754957550.883779
    },
    "concept_414": {
      "id": "concept_414",
      "type": "concept",
      "name": "**Advanced Analytics**: Deep learning-based performance optimization",
      "description": "Concept: **Advanced Analytics**: Deep learning-based performance optimization",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.883884,
      "updated_at": 1754957550.883884
    },
    "concept_415": {
      "id": "concept_415",
      "type": "concept",
      "name": "**Performance Degradation Detection**: Identifies performance issues",
      "description": "Concept: **Performance Degradation Detection**: Identifies performance issues",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.884,
      "updated_at": 1754957550.884001
    },
    "concept_416": {
      "id": "concept_416",
      "type": "concept",
      "name": "Continuous optimization",
      "description": "Concept: Continuous optimization",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.884115,
      "updated_at": 1754957550.884115
    },
    "concept_417": {
      "id": "concept_417",
      "type": "concept",
      "name": "python\n# Process multiple messages\nmessages = [\n    \"Analyze performance\",\n    \"Check security\",\n    \"Review logs\"\n]\n\nresult = await batch_workflow_processing(\n    user_messages=messages,\n    workflow_mode=\"standard\"\n)",
      "description": "Concept: python\n# Process multiple messages\nmessages = [\n    \"Analyze performance\",\n    \"Check security\",\n    \"Review logs\"\n]\n\nresult = await batch_workflow_processing(\n    user_messages=messages,\n    workflow_mode=\"standard\"\n)",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.8842618,
      "updated_at": 1754957550.8842618
    },
    "concept_418": {
      "id": "concept_418",
      "type": "concept",
      "name": ": Batch processing\n-",
      "description": "Concept: : Batch processing\n-",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.8843598,
      "updated_at": 1754957550.8843598
    },
    "concept_419": {
      "id": "concept_419",
      "type": "concept",
      "name": "**Multi-Phase Integration**: Combines all three phases for maximum context",
      "description": "Concept: **Multi-Phase Integration**: Combines all three phases for maximum context",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.884462,
      "updated_at": 1754957550.884463
    },
    "concept_420": {
      "id": "concept_420",
      "type": "concept",
      "name": "**Standard**: Use for most interactions",
      "description": "Concept: **Standard**: Use for most interactions",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.884556,
      "updated_at": 1754957550.884556
    },
    "concept_421": {
      "id": "concept_421",
      "type": "concept",
      "name": "MCP Tools",
      "description": "Concept: MCP Tools",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.884657,
      "updated_at": 1754957550.884657
    },
    "concept_422": {
      "id": "concept_422",
      "type": "concept",
      "name": "**Overall Performance Score**: Combined performance metric",
      "description": "Concept: **Overall Performance Score**: Combined performance metric",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.8847558,
      "updated_at": 1754957550.8847558
    },
    "concept_423": {
      "id": "concept_423",
      "type": "concept",
      "name": "**Tool Performance Analysis**: Analyzes individual tool performance",
      "description": "Concept: **Tool Performance Analysis**: Analyzes individual tool performance",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.884898,
      "updated_at": 1754957550.884898
    },
    "concept_424": {
      "id": "concept_424",
      "type": "concept",
      "name": "Continuous Learning Cycle",
      "description": "Concept: Continuous Learning Cycle",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md",
          "demo_restructured_cognitive_system.py"
        ]
      },
      "created_at": 1754957550.885078,
      "updated_at": 1754957551.75372
    },
    "concept_425": {
      "id": "concept_425",
      "type": "concept",
      "name": "bash\n# Tool Orchestration\norchestrate_tools(\n    context_data: dict,\n    target_goal: str = \"enhanced_response\"\n) -> dict",
      "description": "Concept: bash\n# Tool Orchestration\norchestrate_tools(\n    context_data: dict,\n    target_goal: str = \"enhanced_response\"\n) -> dict",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.8852448,
      "updated_at": 1754957550.8852448
    },
    "concept_426": {
      "id": "concept_426",
      "type": "concept",
      "name": "python\n# Batch processing\nmessages = [\n    \"Analyze system performance\",\n    \"Check memory usage\",\n    \"Review error logs\"\n]\n\nresult = await orchestrator._batch_workflow_processing_handler(\n    messages,\n    workflow_mode=\"standard\"\n)",
      "description": "Concept: python\n# Batch processing\nmessages = [\n    \"Analyze system performance\",\n    \"Check memory usage\",\n    \"Review error logs\"\n]\n\nresult = await orchestrator._batch_workflow_processing_handler(\n    messages,\n    workflow_mode=\"standard\"\n)",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.8855228,
      "updated_at": 1754957550.8855228
    },
    "concept_427": {
      "id": "concept_427",
      "type": "concept",
      "name": ": Performance analysis\n-",
      "description": "Concept: : Performance analysis\n-",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.8857138,
      "updated_at": 1754957550.8857138
    },
    "concept_428": {
      "id": "concept_428",
      "type": "concept",
      "name": "Error tracking",
      "description": "Concept: Error tracking",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.885849,
      "updated_at": 1754957550.885849
    },
    "concept_429": {
      "id": "concept_429",
      "type": "concept",
      "name": "Workflow execution times",
      "description": "Concept: Workflow execution times",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.885953,
      "updated_at": 1754957550.885953
    },
    "concept_430": {
      "id": "concept_430",
      "type": "concept",
      "name": "`_continuous_learning_handler()`: Phase 3 implementation",
      "description": "Concept: `_continuous_learning_handler()`: Phase 3 implementation",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.8860538,
      "updated_at": 1754957550.8860538
    },
    "concept_431": {
      "id": "concept_431",
      "type": "concept",
      "name": "Reduced tool usage and learning",
      "description": "Concept: Reduced tool usage and learning",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.8862379,
      "updated_at": 1754957550.8862379
    },
    "concept_432": {
      "id": "concept_432",
      "type": "concept",
      "name": "2. Learning Integration",
      "description": "Concept: 2. Learning Integration",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.8863401,
      "updated_at": 1754957550.8863401
    },
    "concept_433": {
      "id": "concept_433",
      "type": "concept",
      "name": "Tool usage patterns",
      "description": "Concept: Tool usage patterns",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.886441,
      "updated_at": 1754957550.886441
    },
    "concept_434": {
      "id": "concept_434",
      "type": "concept",
      "name": "bash\n# Execute Complete Enhanced Workflow\nexecute_enhanced_workflow(\n    user_message: str,\n    workflow_mode: str = \"standard\",\n    include_learning: bool = True\n) -> dict\n\n# Workflow Optimization\noptimize_workflow(\n    optimization_focus: str = \"performance\",\n    target_metrics: list = [\"speed\", \"accuracy\", \"context_quality\"]\n) -> dict\n\n# Performance Analysis\nanalyze_workflow_performance(\n    timeframe: str = \"session\",\n    include_recommendations: bool = True\n) -> dict\n\n# Batch Processing\nbatch_workflow_processing(\n    user_messages: list,\n    workflow_mode: str = \"standard\"\n) -> dict\n\n# Health Check\nworkflow_health_check(\n    check_level: str = \"comprehensive\"\n) -> dict",
      "description": "Concept: bash\n# Execute Complete Enhanced Workflow\nexecute_enhanced_workflow(\n    user_message: str,\n    workflow_mode: str = \"standard\",\n    include_learning: bool = True\n) -> dict\n\n# Workflow Optimization\noptimize_workflow(\n    optimization_focus: str = \"performance\",\n    target_metrics: list = [\"speed\", \"accuracy\", \"context_quality\"]\n) -> dict\n\n# Performance Analysis\nanalyze_workflow_performance(\n    timeframe: str = \"session\",\n    include_recommendations: bool = True\n) -> dict\n\n# Batch Processing\nbatch_workflow_processing(\n    user_messages: list,\n    workflow_mode: str = \"standard\"\n) -> dict\n\n# Health Check\nworkflow_health_check(\n    check_level: str = \"comprehensive\"\n) -> dict",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.886643,
      "updated_at": 1754957550.886643
    },
    "concept_435": {
      "id": "concept_435",
      "type": "concept",
      "name": "Comprehensive error logging",
      "description": "Concept: Comprehensive error logging",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.886742,
      "updated_at": 1754957550.886742
    },
    "concept_436": {
      "id": "concept_436",
      "type": "concept",
      "name": "**Comprehensive**: Detailed health analysis with recommendations",
      "description": "Concept: **Comprehensive**: Detailed health analysis with recommendations",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.8868449,
      "updated_at": 1754957550.8868449
    },
    "concept_437": {
      "id": "concept_437",
      "type": "concept",
      "name": "`_execute_enhanced_workflow_handler()`: Complete workflow execution",
      "description": "Concept: `_execute_enhanced_workflow_handler()`: Complete workflow execution",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.886955,
      "updated_at": 1754957550.886955
    },
    "concept_438": {
      "id": "concept_438",
      "type": "concept",
      "name": "## \ud83c\udfe5 Health Monitoring\n\n### Purpose\n\nProvides comprehensive health monitoring and maintenance recommendations for the enhanced context system.\n\n### Features\n\n- **Component Health Checks**: Monitors all system components\n- **Performance Degradation Detection**: Identifies performance issues\n- **Error Pattern Analysis**: Recognizes recurring error patterns\n- **Maintenance Recommendations**: Provides actionable maintenance advice\n\n### Health Levels\n\n- **Basic**: Essential component status checks\n- **Comprehensive**: Detailed health analysis with recommendations\n- **Deep**: In-depth analysis with performance trend analysis\n\n## \ud83c\udfaf Usage Examples\n\n### Basic Context Enhancement",
      "description": "Concept: ## \ud83c\udfe5 Health Monitoring\n\n### Purpose\n\nProvides comprehensive health monitoring and maintenance recommendations for the enhanced context system.\n\n### Features\n\n- **Component Health Checks**: Monitors all system components\n- **Performance Degradation Detection**: Identifies performance issues\n- **Error Pattern Analysis**: Recognizes recurring error patterns\n- **Maintenance Recommendations**: Provides actionable maintenance advice\n\n### Health Levels\n\n- **Basic**: Essential component status checks\n- **Comprehensive**: Detailed health analysis with recommendations\n- **Deep**: In-depth analysis with performance trend analysis\n\n## \ud83c\udfaf Usage Examples\n\n### Basic Context Enhancement",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.888114,
      "updated_at": 1754957550.888114
    },
    "concept_439": {
      "id": "concept_439",
      "type": "concept",
      "name": "Workflow Optimization",
      "description": "Concept: Workflow Optimization",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md",
          "demo_enhanced_context_system.py"
        ]
      },
      "created_at": 1754957550.888331,
      "updated_at": 1754957551.676127
    },
    "concept_440": {
      "id": "concept_440",
      "type": "concept",
      "name": "\ud83d\udcda Phase 3: Continuous Learning",
      "description": "Concept: \ud83d\udcda Phase 3: Continuous Learning",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md",
          "main.py"
        ]
      },
      "created_at": 1754957550.8898969,
      "updated_at": 1754957552.3675609
    },
    "concept_441": {
      "id": "concept_441",
      "type": "concept",
      "name": "\ud83d\udcc8 Performance Metrics",
      "description": "Concept: \ud83d\udcc8 Performance Metrics",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.890486,
      "updated_at": 1754957550.890486
    },
    "concept_442": {
      "id": "concept_442",
      "type": "concept",
      "name": "**Performance Metrics**: Tracks efficiency, speed, and quality improvements",
      "description": "Concept: **Performance Metrics**: Tracks efficiency, speed, and quality improvements",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.890969,
      "updated_at": 1754957550.890969
    },
    "concept_443": {
      "id": "concept_443",
      "type": "concept",
      "name": "\ud83d\udcca Performance Analytics & Quality Assessment",
      "description": "Concept: \ud83d\udcca Performance Analytics & Quality Assessment",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.891575,
      "updated_at": 1754957550.891575
    },
    "concept_444": {
      "id": "concept_444",
      "type": "concept",
      "name": "**Scalability**: Designed for high-volume processing",
      "description": "Concept: **Scalability**: Designed for high-volume processing",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.8917031,
      "updated_at": 1754957550.8917031
    },
    "concept_445": {
      "id": "concept_445",
      "type": "concept",
      "name": "Planned Features",
      "description": "Concept: Planned Features",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.8918169,
      "updated_at": 1754957550.8918169
    },
    "concept_446": {
      "id": "concept_446",
      "type": "concept",
      "name": "Implementation",
      "description": "Concept: Implementation",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.891927,
      "updated_at": 1754957550.891927
    },
    "concept_447": {
      "id": "concept_447",
      "type": "concept",
      "name": "**Efficiency Score**: Success rate of workflow phases",
      "description": "Concept: **Efficiency Score**: Success rate of workflow phases",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.892032,
      "updated_at": 1754957550.892032
    },
    "concept_448": {
      "id": "concept_448",
      "type": "concept",
      "name": "main.py",
      "description": "Concept: main.py",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md",
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957550.8921359,
      "updated_at": 1754957551.528762
    },
    "concept_449": {
      "id": "concept_449",
      "type": "concept",
      "name": "**Quality Scoring**: Provides overall context quality scores",
      "description": "Concept: **Quality Scoring**: Provides overall context quality scores",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.892282,
      "updated_at": 1754957550.892282
    },
    "concept_450": {
      "id": "concept_450",
      "type": "concept",
      "name": "**Quality Metrics Update**: Updates context quality metrics based on learning",
      "description": "Concept: **Quality Metrics Update**: Updates context quality metrics based on learning",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.892391,
      "updated_at": 1754957550.892391
    },
    "concept_451": {
      "id": "concept_451",
      "type": "concept",
      "name": "Success/failure rates",
      "description": "Concept: Success/failure rates",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.892498,
      "updated_at": 1754957550.892498
    },
    "concept_452": {
      "id": "concept_452",
      "type": "concept",
      "name": "\ud83d\udd27 Workflow Modes",
      "description": "Concept: \ud83d\udd27 Workflow Modes",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.892714,
      "updated_at": 1754957550.892714
    },
    "concept_453": {
      "id": "concept_453",
      "type": "concept",
      "name": "4. Error Handling",
      "description": "Concept: 4. Error Handling",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.892951,
      "updated_at": 1754957550.892951
    },
    "concept_454": {
      "id": "concept_454",
      "type": "concept",
      "name": "Basic Context Enhancement",
      "description": "Concept: Basic Context Enhancement",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.893068,
      "updated_at": 1754957550.893068
    },
    "concept_455": {
      "id": "concept_455",
      "type": "concept",
      "name": "Optimization opportunities",
      "description": "Concept: Optimization opportunities",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.8931808,
      "updated_at": 1754957550.8931808
    },
    "concept_456": {
      "id": "concept_456",
      "type": "concept",
      "name": "Maintenance recommendations",
      "description": "Concept: Maintenance recommendations",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.893287,
      "updated_at": 1754957550.893287
    },
    "concept_457": {
      "id": "concept_457",
      "type": "concept",
      "name": "python\n# Tool orchestration\nresult = await plugin._orchestrate_tools_handler(\n    context_data=phase1_result[\"context_data\"],\n    target_goal=\"comprehensive_context_enhancement\"\n)",
      "description": "Concept: python\n# Tool orchestration\nresult = await plugin._orchestrate_tools_handler(\n    context_data=phase1_result[\"context_data\"],\n    target_goal=\"comprehensive_context_enhancement\"\n)",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.893417,
      "updated_at": 1754957550.893417
    },
    "concept_458": {
      "id": "concept_458",
      "type": "concept",
      "name": "**Intelligent Tool Selection**: Selects tools based on context and goals",
      "description": "Concept: **Intelligent Tool Selection**: Selects tools based on context and goals",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.893527,
      "updated_at": 1754957550.893527
    },
    "concept_459": {
      "id": "concept_459",
      "type": "concept",
      "name": "Execute Complete Enhanced Workflow",
      "description": "Concept: Execute Complete Enhanced Workflow",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.8936598,
      "updated_at": 1754957550.8936598
    },
    "concept_460": {
      "id": "concept_460",
      "type": "concept",
      "name": "python\n# Complete workflow execution\nfrom plugins.enhanced_workflow_orchestrator import EnhancedWorkflowOrchestratorPlugin\n\norchestrator = EnhancedWorkflowOrchestratorPlugin()\norchestrator._setup()\n\nresult = await orchestrator._execute_enhanced_workflow_handler(\n    user_message=\"Analyze system performance\",\n    workflow_mode=\"standard\",\n    include_learning=True\n)",
      "description": "Concept: python\n# Complete workflow execution\nfrom plugins.enhanced_workflow_orchestrator import EnhancedWorkflowOrchestratorPlugin\n\norchestrator = EnhancedWorkflowOrchestratorPlugin()\norchestrator._setup()\n\nresult = await orchestrator._execute_enhanced_workflow_handler(\n    user_message=\"Analyze system performance\",\n    workflow_mode=\"standard\",\n    include_learning=True\n)",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.893823,
      "updated_at": 1754957550.893823
    },
    "concept_461": {
      "id": "concept_461",
      "type": "concept",
      "name": "**Component Health Checks**: Monitors all system components",
      "description": "Concept: **Component Health Checks**: Monitors all system components",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.893931,
      "updated_at": 1754957550.893931
    },
    "concept_462": {
      "id": "concept_462",
      "type": "concept",
      "name": "\ud83d\udce6 Batch Processing",
      "description": "Concept: \ud83d\udce6 Batch Processing",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.8940642,
      "updated_at": 1754957550.8940642
    },
    "concept_463": {
      "id": "concept_463",
      "type": "concept",
      "name": "\ud83d\udd0d Monitoring & Debugging",
      "description": "Concept: \ud83d\udd0d Monitoring & Debugging",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.894202,
      "updated_at": 1754957550.894202
    },
    "concept_464": {
      "id": "concept_464",
      "type": "concept",
      "name": "**Speed Score**: Execution speed optimization",
      "description": "Concept: **Speed Score**: Execution speed optimization",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.894308,
      "updated_at": 1754957550.894308
    },
    "concept_465": {
      "id": "concept_465",
      "type": "concept",
      "name": "`_optimize_workflow_handler()`: Workflow optimization",
      "description": "Concept: `_optimize_workflow_handler()`: Workflow optimization",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.8944142,
      "updated_at": 1754957550.8944142
    },
    "concept_466": {
      "id": "concept_466",
      "type": "concept",
      "name": "directory:\n\n-",
      "description": "Concept: directory:\n\n-",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.894515,
      "updated_at": 1754957550.894515
    },
    "concept_467": {
      "id": "concept_467",
      "type": "concept",
      "name": "python\n# Continuous learning\ninteraction_data = {\n    \"context_data\": phase1_result[\"context_data\"],\n    \"orchestration_result\": phase2_result[\"orchestration_result\"]\n}\n\nresult = await plugin._continuous_learning_handler(\n    interaction_data,\n    learning_focus=\"context_patterns\"\n)",
      "description": "Concept: python\n# Continuous learning\ninteraction_data = {\n    \"context_data\": phase1_result[\"context_data\"],\n    \"orchestration_result\": phase2_result[\"orchestration_result\"]\n}\n\nresult = await plugin._continuous_learning_handler(\n    interaction_data,\n    learning_focus=\"context_patterns\"\n)",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.900861,
      "updated_at": 1754957550.900862
    },
    "concept_468": {
      "id": "concept_468",
      "type": "concept",
      "name": "\ud83c\udfe5 Health Monitoring",
      "description": "Concept: \ud83c\udfe5 Health Monitoring",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.904161,
      "updated_at": 1754957550.904161
    },
    "concept_469": {
      "id": "concept_469",
      "type": "concept",
      "name": "**Performance Metrics**: Batch-level performance tracking",
      "description": "Concept: **Performance Metrics**: Batch-level performance tracking",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.9049711,
      "updated_at": 1754957550.904972
    },
    "concept_470": {
      "id": "concept_470",
      "type": "concept",
      "name": "Integration Opportunities",
      "description": "Concept: Integration Opportunities",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.9051242,
      "updated_at": 1754957550.9051242
    },
    "concept_471": {
      "id": "concept_471",
      "type": "concept",
      "name": "2. MCP Server Integration",
      "description": "Concept: 2. MCP Server Integration",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.905236,
      "updated_at": 1754957550.905236
    },
    "concept_472": {
      "id": "concept_472",
      "type": "concept",
      "name": "Disable learning for batch processing",
      "description": "Concept: Disable learning for batch processing",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.905347,
      "updated_at": 1754957550.905347
    },
    "concept_473": {
      "id": "concept_473",
      "type": "concept",
      "name": ": Complete workflow execution\n-",
      "description": "Concept: : Complete workflow execution\n-",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.905455,
      "updated_at": 1754957550.905455
    },
    "concept_474": {
      "id": "concept_474",
      "type": "concept",
      "name": "`_analyze_workflow_performance_handler()`: Performance analysis",
      "description": "Concept: `_analyze_workflow_performance_handler()`: Performance analysis",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.9055731,
      "updated_at": 1754957550.9055731
    },
    "concept_475": {
      "id": "concept_475",
      "type": "concept",
      "name": "Logging",
      "description": "Concept: Logging",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md",
          "README.md",
          "brain_interface.py",
          "demo_enhanced_context_system.py",
          "demo_restructured_cognitive_system.py",
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py",
          "function_call_logger.py",
          "knowledge_ingestion_engine.py",
          "llm_client.py",
          "main.py",
          "project_scanner.py",
          "test_enhanced_integration.py",
          "test_mcp_integration.py",
          "tool_registry.py"
        ]
      },
      "created_at": 1754957550.9057338,
      "updated_at": 1754957552.828505
    },
    "concept_476": {
      "id": "concept_476",
      "type": "concept",
      "name": "`_workflow_health_check_handler()`: Health monitoring",
      "description": "Concept: `_workflow_health_check_handler()`: Health monitoring",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.905963,
      "updated_at": 1754957550.905963
    },
    "concept_477": {
      "id": "concept_477",
      "type": "concept",
      "name": "Monitor learning patterns for optimization",
      "description": "Concept: Monitor learning patterns for optimization",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.906249,
      "updated_at": 1754957550.906249
    },
    "concept_478": {
      "id": "concept_478",
      "type": "concept",
      "name": "**Advanced Pattern Recognition**: Machine learning-based pattern detection",
      "description": "Concept: **Advanced Pattern Recognition**: Machine learning-based pattern detection",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.90665,
      "updated_at": 1754957550.90665
    },
    "concept_479": {
      "id": "concept_479",
      "type": "concept",
      "name": "bash\n# Build Comprehensive Context\nbuild_comprehensive_context(\n    user_message: str,\n    context_depth: str = \"comprehensive\"\n) -> dict",
      "description": "Concept: bash\n# Build Comprehensive Context\nbuild_comprehensive_context(\n    user_message: str,\n    context_depth: str = \"comprehensive\"\n) -> dict",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.913737,
      "updated_at": 1754957550.913738
    },
    "concept_480": {
      "id": "concept_480",
      "type": "concept",
      "name": "**Automatic Phase Execution**: Runs all phases automatically in sequence",
      "description": "Concept: **Automatic Phase Execution**: Runs all phases automatically in sequence",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.913876,
      "updated_at": 1754957550.913876
    },
    "concept_481": {
      "id": "concept_481",
      "type": "concept",
      "name": "**Error Pattern Analysis**: Recognizes recurring error patterns",
      "description": "Concept: **Error Pattern Analysis**: Recognizes recurring error patterns",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.913992,
      "updated_at": 1754957550.913992
    },
    "concept_482": {
      "id": "concept_482",
      "type": "concept",
      "name": "\ud83c\udfd7\ufe0f Comprehensive Context Building",
      "description": "Concept: \ud83c\udfd7\ufe0f Comprehensive Context Building",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.92142,
      "updated_at": 1754957550.921421
    },
    "concept_483": {
      "id": "concept_483",
      "type": "concept",
      "name": "Enhanced Context Integration Plugin",
      "description": "Concept: Enhanced Context Integration Plugin",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.9216,
      "updated_at": 1754957550.9216
    },
    "concept_484": {
      "id": "concept_484",
      "type": "concept",
      "name": "### MCP Tools",
      "description": "Concept: ### MCP Tools",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.9222121,
      "updated_at": 1754957550.922213
    },
    "concept_485": {
      "id": "concept_485",
      "type": "concept",
      "name": "Use any of the enhanced context tools",
      "description": "Concept: Use any of the enhanced context tools",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.922827,
      "updated_at": 1754957550.922827
    },
    "concept_486": {
      "id": "concept_486",
      "type": "concept",
      "name": "### MCP Tool",
      "description": "Concept: ### MCP Tool",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.9243479,
      "updated_at": 1754957550.9243488
    },
    "concept_487": {
      "id": "concept_487",
      "type": "concept",
      "name": "Performance trends",
      "description": "Concept: Performance trends",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.9245062,
      "updated_at": 1754957550.9245062
    },
    "concept_488": {
      "id": "concept_488",
      "type": "concept",
      "name": "## \ud83d\ude80 Getting Started\n\n### 1. Installation\n\nEnsure all required plugins are in the",
      "description": "Concept: ## \ud83d\ude80 Getting Started\n\n### 1. Installation\n\nEnsure all required plugins are in the",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.9255328,
      "updated_at": 1754957550.9255328
    },
    "concept_489": {
      "id": "concept_489",
      "type": "concept",
      "name": "bash\npython demo_enhanced_context_system.py",
      "description": "Concept: bash\npython demo_enhanced_context_system.py",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.9264529,
      "updated_at": 1754957550.9264529
    },
    "concept_490": {
      "id": "concept_490",
      "type": "concept",
      "name": ": Context quality assessment\n\n### Enhanced Workflow Orchestrator Plugin\n\n-",
      "description": "Concept: : Context quality assessment\n\n### Enhanced Workflow Orchestrator Plugin\n\n-",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.929045,
      "updated_at": 1754957550.929045
    },
    "concept_491": {
      "id": "concept_491",
      "type": "concept",
      "name": "Phase execution details",
      "description": "Concept: Phase execution details",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.929268,
      "updated_at": 1754957550.929268
    },
    "concept_492": {
      "id": "concept_492",
      "type": "concept",
      "name": "Standard learning and optimization",
      "description": "Concept: Standard learning and optimization",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.929538,
      "updated_at": 1754957550.929538
    },
    "concept_493": {
      "id": "concept_493",
      "type": "concept",
      "name": "**Performance Monitoring**: Tracks execution time and success rates",
      "description": "Concept: **Performance Monitoring**: Tracks execution time and success rates",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.9296691,
      "updated_at": 1754957550.9296691
    },
    "concept_494": {
      "id": "concept_494",
      "type": "concept",
      "name": "**Performance Tracking**: Monitors tool usage and effectiveness",
      "description": "Concept: **Performance Tracking**: Monitors tool usage and effectiveness",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.929782,
      "updated_at": 1754957550.929782
    },
    "concept_495": {
      "id": "concept_495",
      "type": "concept",
      "name": "plugins/enhanced_context_integration.py",
      "description": "Concept: plugins/enhanced_context_integration.py",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.930429,
      "updated_at": 1754957550.93043
    },
    "concept_496": {
      "id": "concept_496",
      "type": "concept",
      "name": "\ud83c\udfaf Phase 2: Tool Orchestration",
      "description": "Concept: \ud83c\udfaf Phase 2: Tool Orchestration",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md",
          "main.py"
        ]
      },
      "created_at": 1754957550.930849,
      "updated_at": 1754957552.392334
    },
    "concept_497": {
      "id": "concept_497",
      "type": "concept",
      "name": "Enhanced Workflow Orchestrator Plugin",
      "description": "Concept: Enhanced Workflow Orchestrator Plugin",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.933624,
      "updated_at": 1754957550.933625
    },
    "concept_498": {
      "id": "concept_498",
      "type": "concept",
      "name": "Automatic retry mechanisms",
      "description": "Concept: Automatic retry mechanisms",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.934023,
      "updated_at": 1754957550.934023
    },
    "concept_499": {
      "id": "concept_499",
      "type": "concept",
      "name": "MCP Tool",
      "description": "Concept: MCP Tool",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.934832,
      "updated_at": 1754957550.934832
    },
    "concept_500": {
      "id": "concept_500",
      "type": "concept",
      "name": "1. Installation",
      "description": "Concept: 1. Installation",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.9354692,
      "updated_at": 1754957550.9354692
    },
    "concept_501": {
      "id": "concept_501",
      "type": "concept",
      "name": "Balanced approach between speed and context quality",
      "description": "Concept: Balanced approach between speed and context quality",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.935869,
      "updated_at": 1754957550.935869
    },
    "concept_502": {
      "id": "concept_502",
      "type": "concept",
      "name": "Component availability",
      "description": "Concept: Component availability",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.936234,
      "updated_at": 1754957550.936234
    },
    "concept_503": {
      "id": "concept_503",
      "type": "concept",
      "name": "Process multiple messages",
      "description": "Concept: Process multiple messages",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.93731,
      "updated_at": 1754957550.93731
    },
    "concept_504": {
      "id": "concept_504",
      "type": "concept",
      "name": "**Context Versioning**: Version control for context data",
      "description": "Concept: **Context Versioning**: Version control for context data",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.937805,
      "updated_at": 1754957550.937805
    },
    "concept_505": {
      "id": "concept_505",
      "type": "concept",
      "name": "1. Workflow Mode Selection",
      "description": "Concept: 1. Workflow Mode Selection",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.937942,
      "updated_at": 1754957550.937942
    },
    "concept_506": {
      "id": "concept_506",
      "type": "concept",
      "name": "bash\n# Enhanced Context Retrieval\nenhanced_context_retrieval(\n    user_message: str,\n    include_history: bool = True,\n    include_preferences: bool = True\n) -> dict",
      "description": "Concept: bash\n# Enhanced Context Retrieval\nenhanced_context_retrieval(\n    user_message: str,\n    include_history: bool = True,\n    include_preferences: bool = True\n) -> dict",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.93839,
      "updated_at": 1754957550.93839
    },
    "concept_507": {
      "id": "concept_507",
      "type": "concept",
      "name": "**Efficient Processing**: Optimized for handling multiple requests",
      "description": "Concept: **Efficient Processing**: Optimized for handling multiple requests",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.938849,
      "updated_at": 1754957550.938849
    },
    "concept_508": {
      "id": "concept_508",
      "type": "concept",
      "name": "**Context Caching**: Caches comprehensive context for reuse",
      "description": "Concept: **Context Caching**: Caches comprehensive context for reuse",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.940642,
      "updated_at": 1754957550.940643
    },
    "concept_509": {
      "id": "concept_509",
      "type": "concept",
      "name": "Graceful degradation on failures",
      "description": "Concept: Graceful degradation on failures",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.941348,
      "updated_at": 1754957550.941348
    },
    "concept_510": {
      "id": "concept_510",
      "type": "concept",
      "name": "\ud83c\udfaf Usage Examples",
      "description": "Concept: \ud83c\udfaf Usage Examples",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.942014,
      "updated_at": 1754957550.942014
    },
    "concept_511": {
      "id": "concept_511",
      "type": "concept",
      "name": "**Depth Control**: Configurable context depth (basic, enhanced, comprehensive)",
      "description": "Concept: **Depth Control**: Configurable context depth (basic, enhanced, comprehensive)",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.9430552,
      "updated_at": 1754957550.9430559
    },
    "concept_512": {
      "id": "concept_512",
      "type": "concept",
      "name": "Regular performance analysis",
      "description": "Concept: Regular performance analysis",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.943993,
      "updated_at": 1754957550.943993
    },
    "concept_513": {
      "id": "concept_513",
      "type": "concept",
      "name": "Prioritizes comprehensive context over speed",
      "description": "Concept: Prioritizes comprehensive context over speed",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.94498,
      "updated_at": 1754957550.94498
    },
    "concept_514": {
      "id": "concept_514",
      "type": "concept",
      "name": "User-friendly error messages",
      "description": "Concept: User-friendly error messages",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.9456692,
      "updated_at": 1754957550.9456692
    },
    "concept_515": {
      "id": "concept_515",
      "type": "concept",
      "name": "**Distributed Context Processing**: Multi-node context enhancement",
      "description": "Concept: **Distributed Context Processing**: Multi-node context enhancement",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.945855,
      "updated_at": 1754957550.945855
    },
    "concept_516": {
      "id": "concept_516",
      "type": "concept",
      "name": "\ud83d\ude80 Getting Started",
      "description": "Concept: \ud83d\ude80 Getting Started",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.9463658,
      "updated_at": 1754957550.946367
    },
    "concept_517": {
      "id": "concept_517",
      "type": "concept",
      "name": "**Context Quality Assessment**: Evaluates context completeness and relevance",
      "description": "Concept: **Context Quality Assessment**: Evaluates context completeness and relevance",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.946698,
      "updated_at": 1754957550.946698
    },
    "concept_518": {
      "id": "concept_518",
      "type": "concept",
      "name": "\ud83d\udd0d Phase 1: Enhanced Context Retrieval",
      "description": "Concept: \ud83d\udd0d Phase 1: Enhanced Context Retrieval",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md",
          "main.py"
        ]
      },
      "created_at": 1754957550.947707,
      "updated_at": 1754957552.314272
    },
    "concept_519": {
      "id": "concept_519",
      "type": "concept",
      "name": "## \ud83c\udfaf Phase 2: Tool Orchestration\n\n### Purpose\n\nImplements intelligent tool orchestration based on context analysis, selecting appropriate tools and creating execution plans for optimal context enhancement.\n\n### Features\n\n- **Context Analysis**: Analyzes context to determine tool needs\n- **Intelligent Tool Selection**: Selects tools based on context and goals\n- **Execution Planning**: Creates prioritized execution plans\n- **Tool Coordination**: Coordinates tool usage for maximum effectiveness\n- **Performance Tracking**: Monitors tool usage and effectiveness\n\n### Implementation",
      "description": "Concept: ## \ud83c\udfaf Phase 2: Tool Orchestration\n\n### Purpose\n\nImplements intelligent tool orchestration based on context analysis, selecting appropriate tools and creating execution plans for optimal context enhancement.\n\n### Features\n\n- **Context Analysis**: Analyzes context to determine tool needs\n- **Intelligent Tool Selection**: Selects tools based on context and goals\n- **Execution Planning**: Creates prioritized execution plans\n- **Tool Coordination**: Coordinates tool usage for maximum effectiveness\n- **Performance Tracking**: Monitors tool usage and effectiveness\n\n### Implementation",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.9526231,
      "updated_at": 1754957550.9526231
    },
    "concept_520": {
      "id": "concept_520",
      "type": "concept",
      "name": "### 2. MCP Server Integration\n\nThe enhanced context tools are automatically available in the main MCP server. No additional configuration required.\n\n### 3. Basic Usage",
      "description": "Concept: ### 2. MCP Server Integration\n\nThe enhanced context tools are automatically available in the main MCP server. No additional configuration required.\n\n### 3. Basic Usage",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.953512,
      "updated_at": 1754957550.953512
    },
    "concept_521": {
      "id": "concept_521",
      "type": "concept",
      "name": "\ud83c\udf89 Conclusion",
      "description": "Concept: \ud83c\udf89 Conclusion",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.9548721,
      "updated_at": 1754957550.954957
    },
    "concept_522": {
      "id": "concept_522",
      "type": "concept",
      "name": "Performance Analysis",
      "description": "Concept: Performance Analysis",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md",
          "INTEGRATION_GUIDE.md",
          "demo_restructured_cognitive_system.py"
        ]
      },
      "created_at": 1754957550.955605,
      "updated_at": 1754957551.733856
    },
    "concept_523": {
      "id": "concept_523",
      "type": "concept",
      "name": "bash\n# Analyze Tool Performance\nanalyze_tool_performance(\n    tool_name: str = \"all\",\n    timeframe: str = \"session\"\n) -> dict\n\n# Assess Context Quality\nassess_context_quality(\n    context_data: dict,\n    assessment_criteria: list = [\"completeness\", \"relevance\", \"freshness\"]\n) -> dict",
      "description": "Concept: bash\n# Analyze Tool Performance\nanalyze_tool_performance(\n    tool_name: str = \"all\",\n    timeframe: str = \"session\"\n) -> dict\n\n# Assess Context Quality\nassess_context_quality(\n    context_data: dict,\n    assessment_criteria: list = [\"completeness\", \"relevance\", \"freshness\"]\n) -> dict",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.9568052,
      "updated_at": 1754957550.9568052
    },
    "concept_524": {
      "id": "concept_524",
      "type": "concept",
      "name": "**Pre-response Memory Search**: Automatically searches for relevant memories before responding",
      "description": "Concept: **Pre-response Memory Search**: Automatically searches for relevant memories before responding",
      "source": "ENHANCED_CONTEXT_SYSTEM_README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ENHANCED_CONTEXT_SYSTEM_README.md"
        ]
      },
      "created_at": 1754957550.956946,
      "updated_at": 1754957550.956946
    },
    "doc_525": {
      "id": "doc_525",
      "type": "document",
      "name": "Integration_Guide",
      "description": "Document: INTEGRATION_GUIDE.md",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.9,
      "metadata": {
        "file_size": 8358,
        "lines": 337,
        "language": "unknown",
        "last_modified": 1754953477.084109
      },
      "created_at": 1754957550.967077,
      "updated_at": 1754957550.967077
    },
    "concept_526": {
      "id": "concept_526",
      "type": "concept",
      "name": "plugins/\n\u251c\u2500\u2500 cognitive_brain_restructured.py          # \u2705 Main restructured plugin\n\u251c\u2500\u2500 enhanced_context_integration.py         # \u2705 Enhanced context plugin\n\u251c\u2500\u2500 enhanced_workflow_orchestrator.py       # \u2705 Workflow orchestrator plugin\n\u251c\u2500\u2500 auto_memory.py                         # \u2705 Auto memory plugin\n\u2514\u2500\u2500 ... (other existing plugins)",
      "description": "Concept: plugins/\n\u251c\u2500\u2500 cognitive_brain_restructured.py          # \u2705 Main restructured plugin\n\u251c\u2500\u2500 enhanced_context_integration.py         # \u2705 Enhanced context plugin\n\u251c\u2500\u2500 enhanced_workflow_orchestrator.py       # \u2705 Workflow orchestrator plugin\n\u251c\u2500\u2500 auto_memory.py                         # \u2705 Auto memory plugin\n\u2514\u2500\u2500 ... (other existing plugins)",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957550.9689238,
      "updated_at": 1754957550.9689238
    },
    "concept_527": {
      "id": "concept_527",
      "type": "concept",
      "name": "Monitor overall system",
      "description": "Concept: Monitor overall system",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md",
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957550.969051,
      "updated_at": 1754957551.163499
    },
    "concept_528": {
      "id": "concept_528",
      "type": "concept",
      "name": "python\n# Execute workflows\nworkflow = await plugin._execute_enhanced_workflow_handler(\"message\", \"standard\", True)\n\n# Batch processing\nbatch = await plugin._batch_workflow_processing_handler([\"msg1\", \"msg2\"], \"standard\")\n\n# AI chat with memory\nchat = await plugin._ai_chat_with_memory_handler(\"user message\", \"assistant\")",
      "description": "Concept: python\n# Execute workflows\nworkflow = await plugin._execute_enhanced_workflow_handler(\"message\", \"standard\", True)\n\n# Batch processing\nbatch = await plugin._batch_workflow_processing_handler([\"msg1\", \"msg2\"], \"standard\")\n\n# AI chat with memory\nchat = await plugin._ai_chat_with_memory_handler(\"user message\", \"assistant\")",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957550.969221,
      "updated_at": 1754957550.969221
    },
    "concept_529": {
      "id": "concept_529",
      "type": "concept",
      "name": "\ud83d\udd27 **Integration with MCP Server**",
      "description": "Concept: \ud83d\udd27 **Integration with MCP Server**",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957550.969387,
      "updated_at": 1754957550.969387
    },
    "concept_530": {
      "id": "concept_530",
      "type": "concept",
      "name": "\ud83c\udfaf **Overview**",
      "description": "Concept: \ud83c\udfaf **Overview**",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md",
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957550.9696572,
      "updated_at": 1754957551.2205818
    },
    "concept_531": {
      "id": "concept_531",
      "type": "concept",
      "name": "**Workflow Health**",
      "description": "Concept: **Workflow Health**",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md",
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957550.969768,
      "updated_at": 1754957551.163668
    },
    "concept_532": {
      "id": "concept_532",
      "type": "concept",
      "name": "**Option 1: Add to Main MCP Server**",
      "description": "Concept: **Option 1: Add to Main MCP Server**",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957550.969883,
      "updated_at": 1754957550.969883
    },
    "concept_533": {
      "id": "concept_533",
      "type": "concept",
      "name": "Provide training and documentation",
      "description": "Concept: Provide training and documentation",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957550.970859,
      "updated_at": 1754957550.970859
    },
    "concept_534": {
      "id": "concept_534",
      "type": "concept",
      "name": "python\n# Import the restructured plugin\nfrom plugins.cognitive_brain_restructured import CognitiveBrainRestructuredPlugin\n\n# Initialize in your server setup\nrestructured_plugin = CognitiveBrainRestructuredPlugin()\nrestructured_plugin._setup()\n\n# Add tools to your MCP server\nfor tool in restructured_plugin.get_tools():\n    # Register each tool with your MCP server\n    # This depends on your MCP implementation\n    pass",
      "description": "Concept: python\n# Import the restructured plugin\nfrom plugins.cognitive_brain_restructured import CognitiveBrainRestructuredPlugin\n\n# Initialize in your server setup\nrestructured_plugin = CognitiveBrainRestructuredPlugin()\nrestructured_plugin._setup()\n\n# Add tools to your MCP server\nfor tool in restructured_plugin.get_tools():\n    # Register each tool with your MCP server\n    # This depends on your MCP implementation\n    pass",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957550.971798,
      "updated_at": 1754957550.971798
    },
    "concept_535": {
      "id": "concept_535",
      "type": "concept",
      "name": "Test individual domains",
      "description": "Concept: Test individual domains",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957550.972239,
      "updated_at": 1754957550.972239
    },
    "concept_536": {
      "id": "concept_536",
      "type": "concept",
      "name": "Gather user feedback",
      "description": "Concept: Gather user feedback",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957550.9751198,
      "updated_at": 1754957550.9751198
    },
    "concept_537": {
      "id": "concept_537",
      "type": "concept",
      "name": "Encourage users to try new cognitive domain tools",
      "description": "Concept: Encourage users to try new cognitive domain tools",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957550.975748,
      "updated_at": 1754957550.975748
    },
    "concept_538": {
      "id": "concept_538",
      "type": "concept",
      "name": "`INTEGRATION_GUIDE.md` - This integration guide",
      "description": "Concept: `INTEGRATION_GUIDE.md` - This integration guide",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957550.975876,
      "updated_at": 1754957550.975876
    },
    "concept_539": {
      "id": "concept_539",
      "type": "concept",
      "name": "python\n# Check workflow health\nhealth = await plugin._workflow_health_check_handler(\"comprehensive\")\nprint(f\"Workflow Health: {health['health_result']['overall_health']}\")",
      "description": "Concept: python\n# Check workflow health\nhealth = await plugin._workflow_health_check_handler(\"comprehensive\")\nprint(f\"Workflow Health: {health['health_result']['overall_health']}\")",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md",
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957550.9760761,
      "updated_at": 1754957551.165959
    },
    "concept_540": {
      "id": "concept_540",
      "type": "concept",
      "name": "Check workflow health",
      "description": "Concept: Check workflow health",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md",
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957550.976188,
      "updated_at": 1754957551.166293
    },
    "concept_541": {
      "id": "concept_541",
      "type": "concept",
      "name": "bash\n# Check Python path\npython -c \"import sys; print('\\n'.join(sys.path))\"\n\n# Check plugin directory\nls -la plugins/\n\n# Test individual imports\npython -c \"from plugins.enhanced_context_integration import EnhancedContextIntegrationPlugin; print('\u2705 Enhanced context plugin imported')\"",
      "description": "Concept: bash\n# Check Python path\npython -c \"import sys; print('\\n'.join(sys.path))\"\n\n# Check plugin directory\nls -la plugins/\n\n# Test individual imports\npython -c \"from plugins.enhanced_context_integration import EnhancedContextIntegrationPlugin; print('\u2705 Enhanced context plugin imported')\"",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md",
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957550.9769778,
      "updated_at": 1754957551.167526
    },
    "concept_542": {
      "id": "concept_542",
      "type": "concept",
      "name": "### **Domain 4: LEARNING & ADAPTATION**",
      "description": "Concept: ### **Domain 4: LEARNING & ADAPTATION**",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957550.977837,
      "updated_at": 1754957550.977837
    },
    "concept_543": {
      "id": "concept_543",
      "type": "concept",
      "name": "Analyze content",
      "description": "Concept: Analyze content",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957550.978015,
      "updated_at": 1754957550.978015
    },
    "concept_544": {
      "id": "concept_544",
      "type": "concept",
      "name": "**Main Plugin**",
      "description": "Concept: **Main Plugin**",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md",
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957550.978136,
      "updated_at": 1754957551.168628
    },
    "concept_545": {
      "id": "concept_545",
      "type": "concept",
      "name": "bash\npython demo_restructured_cognitive_system.py",
      "description": "Concept: bash\npython demo_restructured_cognitive_system.py",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md",
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957550.978252,
      "updated_at": 1754957551.168978
    },
    "concept_546": {
      "id": "concept_546",
      "type": "concept",
      "name": "`RESTRUCTURED_COGNITIVE_SYSTEM.md` - Comprehensive system documentation",
      "description": "Concept: `RESTRUCTURED_COGNITIVE_SYSTEM.md` - Comprehensive system documentation",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957550.978399,
      "updated_at": 1754957550.978399
    },
    "concept_547": {
      "id": "concept_547",
      "type": "concept",
      "name": "**Import Errors**",
      "description": "Concept: **Import Errors**",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md",
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957550.978508,
      "updated_at": 1754957551.169573
    },
    "concept_548": {
      "id": "concept_548",
      "type": "concept",
      "name": "`COGNITIVE_RESTRUCTURING_SUMMARY.md` - Executive summary",
      "description": "Concept: `COGNITIVE_RESTRUCTURING_SUMMARY.md` - Executive summary",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957550.978731,
      "updated_at": 1754957550.978731
    },
    "concept_549": {
      "id": "concept_549",
      "type": "concept",
      "name": "python\n# Deep thinking\nthoughts = await plugin._think_deeply_handler(\"what to think about\", \"context\")\n\n# Tool orchestration\norchestration = await plugin._orchestrate_tools_handler(context_data, \"goal\")\n\n# Build comprehensive context\ncomprehensive = await plugin._build_comprehensive_context_handler(\"message\", \"comprehensive\")",
      "description": "Concept: python\n# Deep thinking\nthoughts = await plugin._think_deeply_handler(\"what to think about\", \"context\")\n\n# Tool orchestration\norchestration = await plugin._orchestrate_tools_handler(context_data, \"goal\")\n\n# Build comprehensive context\ncomprehensive = await plugin._build_comprehensive_context_handler(\"message\", \"comprehensive\")",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957550.978909,
      "updated_at": 1754957550.978909
    },
    "concept_550": {
      "id": "concept_550",
      "type": "concept",
      "name": "**Support**",
      "description": "Concept: **Support**",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md",
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957550.979038,
      "updated_at": 1754957551.170207
    },
    "concept_551": {
      "id": "concept_551",
      "type": "concept",
      "name": "**3. Monitor and Optimize**",
      "description": "Concept: **3. Monitor and Optimize**",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957550.979164,
      "updated_at": 1754957550.979164
    },
    "concept_552": {
      "id": "concept_552",
      "type": "concept",
      "name": "python\n# Check plugin status\nplugin = CognitiveBrainRestructuredPlugin()\nplugin._setup()\n\n# List available tools\ntools = plugin.get_tools()\nfor tool in tools:\n    print(f\"\ud83d\udd27 {tool.name}: {tool.description}\")",
      "description": "Concept: python\n# Check plugin status\nplugin = CognitiveBrainRestructuredPlugin()\nplugin._setup()\n\n# List available tools\ntools = plugin.get_tools()\nfor tool in tools:\n    print(f\"\ud83d\udd27 {tool.name}: {tool.description}\")",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957550.979655,
      "updated_at": 1754957550.979655
    },
    "concept_553": {
      "id": "concept_553",
      "type": "concept",
      "name": "**Functionality Issues**",
      "description": "Concept: **Functionality Issues**",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957550.979774,
      "updated_at": 1754957550.979774
    },
    "concept_554": {
      "id": "concept_554",
      "type": "concept",
      "name": "Test with a subset of users first",
      "description": "Concept: Test with a subset of users first",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957550.979893,
      "updated_at": 1754957550.979893
    },
    "concept_555": {
      "id": "concept_555",
      "type": "concept",
      "name": "Analyze performance",
      "description": "Concept: Analyze performance",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md",
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957550.980014,
      "updated_at": 1754957551.175953
    },
    "concept_556": {
      "id": "concept_556",
      "type": "concept",
      "name": "Ensure all dependencies are available",
      "description": "Concept: Ensure all dependencies are available",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957550.98018,
      "updated_at": 1754957550.980181
    },
    "concept_557": {
      "id": "concept_557",
      "type": "concept",
      "name": "Monitor performance and user adoption",
      "description": "Concept: Monitor performance and user adoption",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957550.980426,
      "updated_at": 1754957550.980426
    },
    "concept_558": {
      "id": "concept_558",
      "type": "concept",
      "name": "Check plugin status",
      "description": "Concept: Check plugin status",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957550.9806159,
      "updated_at": 1754957550.980617
    },
    "concept_559": {
      "id": "concept_559",
      "type": "concept",
      "name": "**Phase 3: Full Migration**",
      "description": "Concept: **Phase 3: Full Migration**",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957550.980737,
      "updated_at": 1754957550.980737
    },
    "concept_560": {
      "id": "concept_560",
      "type": "concept",
      "name": "Add tools to your MCP server",
      "description": "Concept: Add tools to your MCP server",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md",
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957550.98085,
      "updated_at": 1754957551.176616
    },
    "concept_561": {
      "id": "concept_561",
      "type": "concept",
      "name": "**2. Test the Restructured System**",
      "description": "Concept: **2. Test the Restructured System**",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957550.980963,
      "updated_at": 1754957550.980963
    },
    "concept_562": {
      "id": "concept_562",
      "type": "concept",
      "name": "bash\n# Run comprehensive tests\npython demo_restructured_cognitive_system.py\n\n# Test individual domains\npython -c \"\nfrom plugins.cognitive_brain_restructured import CognitiveBrainRestructuredPlugin\nplugin = CognitiveBrainRestructuredPlugin()\nplugin._setup()\n# Test each domain...\n\"",
      "description": "Concept: bash\n# Run comprehensive tests\npython demo_restructured_cognitive_system.py\n\n# Test individual domains\npython -c \"\nfrom plugins.cognitive_brain_restructured import CognitiveBrainRestructuredPlugin\nplugin = CognitiveBrainRestructuredPlugin()\nplugin._setup()\n# Test each domain...\n\"",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957550.981125,
      "updated_at": 1754957550.981125
    },
    "concept_563": {
      "id": "concept_563",
      "type": "concept",
      "name": "Mark old tools as deprecated",
      "description": "Concept: Mark old tools as deprecated",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957550.981237,
      "updated_at": 1754957550.981237
    },
    "concept_564": {
      "id": "concept_564",
      "type": "concept",
      "name": "**1. Verify File Structure**",
      "description": "Concept: **1. Verify File Structure**",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957550.981348,
      "updated_at": 1754957550.981348
    },
    "concept_565": {
      "id": "concept_565",
      "type": "concept",
      "name": "Run comprehensive tests",
      "description": "Concept: Run comprehensive tests",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957550.9814699,
      "updated_at": 1754957550.9814699
    },
    "concept_566": {
      "id": "concept_566",
      "type": "concept",
      "name": "---\n\n## \ud83d\udd27 **Integration with MCP Server**\n\n### **Option 1: Add to Main MCP Server**\n\nAdd the restructured plugin to your",
      "description": "Concept: ---\n\n## \ud83d\udd27 **Integration with MCP Server**\n\n### **Option 1: Add to Main MCP Server**\n\nAdd the restructured plugin to your",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957550.9819589,
      "updated_at": 1754957550.9819589
    },
    "concept_567": {
      "id": "concept_567",
      "type": "concept",
      "name": "\ud83d\ude80 **Quick Start**",
      "description": "Concept: \ud83d\ude80 **Quick Start**",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md",
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957550.982131,
      "updated_at": 1754957551.184016
    },
    "concept_568": {
      "id": "concept_568",
      "type": "concept",
      "name": "**Option 2: Use as Standalone Plugin**",
      "description": "Concept: **Option 2: Use as Standalone Plugin**",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957550.982253,
      "updated_at": 1754957550.982253
    },
    "concept_569": {
      "id": "concept_569",
      "type": "concept",
      "name": "\ud83d\udd0d **Troubleshooting**",
      "description": "Concept: \ud83d\udd0d **Troubleshooting**",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md",
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957550.98242,
      "updated_at": 1754957551.184653
    },
    "concept_570": {
      "id": "concept_570",
      "type": "concept",
      "name": "\ud83d\udcca **Performance Monitoring**",
      "description": "Concept: \ud83d\udcca **Performance Monitoring**",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957550.9827578,
      "updated_at": 1754957550.9827578
    },
    "concept_571": {
      "id": "concept_571",
      "type": "concept",
      "name": "Add to sys.path in your script",
      "description": "Concept: Add to sys.path in your script",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md",
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957550.9828851,
      "updated_at": 1754957551.18539
    },
    "concept_572": {
      "id": "concept_572",
      "type": "concept",
      "name": "python\n# Self-monitoring\nmonitor = await plugin._self_monitor_handler(\"comprehensive\", \"all\")\n\n# Performance analysis\nperformance = await plugin._analyze_performance_handler(\"comprehensive\", \"all\")\n\n# Health checks\nhealth = await plugin._workflow_health_check_handler(\"comprehensive\")",
      "description": "Concept: python\n# Self-monitoring\nmonitor = await plugin._self_monitor_handler(\"comprehensive\", \"all\")\n\n# Performance analysis\nperformance = await plugin._analyze_performance_handler(\"comprehensive\", \"all\")\n\n# Health checks\nhealth = await plugin._workflow_health_check_handler(\"comprehensive\")",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957550.983052,
      "updated_at": 1754957550.983052
    },
    "concept_573": {
      "id": "concept_573",
      "type": "concept",
      "name": "Unified memory operations",
      "description": "Concept: Unified memory operations",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957550.98318,
      "updated_at": 1754957550.983181
    },
    "concept_574": {
      "id": "concept_574",
      "type": "concept",
      "name": "### **Domain 3: PROCESSING & THINKING**",
      "description": "Concept: ### **Domain 3: PROCESSING & THINKING**",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957550.9833732,
      "updated_at": 1754957550.9833732
    },
    "concept_575": {
      "id": "concept_575",
      "type": "concept",
      "name": "**3. Run the Demonstration**",
      "description": "Concept: **3. Run the Demonstration**",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957550.983615,
      "updated_at": 1754957550.983615
    },
    "concept_576": {
      "id": "concept_576",
      "type": "concept",
      "name": "Get enhanced context",
      "description": "Concept: Get enhanced context",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957550.9837608,
      "updated_at": 1754957550.9837608
    },
    "concept_577": {
      "id": "concept_577",
      "type": "concept",
      "name": "Human brain-focused organization",
      "description": "Concept: Human brain-focused organization",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md",
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957550.983886,
      "updated_at": 1754957551.1860638
    },
    "concept_578": {
      "id": "concept_578",
      "type": "concept",
      "name": "python\n# Analyze content\nresult = await plugin._perceive_and_analyze_handler(\"content to analyze\", \"comprehensive\")\n\n# Get enhanced context\ncontext = await plugin._enhanced_context_retrieval_handler(\"user message\", include_history=True)\n\n# Get Cursor context\ncursor_context = await plugin._get_cursor_context_handler()",
      "description": "Concept: python\n# Analyze content\nresult = await plugin._perceive_and_analyze_handler(\"content to analyze\", \"comprehensive\")\n\n# Get enhanced context\ncontext = await plugin._enhanced_context_retrieval_handler(\"user message\", include_history=True)\n\n# Get Cursor context\ncursor_context = await plugin._get_cursor_context_handler()",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957550.984065,
      "updated_at": 1754957550.984065
    },
    "concept_579": {
      "id": "concept_579",
      "type": "concept",
      "name": "Optimize workflows",
      "description": "Concept: Optimize workflows",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957550.984224,
      "updated_at": 1754957550.984224
    },
    "concept_580": {
      "id": "concept_580",
      "type": "concept",
      "name": "python\n# Unified memory operations\nawait plugin._memory_operations_handler(\"store\", \"important fact\")\ndata = await plugin._memory_operations_handler(\"retrieve\", \"\", \"query\")\nsearch = await plugin._memory_operations_handler(\"search\", \"\", \"search term\")\nawait plugin._memory_operations_handler(\"clear\", \"\", \"\")\n\n# Auto-process messages\nawait plugin._auto_process_message_handler(\"user message\")\n\n# Track conversations\nawait plugin._track_conversation_handler(\"user msg\", \"assistant response\", \"coding\")",
      "description": "Concept: python\n# Unified memory operations\nawait plugin._memory_operations_handler(\"store\", \"important fact\")\ndata = await plugin._memory_operations_handler(\"retrieve\", \"\", \"query\")\nsearch = await plugin._memory_operations_handler(\"search\", \"\", \"search term\")\nawait plugin._memory_operations_handler(\"clear\", \"\", \"\")\n\n# Auto-process messages\nawait plugin._auto_process_message_handler(\"user message\")\n\n# Track conversations\nawait plugin._track_conversation_handler(\"user msg\", \"assistant response\", \"coding\")",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957550.984448,
      "updated_at": 1754957550.984448
    },
    "concept_581": {
      "id": "concept_581",
      "type": "concept",
      "name": "Test individual imports",
      "description": "Concept: Test individual imports",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md",
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957550.984566,
      "updated_at": 1754957551.189989
    },
    "concept_582": {
      "id": "concept_582",
      "type": "concept",
      "name": "Test the restructured plugin",
      "description": "Concept: Test the restructured plugin",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md",
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957550.984691,
      "updated_at": 1754957551.190119
    },
    "concept_583": {
      "id": "concept_583",
      "type": "concept",
      "name": "\ud83d\ude80 **Production Deployment**",
      "description": "Concept: \ud83d\ude80 **Production Deployment**",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957550.984925,
      "updated_at": 1754957550.984925
    },
    "concept_584": {
      "id": "concept_584",
      "type": "concept",
      "name": "\ud83c\udfaf **Migration Strategy**",
      "description": "Concept: \ud83c\udfaf **Migration Strategy**",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957550.98509,
      "updated_at": 1754957550.98509
    },
    "concept_585": {
      "id": "concept_585",
      "type": "concept",
      "name": "### **Option 2: Use as Standalone Plugin**\n\nThe restructured plugin can work independently:",
      "description": "Concept: ### **Option 2: Use as Standalone Plugin**\n\nThe restructured plugin can work independently:",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957550.9852228,
      "updated_at": 1754957550.9852228
    },
    "concept_586": {
      "id": "concept_586",
      "type": "concept",
      "name": "### **Domain 6: SELF-MONITORING**",
      "description": "Concept: ### **Domain 6: SELF-MONITORING**",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957550.985343,
      "updated_at": 1754957550.985344
    },
    "concept_587": {
      "id": "concept_587",
      "type": "concept",
      "name": "Use the self-monitoring tools to track system health",
      "description": "Concept: Use the self-monitoring tools to track system health",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957550.98547,
      "updated_at": 1754957550.98547
    },
    "concept_588": {
      "id": "concept_588",
      "type": "concept",
      "name": "### **2. Deploy to Production**\n\n- Copy the restructured plugin to your production environment\n- Ensure all dependencies are available\n- Test with a subset of users first\n- Monitor performance and user adoption\n\n### **3. Monitor and Optimize**\n\n- Use the self-monitoring tools to track system health\n- Analyze performance patterns\n- Optimize based on usage data\n- Gather user feedback\n\n---\n\n## \ud83c\udfaf **Migration Strategy**\n\n### **Phase 1: Parallel Operation**\n\n- Deploy restructured plugin alongside existing tools\n- Users can use either interface\n- Monitor usage patterns\n\n### **Phase 2: Gradual Migration**\n\n- Encourage users to try new cognitive domain tools\n- Provide training and documentation\n- Mark old tools as deprecated\n\n### **Phase 3: Full Migration**\n\n- Switch to cognitive domain interface as primary\n- Maintain backward compatibility for critical functions\n- Remove deprecated tools\n\n---\n\n## \ud83d\udd17 **Quick Reference**\n\n### **Main Plugin**",
      "description": "Concept: ### **2. Deploy to Production**\n\n- Copy the restructured plugin to your production environment\n- Ensure all dependencies are available\n- Test with a subset of users first\n- Monitor performance and user adoption\n\n### **3. Monitor and Optimize**\n\n- Use the self-monitoring tools to track system health\n- Analyze performance patterns\n- Optimize based on usage data\n- Gather user feedback\n\n---\n\n## \ud83c\udfaf **Migration Strategy**\n\n### **Phase 1: Parallel Operation**\n\n- Deploy restructured plugin alongside existing tools\n- Users can use either interface\n- Monitor usage patterns\n\n### **Phase 2: Gradual Migration**\n\n- Encourage users to try new cognitive domain tools\n- Provide training and documentation\n- Mark old tools as deprecated\n\n### **Phase 3: Full Migration**\n\n- Switch to cognitive domain interface as primary\n- Maintain backward compatibility for critical functions\n- Remove deprecated tools\n\n---\n\n## \ud83d\udd17 **Quick Reference**\n\n### **Main Plugin**",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957550.987259,
      "updated_at": 1754957550.987259
    },
    "concept_589": {
      "id": "concept_589",
      "type": "concept",
      "name": "Switch to cognitive domain interface as primary",
      "description": "Concept: Switch to cognitive domain interface as primary",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957550.9873888,
      "updated_at": 1754957550.9873888
    },
    "concept_590": {
      "id": "concept_590",
      "type": "concept",
      "name": "**Phase 2: Gradual Migration**",
      "description": "Concept: **Phase 2: Gradual Migration**",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md",
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957550.987515,
      "updated_at": 1754957551.27167
    },
    "concept_591": {
      "id": "concept_591",
      "type": "concept",
      "name": "Import the restructured plugin",
      "description": "Concept: Import the restructured plugin",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957550.9876401,
      "updated_at": 1754957550.9876401
    },
    "concept_592": {
      "id": "concept_592",
      "type": "concept",
      "name": "**Plugin Not Found**",
      "description": "Concept: **Plugin Not Found**",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md",
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957550.98776,
      "updated_at": 1754957551.192914
    },
    "concept_593": {
      "id": "concept_593",
      "type": "concept",
      "name": "\ud83e\udde0 **Using the Cognitive Domains**",
      "description": "Concept: \ud83e\udde0 **Using the Cognitive Domains**",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957550.987947,
      "updated_at": 1754957550.987947
    },
    "concept_594": {
      "id": "concept_594",
      "type": "concept",
      "name": "\ud83d\udd27 **Integration Guide - Restructured Cognitive System**",
      "description": "Concept: \ud83d\udd27 **Integration Guide - Restructured Cognitive System**",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957550.988184,
      "updated_at": 1754957550.988184
    },
    "concept_595": {
      "id": "concept_595",
      "type": "concept",
      "name": "All 18 tools are fully functional",
      "description": "Concept: All 18 tools are fully functional",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md",
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957550.988312,
      "updated_at": 1754957551.214051
    },
    "concept_596": {
      "id": "concept_596",
      "type": "concept",
      "name": "**Test Command**",
      "description": "Concept: **Test Command**",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md",
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957550.988488,
      "updated_at": 1754957551.195322
    },
    "concept_597": {
      "id": "concept_597",
      "type": "concept",
      "name": "python\n# Unified learning\nawait plugin._learn_and_adapt_handler(\"learn\", \"new information\", \"focus\")\nawait plugin._learn_and_adapt_handler(\"reflect\", \"\", \"area\")\nawait plugin._learn_and_adapt_handler(\"dream\", \"\", \"\")\nawait plugin._learn_and_adapt_handler(\"remember\", \"important fact\", \"category\")\n\n# Continuous learning\nlearning = await plugin._continuous_learning_cycle_handler(interaction_data, \"focus\")\n\n# Optimize workflows\noptimization = await plugin._optimize_workflow_handler(\"performance\", [\"speed\", \"accuracy\"])",
      "description": "Concept: python\n# Unified learning\nawait plugin._learn_and_adapt_handler(\"learn\", \"new information\", \"focus\")\nawait plugin._learn_and_adapt_handler(\"reflect\", \"\", \"area\")\nawait plugin._learn_and_adapt_handler(\"dream\", \"\", \"\")\nawait plugin._learn_and_adapt_handler(\"remember\", \"important fact\", \"category\")\n\n# Continuous learning\nlearning = await plugin._continuous_learning_cycle_handler(interaction_data, \"focus\")\n\n# Optimize workflows\noptimization = await plugin._optimize_workflow_handler(\"performance\", [\"speed\", \"accuracy\"])",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957550.98886,
      "updated_at": 1754957550.98886
    },
    "concept_598": {
      "id": "concept_598",
      "type": "concept",
      "name": "### **Workflow Health**",
      "description": "Concept: ### **Workflow Health**",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md",
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957550.9890728,
      "updated_at": 1754957551.196096
    },
    "concept_599": {
      "id": "concept_599",
      "type": "concept",
      "name": "Optimize based on usage data",
      "description": "Concept: Optimize based on usage data",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957550.989635,
      "updated_at": 1754957550.989635
    },
    "concept_600": {
      "id": "concept_600",
      "type": "concept",
      "name": "**2. Deploy to Production**",
      "description": "Concept: **2. Deploy to Production**",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957550.990151,
      "updated_at": 1754957550.990151
    },
    "concept_601": {
      "id": "concept_601",
      "type": "concept",
      "name": "Natural cognitive workflow progression",
      "description": "Concept: Natural cognitive workflow progression",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md",
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957550.990462,
      "updated_at": 1754957551.196887
    },
    "concept_602": {
      "id": "concept_602",
      "type": "concept",
      "name": "Deep thinking",
      "description": "Concept: Deep thinking",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md",
          "demo_restructured_cognitive_system.py"
        ]
      },
      "created_at": 1754957550.990614,
      "updated_at": 1754957551.750153
    },
    "concept_603": {
      "id": "concept_603",
      "type": "concept",
      "name": "Auto-process messages",
      "description": "Concept: Auto-process messages",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957550.9907572,
      "updated_at": 1754957550.9907572
    },
    "concept_604": {
      "id": "concept_604",
      "type": "concept",
      "name": "python\nfrom plugins.cognitive_brain_restructured import CognitiveBrainRestructuredPlugin",
      "description": "Concept: python\nfrom plugins.cognitive_brain_restructured import CognitiveBrainRestructuredPlugin",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md",
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957550.9908931,
      "updated_at": 1754957551.197506
    },
    "concept_605": {
      "id": "concept_605",
      "type": "concept",
      "name": "---\n\n## \ud83d\udcca **Performance Monitoring**\n\n### **Check System Status**",
      "description": "Concept: ---\n\n## \ud83d\udcca **Performance Monitoring**\n\n### **Check System Status**",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957550.991162,
      "updated_at": 1754957550.991162
    },
    "concept_606": {
      "id": "concept_606",
      "type": "concept",
      "name": "python\nfrom plugins.cognitive_brain_restructured import CognitiveBrainRestructuredPlugin\n\n# Initialize\nplugin = CognitiveBrainRestructuredPlugin()\nplugin._setup()\n\n# Use any tool\nresult = await plugin._memory_operations_handler(\"store\", \"Test memory\")",
      "description": "Concept: python\nfrom plugins.cognitive_brain_restructured import CognitiveBrainRestructuredPlugin\n\n# Initialize\nplugin = CognitiveBrainRestructuredPlugin()\nplugin._setup()\n\n# Use any tool\nresult = await plugin._memory_operations_handler(\"store\", \"Test memory\")",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957550.991342,
      "updated_at": 1754957550.991342
    },
    "concept_607": {
      "id": "concept_607",
      "type": "concept",
      "name": "Deploy restructured plugin alongside existing tools",
      "description": "Concept: Deploy restructured plugin alongside existing tools",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957550.991474,
      "updated_at": 1754957550.991474
    },
    "concept_608": {
      "id": "concept_608",
      "type": "concept",
      "name": "List available tools",
      "description": "Concept: List available tools",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md",
          "test_docker_functionality.py",
          "test_enhanced_docker.py"
        ]
      },
      "created_at": 1754957550.991609,
      "updated_at": 1754957552.676634
    },
    "concept_609": {
      "id": "concept_609",
      "type": "concept",
      "name": "**Phase 1: Parallel Operation**",
      "description": "Concept: **Phase 1: Parallel Operation**",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957550.991942,
      "updated_at": 1754957550.991943
    },
    "concept_610": {
      "id": "concept_610",
      "type": "concept",
      "name": "### **Documentation**\n\n-",
      "description": "Concept: ### **Documentation**\n\n-",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957550.9922502,
      "updated_at": 1754957550.9922502
    },
    "concept_611": {
      "id": "concept_611",
      "type": "concept",
      "name": "python\n# Monitor overall system\nstatus = await plugin._self_monitor_handler(\"comprehensive\", \"all\")\nprint(f\"System Status: {status['monitoring_result']['overall_health']}\")\n\n# Analyze performance\nperformance = await plugin._analyze_performance_handler(\"comprehensive\", \"all\")\nprint(f\"Performance Score: {performance['analysis_result']['performance_metrics']['overall_score']}\")",
      "description": "Concept: python\n# Monitor overall system\nstatus = await plugin._self_monitor_handler(\"comprehensive\", \"all\")\nprint(f\"System Status: {status['monitoring_result']['overall_health']}\")\n\n# Analyze performance\nperformance = await plugin._analyze_performance_handler(\"comprehensive\", \"all\")\nprint(f\"Performance Score: {performance['analysis_result']['performance_metrics']['overall_score']}\")",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md",
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957550.992825,
      "updated_at": 1754957551.2003589
    },
    "concept_612": {
      "id": "concept_612",
      "type": "concept",
      "name": "Analyze performance patterns",
      "description": "Concept: Analyze performance patterns",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957550.99328,
      "updated_at": 1754957550.99328
    },
    "concept_613": {
      "id": "concept_613",
      "type": "concept",
      "name": "Initialize in your server setup",
      "description": "Concept: Initialize in your server setup",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957550.9936619,
      "updated_at": 1754957550.9936619
    },
    "concept_614": {
      "id": "concept_614",
      "type": "concept",
      "name": "Test each domain...",
      "description": "Concept: Test each domain...",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957550.993807,
      "updated_at": 1754957550.993807
    },
    "concept_615": {
      "id": "concept_615",
      "type": "concept",
      "name": "Run the complete demonstration",
      "description": "Concept: Run the complete demonstration",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957550.994022,
      "updated_at": 1754957550.994022
    },
    "concept_616": {
      "id": "concept_616",
      "type": "concept",
      "name": "Users can use either interface",
      "description": "Concept: Users can use either interface",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957550.994154,
      "updated_at": 1754957550.994154
    },
    "concept_617": {
      "id": "concept_617",
      "type": "concept",
      "name": "Unified learning",
      "description": "Concept: Unified learning",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957550.994345,
      "updated_at": 1754957550.994345
    },
    "concept_618": {
      "id": "concept_618",
      "type": "concept",
      "name": "### **Functionality Issues**\n\nIf some tools don't work:",
      "description": "Concept: ### **Functionality Issues**\n\nIf some tools don't work:",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957550.9944818,
      "updated_at": 1754957550.9944818
    },
    "concept_619": {
      "id": "concept_619",
      "type": "concept",
      "name": "- Comprehensive system documentation\n-",
      "description": "Concept: - Comprehensive system documentation\n-",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957550.994612,
      "updated_at": 1754957550.994612
    },
    "concept_620": {
      "id": "concept_620",
      "type": "concept",
      "name": "---\n\n## \ud83d\udd0d **Troubleshooting**\n\n### **Import Errors**\n\nIf you get import errors:",
      "description": "Concept: ---\n\n## \ud83d\udd0d **Troubleshooting**\n\n### **Import Errors**\n\nIf you get import errors:",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957550.994915,
      "updated_at": 1754957550.994915
    },
    "concept_621": {
      "id": "concept_621",
      "type": "concept",
      "name": "**Check System Status**",
      "description": "Concept: **Check System Status**",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md",
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957550.9950469,
      "updated_at": 1754957551.204163
    },
    "concept_622": {
      "id": "concept_622",
      "type": "concept",
      "name": "Monitor usage patterns",
      "description": "Concept: Monitor usage patterns",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957550.9951758,
      "updated_at": 1754957550.9951758
    },
    "concept_623": {
      "id": "concept_623",
      "type": "concept",
      "name": "Use any tool",
      "description": "Concept: Use any tool",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md",
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957550.995379,
      "updated_at": 1754957551.204544
    },
    "concept_624": {
      "id": "concept_624",
      "type": "concept",
      "name": "**1. Test in Development**",
      "description": "Concept: **1. Test in Development**",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957550.995798,
      "updated_at": 1754957550.995798
    },
    "concept_625": {
      "id": "concept_625",
      "type": "concept",
      "name": "Self-monitoring",
      "description": "Concept: Self-monitoring",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md",
          "demo_restructured_cognitive_system.py"
        ]
      },
      "created_at": 1754957550.9960918,
      "updated_at": 1754957551.755717
    },
    "concept_626": {
      "id": "concept_626",
      "type": "concept",
      "name": "Execute workflows",
      "description": "Concept: Execute workflows",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957550.9964721,
      "updated_at": 1754957550.9964721
    },
    "concept_627": {
      "id": "concept_627",
      "type": "concept",
      "name": "Check plugin directory",
      "description": "Concept: Check plugin directory",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md",
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957550.996602,
      "updated_at": 1754957551.2060318
    },
    "concept_628": {
      "id": "concept_628",
      "type": "concept",
      "name": "bash\n# Run the complete demonstration\npython demo_restructured_cognitive_system.py",
      "description": "Concept: bash\n# Run the complete demonstration\npython demo_restructured_cognitive_system.py",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957550.9967449,
      "updated_at": 1754957550.9967449
    },
    "concept_629": {
      "id": "concept_629",
      "type": "concept",
      "name": "### **Domain 2: MEMORY & STORAGE**",
      "description": "Concept: ### **Domain 2: MEMORY & STORAGE**",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957550.996877,
      "updated_at": 1754957550.996877
    },
    "concept_630": {
      "id": "concept_630",
      "type": "concept",
      "name": "---\n\n## \ud83d\ude80 **Production Deployment**\n\n### **1. Test in Development**",
      "description": "Concept: ---\n\n## \ud83d\ude80 **Production Deployment**\n\n### **1. Test in Development**",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.001069,
      "updated_at": 1754957551.001069
    },
    "concept_631": {
      "id": "concept_631",
      "type": "concept",
      "name": "AI chat with memory",
      "description": "Concept: AI chat with memory",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.001332,
      "updated_at": 1754957551.001332
    },
    "concept_632": {
      "id": "concept_632",
      "type": "concept",
      "name": "### **Plugin Not Found**\n\nIf plugins aren't found:",
      "description": "Concept: ### **Plugin Not Found**\n\nIf plugins aren't found:",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.0015948,
      "updated_at": 1754957551.0015948
    },
    "concept_633": {
      "id": "concept_633",
      "type": "concept",
      "name": "python\n# Add to sys.path in your script\nimport sys\nfrom pathlib import Path\nsys.path.insert(0, str(Path(__file__).parent / \"plugins\"))\nsys.path.insert(0, str(Path(__file__).parent))",
      "description": "Concept: python\n# Add to sys.path in your script\nimport sys\nfrom pathlib import Path\nsys.path.insert(0, str(Path(__file__).parent / \"plugins\"))\nsys.path.insert(0, str(Path(__file__).parent))",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md",
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.0017679,
      "updated_at": 1754957551.206665
    },
    "concept_634": {
      "id": "concept_634",
      "type": "concept",
      "name": "Copy the restructured plugin to your production environment",
      "description": "Concept: Copy the restructured plugin to your production environment",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.003443,
      "updated_at": 1754957551.003443
    },
    "concept_635": {
      "id": "concept_635",
      "type": "concept",
      "name": "Get Cursor context",
      "description": "Concept: Get Cursor context",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.003593,
      "updated_at": 1754957551.003593
    },
    "concept_636": {
      "id": "concept_636",
      "type": "concept",
      "name": "Check Python path",
      "description": "Concept: Check Python path",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md",
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.003724,
      "updated_at": 1754957551.208832
    },
    "concept_637": {
      "id": "concept_637",
      "type": "concept",
      "name": "### **Domain 5: OUTPUT & ACTION**",
      "description": "Concept: ### **Domain 5: OUTPUT & ACTION**",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.003886,
      "updated_at": 1754957551.0038872
    },
    "concept_638": {
      "id": "concept_638",
      "type": "concept",
      "name": "Initialize",
      "description": "Concept: Initialize",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md",
          "function_call_logger.py"
        ]
      },
      "created_at": 1754957551.004252,
      "updated_at": 1754957551.945184
    },
    "concept_639": {
      "id": "concept_639",
      "type": "concept",
      "name": "### **Test Command**",
      "description": "Concept: ### **Test Command**",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md",
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.0045571,
      "updated_at": 1754957551.210666
    },
    "concept_640": {
      "id": "concept_640",
      "type": "concept",
      "name": "- Executive summary\n-",
      "description": "Concept: - Executive summary\n-",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.00486,
      "updated_at": 1754957551.00486
    },
    "concept_641": {
      "id": "concept_641",
      "type": "concept",
      "name": "**Documentation**",
      "description": "Concept: **Documentation**",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md",
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.0051682,
      "updated_at": 1754957551.212275
    },
    "concept_642": {
      "id": "concept_642",
      "type": "concept",
      "name": "bash\n# Test the restructured plugin\npython -c \"\nimport sys; sys.path.insert(0, '.')\nfrom plugins.cognitive_brain_restructured import CognitiveBrainRestructuredPlugin\nplugin = CognitiveBrainRestructuredPlugin()\nplugin._setup()\ntools = plugin.get_tools()\nprint(f'\u2705 Ready! {len(tools)} tools in 6 cognitive domains')\n\"",
      "description": "Concept: bash\n# Test the restructured plugin\npython -c \"\nimport sys; sys.path.insert(0, '.')\nfrom plugins.cognitive_brain_restructured import CognitiveBrainRestructuredPlugin\nplugin = CognitiveBrainRestructuredPlugin()\nplugin._setup()\ntools = plugin.get_tools()\nprint(f'\u2705 Ready! {len(tools)} tools in 6 cognitive domains')\n\"",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md",
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.006187,
      "updated_at": 1754957551.2129438
    },
    "concept_643": {
      "id": "concept_643",
      "type": "concept",
      "name": "Maintain backward compatibility for critical functions",
      "description": "Concept: Maintain backward compatibility for critical functions",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.006352,
      "updated_at": 1754957551.006352
    },
    "concept_644": {
      "id": "concept_644",
      "type": "concept",
      "name": "100% functionality preservation",
      "description": "Concept: 100% functionality preservation",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md",
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.006491,
      "updated_at": 1754957551.213077
    },
    "concept_645": {
      "id": "concept_645",
      "type": "concept",
      "name": "Remove deprecated tools",
      "description": "Concept: Remove deprecated tools",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.0066261,
      "updated_at": 1754957551.0066261
    },
    "concept_646": {
      "id": "concept_646",
      "type": "concept",
      "name": "Track conversations",
      "description": "Concept: Track conversations",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.006937,
      "updated_at": 1754957551.006937
    },
    "concept_647": {
      "id": "concept_647",
      "type": "concept",
      "name": "### **2. Test the Restructured System**",
      "description": "Concept: ### **2. Test the Restructured System**",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.0070982,
      "updated_at": 1754957551.0070982
    },
    "concept_648": {
      "id": "concept_648",
      "type": "concept",
      "name": "### **3. Run the Demonstration**",
      "description": "Concept: ### **3. Run the Demonstration**",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.007236,
      "updated_at": 1754957551.007236
    },
    "concept_649": {
      "id": "concept_649",
      "type": "concept",
      "name": "---\n\n## \ud83e\udde0 **Using the Cognitive Domains**\n\n### **Domain 1: PERCEPTION & INPUT**",
      "description": "Concept: ---\n\n## \ud83e\udde0 **Using the Cognitive Domains**\n\n### **Domain 1: PERCEPTION & INPUT**",
      "source": "INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.007683,
      "updated_at": 1754957551.007684
    },
    "doc_650": {
      "id": "doc_650",
      "type": "document",
      "name": "Maintenance_Report",
      "description": "Document: MAINTENANCE_REPORT.md",
      "source": "MAINTENANCE_REPORT.md",
      "confidence": 0.9,
      "metadata": {
        "file_size": 927,
        "lines": 45,
        "language": "unknown",
        "last_modified": 1754940776.5703635
      },
      "created_at": 1754957551.008304,
      "updated_at": 1754957551.008304
    },
    "concept_651": {
      "id": "concept_651",
      "type": "concept",
      "name": "\ud83d\udcc1 src/",
      "description": "Concept: \ud83d\udcc1 src/",
      "source": "MAINTENANCE_REPORT.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "MAINTENANCE_REPORT.md"
        ]
      },
      "created_at": 1754957551.00849,
      "updated_at": 1754957551.00849
    },
    "concept_652": {
      "id": "concept_652",
      "type": "concept",
      "name": "\ud83d\udcc4 CLEANUP_SUMMARY.md",
      "description": "Concept: \ud83d\udcc4 CLEANUP_SUMMARY.md",
      "source": "MAINTENANCE_REPORT.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "MAINTENANCE_REPORT.md"
        ]
      },
      "created_at": 1754957551.008665,
      "updated_at": 1754957551.008665
    },
    "concept_653": {
      "id": "concept_653",
      "type": "concept",
      "name": "\ud83d\udcc4 README.md",
      "description": "Concept: \ud83d\udcc4 README.md",
      "source": "MAINTENANCE_REPORT.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "MAINTENANCE_REPORT.md"
        ]
      },
      "created_at": 1754957551.008822,
      "updated_at": 1754957551.008822
    },
    "concept_654": {
      "id": "concept_654",
      "type": "concept",
      "name": "\ud83d\udcc4 llm_client.py",
      "description": "Concept: \ud83d\udcc4 llm_client.py",
      "source": "MAINTENANCE_REPORT.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "MAINTENANCE_REPORT.md"
        ]
      },
      "created_at": 1754957551.00899,
      "updated_at": 1754957551.00899
    },
    "concept_655": {
      "id": "concept_655",
      "type": "concept",
      "name": "Project Maintenance Report",
      "description": "Concept: Project Maintenance Report",
      "source": "MAINTENANCE_REPORT.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "MAINTENANCE_REPORT.md"
        ]
      },
      "created_at": 1754957551.009124,
      "updated_at": 1754957551.009124
    },
    "concept_656": {
      "id": "concept_656",
      "type": "concept",
      "name": "\ud83d\udcc4 Dockerfile",
      "description": "Concept: \ud83d\udcc4 Dockerfile",
      "source": "MAINTENANCE_REPORT.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "MAINTENANCE_REPORT.md"
        ]
      },
      "created_at": 1754957551.009295,
      "updated_at": 1754957551.009295
    },
    "concept_657": {
      "id": "concept_657",
      "type": "concept",
      "name": "\ud83d\udcc1 tests/",
      "description": "Concept: \ud83d\udcc1 tests/",
      "source": "MAINTENANCE_REPORT.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "MAINTENANCE_REPORT.md"
        ]
      },
      "created_at": 1754957551.009538,
      "updated_at": 1754957551.009538
    },
    "concept_658": {
      "id": "concept_658",
      "type": "concept",
      "name": "Directory structure verified",
      "description": "Concept: Directory structure verified",
      "source": "MAINTENANCE_REPORT.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "MAINTENANCE_REPORT.md"
        ]
      },
      "created_at": 1754957551.009684,
      "updated_at": 1754957551.009684
    },
    "concept_659": {
      "id": "concept_659",
      "type": "concept",
      "name": "\ud83d\udcc1 brain_memory_store/",
      "description": "Concept: \ud83d\udcc1 brain_memory_store/",
      "source": "MAINTENANCE_REPORT.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "MAINTENANCE_REPORT.md"
        ]
      },
      "created_at": 1754957551.009902,
      "updated_at": 1754957551.009902
    },
    "concept_660": {
      "id": "concept_660",
      "type": "concept",
      "name": "\ud83d\udcc4 brain_interface.py",
      "description": "Concept: \ud83d\udcc4 brain_interface.py",
      "source": "MAINTENANCE_REPORT.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "MAINTENANCE_REPORT.md"
        ]
      },
      "created_at": 1754957551.010093,
      "updated_at": 1754957551.010093
    },
    "concept_661": {
      "id": "concept_661",
      "type": "concept",
      "name": "\ud83d\udcc4 setup_shared.sh",
      "description": "Concept: \ud83d\udcc4 setup_shared.sh",
      "source": "MAINTENANCE_REPORT.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "MAINTENANCE_REPORT.md"
        ]
      },
      "created_at": 1754957551.0102642,
      "updated_at": 1754957551.0102642
    },
    "concept_662": {
      "id": "concept_662",
      "type": "concept",
      "name": "Maintenance Actions",
      "description": "Concept: Maintenance Actions",
      "source": "MAINTENANCE_REPORT.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "MAINTENANCE_REPORT.md"
        ]
      },
      "created_at": 1754957551.010397,
      "updated_at": 1754957551.010397
    },
    "concept_663": {
      "id": "concept_663",
      "type": "concept",
      "name": "\ud83d\udcc4 mcp-server-config-shareable.json",
      "description": "Concept: \ud83d\udcc4 mcp-server-config-shareable.json",
      "source": "MAINTENANCE_REPORT.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "MAINTENANCE_REPORT.md"
        ]
      },
      "created_at": 1754957551.010603,
      "updated_at": 1754957551.010603
    },
    "concept_664": {
      "id": "concept_664",
      "type": "concept",
      "name": "Docker configuration reviewed",
      "description": "Concept: Docker configuration reviewed",
      "source": "MAINTENANCE_REPORT.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "MAINTENANCE_REPORT.md"
        ]
      },
      "created_at": 1754957551.01074,
      "updated_at": 1754957551.01074
    },
    "concept_665": {
      "id": "concept_665",
      "type": "concept",
      "name": "\ud83d\udcc4 function_call_logger.py",
      "description": "Concept: \ud83d\udcc4 function_call_logger.py",
      "source": "MAINTENANCE_REPORT.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "MAINTENANCE_REPORT.md"
        ]
      },
      "created_at": 1754957551.0109282,
      "updated_at": 1754957551.0109282
    },
    "concept_666": {
      "id": "concept_666",
      "type": "concept",
      "name": "\ud83d\udcc4 docker-compose.yml",
      "description": "Concept: \ud83d\udcc4 docker-compose.yml",
      "source": "MAINTENANCE_REPORT.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "MAINTENANCE_REPORT.md"
        ]
      },
      "created_at": 1754957551.011105,
      "updated_at": 1754957551.011105
    },
    "concept_667": {
      "id": "concept_667",
      "type": "concept",
      "name": "\ud83d\udcc4 setup_shared.bat",
      "description": "Concept: \ud83d\udcc4 setup_shared.bat",
      "source": "MAINTENANCE_REPORT.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "MAINTENANCE_REPORT.md"
        ]
      },
      "created_at": 1754957551.0112782,
      "updated_at": 1754957551.0112782
    },
    "concept_668": {
      "id": "concept_668",
      "type": "concept",
      "name": "Python cache files checked and cleaned",
      "description": "Concept: Python cache files checked and cleaned",
      "source": "MAINTENANCE_REPORT.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "MAINTENANCE_REPORT.md"
        ]
      },
      "created_at": 1754957551.011418,
      "updated_at": 1754957551.011418
    },
    "concept_669": {
      "id": "concept_669",
      "type": "concept",
      "name": "\ud83d\udcc4 main.py",
      "description": "Concept: \ud83d\udcc4 main.py",
      "source": "MAINTENANCE_REPORT.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "MAINTENANCE_REPORT.md"
        ]
      },
      "created_at": 1754957551.011586,
      "updated_at": 1754957551.011586
    },
    "concept_670": {
      "id": "concept_670",
      "type": "concept",
      "name": "\ud83d\udcc1 plugins/",
      "description": "Concept: \ud83d\udcc1 plugins/",
      "source": "MAINTENANCE_REPORT.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "MAINTENANCE_REPORT.md"
        ]
      },
      "created_at": 1754957551.011745,
      "updated_at": 1754957551.011745
    },
    "concept_671": {
      "id": "concept_671",
      "type": "concept",
      "name": "Directory Structure",
      "description": "Concept: Directory Structure",
      "source": "MAINTENANCE_REPORT.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "MAINTENANCE_REPORT.md"
        ]
      },
      "created_at": 1754957551.01188,
      "updated_at": 1754957551.01188
    },
    "concept_672": {
      "id": "concept_672",
      "type": "concept",
      "name": "\ud83d\udcc1 docs/",
      "description": "Concept: \ud83d\udcc1 docs/",
      "source": "MAINTENANCE_REPORT.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "MAINTENANCE_REPORT.md"
        ]
      },
      "created_at": 1754957551.0120351,
      "updated_at": 1754957551.0120351
    },
    "concept_673": {
      "id": "concept_673",
      "type": "concept",
      "name": "\ud83d\udcc1 config/",
      "description": "Concept: \ud83d\udcc1 config/",
      "source": "MAINTENANCE_REPORT.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "MAINTENANCE_REPORT.md"
        ]
      },
      "created_at": 1754957551.012191,
      "updated_at": 1754957551.012191
    },
    "concept_674": {
      "id": "concept_674",
      "type": "concept",
      "name": "\ud83d\udcc4 pyproject.toml",
      "description": "Concept: \ud83d\udcc4 pyproject.toml",
      "source": "MAINTENANCE_REPORT.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "MAINTENANCE_REPORT.md"
        ]
      },
      "created_at": 1754957551.012362,
      "updated_at": 1754957551.012362
    },
    "concept_675": {
      "id": "concept_675",
      "type": "concept",
      "name": "Recommendations",
      "description": "Concept: Recommendations",
      "source": "MAINTENANCE_REPORT.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "MAINTENANCE_REPORT.md",
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.012498,
      "updated_at": 1754957551.83376
    },
    "concept_676": {
      "id": "concept_676",
      "type": "concept",
      "name": "\ud83d\udcc4 PROJECT_ORGANIZATION.md",
      "description": "Concept: \ud83d\udcc4 PROJECT_ORGANIZATION.md",
      "source": "MAINTENANCE_REPORT.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "MAINTENANCE_REPORT.md"
        ]
      },
      "created_at": 1754957551.0126898,
      "updated_at": 1754957551.0126898
    },
    "concept_677": {
      "id": "concept_677",
      "type": "concept",
      "name": "\ud83d\udcc4 healthcheck.py",
      "description": "Concept: \ud83d\udcc4 healthcheck.py",
      "source": "MAINTENANCE_REPORT.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "MAINTENANCE_REPORT.md"
        ]
      },
      "created_at": 1754957551.012862,
      "updated_at": 1754957551.012862
    },
    "concept_678": {
      "id": "concept_678",
      "type": "concept",
      "name": "Documentation organization checked",
      "description": "Concept: Documentation organization checked",
      "source": "MAINTENANCE_REPORT.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "MAINTENANCE_REPORT.md"
        ]
      },
      "created_at": 1754957551.013003,
      "updated_at": 1754957551.013003
    },
    "concept_679": {
      "id": "concept_679",
      "type": "concept",
      "name": "\ud83d\udcc4 uv.lock",
      "description": "Concept: \ud83d\udcc4 uv.lock",
      "source": "MAINTENANCE_REPORT.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "MAINTENANCE_REPORT.md"
        ]
      },
      "created_at": 1754957551.0131578,
      "updated_at": 1754957551.0131578
    },
    "concept_680": {
      "id": "concept_680",
      "type": "concept",
      "name": "\ud83d\udcc1 database/",
      "description": "Concept: \ud83d\udcc1 database/",
      "source": "MAINTENANCE_REPORT.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "MAINTENANCE_REPORT.md"
        ]
      },
      "created_at": 1754957551.0133162,
      "updated_at": 1754957551.0133162
    },
    "concept_681": {
      "id": "concept_681",
      "type": "concept",
      "name": "\ud83d\udcc1 scripts/",
      "description": "Concept: \ud83d\udcc1 scripts/",
      "source": "MAINTENANCE_REPORT.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "MAINTENANCE_REPORT.md"
        ]
      },
      "created_at": 1754957551.01347,
      "updated_at": 1754957551.01347
    },
    "doc_682": {
      "id": "doc_682",
      "type": "document",
      "name": "Phase_1_Completion_Summary",
      "description": "Document: PHASE_1_COMPLETION_SUMMARY.md",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.9,
      "metadata": {
        "file_size": 10642,
        "lines": 258,
        "language": "unknown",
        "last_modified": 1754957256.1273706
      },
      "created_at": 1754957551.0169559,
      "updated_at": 1754957551.0169559
    },
    "concept_683": {
      "id": "concept_683",
      "type": "concept",
      "name": "self_monitoring(action='assess_scan_accuracy')",
      "description": "Concept: self_monitoring(action='assess_scan_accuracy')",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.0171368,
      "updated_at": 1754957551.0171368
    },
    "concept_684": {
      "id": "concept_684",
      "type": "concept",
      "name": "**`FileMetadata`**: Complete file information with type, language, framework, purpose",
      "description": "Concept: **`FileMetadata`**: Complete file information with type, language, framework, purpose",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.017287,
      "updated_at": 1754957551.017287
    },
    "concept_685": {
      "id": "concept_685",
      "type": "concept",
      "name": "**Purpose Classification**: Automatic categorization by file purpose and location",
      "description": "Concept: **Purpose Classification**: Automatic categorization by file purpose and location",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.017438,
      "updated_at": 1754957551.017438
    },
    "concept_686": {
      "id": "concept_686",
      "type": "concept",
      "name": "**Accuracy & Coverage**",
      "description": "Concept: **Accuracy & Coverage**",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.0175722,
      "updated_at": 1754957551.0175722
    },
    "concept_687": {
      "id": "concept_687",
      "type": "concept",
      "name": "\ud83d\ude80 **Scan Speed**: 2,691+ files/second (target: 100 files/second)",
      "description": "Concept: \ud83d\ude80 **Scan Speed**: 2,691+ files/second (target: 100 files/second)",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.017854,
      "updated_at": 1754957551.017854
    },
    "concept_688": {
      "id": "concept_688",
      "type": "concept",
      "name": "\u2705 **MCP integration** ready for action-based routing",
      "description": "Concept: \u2705 **MCP integration** ready for action-based routing",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.018146,
      "updated_at": 1754957551.018146
    },
    "concept_689": {
      "id": "concept_689",
      "type": "concept",
      "name": "**Output**: Actionable insights and recommendations",
      "description": "Concept: **Output**: Actionable insights and recommendations",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.018313,
      "updated_at": 1754957551.018313
    },
    "concept_690": {
      "id": "concept_690",
      "type": "concept",
      "name": "**Scan Speed**: 2,691+ files/second (our project: 100 files in 0.04s)",
      "description": "Concept: **Scan Speed**: 2,691+ files/second (our project: 100 files in 0.04s)",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.0184598,
      "updated_at": 1754957551.0184598
    },
    "concept_691": {
      "id": "concept_691",
      "type": "concept",
      "name": "**\ud83e\udde0 PERCEPTION & INPUT Domain**",
      "description": "Concept: **\ud83e\udde0 PERCEPTION & INPUT Domain**",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.018668,
      "updated_at": 1754957551.018668
    },
    "concept_692": {
      "id": "concept_692",
      "type": "concept",
      "name": "memory_and_storage(action='store_project_context')",
      "description": "Concept: memory_and_storage(action='store_project_context')",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.018812,
      "updated_at": 1754957551.018812
    },
    "concept_693": {
      "id": "concept_693",
      "type": "concept",
      "name": "`output_and_action(action='suggest_improvements')` \u2192 Improvement recommendations",
      "description": "Concept: `output_and_action(action='suggest_improvements')` \u2192 Improvement recommendations",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.019118,
      "updated_at": 1754957551.019119
    },
    "concept_694": {
      "id": "concept_694",
      "type": "concept",
      "name": "**Code Organization Analysis**: Understands project layout and organization",
      "description": "Concept: **Code Organization Analysis**: Understands project layout and organization",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.019287,
      "updated_at": 1754957551.019287
    },
    "concept_695": {
      "id": "concept_695",
      "type": "concept",
      "name": "**Processing**: Intelligent analysis and pattern recognition",
      "description": "Concept: **Processing**: Intelligent analysis and pattern recognition",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.0194361,
      "updated_at": 1754957551.0194361
    },
    "concept_696": {
      "id": "concept_696",
      "type": "concept",
      "name": "**Language and framework detection** across 20+ programming languages",
      "description": "Concept: **Language and framework detection** across 20+ programming languages",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.019583,
      "updated_at": 1754957551.019583
    },
    "concept_697": {
      "id": "concept_697",
      "type": "concept",
      "name": "\ud83c\udfaf **INTEGRATION WITH MCP SYSTEM**",
      "description": "Concept: \ud83c\udfaf **INTEGRATION WITH MCP SYSTEM**",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.01983,
      "updated_at": 1754957551.01983
    },
    "concept_698": {
      "id": "concept_698",
      "type": "concept",
      "name": "**Memory Efficiency**: 493.9 characters per file indexed",
      "description": "Concept: **Memory Efficiency**: 493.9 characters per file indexed",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.0200992,
      "updated_at": 1754957551.0200992
    },
    "concept_699": {
      "id": "concept_699",
      "type": "concept",
      "name": "\u2705 **Memory Usage**: < 100MB (achieved: ~50KB for 100 files)",
      "description": "Concept: \u2705 **Memory Usage**: < 100MB (achieved: ~50KB for 100 files)",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.020393,
      "updated_at": 1754957551.020393
    },
    "concept_700": {
      "id": "concept_700",
      "type": "concept",
      "name": "\u2705 **Dependency Detection**: 95%+ accuracy (achieved: 100% for supported formats)",
      "description": "Concept: \u2705 **Dependency Detection**: 95%+ accuracy (achieved: 100% for supported formats)",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.020761,
      "updated_at": 1754957551.020761
    },
    "concept_701": {
      "id": "concept_701",
      "type": "concept",
      "name": "**1. Project Scanner (`project_scanner.py`)**",
      "description": "Concept: **1. Project Scanner (`project_scanner.py`)**",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.020917,
      "updated_at": 1754957551.020917
    },
    "concept_702": {
      "id": "concept_702",
      "type": "concept",
      "name": "**Continuous Learning**: Adapts to your project's evolution over time",
      "description": "Concept: **Continuous Learning**: Adapts to your project's evolution over time",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.02107,
      "updated_at": 1754957551.02107
    },
    "concept_703": {
      "id": "concept_703",
      "type": "concept",
      "name": "**2. Data Models & Structures**",
      "description": "Concept: **2. Data Models & Structures**",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.021209,
      "updated_at": 1754957551.021209
    },
    "concept_704": {
      "id": "concept_704",
      "type": "concept",
      "name": "**\ud83e\udde0 SELF-MONITORING Domain**",
      "description": "Concept: **\ud83e\udde0 SELF-MONITORING Domain**",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.021406,
      "updated_at": 1754957551.021406
    },
    "concept_705": {
      "id": "concept_705",
      "type": "concept",
      "name": "**`DirectoryInfo`**: Directory structure with file counts, languages, and frameworks",
      "description": "Concept: **`DirectoryInfo`**: Directory structure with file counts, languages, and frameworks",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.021566,
      "updated_at": 1754957551.021566
    },
    "concept_706": {
      "id": "concept_706",
      "type": "concept",
      "name": "perceive_and_analyze(action='pattern_recognition')",
      "description": "Concept: perceive_and_analyze(action='pattern_recognition')",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.021714,
      "updated_at": 1754957551.021714
    },
    "concept_707": {
      "id": "concept_707",
      "type": "concept",
      "name": "**`ProjectIndex`**: Complete project snapshot with patterns, context, and history",
      "description": "Concept: **`ProjectIndex`**: Complete project snapshot with patterns, context, and history",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.021874,
      "updated_at": 1754957551.021874
    },
    "concept_708": {
      "id": "concept_708",
      "type": "concept",
      "name": "**Semantic understanding** of your code and documentation",
      "description": "Concept: **Semantic understanding** of your code and documentation",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.0220191,
      "updated_at": 1754957551.0220191
    },
    "concept_709": {
      "id": "concept_709",
      "type": "concept",
      "name": "**Proactive context injection** based on deep project knowledge",
      "description": "Concept: **Proactive context injection** based on deep project knowledge",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.022166,
      "updated_at": 1754957551.022166
    },
    "concept_710": {
      "id": "concept_710",
      "type": "concept",
      "name": "`perceive_and_analyze(action='dependency_analysis')` \u2192 Dependency insights",
      "description": "Concept: `perceive_and_analyze(action='dependency_analysis')` \u2192 Dependency insights",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.0224571,
      "updated_at": 1754957551.0224571
    },
    "concept_711": {
      "id": "concept_711",
      "type": "concept",
      "name": "project_scanner.py",
      "description": "Concept: project_scanner.py",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.022593,
      "updated_at": 1754957551.022593
    },
    "concept_712": {
      "id": "concept_712",
      "type": "concept",
      "name": "DependencyInfo",
      "description": "Concept: DependencyInfo",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.022728,
      "updated_at": 1754957551.022728
    },
    "concept_713": {
      "id": "concept_713",
      "type": "concept",
      "name": "**\u2705 What We've Built**",
      "description": "Concept: **\u2705 What We've Built**",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.0229208,
      "updated_at": 1754957551.0229208
    },
    "concept_714": {
      "id": "concept_714",
      "type": "concept",
      "name": "output_and_action(action='provide_context')",
      "description": "Concept: output_and_action(action='provide_context')",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.0230641,
      "updated_at": 1754957551.0230641
    },
    "concept_715": {
      "id": "concept_715",
      "type": "concept",
      "name": "`memory_and_storage(action='store_project_context')` \u2192 Save project context",
      "description": "Concept: `memory_and_storage(action='store_project_context')` \u2192 Save project context",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.023537,
      "updated_at": 1754957551.023537
    },
    "concept_716": {
      "id": "concept_716",
      "type": "concept",
      "name": "`self_monitoring(action='assess_scan_accuracy')` \u2192 Accuracy evaluation",
      "description": "Concept: `self_monitoring(action='assess_scan_accuracy')` \u2192 Accuracy evaluation",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.023853,
      "updated_at": 1754957551.023853
    },
    "concept_717": {
      "id": "concept_717",
      "type": "concept",
      "name": "**File Coverage**: 100% of relevant files indexed",
      "description": "Concept: **File Coverage**: 100% of relevant files indexed",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.0240152,
      "updated_at": 1754957551.0240152
    },
    "concept_718": {
      "id": "concept_718",
      "type": "concept",
      "name": "**Anticipates your needs** - provides context and assistance proactively",
      "description": "Concept: **Anticipates your needs** - provides context and assistance proactively",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md",
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.024173,
      "updated_at": 1754957551.3209002
    },
    "concept_719": {
      "id": "concept_719",
      "type": "concept",
      "name": "**Context Enhancement**",
      "description": "Concept: **Context Enhancement**",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.024323,
      "updated_at": 1754957551.024323
    },
    "concept_720": {
      "id": "concept_720",
      "type": "concept",
      "name": "**Phase 1: COMPLETE \u2705**",
      "description": "Concept: **Phase 1: COMPLETE \u2705**",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.024519,
      "updated_at": 1754957551.024519
    },
    "concept_721": {
      "id": "concept_721",
      "type": "concept",
      "name": "**Speed & Efficiency**",
      "description": "Concept: **Speed & Efficiency**",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.024658,
      "updated_at": 1754957551.024659
    },
    "concept_722": {
      "id": "concept_722",
      "type": "concept",
      "name": "**Human Brain-Inspired Design**",
      "description": "Concept: **Human Brain-Inspired Design**",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.0247989,
      "updated_at": 1754957551.0248
    },
    "concept_723": {
      "id": "concept_723",
      "type": "concept",
      "name": "**Perception**: Comprehensive project scanning and analysis",
      "description": "Concept: **Perception**: Comprehensive project scanning and analysis",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.024949,
      "updated_at": 1754957551.024949
    },
    "concept_724": {
      "id": "concept_724",
      "type": "concept",
      "name": "**All Phase 1 Targets Met**",
      "description": "Concept: **All Phase 1 Targets Met**",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.025089,
      "updated_at": 1754957551.025089
    },
    "concept_725": {
      "id": "concept_725",
      "type": "concept",
      "name": "\ud83c\udfaf **PHASE 1 COMPLETION SUMMARY - PROJECT INTELLIGENCE LAYER**",
      "description": "Concept: \ud83c\udfaf **PHASE 1 COMPLETION SUMMARY - PROJECT INTELLIGENCE LAYER**",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.025383,
      "updated_at": 1754957551.025383
    },
    "concept_726": {
      "id": "concept_726",
      "type": "concept",
      "name": "`processing_and_thinking(action='identify_improvements')` \u2192 Improvement suggestions",
      "description": "Concept: `processing_and_thinking(action='identify_improvements')` \u2192 Improvement suggestions",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.0257049,
      "updated_at": 1754957551.0257049
    },
    "concept_727": {
      "id": "concept_727",
      "type": "concept",
      "name": "**Learns and grows** - continuously improves based on your feedback",
      "description": "Concept: **Learns and grows** - continuously improves based on your feedback",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md",
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.0258582,
      "updated_at": 1754957551.32208
    },
    "concept_728": {
      "id": "concept_728",
      "type": "concept",
      "name": "`self_monitoring(action='monitor_index_quality')` \u2192 Quality assessment",
      "description": "Concept: `self_monitoring(action='monitor_index_quality')` \u2192 Quality assessment",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.026154,
      "updated_at": 1754957551.026154
    },
    "concept_729": {
      "id": "concept_729",
      "type": "concept",
      "name": "**Frameworks Found**: pytest (8 files), FastAPI (3 files), Django (1 file)",
      "description": "Concept: **Frameworks Found**: pytest (8 files), FastAPI (3 files), Django (1 file)",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.026311,
      "updated_at": 1754957551.026311
    },
    "concept_730": {
      "id": "concept_730",
      "type": "concept",
      "name": "**Total Files**: 100 files successfully indexed",
      "description": "Concept: **Total Files**: 100 files successfully indexed",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.026463,
      "updated_at": 1754957551.026463
    },
    "concept_731": {
      "id": "concept_731",
      "type": "concept",
      "name": "**Learning**: Continuous adaptation and improvement",
      "description": "Concept: **Learning**: Continuous adaptation and improvement",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.02661,
      "updated_at": 1754957551.02661
    },
    "concept_732": {
      "id": "concept_732",
      "type": "concept",
      "name": "**Extensible Architecture**: Easy to add new language and framework support",
      "description": "Concept: **Extensible Architecture**: Easy to add new language and framework support",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.026763,
      "updated_at": 1754957551.026763
    },
    "concept_733": {
      "id": "concept_733",
      "type": "concept",
      "name": "**Smart File Filtering**: Automatically skips build artifacts, cache, and temporary files",
      "description": "Concept: **Smart File Filtering**: Automatically skips build artifacts, cache, and temporary files",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.026919,
      "updated_at": 1754957551.026919
    },
    "concept_734": {
      "id": "concept_734",
      "type": "concept",
      "name": "**Ready for the Next Phase**",
      "description": "Concept: **Ready for the Next Phase**",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.027064,
      "updated_at": 1754957551.027064
    },
    "concept_735": {
      "id": "concept_735",
      "type": "concept",
      "name": "\u2705 **Project Scanning**: < 5 seconds (achieved: 0.04s)",
      "description": "Concept: \u2705 **Project Scanning**: < 5 seconds (achieved: 0.04s)",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.027328,
      "updated_at": 1754957551.027328
    },
    "concept_736": {
      "id": "concept_736",
      "type": "concept",
      "name": "**Comprehensive file system scanning** with intelligent filtering",
      "description": "Concept: **Comprehensive file system scanning** with intelligent filtering",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.027543,
      "updated_at": 1754957551.027543
    },
    "concept_737": {
      "id": "concept_737",
      "type": "concept",
      "name": "`memory_and_storage(action='update_project_index')` \u2192 Update project index",
      "description": "Concept: `memory_and_storage(action='update_project_index')` \u2192 Update project index",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.027853,
      "updated_at": 1754957551.027853
    },
    "concept_738": {
      "id": "concept_738",
      "type": "concept",
      "name": "**Proactive Assistance**: Provides context before you ask for it",
      "description": "Concept: **Proactive Assistance**: Provides context before you ask for it",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.028007,
      "updated_at": 1754957551.028007
    },
    "concept_739": {
      "id": "concept_739",
      "type": "concept",
      "name": "\ud83d\udd2e **READY FOR PHASE 2**",
      "description": "Concept: \ud83d\udd2e **READY FOR PHASE 2**",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.0282052,
      "updated_at": 1754957551.0282052
    },
    "concept_740": {
      "id": "concept_740",
      "type": "concept",
      "name": "\ud83c\udf1f **VISION REALIZED**",
      "description": "Concept: \ud83c\udf1f **VISION REALIZED**",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.0283961,
      "updated_at": 1754957551.0283961
    },
    "concept_741": {
      "id": "concept_741",
      "type": "concept",
      "name": "`learning_and_adaptation(action='evolve_understanding')` \u2192 Continuous learning",
      "description": "Concept: `learning_and_adaptation(action='evolve_understanding')` \u2192 Continuous learning",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.028707,
      "updated_at": 1754957551.028707
    },
    "concept_742": {
      "id": "concept_742",
      "type": "concept",
      "name": "**Dependency parsing** for multiple package managers (npm, pip, cargo, go)",
      "description": "Concept: **Dependency parsing** for multiple package managers (npm, pip, cargo, go)",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.028866,
      "updated_at": 1754957551.028866
    },
    "concept_743": {
      "id": "concept_743",
      "type": "concept",
      "name": "processing_and_thinking(action='identify_improvements')",
      "description": "Concept: processing_and_thinking(action='identify_improvements')",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.029022,
      "updated_at": 1754957551.029022
    },
    "concept_744": {
      "id": "concept_744",
      "type": "concept",
      "name": "\ud83d\ude80 **Language Support**: 20+ languages (target: 10 languages)",
      "description": "Concept: \ud83d\ude80 **Language Support**: 20+ languages (target: 10 languages)",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.029314,
      "updated_at": 1754957551.029314
    },
    "concept_745": {
      "id": "concept_745",
      "type": "concept",
      "name": "**The Future is Bright**",
      "description": "Concept: **The Future is Bright**",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.02946,
      "updated_at": 1754957551.02946
    },
    "concept_746": {
      "id": "concept_746",
      "type": "concept",
      "name": "**Multiple Export Formats**: JSON (detailed), Summary (human-readable)",
      "description": "Concept: **Multiple Export Formats**: JSON (detailed), Summary (human-readable)",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.02962,
      "updated_at": 1754957551.02962
    },
    "concept_747": {
      "id": "concept_747",
      "type": "concept",
      "name": "**Total Index Size**: 49,391 characters for 100 files",
      "description": "Concept: **Total Index Size**: 49,391 characters for 100 files",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.02977,
      "updated_at": 1754957551.02977
    },
    "concept_748": {
      "id": "concept_748",
      "type": "concept",
      "name": "\ud83d\ude80 **Integration Ready**: Full MCP tool integration (target: basic integration)",
      "description": "Concept: \ud83d\ude80 **Integration Ready**: Full MCP tool integration (target: basic integration)",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.030147,
      "updated_at": 1754957551.030147
    },
    "concept_749": {
      "id": "concept_749",
      "type": "concept",
      "name": "output_and_action(action='suggest_improvements')",
      "description": "Concept: output_and_action(action='suggest_improvements')",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.030314,
      "updated_at": 1754957551.030314
    },
    "concept_750": {
      "id": "concept_750",
      "type": "concept",
      "name": "**Knowledge graphs** connecting concepts and patterns",
      "description": "Concept: **Knowledge graphs** connecting concepts and patterns",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.030467,
      "updated_at": 1754957551.030467
    },
    "concept_751": {
      "id": "concept_751",
      "type": "concept",
      "name": "**3. Intelligent Detection Systems**",
      "description": "Concept: **3. Intelligent Detection Systems**",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.030617,
      "updated_at": 1754957551.030617
    },
    "concept_752": {
      "id": "concept_752",
      "type": "concept",
      "name": "**Technology Stack Mapping**: Comprehensive stack identification",
      "description": "Concept: **Technology Stack Mapping**: Comprehensive stack identification",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.0307689,
      "updated_at": 1754957551.0307689
    },
    "concept_753": {
      "id": "concept_753",
      "type": "concept",
      "name": "**Contextual memory** for intelligent assistance",
      "description": "Concept: **Contextual memory** for intelligent assistance",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.0309162,
      "updated_at": 1754957551.0309162
    },
    "concept_754": {
      "id": "concept_754",
      "type": "concept",
      "name": "`output_and_action(action='provide_context')` \u2192 Context injection",
      "description": "Concept: `output_and_action(action='provide_context')` \u2192 Context injection",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.031202,
      "updated_at": 1754957551.031202
    },
    "concept_755": {
      "id": "concept_755",
      "type": "concept",
      "name": "**MCP Tool Integration**: Ready for integration with our 6 consolidated tools",
      "description": "Concept: **MCP Tool Integration**: Ready for integration with our 6 consolidated tools",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.031361,
      "updated_at": 1754957551.031361
    },
    "concept_756": {
      "id": "concept_756",
      "type": "concept",
      "name": "perceive_and_analyze(action='dependency_analysis')",
      "description": "Concept: perceive_and_analyze(action='dependency_analysis')",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.03166,
      "updated_at": 1754957551.031661
    },
    "concept_757": {
      "id": "concept_757",
      "type": "concept",
      "name": "`output_and_action(action='generate_project_report')` \u2192 Project reports",
      "description": "Concept: `output_and_action(action='generate_project_report')` \u2192 Project reports",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.032128,
      "updated_at": 1754957551.032128
    },
    "concept_758": {
      "id": "concept_758",
      "type": "concept",
      "name": "\u2705 **Dependency mapping** across multiple package managers",
      "description": "Concept: \u2705 **Dependency mapping** across multiple package managers",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.032505,
      "updated_at": 1754957551.032505
    },
    "concept_759": {
      "id": "concept_759",
      "type": "concept",
      "name": "**Development Environment Detection**: IDE files, editor configs, and tooling",
      "description": "Concept: **Development Environment Detection**: IDE files, editor configs, and tooling",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.032685,
      "updated_at": 1754957551.032685
    },
    "concept_760": {
      "id": "concept_760",
      "type": "concept",
      "name": "\ud83d\ude80 **MISSION ACCOMPLISHED: Phase 1 Complete!**",
      "description": "Concept: \ud83d\ude80 **MISSION ACCOMPLISHED: Phase 1 Complete!**",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.032971,
      "updated_at": 1754957551.032971
    },
    "concept_761": {
      "id": "concept_761",
      "type": "concept",
      "name": "memory_and_storage(action='retrieve_project_info')",
      "description": "Concept: memory_and_storage(action='retrieve_project_info')",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.033129,
      "updated_at": 1754957551.033129
    },
    "concept_762": {
      "id": "concept_762",
      "type": "concept",
      "name": "**Remembers your projects** - has deep contextual knowledge of your work",
      "description": "Concept: **Remembers your projects** - has deep contextual knowledge of your work",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md",
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.033292,
      "updated_at": 1754957551.338613
    },
    "concept_763": {
      "id": "concept_763",
      "type": "concept",
      "name": "**Change detection** with file hash tracking for incremental updates",
      "description": "Concept: **Change detection** with file hash tracking for incremental updates",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.033448,
      "updated_at": 1754957551.033448
    },
    "concept_764": {
      "id": "concept_764",
      "type": "concept",
      "name": "**\ud83e\udde0 OUTPUT & ACTION Domain**",
      "description": "Concept: **\ud83e\udde0 OUTPUT & ACTION Domain**",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.0336692,
      "updated_at": 1754957551.0336692
    },
    "concept_765": {
      "id": "concept_765",
      "type": "concept",
      "name": "**Project Analysis Results**",
      "description": "Concept: **Project Analysis Results**",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.033824,
      "updated_at": 1754957551.033824
    },
    "concept_766": {
      "id": "concept_766",
      "type": "concept",
      "name": "`learning_and_adaptation(action='learn_from_project_structure')` \u2192 Structure learning",
      "description": "Concept: `learning_and_adaptation(action='learn_from_project_structure')` \u2192 Structure learning",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.034167,
      "updated_at": 1754957551.034167
    },
    "concept_767": {
      "id": "concept_767",
      "type": "concept",
      "name": "**Language Detection**: 95%+ accuracy across multiple languages",
      "description": "Concept: **Language Detection**: 95%+ accuracy across multiple languages",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.0343292,
      "updated_at": 1754957551.0343292
    },
    "concept_768": {
      "id": "concept_768",
      "type": "concept",
      "name": "**Next Phase Goals**",
      "description": "Concept: **Next Phase Goals**",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.034472,
      "updated_at": 1754957551.034473
    },
    "concept_769": {
      "id": "concept_769",
      "type": "concept",
      "name": "processing_and_thinking(action='analyze_code_patterns')",
      "description": "Concept: processing_and_thinking(action='analyze_code_patterns')",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.034635,
      "updated_at": 1754957551.034635
    },
    "concept_770": {
      "id": "concept_770",
      "type": "concept",
      "name": "\u2705 **Complete project understanding** through comprehensive scanning",
      "description": "Concept: \u2705 **Complete project understanding** through comprehensive scanning",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.034952,
      "updated_at": 1754957551.034952
    },
    "concept_771": {
      "id": "concept_771",
      "type": "concept",
      "name": "**File Type Detection**: 15+ file categories (source, config, docs, etc.)",
      "description": "Concept: **File Type Detection**: 15+ file categories (source, config, docs, etc.)",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.0351171,
      "updated_at": 1754957551.0351171
    },
    "concept_772": {
      "id": "concept_772",
      "type": "concept",
      "name": "**Ready for Action-Based Routing**",
      "description": "Concept: **Ready for Action-Based Routing**",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.035265,
      "updated_at": 1754957551.035265
    },
    "concept_773": {
      "id": "concept_773",
      "type": "concept",
      "name": "\ud83d\ude80 **WHAT THIS ENABLES**",
      "description": "Concept: \ud83d\ude80 **WHAT THIS ENABLES**",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.035491,
      "updated_at": 1754957551.035491
    },
    "concept_774": {
      "id": "concept_774",
      "type": "concept",
      "name": "**Cross-platform Compatibility**: Works on macOS, Linux, and Windows",
      "description": "Concept: **Cross-platform Compatibility**: Works on macOS, Linux, and Windows",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.0356522,
      "updated_at": 1754957551.0356522
    },
    "concept_775": {
      "id": "concept_775",
      "type": "concept",
      "name": "`memory_and_storage(action='retrieve_project_info')` \u2192 Get project information",
      "description": "Concept: `memory_and_storage(action='retrieve_project_info')` \u2192 Get project information",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.036,
      "updated_at": 1754957551.036
    },
    "concept_776": {
      "id": "concept_776",
      "type": "concept",
      "name": "`perceive_and_analyze(action='pattern_recognition')` \u2192 Code pattern analysis",
      "description": "Concept: `perceive_and_analyze(action='pattern_recognition')` \u2192 Code pattern analysis",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.036327,
      "updated_at": 1754957551.036327
    },
    "concept_777": {
      "id": "concept_777",
      "type": "concept",
      "name": "\u2705 **Intelligent pattern recognition** for code and architecture",
      "description": "Concept: \u2705 **Intelligent pattern recognition** for code and architecture",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.036625,
      "updated_at": 1754957551.036625
    },
    "concept_778": {
      "id": "concept_778",
      "type": "concept",
      "name": "**Language Recognition**: 20+ programming languages with file extensions",
      "description": "Concept: **Language Recognition**: 20+ programming languages with file extensions",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.036788,
      "updated_at": 1754957551.036788
    },
    "concept_779": {
      "id": "concept_779",
      "type": "concept",
      "name": "**Languages Detected**: Python (58%), Markdown (25%), JSON (7%), Shell (2%)",
      "description": "Concept: **Languages Detected**: Python (58%), Markdown (25%), JSON (7%), Shell (2%)",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.036953,
      "updated_at": 1754957551.036953
    },
    "concept_780": {
      "id": "concept_780",
      "type": "concept",
      "name": "**Thinks like you do** - understands your coding style and preferences",
      "description": "Concept: **Thinks like you do** - understands your coding style and preferences",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md",
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.0371368,
      "updated_at": 1754957551.346529
    },
    "concept_781": {
      "id": "concept_781",
      "type": "concept",
      "name": "learning_and_adaptation(action='learn_from_project_structure')",
      "description": "Concept: learning_and_adaptation(action='learn_from_project_structure')",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.037298,
      "updated_at": 1754957551.037298
    },
    "concept_782": {
      "id": "concept_782",
      "type": "concept",
      "name": "**Hash-based Change Detection**: MD5 hashing for accurate change tracking",
      "description": "Concept: **Hash-based Change Detection**: MD5 hashing for accurate change tracking",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.037465,
      "updated_at": 1754957551.037466
    },
    "concept_783": {
      "id": "concept_783",
      "type": "concept",
      "name": "**`DependencyInfo`**: Package dependency tracking with version and source",
      "description": "Concept: **`DependencyInfo`**: Package dependency tracking with version and source",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.037628,
      "updated_at": 1754957551.037628
    },
    "concept_784": {
      "id": "concept_784",
      "type": "concept",
      "name": "**Beyond Expectations**",
      "description": "Concept: **Beyond Expectations**",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.037777,
      "updated_at": 1754957551.037777
    },
    "concept_785": {
      "id": "concept_785",
      "type": "concept",
      "name": "**Pattern recognition** for code organization and project structure",
      "description": "Concept: **Pattern recognition** for code organization and project structure",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.0379379,
      "updated_at": 1754957551.0379379
    },
    "concept_786": {
      "id": "concept_786",
      "type": "concept",
      "name": "processing_and_thinking(action='detect_architectural_patterns')",
      "description": "Concept: processing_and_thinking(action='detect_architectural_patterns')",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.0381,
      "updated_at": 1754957551.0381
    },
    "concept_787": {
      "id": "concept_787",
      "type": "concept",
      "name": "\u2705 **Change tracking** for incremental updates",
      "description": "Concept: \u2705 **Change tracking** for incremental updates",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.0383701,
      "updated_at": 1754957551.0383701
    },
    "concept_788": {
      "id": "concept_788",
      "type": "concept",
      "name": "**Architectural Pattern Detection**: Identifies source, test, and documentation structures",
      "description": "Concept: **Architectural Pattern Detection**: Identifies source, test, and documentation structures",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.038542,
      "updated_at": 1754957551.038542
    },
    "concept_789": {
      "id": "concept_789",
      "type": "concept",
      "name": "**Self-Monitoring**: Performance tracking and quality assessment",
      "description": "Concept: **Self-Monitoring**: Performance tracking and quality assessment",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.038702,
      "updated_at": 1754957551.038702
    },
    "concept_790": {
      "id": "concept_790",
      "type": "concept",
      "name": "**Project Structure**: 4-level depth with organized source, test, and documentation",
      "description": "Concept: **Project Structure**: 4-level depth with organized source, test, and documentation",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.038869,
      "updated_at": 1754957551.038869
    },
    "concept_791": {
      "id": "concept_791",
      "type": "concept",
      "name": "**Framework Recognition**: Automatic detection of pytest, FastAPI, Django",
      "description": "Concept: **Framework Recognition**: Automatic detection of pytest, FastAPI, Django",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.0390332,
      "updated_at": 1754957551.0390332
    },
    "concept_792": {
      "id": "concept_792",
      "type": "concept",
      "name": "**Advanced Scanning Capabilities**",
      "description": "Concept: **Advanced Scanning Capabilities**",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.0391848,
      "updated_at": 1754957551.0391848
    },
    "concept_793": {
      "id": "concept_793",
      "type": "concept",
      "name": "**From Reactive to Proactive**",
      "description": "Concept: **From Reactive to Proactive**",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.039341,
      "updated_at": 1754957551.039341
    },
    "concept_794": {
      "id": "concept_794",
      "type": "concept",
      "name": "**API-Ready**: Clean interfaces for programmatic access",
      "description": "Concept: **API-Ready**: Clean interfaces for programmatic access",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.0395038,
      "updated_at": 1754957551.0395038
    },
    "concept_795": {
      "id": "concept_795",
      "type": "concept",
      "name": "**Intelligent Analysis**: Understands your coding style and architectural decisions",
      "description": "Concept: **Intelligent Analysis**: Understands your coding style and architectural decisions",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.039675,
      "updated_at": 1754957551.039675
    },
    "concept_796": {
      "id": "concept_796",
      "type": "concept",
      "name": "`perceive_and_analyze(action='project_scan')` \u2192 Full project analysis",
      "description": "Concept: `perceive_and_analyze(action='project_scan')` \u2192 Full project analysis",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.0400991,
      "updated_at": 1754957551.0401
    },
    "concept_797": {
      "id": "concept_797",
      "type": "concept",
      "name": "**Foundation Established**",
      "description": "Concept: **Foundation Established**",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.040419,
      "updated_at": 1754957551.040419
    },
    "concept_798": {
      "id": "concept_798",
      "type": "concept",
      "name": "ProjectIndex",
      "description": "Concept: ProjectIndex",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.040664,
      "updated_at": 1754957551.0406651
    },
    "concept_799": {
      "id": "concept_799",
      "type": "concept",
      "name": "**\ud83e\udde0 LEARNING & ADAPTATION Domain**",
      "description": "Concept: **\ud83e\udde0 LEARNING & ADAPTATION Domain**",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.040936,
      "updated_at": 1754957551.040936
    },
    "concept_800": {
      "id": "concept_800",
      "type": "concept",
      "name": "**Dependency Parsing**: Support for npm, pip, cargo, go package managers",
      "description": "Concept: **Dependency Parsing**: Support for npm, pip, cargo, go package managers",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.041114,
      "updated_at": 1754957551.041114
    },
    "concept_801": {
      "id": "concept_801",
      "type": "concept",
      "name": "**Incremental Updates**: Only re-scans changed files for efficiency",
      "description": "Concept: **Incremental Updates**: Only re-scans changed files for efficiency",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.041335,
      "updated_at": 1754957551.041335
    },
    "concept_802": {
      "id": "concept_802",
      "type": "concept",
      "name": "learning_and_adaptation(action='adapt_to_coding_patterns')",
      "description": "Concept: learning_and_adaptation(action='adapt_to_coding_patterns')",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.0415978,
      "updated_at": 1754957551.0415978
    },
    "concept_803": {
      "id": "concept_803",
      "type": "concept",
      "name": "`learning_and_adaptation(action='adapt_to_coding_patterns')` \u2192 Pattern adaptation",
      "description": "Concept: `learning_and_adaptation(action='adapt_to_coding_patterns')` \u2192 Pattern adaptation",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.041944,
      "updated_at": 1754957551.041944
    },
    "concept_804": {
      "id": "concept_804",
      "type": "concept",
      "name": "\ud83d\udcca **PERFORMANCE ACHIEVEMENTS**",
      "description": "Concept: \ud83d\udcca **PERFORMANCE ACHIEVEMENTS**",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.042169,
      "updated_at": 1754957551.042169
    },
    "concept_805": {
      "id": "concept_805",
      "type": "concept",
      "name": "\ud83d\udd27 **TECHNICAL FEATURES**",
      "description": "Concept: \ud83d\udd27 **TECHNICAL FEATURES**",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.042381,
      "updated_at": 1754957551.042381
    },
    "concept_806": {
      "id": "concept_806",
      "type": "concept",
      "name": "**Intelligent Pattern Recognition**",
      "description": "Concept: **Intelligent Pattern Recognition**",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.0425391,
      "updated_at": 1754957551.0425391
    },
    "concept_807": {
      "id": "concept_807",
      "type": "concept",
      "name": "**Immediate Capabilities**",
      "description": "Concept: **Immediate Capabilities**",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.04269,
      "updated_at": 1754957551.04269
    },
    "concept_808": {
      "id": "concept_808",
      "type": "concept",
      "name": "**Memory**: Persistent storage of project context and patterns",
      "description": "Concept: **Memory**: Persistent storage of project context and patterns",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.042856,
      "updated_at": 1754957551.042856
    },
    "concept_809": {
      "id": "concept_809",
      "type": "concept",
      "name": "perceive_and_analyze(action='project_scan')",
      "description": "Concept: perceive_and_analyze(action='project_scan')",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.043015,
      "updated_at": 1754957551.043015
    },
    "concept_810": {
      "id": "concept_810",
      "type": "concept",
      "name": "learning_and_adaptation(action='evolve_understanding')",
      "description": "Concept: learning_and_adaptation(action='evolve_understanding')",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.043199,
      "updated_at": 1754957551.043199
    },
    "concept_811": {
      "id": "concept_811",
      "type": "concept",
      "name": "**Developer Experience**",
      "description": "Concept: **Developer Experience**",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.043357,
      "updated_at": 1754957551.043357
    },
    "concept_812": {
      "id": "concept_812",
      "type": "concept",
      "name": "**Real-time Updates**: < 1 second change detection",
      "description": "Concept: **Real-time Updates**: < 1 second change detection",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md",
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.0435221,
      "updated_at": 1754957551.3599622
    },
    "concept_813": {
      "id": "concept_813",
      "type": "concept",
      "name": "**Framework Detection**: Framework-specific patterns and signatures",
      "description": "Concept: **Framework Detection**: Framework-specific patterns and signatures",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.04369,
      "updated_at": 1754957551.04369
    },
    "concept_814": {
      "id": "concept_814",
      "type": "concept",
      "name": "self_monitoring(action='monitor_index_quality')",
      "description": "Concept: self_monitoring(action='monitor_index_quality')",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.0438569,
      "updated_at": 1754957551.0438569
    },
    "concept_815": {
      "id": "concept_815",
      "type": "concept",
      "name": "**Deep Context**: Knows your project structure, dependencies, and patterns",
      "description": "Concept: **Deep Context**: Knows your project structure, dependencies, and patterns",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.0440252,
      "updated_at": 1754957551.0440252
    },
    "concept_816": {
      "id": "concept_816",
      "type": "concept",
      "name": "self_monitoring(action='track_scan_performance')",
      "description": "Concept: self_monitoring(action='track_scan_performance')",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.044204,
      "updated_at": 1754957551.044204
    },
    "concept_817": {
      "id": "concept_817",
      "type": "concept",
      "name": "\ud83e\udde0 **CORE COMPONENTS IMPLEMENTED**",
      "description": "Concept: \ud83e\udde0 **CORE COMPONENTS IMPLEMENTED**",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.0444422,
      "updated_at": 1754957551.0444422
    },
    "concept_818": {
      "id": "concept_818",
      "type": "concept",
      "name": "**\ud83e\udde0 MEMORY & STORAGE Domain**",
      "description": "Concept: **\ud83e\udde0 MEMORY & STORAGE Domain**",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.044669,
      "updated_at": 1754957551.044669
    },
    "concept_819": {
      "id": "concept_819",
      "type": "concept",
      "name": "**\ud83e\udde0 PROCESSING & THINKING Domain**",
      "description": "Concept: **\ud83e\udde0 PROCESSING & THINKING Domain**",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.044907,
      "updated_at": 1754957551.044907
    },
    "concept_820": {
      "id": "concept_820",
      "type": "concept",
      "name": "**Technology Stack Analysis**: Complete stack identification and mapping",
      "description": "Concept: **Technology Stack Analysis**: Complete stack identification and mapping",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.0450828,
      "updated_at": 1754957551.0450828
    },
    "concept_821": {
      "id": "concept_821",
      "type": "concept",
      "name": "output_and_action(action='generate_project_report')",
      "description": "Concept: output_and_action(action='generate_project_report')",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.045247,
      "updated_at": 1754957551.045247
    },
    "concept_822": {
      "id": "concept_822",
      "type": "concept",
      "name": "`self_monitoring(action='track_scan_performance')` \u2192 Performance monitoring",
      "description": "Concept: `self_monitoring(action='track_scan_performance')` \u2192 Performance monitoring",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.045669,
      "updated_at": 1754957551.045669
    },
    "concept_823": {
      "id": "concept_823",
      "type": "concept",
      "name": "\ud83c\udf89 **SUCCESS METRICS ACHIEVED**",
      "description": "Concept: \ud83c\udf89 **SUCCESS METRICS ACHIEVED**",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.045931,
      "updated_at": 1754957551.045931
    },
    "concept_824": {
      "id": "concept_824",
      "type": "concept",
      "name": "memory_and_storage(action='update_project_index')",
      "description": "Concept: memory_and_storage(action='update_project_index')",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.046098,
      "updated_at": 1754957551.046098
    },
    "concept_825": {
      "id": "concept_825",
      "type": "concept",
      "name": "**Export & Integration**",
      "description": "Concept: **Export & Integration**",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.046258,
      "updated_at": 1754957551.046258
    },
    "concept_826": {
      "id": "concept_826",
      "type": "concept",
      "name": "DirectoryInfo",
      "description": "Concept: DirectoryInfo",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.046412,
      "updated_at": 1754957551.046412
    },
    "concept_827": {
      "id": "concept_827",
      "type": "concept",
      "name": "\u2705 **Update Frequency**: Real-time change detection (achieved: < 1 second)",
      "description": "Concept: \u2705 **Update Frequency**: Real-time change detection (achieved: < 1 second)",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.046758,
      "updated_at": 1754957551.046758
    },
    "concept_828": {
      "id": "concept_828",
      "type": "concept",
      "name": "FileMetadata",
      "description": "Concept: FileMetadata",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.046914,
      "updated_at": 1754957551.046914
    },
    "concept_829": {
      "id": "concept_829",
      "type": "concept",
      "name": "`processing_and_thinking(action='detect_architectural_patterns')` \u2192 Architecture insights",
      "description": "Concept: `processing_and_thinking(action='detect_architectural_patterns')` \u2192 Architecture insights",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.0472808,
      "updated_at": 1754957551.047282
    },
    "concept_830": {
      "id": "concept_830",
      "type": "concept",
      "name": "\ud83d\ude80 **Framework Detection**: Automatic recognition (target: basic detection)",
      "description": "Concept: \ud83d\ude80 **Framework Detection**: Automatic recognition (target: basic detection)",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.047637,
      "updated_at": 1754957551.047637
    },
    "concept_831": {
      "id": "concept_831",
      "type": "concept",
      "name": "`processing_and_thinking(action='analyze_code_patterns')` \u2192 Deep pattern analysis",
      "description": "Concept: `processing_and_thinking(action='analyze_code_patterns')` \u2192 Deep pattern analysis",
      "source": "PHASE_1_COMPLETION_SUMMARY.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PHASE_1_COMPLETION_SUMMARY.md"
        ]
      },
      "created_at": 1754957551.0479949,
      "updated_at": 1754957551.0479949
    },
    "doc_832": {
      "id": "doc_832",
      "type": "document",
      "name": "Production_Integration_Guide",
      "description": "Document: PRODUCTION_INTEGRATION_GUIDE.md",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.9,
      "metadata": {
        "file_size": 9259,
        "lines": 350,
        "language": "unknown",
        "last_modified": 1754951271.483874
      },
      "created_at": 1754957551.050693,
      "updated_at": 1754957551.050693
    },
    "concept_833": {
      "id": "concept_833",
      "type": "concept",
      "name": "python\n# Remember important information with context\nresult = await mcp_client.call_tool(\"remember_important\", {\n    \"information\": \"User prefers step-by-step explanations\",\n    \"importance\": \"high\"\n})\n\n# Automatically:\n# - Analyzes emotional context\n# - Tags with relevant patterns\n# - Integrates with existing memories",
      "description": "Concept: python\n# Remember important information with context\nresult = await mcp_client.call_tool(\"remember_important\", {\n    \"information\": \"User prefers step-by-step explanations\",\n    \"importance\": \"high\"\n})\n\n# Automatically:\n# - Analyzes emotional context\n# - Tags with relevant patterns\n# - Integrates with existing memories",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.0509582,
      "updated_at": 1754957551.0509582
    },
    "concept_834": {
      "id": "concept_834",
      "type": "concept",
      "name": "Use think_deeply for complex problem solving",
      "description": "Concept: Use think_deeply for complex problem solving",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.051123,
      "updated_at": 1754957551.051123
    },
    "concept_835": {
      "id": "concept_835",
      "type": "concept",
      "name": "- Pattern-based search",
      "description": "Concept: - Pattern-based search",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.051278,
      "updated_at": 1754957551.051278
    },
    "concept_836": {
      "id": "concept_836",
      "type": "concept",
      "name": "for comprehensive code assessment\n- **Refactoring**: Use",
      "description": "Concept: for comprehensive code assessment\n- **Refactoring**: Use",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.0514681,
      "updated_at": 1754957551.0514681
    },
    "concept_837": {
      "id": "concept_837",
      "type": "concept",
      "name": "code_analyze",
      "description": "Concept: code_analyze",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md",
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.0516648,
      "updated_at": 1754957551.487267
    },
    "concept_838": {
      "id": "concept_838",
      "type": "concept",
      "name": "Offers:",
      "description": "Concept: Offers:",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.051829,
      "updated_at": 1754957551.051829
    },
    "concept_839": {
      "id": "concept_839",
      "type": "concept",
      "name": "**Debugging**: Use `debug_intelligently` for complex production issues",
      "description": "Concept: **Debugging**: Use `debug_intelligently` for complex production issues",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.051999,
      "updated_at": 1754957551.051999
    },
    "concept_840": {
      "id": "concept_840",
      "type": "concept",
      "name": "**Context Understanding**: Use `understand_deeply` for complex requests",
      "description": "Concept: **Context Understanding**: Use `understand_deeply` for complex requests",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.052191,
      "updated_at": 1754957551.052191
    },
    "concept_841": {
      "id": "concept_841",
      "type": "concept",
      "name": "**Pattern recognition** for subtle insights",
      "description": "Concept: **Pattern recognition** for subtle insights",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.052356,
      "updated_at": 1754957551.052356
    },
    "concept_842": {
      "id": "concept_842",
      "type": "concept",
      "name": "- Context-aware relevance scoring",
      "description": "Concept: - Context-aware relevance scoring",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.0525281,
      "updated_at": 1754957551.0525281
    },
    "concept_843": {
      "id": "concept_843",
      "type": "concept",
      "name": "**\ud83d\udd0d Deep Understanding**",
      "description": "Concept: **\ud83d\udd0d Deep Understanding**",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.052754,
      "updated_at": 1754957551.052754
    },
    "concept_844": {
      "id": "concept_844",
      "type": "concept",
      "name": "Evaluates:",
      "description": "Concept: Evaluates:",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.052904,
      "updated_at": 1754957551.052904
    },
    "concept_845": {
      "id": "concept_845",
      "type": "concept",
      "name": "Generates:",
      "description": "Concept: Generates:",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.0530581,
      "updated_at": 1754957551.0530581
    },
    "concept_846": {
      "id": "concept_846",
      "type": "concept",
      "name": "for complex production issues\n\n### **2. \ud83e\udde0 AI Assistant Enhancement**\n\n- **Conversation Memory**: Use",
      "description": "Concept: for complex production issues\n\n### **2. \ud83e\udde0 AI Assistant Enhancement**\n\n- **Conversation Memory**: Use",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.05348,
      "updated_at": 1754957551.05348
    },
    "concept_847": {
      "id": "concept_847",
      "type": "concept",
      "name": "[ ] Enhanced brain tools loaded",
      "description": "Concept: [ ] Enhanced brain tools loaded",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.053646,
      "updated_at": 1754957551.053646
    },
    "concept_848": {
      "id": "concept_848",
      "type": "concept",
      "name": "**Cross-domain pattern recognition** for holistic understanding",
      "description": "Concept: **Cross-domain pattern recognition** for holistic understanding",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.053824,
      "updated_at": 1754957551.053824
    },
    "concept_849": {
      "id": "concept_849",
      "type": "concept",
      "name": "- Learning optimization suggestions",
      "description": "Concept: - Learning optimization suggestions",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.053987,
      "updated_at": 1754957551.053987
    },
    "concept_850": {
      "id": "concept_850",
      "type": "concept",
      "name": "#### **Selective Memory Cleanup**",
      "description": "Concept: #### **Selective Memory Cleanup**",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.0541492,
      "updated_at": 1754957551.0541492
    },
    "concept_851": {
      "id": "concept_851",
      "type": "concept",
      "name": "python\n# Find relevant memories with context awareness\nresult = await mcp_client.call_tool(\"recall_intelligently\", {\n    \"query\": \"code quality improvements\",\n    \"depth\": \"deep\",\n    \"limit\": 10\n})\n\n# Features:\n# - Context-aware relevance scoring\n# - Pattern-based search\n# - Emotional weight consideration",
      "description": "Concept: python\n# Find relevant memories with context awareness\nresult = await mcp_client.call_tool(\"recall_intelligently\", {\n    \"query\": \"code quality improvements\",\n    \"depth\": \"deep\",\n    \"limit\": 10\n})\n\n# Features:\n# - Context-aware relevance scoring\n# - Pattern-based search\n# - Emotional weight consideration",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.054388,
      "updated_at": 1754957551.054388
    },
    "concept_852": {
      "id": "concept_852",
      "type": "concept",
      "name": "**Enhanced Self-Reflection**",
      "description": "Concept: **Enhanced Self-Reflection**",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.0545459,
      "updated_at": 1754957551.0545468
    },
    "concept_853": {
      "id": "concept_853",
      "type": "concept",
      "name": "- Debugging strategies",
      "description": "Concept: - Debugging strategies",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.054705,
      "updated_at": 1754957551.054705
    },
    "concept_854": {
      "id": "concept_854",
      "type": "concept",
      "name": "**Pattern Detection**: Use `detect_patterns` for learning optimization",
      "description": "Concept: **Pattern Detection**: Use `detect_patterns` for learning optimization",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.0549,
      "updated_at": 1754957551.0549
    },
    "concept_855": {
      "id": "concept_855",
      "type": "concept",
      "name": "Analyze code structure and quality",
      "description": "Concept: Analyze code structure and quality",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.0550652,
      "updated_at": 1754957551.0550652
    },
    "concept_856": {
      "id": "concept_856",
      "type": "concept",
      "name": "remember_important",
      "description": "Concept: remember_important",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md",
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.055222,
      "updated_at": 1754957551.4967198
    },
    "concept_857": {
      "id": "concept_857",
      "type": "concept",
      "name": "**Refactoring**: Use `refactor_safely` for large-scale code improvements",
      "description": "Concept: **Refactoring**: Use `refactor_safely` for large-scale code improvements",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.055399,
      "updated_at": 1754957551.055399
    },
    "concept_858": {
      "id": "concept_858",
      "type": "concept",
      "name": "**4. \ud83d\udcbb Cursor-Optimized Development Tools**",
      "description": "Concept: **4. \ud83d\udcbb Cursor-Optimized Development Tools**",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.055694,
      "updated_at": 1754957551.055694
    },
    "concept_859": {
      "id": "concept_859",
      "type": "concept",
      "name": "- Pattern-based debugging",
      "description": "Concept: - Pattern-based debugging",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.055857,
      "updated_at": 1754957551.055857
    },
    "concept_860": {
      "id": "concept_860",
      "type": "concept",
      "name": "### **4. \ud83d\udcbb Cursor-Optimized Development Tools**\n\n#### **Code Quality Analysis**",
      "description": "Concept: ### **4. \ud83d\udcbb Cursor-Optimized Development Tools**\n\n#### **Code Quality Analysis**",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.0588899,
      "updated_at": 1754957551.0588899
    },
    "concept_861": {
      "id": "concept_861",
      "type": "concept",
      "name": "[ ] Tool response times acceptable",
      "description": "Concept: [ ] Tool response times acceptable",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.059062,
      "updated_at": 1754957551.059062
    },
    "concept_862": {
      "id": "concept_862",
      "type": "concept",
      "name": "Find subtle patterns in communication",
      "description": "Concept: Find subtle patterns in communication",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.0592341,
      "updated_at": 1754957551.0592341
    },
    "concept_863": {
      "id": "concept_863",
      "type": "concept",
      "name": "- **Context Understanding**: Use",
      "description": "Concept: - **Context Understanding**: Use",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.059403,
      "updated_at": 1754957551.059403
    },
    "concept_864": {
      "id": "concept_864",
      "type": "concept",
      "name": "[ ] Cognitive tools respond with context insights",
      "description": "Concept: [ ] Cognitive tools respond with context insights",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.0595741,
      "updated_at": 1754957551.0595741
    },
    "concept_865": {
      "id": "concept_865",
      "type": "concept",
      "name": "for user behavior analysis\n\n### **3. \ud83d\udcda Learning & Documentation**\n\n- **Content Analysis**: Use",
      "description": "Concept: for user behavior analysis\n\n### **3. \ud83d\udcda Learning & Documentation**\n\n- **Content Analysis**: Use",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.059989,
      "updated_at": 1754957551.059989
    },
    "concept_866": {
      "id": "concept_866",
      "type": "concept",
      "name": "**Human-inspired** intelligence and understanding",
      "description": "Concept: **Human-inspired** intelligence and understanding",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.060163,
      "updated_at": 1754957551.060163
    },
    "concept_867": {
      "id": "concept_867",
      "type": "concept",
      "name": "for deep understanding\n\n### **4. \ud83d\udd27 System Administration**\n\n- **Risk Assessment**: Use",
      "description": "Concept: for deep understanding\n\n### **4. \ud83d\udd27 System Administration**\n\n- **Risk Assessment**: Use",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.060629,
      "updated_at": 1754957551.060629
    },
    "concept_868": {
      "id": "concept_868",
      "type": "concept",
      "name": "refactor_safely",
      "description": "Concept: refactor_safely",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md",
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.060819,
      "updated_at": 1754957551.499396
    },
    "concept_869": {
      "id": "concept_869",
      "type": "concept",
      "name": "#### **Intelligent Debugging**",
      "description": "Concept: #### **Intelligent Debugging**",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.060992,
      "updated_at": 1754957551.060992
    },
    "concept_870": {
      "id": "concept_870",
      "type": "concept",
      "name": "- Safe deletion confirmation",
      "description": "Concept: - Safe deletion confirmation",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.0611572,
      "updated_at": 1754957551.0611572
    },
    "concept_871": {
      "id": "concept_871",
      "type": "concept",
      "name": "**Every tool** integrates with ContextAnalyzer",
      "description": "Concept: **Every tool** integrates with ContextAnalyzer",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.061335,
      "updated_at": 1754957551.061335
    },
    "concept_872": {
      "id": "concept_872",
      "type": "concept",
      "name": "- Emotional patterns",
      "description": "Concept: - Emotional patterns",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.061555,
      "updated_at": 1754957551.061555
    },
    "concept_873": {
      "id": "concept_873",
      "type": "concept",
      "name": "**`forget_selectively`** - Intelligent memory cleanup",
      "description": "Concept: **`forget_selectively`** - Intelligent memory cleanup",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.061734,
      "updated_at": 1754957551.061734
    },
    "concept_874": {
      "id": "concept_874",
      "type": "concept",
      "name": "reflect_enhanced",
      "description": "Concept: reflect_enhanced",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md",
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.061895,
      "updated_at": 1754957551.5000918
    },
    "concept_875": {
      "id": "concept_875",
      "type": "concept",
      "name": "Debug code with pattern recognition",
      "description": "Concept: Debug code with pattern recognition",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.062067,
      "updated_at": 1754957551.062067
    },
    "concept_876": {
      "id": "concept_876",
      "type": "concept",
      "name": "for documentation review\n- **Pattern Detection**: Use",
      "description": "Concept: for documentation review\n- **Pattern Detection**: Use",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.062256,
      "updated_at": 1754957551.062256
    },
    "concept_877": {
      "id": "concept_877",
      "type": "concept",
      "name": "[ ] Cursor tools optimize for development",
      "description": "Concept: [ ] Cursor tools optimize for development",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.062436,
      "updated_at": 1754957551.062436
    },
    "concept_878": {
      "id": "concept_878",
      "type": "concept",
      "name": "**Emotional context awareness** in all interactions",
      "description": "Concept: **Emotional context awareness** in all interactions",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.062607,
      "updated_at": 1754957551.062607
    },
    "concept_879": {
      "id": "concept_879",
      "type": "concept",
      "name": "[ ] Tool registry properly configured",
      "description": "Concept: [ ] Tool registry properly configured",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.0627751,
      "updated_at": 1754957551.0627751
    },
    "concept_880": {
      "id": "concept_880",
      "type": "concept",
      "name": "- Step-by-step approach",
      "description": "Concept: - Step-by-step approach",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.062942,
      "updated_at": 1754957551.062942
    },
    "concept_881": {
      "id": "concept_881",
      "type": "concept",
      "name": "**3. \ud83d\udcda Learning & Documentation**",
      "description": "Concept: **3. \ud83d\udcda Learning & Documentation**",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.063197,
      "updated_at": 1754957551.063197
    },
    "concept_882": {
      "id": "concept_882",
      "type": "concept",
      "name": "**Intelligent Debugging**",
      "description": "Concept: **Intelligent Debugging**",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.063363,
      "updated_at": 1754957551.063363
    },
    "concept_883": {
      "id": "concept_883",
      "type": "concept",
      "name": "Identifies:",
      "description": "Concept: Identifies:",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.063529,
      "updated_at": 1754957551.063529
    },
    "concept_884": {
      "id": "concept_884",
      "type": "concept",
      "name": "**\u2705 Pre-Deployment Verification**",
      "description": "Concept: **\u2705 Pre-Deployment Verification**",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.063783,
      "updated_at": 1754957551.063783
    },
    "concept_885": {
      "id": "concept_885",
      "type": "concept",
      "name": "**`assess_complexity`** - Comprehensive complexity assessment",
      "description": "Concept: **`assess_complexity`** - Comprehensive complexity assessment",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.063967,
      "updated_at": 1754957551.063967
    },
    "concept_886": {
      "id": "concept_886",
      "type": "concept",
      "name": "**\ud83d\udd0d Analysis & Understanding (3 tools)**",
      "description": "Concept: **\ud83d\udd0d Analysis & Understanding (3 tools)**",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.0642428,
      "updated_at": 1754957551.0642428
    },
    "concept_887": {
      "id": "concept_887",
      "type": "concept",
      "name": "- Quality assessment",
      "description": "Concept: - Quality assessment",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.064407,
      "updated_at": 1754957551.064407
    },
    "concept_888": {
      "id": "concept_888",
      "type": "concept",
      "name": "- Context-aware cleanup",
      "description": "Concept: - Context-aware cleanup",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.0645728,
      "updated_at": 1754957551.0645728
    },
    "concept_889": {
      "id": "concept_889",
      "type": "concept",
      "name": "- Best practice recommendations",
      "description": "Concept: - Best practice recommendations",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.0647411,
      "updated_at": 1754957551.0647411
    },
    "concept_890": {
      "id": "concept_890",
      "type": "concept",
      "name": "- Risk assessment",
      "description": "Concept: - Risk assessment",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.065075,
      "updated_at": 1754957551.065075
    },
    "concept_891": {
      "id": "concept_891",
      "type": "concept",
      "name": "python\n# Understand complex requests deeply\nresult = await mcp_client.call_tool(\"understand_deeply\", {\n    \"content\": \"I need to refactor legacy code without breaking production\",\n    \"analysis_type\": \"comprehensive\"\n})\n\n# Detects:\n# - Implicit goals and constraints\n# - Hidden complexity\n# - Risk factors\n# - Strategic recommendations",
      "description": "Concept: python\n# Understand complex requests deeply\nresult = await mcp_client.call_tool(\"understand_deeply\", {\n    \"content\": \"I need to refactor legacy code without breaking production\",\n    \"analysis_type\": \"comprehensive\"\n})\n\n# Detects:\n# - Implicit goals and constraints\n# - Hidden complexity\n# - Risk factors\n# - Strategic recommendations",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.065384,
      "updated_at": 1754957551.065384
    },
    "concept_892": {
      "id": "concept_892",
      "type": "concept",
      "name": "**Smart Information Storage**",
      "description": "Concept: **Smart Information Storage**",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.065567,
      "updated_at": 1754957551.065567
    },
    "concept_893": {
      "id": "concept_893",
      "type": "concept",
      "name": "forget_selectively",
      "description": "Concept: forget_selectively",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md",
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.065744,
      "updated_at": 1754957551.507948
    },
    "concept_894": {
      "id": "concept_894",
      "type": "concept",
      "name": "Assess content complexity comprehensively",
      "description": "Concept: Assess content complexity comprehensively",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.065962,
      "updated_at": 1754957551.065962
    },
    "concept_895": {
      "id": "concept_895",
      "type": "concept",
      "name": "[ ] User satisfaction high",
      "description": "Concept: [ ] User satisfaction high",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.066141,
      "updated_at": 1754957551.066141
    },
    "concept_896": {
      "id": "concept_896",
      "type": "concept",
      "name": "**ContextAnalyzer power** visible and accessible everywhere",
      "description": "Concept: **ContextAnalyzer power** visible and accessible everywhere",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.066325,
      "updated_at": 1754957551.066325
    },
    "concept_897": {
      "id": "concept_897",
      "type": "concept",
      "name": "detect_patterns",
      "description": "Concept: detect_patterns",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md",
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.066487,
      "updated_at": 1754957551.509259
    },
    "concept_898": {
      "id": "concept_898",
      "type": "concept",
      "name": "- Emotional depth",
      "description": "Concept: - Emotional depth",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.0666502,
      "updated_at": 1754957551.0666502
    },
    "concept_899": {
      "id": "concept_899",
      "type": "concept",
      "name": "**3. \ud83d\udd0d Advanced Analysis & Understanding**",
      "description": "Concept: **3. \ud83d\udd0d Advanced Analysis & Understanding**",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.066934,
      "updated_at": 1754957551.066934
    },
    "concept_900": {
      "id": "concept_900",
      "type": "concept",
      "name": "- Temporal patterns",
      "description": "Concept: - Temporal patterns",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.067105,
      "updated_at": 1754957551.067105
    },
    "concept_901": {
      "id": "concept_901",
      "type": "concept",
      "name": "python\n# Find subtle patterns in communication\nresult = await mcp_client.call_tool(\"detect_patterns\", {\n    \"content\": \"User communication patterns\",\n    \"pattern_type\": \"all\"\n})\n\n# Identifies:\n# - Emotional patterns\n# - Communication preferences\n# - Cross-domain connections\n# - Temporal patterns",
      "description": "Concept: python\n# Find subtle patterns in communication\nresult = await mcp_client.call_tool(\"detect_patterns\", {\n    \"content\": \"User communication patterns\",\n    \"pattern_type\": \"all\"\n})\n\n# Identifies:\n# - Emotional patterns\n# - Communication preferences\n# - Cross-domain connections\n# - Temporal patterns",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.067363,
      "updated_at": 1754957551.067363
    },
    "concept_902": {
      "id": "concept_902",
      "type": "concept",
      "name": "**Production-ready** system with comprehensive testing",
      "description": "Concept: **Production-ready** system with comprehensive testing",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.067539,
      "updated_at": 1754957551.067539
    },
    "concept_903": {
      "id": "concept_903",
      "type": "concept",
      "name": "- Multi-layer context analysis",
      "description": "Concept: - Multi-layer context analysis",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.067713,
      "updated_at": 1754957551.067713
    },
    "concept_904": {
      "id": "concept_904",
      "type": "concept",
      "name": "think_deeply",
      "description": "Concept: think_deeply",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md",
          "RESTRUCTURED_COGNITIVE_SYSTEM.md",
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.06788,
      "updated_at": 1754957551.510305
    },
    "concept_905": {
      "id": "concept_905",
      "type": "concept",
      "name": "**Complexity assessment** with actionable recommendations",
      "description": "Concept: **Complexity assessment** with actionable recommendations",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.06806,
      "updated_at": 1754957551.06806
    },
    "concept_906": {
      "id": "concept_906",
      "type": "concept",
      "name": "**`analyze_context_comprehensive`** - Full ContextAnalyzer functionality",
      "description": "Concept: **`analyze_context_comprehensive`** - Full ContextAnalyzer functionality",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.0682502,
      "updated_at": 1754957551.0682502
    },
    "concept_907": {
      "id": "concept_907",
      "type": "concept",
      "name": "python\n# Refactor code with risk assessment\nresult = await mcp_client.call_tool(\"refactor_safely\", {\n    \"code_content\": legacy_code,\n    \"refactor_goal\": \"improve maintainability\",\n    \"safety_level\": \"conservative\"\n})\n\n# Generates:\n# - Refactoring plan\n# - Risk assessment\n# - Safety recommendations\n# - Step-by-step approach",
      "description": "Concept: python\n# Refactor code with risk assessment\nresult = await mcp_client.call_tool(\"refactor_safely\", {\n    \"code_content\": legacy_code,\n    \"refactor_goal\": \"improve maintainability\",\n    \"safety_level\": \"conservative\"\n})\n\n# Generates:\n# - Refactoring plan\n# - Risk assessment\n# - Safety recommendations\n# - Step-by-step approach",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.0685189,
      "updated_at": 1754957551.0685189
    },
    "concept_908": {
      "id": "concept_908",
      "type": "concept",
      "name": "\ud83d\udd27 **Production Usage Examples**",
      "description": "Concept: \ud83d\udd27 **Production Usage Examples**",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.068794,
      "updated_at": 1754957551.068794
    },
    "concept_909": {
      "id": "concept_909",
      "type": "concept",
      "name": "**Safe Code Refactoring**",
      "description": "Concept: **Safe Code Refactoring**",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.0689678,
      "updated_at": 1754957551.0689678
    },
    "concept_910": {
      "id": "concept_910",
      "type": "concept",
      "name": "- Analyzes emotional context",
      "description": "Concept: - Analyzes emotional context",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.069144,
      "updated_at": 1754957551.069144
    },
    "concept_911": {
      "id": "concept_911",
      "type": "concept",
      "name": "#### **Pattern Detection Across Domains**",
      "description": "Concept: #### **Pattern Detection Across Domains**",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.06932,
      "updated_at": 1754957551.06932
    },
    "concept_912": {
      "id": "concept_912",
      "type": "concept",
      "name": "#### **Intelligent Memory Retrieval**",
      "description": "Concept: #### **Intelligent Memory Retrieval**",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.069511,
      "updated_at": 1754957551.069511
    },
    "concept_913": {
      "id": "concept_913",
      "type": "concept",
      "name": "- Complexity assessment",
      "description": "Concept: - Complexity assessment",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.069686,
      "updated_at": 1754957551.069686
    },
    "concept_914": {
      "id": "concept_914",
      "type": "concept",
      "name": "**Pattern Detection Across Domains**",
      "description": "Concept: **Pattern Detection Across Domains**",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.069868,
      "updated_at": 1754957551.069868
    },
    "concept_915": {
      "id": "concept_915",
      "type": "concept",
      "name": "python\n# Safely remove outdated information\nresult = await mcp_client.call_tool(\"forget_selectively\", {\n    \"criteria\": \"outdated documentation\",\n    \"confirmation\": True\n})\n\n# Provides:\n# - Risk assessment before deletion\n# - Context-aware cleanup\n# - Safe deletion confirmation",
      "description": "Concept: python\n# Safely remove outdated information\nresult = await mcp_client.call_tool(\"forget_selectively\", {\n    \"criteria\": \"outdated documentation\",\n    \"confirmation\": True\n})\n\n# Provides:\n# - Risk assessment before deletion\n# - Context-aware cleanup\n# - Safe deletion confirmation",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.0701199,
      "updated_at": 1754957551.0701199
    },
    "concept_916": {
      "id": "concept_916",
      "type": "concept",
      "name": "**Safe refactoring** with risk assessment",
      "description": "Concept: **Safe refactoring** with risk assessment",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.0703099,
      "updated_at": 1754957551.0703099
    },
    "concept_917": {
      "id": "concept_917",
      "type": "concept",
      "name": "**Implicit goal detection** in user requests",
      "description": "Concept: **Implicit goal detection** in user requests",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.0705311,
      "updated_at": 1754957551.0705311
    },
    "concept_918": {
      "id": "concept_918",
      "type": "concept",
      "name": "[ ] Context tools deliver comprehensive analysis",
      "description": "Concept: [ ] Context tools deliver comprehensive analysis",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.0707278,
      "updated_at": 1754957551.0707278
    },
    "concept_919": {
      "id": "concept_919",
      "type": "concept",
      "name": "- Context-aware analysis",
      "description": "Concept: - Context-aware analysis",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.0708961,
      "updated_at": 1754957551.0708961
    },
    "concept_920": {
      "id": "concept_920",
      "type": "concept",
      "name": "**Deep Thinking with Context**",
      "description": "Concept: **Deep Thinking with Context**",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.071064,
      "updated_at": 1754957551.071064
    },
    "concept_921": {
      "id": "concept_921",
      "type": "concept",
      "name": "Safely remove outdated information",
      "description": "Concept: Safely remove outdated information",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.0712361,
      "updated_at": 1754957551.0712361
    },
    "concept_922": {
      "id": "concept_922",
      "type": "concept",
      "name": "**Deep Content Comprehension**",
      "description": "Concept: **Deep Content Comprehension**",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.071409,
      "updated_at": 1754957551.071409
    },
    "concept_923": {
      "id": "concept_923",
      "type": "concept",
      "name": "Remember important information with context",
      "description": "Concept: Remember important information with context",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.071597,
      "updated_at": 1754957551.071597
    },
    "concept_924": {
      "id": "concept_924",
      "type": "concept",
      "name": "- Implicit goal detection",
      "description": "Concept: - Implicit goal detection",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.071775,
      "updated_at": 1754957551.071775
    },
    "concept_925": {
      "id": "concept_925",
      "type": "concept",
      "name": "**2. \ud83e\udde0 AI Assistant Enhancement**",
      "description": "Concept: **2. \ud83e\udde0 AI Assistant Enhancement**",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.072055,
      "updated_at": 1754957551.072055
    },
    "concept_926": {
      "id": "concept_926",
      "type": "concept",
      "name": "understand_deeply",
      "description": "Concept: understand_deeply",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md",
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.072227,
      "updated_at": 1754957551.517477
    },
    "concept_927": {
      "id": "concept_927",
      "type": "concept",
      "name": "python\n# Debug code with pattern recognition\nresult = await mcp_client.call_tool(\"debug_intelligently\", {\n    \"code_content\": problematic_code,\n    \"error_message\": \"TypeError: 'NoneType' object is not subscriptable\",\n    \"context\": \"production\"\n})\n\n# Offers:\n# - Pattern-based debugging\n# - Strategic recommendations\n# - Context-aware analysis\n# - Debugging strategies",
      "description": "Concept: python\n# Debug code with pattern recognition\nresult = await mcp_client.call_tool(\"debug_intelligently\", {\n    \"code_content\": problematic_code,\n    \"error_message\": \"TypeError: 'NoneType' object is not subscriptable\",\n    \"context\": \"production\"\n})\n\n# Offers:\n# - Pattern-based debugging\n# - Strategic recommendations\n# - Context-aware analysis\n# - Debugging strategies",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.0725062,
      "updated_at": 1754957551.0725062
    },
    "concept_928": {
      "id": "concept_928",
      "type": "concept",
      "name": "**`code_analyze`** - Code context and quality analysis",
      "description": "Concept: **`code_analyze`** - Code context and quality analysis",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.0726862,
      "updated_at": 1754957551.0726862
    },
    "concept_929": {
      "id": "concept_929",
      "type": "concept",
      "name": "[ ] ContextAnalyzer integration verified",
      "description": "Concept: [ ] ContextAnalyzer integration verified",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.072858,
      "updated_at": 1754957551.072858
    },
    "concept_930": {
      "id": "concept_930",
      "type": "concept",
      "name": "**\ud83d\udcbb Cursor-Specific (3 tools)**",
      "description": "Concept: **\ud83d\udcbb Cursor-Specific (3 tools)**",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.073154,
      "updated_at": 1754957551.073154
    },
    "concept_931": {
      "id": "concept_931",
      "type": "concept",
      "name": "python\n# Assess content complexity comprehensively\nresult = await mcp_client.call_tool(\"assess_complexity\", {\n    \"content\": \"Technical documentation\",\n    \"assessment_focus\": \"comprehensive\"\n})\n\n# Evaluates:\n# - Cognitive load\n# - Technical complexity\n# - Emotional depth\n# - Actionable recommendations",
      "description": "Concept: python\n# Assess content complexity comprehensively\nresult = await mcp_client.call_tool(\"assess_complexity\", {\n    \"content\": \"Technical documentation\",\n    \"assessment_focus\": \"comprehensive\"\n})\n\n# Evaluates:\n# - Cognitive load\n# - Technical complexity\n# - Emotional depth\n# - Actionable recommendations",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.073546,
      "updated_at": 1754957551.073546
    },
    "concept_932": {
      "id": "concept_932",
      "type": "concept",
      "name": "**Risk Assessment**: Use `refactor_safely` for system changes",
      "description": "Concept: **Risk Assessment**: Use `refactor_safely` for system changes",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.0738099,
      "updated_at": 1754957551.0738099
    },
    "concept_933": {
      "id": "concept_933",
      "type": "concept",
      "name": "for large-scale code improvements\n- **Debugging**: Use",
      "description": "Concept: for large-scale code improvements\n- **Debugging**: Use",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.073996,
      "updated_at": 1754957551.073996
    },
    "concept_934": {
      "id": "concept_934",
      "type": "concept",
      "name": "**`recall_intelligently`** - Smart memory retrieval with relevance scoring",
      "description": "Concept: **`recall_intelligently`** - Smart memory retrieval with relevance scoring",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.074218,
      "updated_at": 1754957551.074218
    },
    "concept_935": {
      "id": "concept_935",
      "type": "concept",
      "name": "#### **Enhanced Self-Reflection**",
      "description": "Concept: #### **Enhanced Self-Reflection**",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.074443,
      "updated_at": 1754957551.074444
    },
    "concept_936": {
      "id": "concept_936",
      "type": "concept",
      "name": "**Pattern Recognition**: Use `detect_patterns` for user behavior analysis",
      "description": "Concept: **Pattern Recognition**: Use `detect_patterns` for user behavior analysis",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.074628,
      "updated_at": 1754957551.074628
    },
    "concept_937": {
      "id": "concept_937",
      "type": "concept",
      "name": "---\n\n## \ud83d\ude80 **Production Deployment Checklist**\n\n### **\u2705 Pre-Deployment Verification**\n\n- [ ] All 12 enhanced tools registered successfully\n- [ ] ContextAnalyzer integration verified\n- [ ] MCP server running without errors\n- [ ] Tool registry properly configured\n- [ ] Enhanced brain tools loaded\n\n### **\u2705 Integration Testing**\n\n- [ ] Cognitive tools respond with context insights\n- [ ] Memory tools use ContextAnalyzer\n- [ ] Analysis tools provide deep understanding\n- [ ] Cursor tools optimize for development\n- [ ] Context tools deliver comprehensive analysis\n\n### **\u2705 Performance Monitoring**\n\n- [ ] Tool response times acceptable\n- [ ] ContextAnalyzer performance optimal\n- [ ] Memory usage within limits\n- [ ] Error rates minimal\n- [ ] User satisfaction high\n\n---\n\n## \ud83c\udfaf **Real-World Use Cases**\n\n### **1. \ud83c\udfe2 Enterprise Development**\n\n- **Code Reviews**: Use",
      "description": "Concept: ---\n\n## \ud83d\ude80 **Production Deployment Checklist**\n\n### **\u2705 Pre-Deployment Verification**\n\n- [ ] All 12 enhanced tools registered successfully\n- [ ] ContextAnalyzer integration verified\n- [ ] MCP server running without errors\n- [ ] Tool registry properly configured\n- [ ] Enhanced brain tools loaded\n\n### **\u2705 Integration Testing**\n\n- [ ] Cognitive tools respond with context insights\n- [ ] Memory tools use ContextAnalyzer\n- [ ] Analysis tools provide deep understanding\n- [ ] Cursor tools optimize for development\n- [ ] Context tools deliver comprehensive analysis\n\n### **\u2705 Performance Monitoring**\n\n- [ ] Tool response times acceptable\n- [ ] ContextAnalyzer performance optimal\n- [ ] Memory usage within limits\n- [ ] Error rates minimal\n- [ ] User satisfaction high\n\n---\n\n## \ud83c\udfaf **Real-World Use Cases**\n\n### **1. \ud83c\udfe2 Enterprise Development**\n\n- **Code Reviews**: Use",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.0771022,
      "updated_at": 1754957551.0771022
    },
    "concept_938": {
      "id": "concept_938",
      "type": "concept",
      "name": "recall_intelligently",
      "description": "Concept: recall_intelligently",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md",
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.0772831,
      "updated_at": 1754957551.521808
    },
    "concept_939": {
      "id": "concept_939",
      "type": "concept",
      "name": "Understand complex requests deeply",
      "description": "Concept: Understand complex requests deeply",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.077473,
      "updated_at": 1754957551.077473
    },
    "concept_940": {
      "id": "concept_940",
      "type": "concept",
      "name": "- Context-aware insights",
      "description": "Concept: - Context-aware insights",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.077646,
      "updated_at": 1754957551.077646
    },
    "concept_941": {
      "id": "concept_941",
      "type": "concept",
      "name": "**Multi-layer context analysis** for comprehensive insights",
      "description": "Concept: **Multi-layer context analysis** for comprehensive insights",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.0778298,
      "updated_at": 1754957551.0778298
    },
    "concept_942": {
      "id": "concept_942",
      "type": "concept",
      "name": "**`detect_patterns`** - Advanced pattern detection",
      "description": "Concept: **`detect_patterns`** - Advanced pattern detection",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.078015,
      "updated_at": 1754957551.078015
    },
    "concept_943": {
      "id": "concept_943",
      "type": "concept",
      "name": "#### **Complexity Assessment**",
      "description": "Concept: #### **Complexity Assessment**",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.078188,
      "updated_at": 1754957551.078188
    },
    "concept_944": {
      "id": "concept_944",
      "type": "concept",
      "name": "#### **Safe Code Refactoring**",
      "description": "Concept: #### **Safe Code Refactoring**",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.07836,
      "updated_at": 1754957551.07836
    },
    "concept_945": {
      "id": "concept_945",
      "type": "concept",
      "name": "**\u2705 Performance Monitoring**",
      "description": "Concept: **\u2705 Performance Monitoring**",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.078665,
      "updated_at": 1754957551.078665
    },
    "concept_946": {
      "id": "concept_946",
      "type": "concept",
      "name": "assess_complexity",
      "description": "Concept: assess_complexity",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md",
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.078866,
      "updated_at": 1754957551.5237691
    },
    "concept_947": {
      "id": "concept_947",
      "type": "concept",
      "name": "**`remember_important`** - Enhanced memory formation",
      "description": "Concept: **`remember_important`** - Enhanced memory formation",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.079059,
      "updated_at": 1754957551.079059
    },
    "concept_948": {
      "id": "concept_948",
      "type": "concept",
      "name": "[ ] Error rates minimal",
      "description": "Concept: [ ] Error rates minimal",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.079232,
      "updated_at": 1754957551.079233
    },
    "concept_949": {
      "id": "concept_949",
      "type": "concept",
      "name": "for system analysis\n- **Pattern Recognition**: Use",
      "description": "Concept: for system analysis\n- **Pattern Recognition**: Use",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.079415,
      "updated_at": 1754957551.079415
    },
    "concept_950": {
      "id": "concept_950",
      "type": "concept",
      "name": "- Emotional weight consideration",
      "description": "Concept: - Emotional weight consideration",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.079594,
      "updated_at": 1754957551.079594
    },
    "concept_951": {
      "id": "concept_951",
      "type": "concept",
      "name": "python\n# Use think_deeply for complex problem solving\nresult = await mcp_client.call_tool(\"think_deeply\", {\n    \"message\": \"How can I refactor this legacy system safely?\",\n    \"context\": \"system_architecture\"\n})\n\n# Result includes:\n# - ContextAnalyzer insights\n# - Implicit goal detection\n# - Complexity assessment\n# - Strategic recommendations",
      "description": "Concept: python\n# Use think_deeply for complex problem solving\nresult = await mcp_client.call_tool(\"think_deeply\", {\n    \"message\": \"How can I refactor this legacy system safely?\",\n    \"context\": \"system_architecture\"\n})\n\n# Result includes:\n# - ContextAnalyzer insights\n# - Implicit goal detection\n# - Complexity assessment\n# - Strategic recommendations",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.0798771,
      "updated_at": 1754957551.0798771
    },
    "concept_952": {
      "id": "concept_952",
      "type": "concept",
      "name": "Features:",
      "description": "Concept: Features:",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.0800488,
      "updated_at": 1754957551.0800488
    },
    "concept_953": {
      "id": "concept_953",
      "type": "concept",
      "name": "[ ] Analysis tools provide deep understanding",
      "description": "Concept: [ ] Analysis tools provide deep understanding",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.080232,
      "updated_at": 1754957551.080232
    },
    "concept_954": {
      "id": "concept_954",
      "type": "concept",
      "name": "[ ] Memory usage within limits",
      "description": "Concept: [ ] Memory usage within limits",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.0804071,
      "updated_at": 1754957551.0804071
    },
    "concept_955": {
      "id": "concept_955",
      "type": "concept",
      "name": "**\ud83e\udde0 Human-Inspired Intelligence**",
      "description": "Concept: **\ud83e\udde0 Human-Inspired Intelligence**",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.080731,
      "updated_at": 1754957551.080731
    },
    "concept_956": {
      "id": "concept_956",
      "type": "concept",
      "name": "**Consistent context understanding** across all tools",
      "description": "Concept: **Consistent context understanding** across all tools",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.080918,
      "updated_at": 1754957551.080918
    },
    "concept_957": {
      "id": "concept_957",
      "type": "concept",
      "name": "**5. \ud83c\udfaf Dedicated Context Analysis**",
      "description": "Concept: **5. \ud83c\udfaf Dedicated Context Analysis**",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.081192,
      "updated_at": 1754957551.081192
    },
    "concept_958": {
      "id": "concept_958",
      "type": "concept",
      "name": "**Code analysis** with context awareness",
      "description": "Concept: **Code analysis** with context awareness",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.081377,
      "updated_at": 1754957551.081377
    },
    "concept_959": {
      "id": "concept_959",
      "type": "concept",
      "name": "**12 Enhanced Tools** with full ContextAnalyzer integration",
      "description": "Concept: **12 Enhanced Tools** with full ContextAnalyzer integration",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.0816472,
      "updated_at": 1754957551.0816472
    },
    "concept_960": {
      "id": "concept_960",
      "type": "concept",
      "name": "- Code structure analysis",
      "description": "Concept: - Code structure analysis",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.081883,
      "updated_at": 1754957551.081883
    },
    "concept_961": {
      "id": "concept_961",
      "type": "concept",
      "name": "python\n# Analyze code structure and quality\nresult = await mcp_client.call_tool(\"code_analyze\", {\n    \"code_content\": sample_code,\n    \"analysis_focus\": \"quality\"\n})\n\n# Provides:\n# - Code structure analysis\n# - Quality assessment\n# - Best practice recommendations\n# - Context-aware insights",
      "description": "Concept: python\n# Analyze code structure and quality\nresult = await mcp_client.call_tool(\"code_analyze\", {\n    \"code_content\": sample_code,\n    \"analysis_focus\": \"quality\"\n})\n\n# Provides:\n# - Code structure analysis\n# - Quality assessment\n# - Best practice recommendations\n# - Context-aware insights",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.082169,
      "updated_at": 1754957551.082169
    },
    "concept_962": {
      "id": "concept_962",
      "type": "concept",
      "name": "**\u2705 Integration Testing**",
      "description": "Concept: **\u2705 Integration Testing**",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.082429,
      "updated_at": 1754957551.082429
    },
    "concept_963": {
      "id": "concept_963",
      "type": "concept",
      "name": "analyze_context_comprehensive",
      "description": "Concept: analyze_context_comprehensive",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.082672,
      "updated_at": 1754957551.082672
    },
    "concept_964": {
      "id": "concept_964",
      "type": "concept",
      "name": "- Hidden complexity",
      "description": "Concept: - Hidden complexity",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.082866,
      "updated_at": 1754957551.082866
    },
    "concept_965": {
      "id": "concept_965",
      "type": "concept",
      "name": "[ ] Memory tools use ContextAnalyzer",
      "description": "Concept: [ ] Memory tools use ContextAnalyzer",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.0830421,
      "updated_at": 1754957551.0830421
    },
    "concept_966": {
      "id": "concept_966",
      "type": "concept",
      "name": "Automatically:",
      "description": "Concept: Automatically:",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.083222,
      "updated_at": 1754957551.083222
    },
    "concept_967": {
      "id": "concept_967",
      "type": "concept",
      "name": "**\ud83c\udfaf Context Analysis (1 tool)**",
      "description": "Concept: **\ud83c\udfaf Context Analysis (1 tool)**",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.083487,
      "updated_at": 1754957551.083487
    },
    "concept_968": {
      "id": "concept_968",
      "type": "concept",
      "name": "**Pattern Recognition**: Use `detect_patterns` for system monitoring",
      "description": "Concept: **Pattern Recognition**: Use `detect_patterns` for system monitoring",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.08368,
      "updated_at": 1754957551.08368
    },
    "concept_969": {
      "id": "concept_969",
      "type": "concept",
      "name": "**Comprehensive Context Understanding**",
      "description": "Concept: **Comprehensive Context Understanding**",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.0838559,
      "updated_at": 1754957551.0838559
    },
    "concept_970": {
      "id": "concept_970",
      "type": "concept",
      "name": "- Refactoring plan",
      "description": "Concept: - Refactoring plan",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.084037,
      "updated_at": 1754957551.084037
    },
    "concept_971": {
      "id": "concept_971",
      "type": "concept",
      "name": "python\n# Full ContextAnalyzer power\nresult = await mcp_client.call_tool(\"analyze_context_comprehensive\", {\n    \"content\": complex_request\n})\n\n# Delivers:\n# - Multi-layer context analysis\n# - Implicit goal detection\n# - Emotional context understanding\n# - Complexity assessment\n# - Strategic recommendations\n# - Subtle pattern recognition",
      "description": "Concept: python\n# Full ContextAnalyzer power\nresult = await mcp_client.call_tool(\"analyze_context_comprehensive\", {\n    \"content\": complex_request\n})\n\n# Delivers:\n# - Multi-layer context analysis\n# - Implicit goal detection\n# - Emotional context understanding\n# - Complexity assessment\n# - Strategic recommendations\n# - Subtle pattern recognition",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.084312,
      "updated_at": 1754957551.084312
    },
    "concept_972": {
      "id": "concept_972",
      "type": "concept",
      "name": "**`refactor_safely`** - Safe code refactoring with risk assessment",
      "description": "Concept: **`refactor_safely`** - Safe code refactoring with risk assessment",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.084503,
      "updated_at": 1754957551.084503
    },
    "concept_973": {
      "id": "concept_973",
      "type": "concept",
      "name": "**4. \ud83d\udd27 System Administration**",
      "description": "Concept: **4. \ud83d\udd27 System Administration**",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.084773,
      "updated_at": 1754957551.084773
    },
    "concept_974": {
      "id": "concept_974",
      "type": "concept",
      "name": "- Strategic recommendations",
      "description": "Concept: - Strategic recommendations",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.084969,
      "updated_at": 1754957551.084969
    },
    "concept_975": {
      "id": "concept_975",
      "type": "concept",
      "name": "### **3. \ud83d\udd0d Advanced Analysis & Understanding**\n\n#### **Deep Content Comprehension**",
      "description": "Concept: ### **3. \ud83d\udd0d Advanced Analysis & Understanding**\n\n#### **Deep Content Comprehension**",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.085417,
      "updated_at": 1754957551.085417
    },
    "concept_976": {
      "id": "concept_976",
      "type": "concept",
      "name": "**\ud83d\udcbb Cursor Optimization**",
      "description": "Concept: **\ud83d\udcbb Cursor Optimization**",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.085696,
      "updated_at": 1754957551.085696
    },
    "concept_977": {
      "id": "concept_977",
      "type": "concept",
      "name": "**`debug_intelligently`** - Smart debugging with pattern recognition",
      "description": "Concept: **`debug_intelligently`** - Smart debugging with pattern recognition",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.0858932,
      "updated_at": 1754957551.0858932
    },
    "concept_978": {
      "id": "concept_978",
      "type": "concept",
      "name": "Full ContextAnalyzer power",
      "description": "Concept: Full ContextAnalyzer power",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.086072,
      "updated_at": 1754957551.086072
    },
    "concept_979": {
      "id": "concept_979",
      "type": "concept",
      "name": "Detects:",
      "description": "Concept: Detects:",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.086248,
      "updated_at": 1754957551.086248
    },
    "concept_980": {
      "id": "concept_980",
      "type": "concept",
      "name": "\ud83c\udf89 **Congratulations!**",
      "description": "Concept: \ud83c\udf89 **Congratulations!**",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.086494,
      "updated_at": 1754957551.086494
    },
    "concept_981": {
      "id": "concept_981",
      "type": "concept",
      "name": "- Technical complexity",
      "description": "Concept: - Technical complexity",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.086679,
      "updated_at": 1754957551.086679
    },
    "concept_982": {
      "id": "concept_982",
      "type": "concept",
      "name": "Use reflect_enhanced for learning improvement",
      "description": "Concept: Use reflect_enhanced for learning improvement",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.086882,
      "updated_at": 1754957551.086882
    },
    "concept_983": {
      "id": "concept_983",
      "type": "concept",
      "name": "**Conversation Memory**: Use `remember_important` and `recall_intelligently`",
      "description": "Concept: **Conversation Memory**: Use `remember_important` and `recall_intelligently`",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.0870771,
      "updated_at": 1754957551.0870771
    },
    "concept_984": {
      "id": "concept_984",
      "type": "concept",
      "name": "Find relevant memories with context awareness",
      "description": "Concept: Find relevant memories with context awareness",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.0872672,
      "updated_at": 1754957551.0872672
    },
    "concept_985": {
      "id": "concept_985",
      "type": "concept",
      "name": "- Tags with relevant patterns",
      "description": "Concept: - Tags with relevant patterns",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.087442,
      "updated_at": 1754957551.087442
    },
    "concept_986": {
      "id": "concept_986",
      "type": "concept",
      "name": "**Code Reviews**: Use `code_analyze` for comprehensive code assessment",
      "description": "Concept: **Code Reviews**: Use `code_analyze` for comprehensive code assessment",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.087631,
      "updated_at": 1754957551.087631
    },
    "concept_987": {
      "id": "concept_987",
      "type": "concept",
      "name": "- Communication preferences",
      "description": "Concept: - Communication preferences",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.08781,
      "updated_at": 1754957551.08781
    },
    "concept_988": {
      "id": "concept_988",
      "type": "concept",
      "name": "**2. \ud83e\udde0 Intelligent Memory Management**",
      "description": "Concept: **2. \ud83e\udde0 Intelligent Memory Management**",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.08816,
      "updated_at": 1754957551.088161
    },
    "concept_989": {
      "id": "concept_989",
      "type": "concept",
      "name": "- ContextAnalyzer insights",
      "description": "Concept: - ContextAnalyzer insights",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.0883489,
      "updated_at": 1754957551.0883489
    },
    "concept_990": {
      "id": "concept_990",
      "type": "concept",
      "name": "\ud83c\udf1f **What Makes This Special**",
      "description": "Concept: \ud83c\udf1f **What Makes This Special**",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.088628,
      "updated_at": 1754957551.088628
    },
    "concept_991": {
      "id": "concept_991",
      "type": "concept",
      "name": "**Content Analysis**: Use `assess_complexity` for documentation review",
      "description": "Concept: **Content Analysis**: Use `assess_complexity` for documentation review",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.088827,
      "updated_at": 1754957551.088827
    },
    "concept_992": {
      "id": "concept_992",
      "type": "concept",
      "name": "- Cognitive load",
      "description": "Concept: - Cognitive load",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.0890071,
      "updated_at": 1754957551.0890071
    },
    "concept_993": {
      "id": "concept_993",
      "type": "concept",
      "name": "**Code Quality Analysis**",
      "description": "Concept: **Code Quality Analysis**",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.089191,
      "updated_at": 1754957551.089191
    },
    "concept_994": {
      "id": "concept_994",
      "type": "concept",
      "name": "Provides:",
      "description": "Concept: Provides:",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.089368,
      "updated_at": 1754957551.089368
    },
    "concept_995": {
      "id": "concept_995",
      "type": "concept",
      "name": "- Risk assessment before deletion",
      "description": "Concept: - Risk assessment before deletion",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.08955,
      "updated_at": 1754957551.0895512
    },
    "concept_996": {
      "id": "concept_996",
      "type": "concept",
      "name": "\ud83d\ude80 **Production Deployment Checklist**",
      "description": "Concept: \ud83d\ude80 **Production Deployment Checklist**",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.089845,
      "updated_at": 1754957551.089845
    },
    "concept_997": {
      "id": "concept_997",
      "type": "concept",
      "name": "debug_intelligently",
      "description": "Concept: debug_intelligently",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md",
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.09007,
      "updated_at": 1754957551.537205
    },
    "concept_998": {
      "id": "concept_998",
      "type": "concept",
      "name": "\ud83d\udcca **Tool Arsenal Overview**",
      "description": "Concept: \ud83d\udcca **Tool Arsenal Overview**",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.090343,
      "updated_at": 1754957551.090343
    },
    "concept_999": {
      "id": "concept_999",
      "type": "concept",
      "name": "python\n# Use reflect_enhanced for learning improvement\nresult = await mcp_client.call_tool(\"reflect_enhanced\", {\n    \"topic\": \"recent_interactions\"\n})\n\n# Provides:\n# - Pattern recognition in conversations\n# - Learning optimization suggestions\n# - Context-aware insights",
      "description": "Concept: python\n# Use reflect_enhanced for learning improvement\nresult = await mcp_client.call_tool(\"reflect_enhanced\", {\n    \"topic\": \"recent_interactions\"\n})\n\n# Provides:\n# - Pattern recognition in conversations\n# - Learning optimization suggestions\n# - Context-aware insights",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.0906482,
      "updated_at": 1754957551.0906482
    },
    "concept_1000": {
      "id": "concept_1000",
      "type": "concept",
      "name": "\ud83d\ude80 Production Integration Guide",
      "description": "Concept: \ud83d\ude80 Production Integration Guide",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.090949,
      "updated_at": 1754957551.090949
    },
    "concept_1001": {
      "id": "concept_1001",
      "type": "concept",
      "name": "**Complexity Management**: Use `assess_complexity` for system analysis",
      "description": "Concept: **Complexity Management**: Use `assess_complexity` for system analysis",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.091161,
      "updated_at": 1754957551.091161
    },
    "concept_1002": {
      "id": "concept_1002",
      "type": "concept",
      "name": "- Safety recommendations",
      "description": "Concept: - Safety recommendations",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.091388,
      "updated_at": 1754957551.091388
    },
    "concept_1003": {
      "id": "concept_1003",
      "type": "concept",
      "name": "- Cross-domain connections",
      "description": "Concept: - Cross-domain connections",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.091606,
      "updated_at": 1754957551.091606
    },
    "concept_1004": {
      "id": "concept_1004",
      "type": "concept",
      "name": "for learning optimization\n- **Context Analysis**: Use",
      "description": "Concept: for learning optimization\n- **Context Analysis**: Use",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.0918021,
      "updated_at": 1754957551.0918021
    },
    "concept_1005": {
      "id": "concept_1005",
      "type": "concept",
      "name": "for system changes\n- **Complexity Management**: Use",
      "description": "Concept: for system changes\n- **Complexity Management**: Use",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.091987,
      "updated_at": 1754957551.091987
    },
    "concept_1006": {
      "id": "concept_1006",
      "type": "concept",
      "name": "**`think_deeply`** - Deep reasoning with full ContextAnalyzer",
      "description": "Concept: **`think_deeply`** - Deep reasoning with full ContextAnalyzer",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.092181,
      "updated_at": 1754957551.092181
    },
    "concept_1007": {
      "id": "concept_1007",
      "type": "concept",
      "name": "### **2. \ud83e\udde0 Intelligent Memory Management**\n\n#### **Smart Information Storage**",
      "description": "Concept: ### **2. \ud83e\udde0 Intelligent Memory Management**\n\n#### **Smart Information Storage**",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.092623,
      "updated_at": 1754957551.092623
    },
    "concept_1008": {
      "id": "concept_1008",
      "type": "concept",
      "name": "**Development-focused tools** for coding workflows",
      "description": "Concept: **Development-focused tools** for coding workflows",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.092813,
      "updated_at": 1754957551.092813
    },
    "concept_1009": {
      "id": "concept_1009",
      "type": "concept",
      "name": "\ud83c\udfaf Enhanced Tool Arsenal - Ready for Production!",
      "description": "Concept: \ud83c\udfaf Enhanced Tool Arsenal - Ready for Production!",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.093172,
      "updated_at": 1754957551.093172
    },
    "concept_1010": {
      "id": "concept_1010",
      "type": "concept",
      "name": "Result includes:",
      "description": "Concept: Result includes:",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.0933518,
      "updated_at": 1754957551.0933518
    },
    "concept_1011": {
      "id": "concept_1011",
      "type": "concept",
      "name": "- Actionable recommendations",
      "description": "Concept: - Actionable recommendations",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.0935411,
      "updated_at": 1754957551.0935411
    },
    "concept_1012": {
      "id": "concept_1012",
      "type": "concept",
      "name": "**1. \ud83e\udde0 Enhanced Cognitive Processing**",
      "description": "Concept: **1. \ud83e\udde0 Enhanced Cognitive Processing**",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.093858,
      "updated_at": 1754957551.093858
    },
    "concept_1013": {
      "id": "concept_1013",
      "type": "concept",
      "name": "\ud83c\udfaf **Real-World Use Cases**",
      "description": "Concept: \ud83c\udfaf **Real-World Use Cases**",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.094125,
      "updated_at": 1754957551.094125
    },
    "concept_1014": {
      "id": "concept_1014",
      "type": "concept",
      "name": "**\ud83e\udde0 Memory Management (3 tools)**",
      "description": "Concept: **\ud83e\udde0 Memory Management (3 tools)**",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.094409,
      "updated_at": 1754957551.094409
    },
    "concept_1015": {
      "id": "concept_1015",
      "type": "concept",
      "name": "**`understand_deeply`** - Deep comprehension analysis",
      "description": "Concept: **`understand_deeply`** - Deep comprehension analysis",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.0946162,
      "updated_at": 1754957551.0946162
    },
    "concept_1016": {
      "id": "concept_1016",
      "type": "concept",
      "name": "- Implicit goals and constraints",
      "description": "Concept: - Implicit goals and constraints",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.094808,
      "updated_at": 1754957551.094808
    },
    "concept_1017": {
      "id": "concept_1017",
      "type": "concept",
      "name": "**Context Analysis**: Use `analyze_context_comprehensive` for deep understanding",
      "description": "Concept: **Context Analysis**: Use `analyze_context_comprehensive` for deep understanding",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.0950038,
      "updated_at": 1754957551.0950038
    },
    "concept_1018": {
      "id": "concept_1018",
      "type": "concept",
      "name": "**No more fallback systems** - full power always available",
      "description": "Concept: **No more fallback systems** - full power always available",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.0951989,
      "updated_at": 1754957551.0951989
    },
    "concept_1019": {
      "id": "concept_1019",
      "type": "concept",
      "name": "- Integrates with existing memories",
      "description": "Concept: - Integrates with existing memories",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.095391,
      "updated_at": 1754957551.095391
    },
    "concept_1020": {
      "id": "concept_1020",
      "type": "concept",
      "name": "**\ud83c\udfaf ContextAnalyzer Everywhere**",
      "description": "Concept: **\ud83c\udfaf ContextAnalyzer Everywhere**",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.095685,
      "updated_at": 1754957551.095685
    },
    "concept_1021": {
      "id": "concept_1021",
      "type": "concept",
      "name": "for complex requests\n- **Pattern Recognition**: Use",
      "description": "Concept: for complex requests\n- **Pattern Recognition**: Use",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.0958772,
      "updated_at": 1754957551.0958772
    },
    "concept_1022": {
      "id": "concept_1022",
      "type": "concept",
      "name": "[ ] ContextAnalyzer performance optimal",
      "description": "Concept: [ ] ContextAnalyzer performance optimal",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.0960598,
      "updated_at": 1754957551.0960598
    },
    "concept_1023": {
      "id": "concept_1023",
      "type": "concept",
      "name": "**\ud83e\udde0 Cognitive Core (2 tools)**",
      "description": "Concept: **\ud83e\udde0 Cognitive Core (2 tools)**",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.0963311,
      "updated_at": 1754957551.0963311
    },
    "concept_1024": {
      "id": "concept_1024",
      "type": "concept",
      "name": "Delivers:",
      "description": "Concept: Delivers:",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.096512,
      "updated_at": 1754957551.096512
    },
    "concept_1025": {
      "id": "concept_1025",
      "type": "concept",
      "name": "- Risk factors",
      "description": "Concept: - Risk factors",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.096687,
      "updated_at": 1754957551.096687
    },
    "concept_1026": {
      "id": "concept_1026",
      "type": "concept",
      "name": "**1. \ud83c\udfe2 Enterprise Development**",
      "description": "Concept: **1. \ud83c\udfe2 Enterprise Development**",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.096962,
      "updated_at": 1754957551.096962
    },
    "concept_1027": {
      "id": "concept_1027",
      "type": "concept",
      "name": "**`reflect_enhanced`** - Advanced self-reflection with context",
      "description": "Concept: **`reflect_enhanced`** - Advanced self-reflection with context",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.097155,
      "updated_at": 1754957551.097155
    },
    "concept_1028": {
      "id": "concept_1028",
      "type": "concept",
      "name": "[ ] All 12 enhanced tools registered successfully",
      "description": "Concept: [ ] All 12 enhanced tools registered successfully",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.097345,
      "updated_at": 1754957551.097345
    },
    "concept_1029": {
      "id": "concept_1029",
      "type": "concept",
      "name": "[ ] MCP server running without errors",
      "description": "Concept: [ ] MCP server running without errors",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.0975292,
      "updated_at": 1754957551.0975292
    },
    "concept_1030": {
      "id": "concept_1030",
      "type": "concept",
      "name": "### **5. \ud83c\udfaf Dedicated Context Analysis**\n\n#### **Comprehensive Context Understanding**",
      "description": "Concept: ### **5. \ud83c\udfaf Dedicated Context Analysis**\n\n#### **Comprehensive Context Understanding**",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.097981,
      "updated_at": 1754957551.097981
    },
    "concept_1031": {
      "id": "concept_1031",
      "type": "concept",
      "name": "- Subtle pattern recognition",
      "description": "Concept: - Subtle pattern recognition",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.098175,
      "updated_at": 1754957551.098175
    },
    "concept_1032": {
      "id": "concept_1032",
      "type": "concept",
      "name": "**Selective Memory Cleanup**",
      "description": "Concept: **Selective Memory Cleanup**",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.098363,
      "updated_at": 1754957551.098363
    },
    "concept_1033": {
      "id": "concept_1033",
      "type": "concept",
      "name": "- Pattern recognition in conversations",
      "description": "Concept: - Pattern recognition in conversations",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.0985558,
      "updated_at": 1754957551.0985558
    },
    "concept_1034": {
      "id": "concept_1034",
      "type": "concept",
      "name": "**Complexity Assessment**",
      "description": "Concept: **Complexity Assessment**",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.0987399,
      "updated_at": 1754957551.0987399
    },
    "concept_1035": {
      "id": "concept_1035",
      "type": "concept",
      "name": "**Cursor-optimized** development experience",
      "description": "Concept: **Cursor-optimized** development experience",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.098929,
      "updated_at": 1754957551.098929
    },
    "concept_1036": {
      "id": "concept_1036",
      "type": "concept",
      "name": "Refactor code with risk assessment",
      "description": "Concept: Refactor code with risk assessment",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.099115,
      "updated_at": 1754957551.099116
    },
    "concept_1037": {
      "id": "concept_1037",
      "type": "concept",
      "name": "**Intelligent Memory Retrieval**",
      "description": "Concept: **Intelligent Memory Retrieval**",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.099308,
      "updated_at": 1754957551.099308
    },
    "concept_1038": {
      "id": "concept_1038",
      "type": "concept",
      "name": "- Emotional context understanding",
      "description": "Concept: - Emotional context understanding",
      "source": "PRODUCTION_INTEGRATION_GUIDE.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PRODUCTION_INTEGRATION_GUIDE.md"
        ]
      },
      "created_at": 1754957551.099495,
      "updated_at": 1754957551.099495
    },
    "doc_1039": {
      "id": "doc_1039",
      "type": "document",
      "name": "Project_Organization",
      "description": "Document: PROJECT_ORGANIZATION.md",
      "source": "PROJECT_ORGANIZATION.md",
      "confidence": 0.9,
      "metadata": {
        "file_size": 3830,
        "lines": 144,
        "language": "unknown",
        "last_modified": 1754940827.053042
      },
      "created_at": 1754957551.100737,
      "updated_at": 1754957551.100737
    },
    "concept_1040": {
      "id": "concept_1040",
      "type": "concept",
      "name": "Project Organization Guide",
      "description": "Concept: Project Organization Guide",
      "source": "PROJECT_ORGANIZATION.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PROJECT_ORGANIZATION.md"
        ]
      },
      "created_at": 1754957551.10095,
      "updated_at": 1754957551.10095
    },
    "concept_1041": {
      "id": "concept_1041",
      "type": "concept",
      "name": "`.cursorrules` - Cursor IDE settings",
      "description": "Concept: `.cursorrules` - Cursor IDE settings",
      "source": "PROJECT_ORGANIZATION.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PROJECT_ORGANIZATION.md"
        ]
      },
      "created_at": 1754957551.101151,
      "updated_at": 1754957551.101151
    },
    "concept_1042": {
      "id": "concept_1042",
      "type": "concept",
      "name": "Keep commits focused and descriptive",
      "description": "Concept: Keep commits focused and descriptive",
      "source": "PROJECT_ORGANIZATION.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PROJECT_ORGANIZATION.md"
        ]
      },
      "created_at": 1754957551.101344,
      "updated_at": 1754957551.101344
    },
    "concept_1043": {
      "id": "concept_1043",
      "type": "concept",
      "name": "Run cleanup script regularly",
      "description": "Concept: Run cleanup script regularly",
      "source": "PROJECT_ORGANIZATION.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PROJECT_ORGANIZATION.md"
        ]
      },
      "created_at": 1754957551.101561,
      "updated_at": 1754957551.101561
    },
    "concept_1044": {
      "id": "concept_1044",
      "type": "concept",
      "name": "### 2. Adding Features\n\n- Create plugins in",
      "description": "Concept: ### 2. Adding Features\n\n- Create plugins in",
      "source": "PROJECT_ORGANIZATION.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PROJECT_ORGANIZATION.md"
        ]
      },
      "created_at": 1754957551.1017568,
      "updated_at": 1754957551.1017568
    },
    "concept_1045": {
      "id": "concept_1045",
      "type": "concept",
      "name": "bash\n# Install dependencies\nuv sync\n\n# Run with Docker\ndocker-compose up\n\n# Run locally\nuv run python main.py",
      "description": "Concept: bash\n# Install dependencies\nuv sync\n\n# Run with Docker\ndocker-compose up\n\n# Run locally\nuv run python main.py",
      "source": "PROJECT_ORGANIZATION.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PROJECT_ORGANIZATION.md"
        ]
      },
      "created_at": 1754957551.101986,
      "updated_at": 1754957551.101986
    },
    "concept_1046": {
      "id": "concept_1046",
      "type": "concept",
      "name": "directory\n- Add tests in",
      "description": "Concept: directory\n- Add tests in",
      "source": "PROJECT_ORGANIZATION.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PROJECT_ORGANIZATION.md"
        ]
      },
      "created_at": 1754957551.102182,
      "updated_at": 1754957551.102182
    },
    "concept_1047": {
      "id": "concept_1047",
      "type": "concept",
      "name": "What Gets Cleaned Up",
      "description": "Concept: What Gets Cleaned Up",
      "source": "PROJECT_ORGANIZATION.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PROJECT_ORGANIZATION.md"
        ]
      },
      "created_at": 1754957551.102378,
      "updated_at": 1754957551.102378
    },
    "concept_1048": {
      "id": "concept_1048",
      "type": "concept",
      "name": "- LLM client for AI models\n\n### Configuration\n\n-",
      "description": "Concept: - LLM client for AI models\n\n### Configuration\n\n-",
      "source": "PROJECT_ORGANIZATION.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PROJECT_ORGANIZATION.md"
        ]
      },
      "created_at": 1754957551.102596,
      "updated_at": 1754957551.102596
    },
    "concept_1049": {
      "id": "concept_1049",
      "type": "concept",
      "name": "Common Issues",
      "description": "Concept: Common Issues",
      "source": "PROJECT_ORGANIZATION.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PROJECT_ORGANIZATION.md"
        ]
      },
      "created_at": 1754957551.102782,
      "updated_at": 1754957551.102782
    },
    "concept_1050": {
      "id": "concept_1050",
      "type": "concept",
      "name": "- Main project overview\n-",
      "description": "Concept: - Main project overview\n-",
      "source": "PROJECT_ORGANIZATION.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PROJECT_ORGANIZATION.md"
        ]
      },
      "created_at": 1754957551.102973,
      "updated_at": 1754957551.102973
    },
    "concept_1051": {
      "id": "concept_1051",
      "type": "concept",
      "name": "Review `CLEANUP_SUMMARY.md` for recent changes",
      "description": "Concept: Review `CLEANUP_SUMMARY.md` for recent changes",
      "source": "PROJECT_ORGANIZATION.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PROJECT_ORGANIZATION.md"
        ]
      },
      "created_at": 1754957551.103172,
      "updated_at": 1754957551.103172
    },
    "concept_1052": {
      "id": "concept_1052",
      "type": "concept",
      "name": "Run cleanup script before major commits",
      "description": "Concept: Run cleanup script before major commits",
      "source": "PROJECT_ORGANIZATION.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PROJECT_ORGANIZATION.md"
        ]
      },
      "created_at": 1754957551.103382,
      "updated_at": 1754957551.103382
    },
    "concept_1053": {
      "id": "concept_1053",
      "type": "concept",
      "name": "\ud83d\udd04 Version Control",
      "description": "Concept: \ud83d\udd04 Version Control",
      "source": "PROJECT_ORGANIZATION.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PROJECT_ORGANIZATION.md"
        ]
      },
      "created_at": 1754957551.103637,
      "updated_at": 1754957551.103637
    },
    "concept_1054": {
      "id": "concept_1054",
      "type": "concept",
      "name": "- Cursor IDE settings\n\n### Documentation\n\n-",
      "description": "Concept: - Cursor IDE settings\n\n### Documentation\n\n-",
      "source": "PROJECT_ORGANIZATION.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PROJECT_ORGANIZATION.md"
        ]
      },
      "created_at": 1754957551.1038709,
      "updated_at": 1754957551.1038709
    },
    "concept_1055": {
      "id": "concept_1055",
      "type": "concept",
      "name": "Run with Docker",
      "description": "Concept: Run with Docker",
      "source": "PROJECT_ORGANIZATION.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PROJECT_ORGANIZATION.md"
        ]
      },
      "created_at": 1754957551.10407,
      "updated_at": 1754957551.10407
    },
    "concept_1056": {
      "id": "concept_1056",
      "type": "concept",
      "name": "Install dependencies",
      "description": "Concept: Install dependencies",
      "source": "PROJECT_ORGANIZATION.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PROJECT_ORGANIZATION.md",
          "README.md"
        ]
      },
      "created_at": 1754957551.1042602,
      "updated_at": 1754957551.13378
    },
    "concept_1057": {
      "id": "concept_1057",
      "type": "concept",
      "name": "`pyproject.toml` - Python project configuration",
      "description": "Concept: `pyproject.toml` - Python project configuration",
      "source": "PROJECT_ORGANIZATION.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PROJECT_ORGANIZATION.md"
        ]
      },
      "created_at": 1754957551.1044538,
      "updated_at": 1754957551.1044538
    },
    "concept_1058": {
      "id": "concept_1058",
      "type": "concept",
      "name": "Regular Cleanup",
      "description": "Concept: Regular Cleanup",
      "source": "PROJECT_ORGANIZATION.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PROJECT_ORGANIZATION.md"
        ]
      },
      "created_at": 1754957551.104631,
      "updated_at": 1754957551.104631
    },
    "concept_1059": {
      "id": "concept_1059",
      "type": "concept",
      "name": "- Main application entry point\n-",
      "description": "Concept: - Main application entry point\n-",
      "source": "PROJECT_ORGANIZATION.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PROJECT_ORGANIZATION.md"
        ]
      },
      "created_at": 1754957551.104824,
      "updated_at": 1754957551.104824
    },
    "concept_1060": {
      "id": "concept_1060",
      "type": "concept",
      "name": "3. Maintenance",
      "description": "Concept: 3. Maintenance",
      "source": "PROJECT_ORGANIZATION.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PROJECT_ORGANIZATION.md"
        ]
      },
      "created_at": 1754957551.105013,
      "updated_at": 1754957551.105013
    },
    "concept_1061": {
      "id": "concept_1061",
      "type": "concept",
      "name": "## \ud83e\uddf9 Maintenance Guidelines\n\n### Regular Cleanup\n\nRun the cleanup script periodically to maintain organization:",
      "description": "Concept: ## \ud83e\uddf9 Maintenance Guidelines\n\n### Regular Cleanup\n\nRun the cleanup script periodically to maintain organization:",
      "source": "PROJECT_ORGANIZATION.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PROJECT_ORGANIZATION.md"
        ]
      },
      "created_at": 1754957551.105647,
      "updated_at": 1754957551.105647
    },
    "concept_1062": {
      "id": "concept_1062",
      "type": "concept",
      "name": "Update documentation when adding features",
      "description": "Concept: Update documentation when adding features",
      "source": "PROJECT_ORGANIZATION.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PROJECT_ORGANIZATION.md"
        ]
      },
      "created_at": 1754957551.105836,
      "updated_at": 1754957551.105836
    },
    "concept_1063": {
      "id": "concept_1063",
      "type": "concept",
      "name": "Run cleanup script to restore organization",
      "description": "Concept: Run cleanup script to restore organization",
      "source": "PROJECT_ORGANIZATION.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PROJECT_ORGANIZATION.md"
        ]
      },
      "created_at": 1754957551.1060228,
      "updated_at": 1754957551.1060228
    },
    "concept_1064": {
      "id": "concept_1064",
      "type": "concept",
      "name": "\ud83e\uddf9 Maintenance Guidelines",
      "description": "Concept: \ud83e\uddf9 Maintenance Guidelines",
      "source": "PROJECT_ORGANIZATION.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PROJECT_ORGANIZATION.md"
        ]
      },
      "created_at": 1754957551.1062982,
      "updated_at": 1754957551.1062982
    },
    "concept_1065": {
      "id": "concept_1065",
      "type": "concept",
      "name": "Maintain consistent file organization",
      "description": "Concept: Maintain consistent file organization",
      "source": "PROJECT_ORGANIZATION.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PROJECT_ORGANIZATION.md"
        ]
      },
      "created_at": 1754957551.106543,
      "updated_at": 1754957551.106543
    },
    "concept_1066": {
      "id": "concept_1066",
      "type": "concept",
      "name": "2. Adding Features",
      "description": "Concept: 2. Adding Features",
      "source": "PROJECT_ORGANIZATION.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PROJECT_ORGANIZATION.md"
        ]
      },
      "created_at": 1754957551.106737,
      "updated_at": 1754957551.106737
    },
    "concept_1067": {
      "id": "concept_1067",
      "type": "concept",
      "name": "**Python cache files** (`__pycache__/`, `*.pyc`, `*.pyo`)",
      "description": "Concept: **Python cache files** (`__pycache__/`, `*.pyc`, `*.pyo`)",
      "source": "PROJECT_ORGANIZATION.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PROJECT_ORGANIZATION.md"
        ]
      },
      "created_at": 1754957551.106934,
      "updated_at": 1754957551.106934
    },
    "concept_1068": {
      "id": "concept_1068",
      "type": "concept",
      "name": "IDE-specific files",
      "description": "Concept: IDE-specific files",
      "source": "PROJECT_ORGANIZATION.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PROJECT_ORGANIZATION.md"
        ]
      },
      "created_at": 1754957551.107121,
      "updated_at": 1754957551.107121
    },
    "concept_1069": {
      "id": "concept_1069",
      "type": "concept",
      "name": "Update documentation in `docs/` directory",
      "description": "Concept: Update documentation in `docs/` directory",
      "source": "PROJECT_ORGANIZATION.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PROJECT_ORGANIZATION.md"
        ]
      },
      "created_at": 1754957551.1073122,
      "updated_at": 1754957551.1073122
    },
    "concept_1070": {
      "id": "concept_1070",
      "type": "concept",
      "name": "patterns for:\n\n- Python cache files\n- Virtual environments\n- Log files\n- Temporary files\n- IDE-specific files\n\n### Commit Guidelines\n\n- Keep commits focused and descriptive\n- Update documentation when adding features\n- Run cleanup script before major commits\n\n## \ud83c\udfaf Best Practices\n\n1. **Organization First**: Always place files in appropriate directories\n2. **Documentation**: Keep docs updated with code changes\n3. **Cleanliness**: Run cleanup script regularly\n4. **Consistency**: Follow established naming conventions\n5. **Maintenance**: Address technical debt promptly\n\n## \ud83c\udd98 Troubleshooting\n\n### Common Issues\n\n- **Missing directories**: Run cleanup script to recreate structure\n- **File conflicts**: Check if files are in correct locations\n- **Docker issues**: Verify docker-compose.yml configuration\n\n### Getting Help\n\n- Check",
      "description": "Concept: patterns for:\n\n- Python cache files\n- Virtual environments\n- Log files\n- Temporary files\n- IDE-specific files\n\n### Commit Guidelines\n\n- Keep commits focused and descriptive\n- Update documentation when adding features\n- Run cleanup script before major commits\n\n## \ud83c\udfaf Best Practices\n\n1. **Organization First**: Always place files in appropriate directories\n2. **Documentation**: Keep docs updated with code changes\n3. **Cleanliness**: Run cleanup script regularly\n4. **Consistency**: Follow established naming conventions\n5. **Maintenance**: Address technical debt promptly\n\n## \ud83c\udd98 Troubleshooting\n\n### Common Issues\n\n- **Missing directories**: Run cleanup script to recreate structure\n- **File conflicts**: Check if files are in correct locations\n- **Docker issues**: Verify docker-compose.yml configuration\n\n### Getting Help\n\n- Check",
      "source": "PROJECT_ORGANIZATION.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PROJECT_ORGANIZATION.md"
        ]
      },
      "created_at": 1754957551.110083,
      "updated_at": 1754957551.110083
    },
    "concept_1071": {
      "id": "concept_1071",
      "type": "concept",
      "name": "- Cleanup process documentation\n\n## \ud83d\udd04 Version Control\n\n### Git Ignore Patterns\n\nThe project includes appropriate",
      "description": "Concept: - Cleanup process documentation\n\n## \ud83d\udd04 Version Control\n\n### Git Ignore Patterns\n\nThe project includes appropriate",
      "source": "PROJECT_ORGANIZATION.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PROJECT_ORGANIZATION.md"
        ]
      },
      "created_at": 1754957551.110681,
      "updated_at": 1754957551.110681
    },
    "concept_1072": {
      "id": "concept_1072",
      "type": "concept",
      "name": "- Python project configuration\n-",
      "description": "Concept: - Python project configuration\n-",
      "source": "PROJECT_ORGANIZATION.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PROJECT_ORGANIZATION.md"
        ]
      },
      "created_at": 1754957551.110922,
      "updated_at": 1754957551.110922
    },
    "concept_1073": {
      "id": "concept_1073",
      "type": "concept",
      "name": "Commit Guidelines",
      "description": "Concept: Commit Guidelines",
      "source": "PROJECT_ORGANIZATION.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PROJECT_ORGANIZATION.md"
        ]
      },
      "created_at": 1754957551.11111,
      "updated_at": 1754957551.11111
    },
    "concept_1074": {
      "id": "concept_1074",
      "type": "concept",
      "name": "\ud83c\udfd7\ufe0f Current Project Structure",
      "description": "Concept: \ud83c\udfd7\ufe0f Current Project Structure",
      "source": "PROJECT_ORGANIZATION.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PROJECT_ORGANIZATION.md"
        ]
      },
      "created_at": 1754957551.111392,
      "updated_at": 1754957551.111392
    },
    "concept_1075": {
      "id": "concept_1075",
      "type": "concept",
      "name": "`llm_client.py` - LLM client for AI models",
      "description": "Concept: `llm_client.py` - LLM client for AI models",
      "source": "PROJECT_ORGANIZATION.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PROJECT_ORGANIZATION.md"
        ]
      },
      "created_at": 1754957551.11159,
      "updated_at": 1754957551.11159
    },
    "concept_1076": {
      "id": "concept_1076",
      "type": "concept",
      "name": "bash\npython3 scripts/cleanup_project.py",
      "description": "Concept: bash\npython3 scripts/cleanup_project.py",
      "source": "PROJECT_ORGANIZATION.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PROJECT_ORGANIZATION.md"
        ]
      },
      "created_at": 1754957551.111804,
      "updated_at": 1754957551.111804
    },
    "concept_1077": {
      "id": "concept_1077",
      "type": "concept",
      "name": "**Docker issues**: Verify docker-compose.yml configuration",
      "description": "Concept: **Docker issues**: Verify docker-compose.yml configuration",
      "source": "PROJECT_ORGANIZATION.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PROJECT_ORGANIZATION.md"
        ]
      },
      "created_at": 1754957551.1120498,
      "updated_at": 1754957551.1120498
    },
    "concept_1078": {
      "id": "concept_1078",
      "type": "concept",
      "name": "**Temporary files** and development artifacts",
      "description": "Concept: **Temporary files** and development artifacts",
      "source": "PROJECT_ORGANIZATION.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PROJECT_ORGANIZATION.md"
        ]
      },
      "created_at": 1754957551.112282,
      "updated_at": 1754957551.112282
    },
    "concept_1079": {
      "id": "concept_1079",
      "type": "concept",
      "name": "**Missing directories**: Run cleanup script to recreate structure",
      "description": "Concept: **Missing directories**: Run cleanup script to recreate structure",
      "source": "PROJECT_ORGANIZATION.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PROJECT_ORGANIZATION.md"
        ]
      },
      "created_at": 1754957551.112512,
      "updated_at": 1754957551.112512
    },
    "concept_1080": {
      "id": "concept_1080",
      "type": "concept",
      "name": "Virtual environments",
      "description": "Concept: Virtual environments",
      "source": "PROJECT_ORGANIZATION.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PROJECT_ORGANIZATION.md",
          "project_scanner.py"
        ]
      },
      "created_at": 1754957551.112705,
      "updated_at": 1754957552.5977652
    },
    "concept_1081": {
      "id": "concept_1081",
      "type": "concept",
      "name": "- Detailed guides and documentation\n-",
      "description": "Concept: - Detailed guides and documentation\n-",
      "source": "PROJECT_ORGANIZATION.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PROJECT_ORGANIZATION.md"
        ]
      },
      "created_at": 1754957551.112915,
      "updated_at": 1754957551.112915
    },
    "concept_1082": {
      "id": "concept_1082",
      "type": "concept",
      "name": "\ud83c\udd98 Troubleshooting",
      "description": "Concept: \ud83c\udd98 Troubleshooting",
      "source": "PROJECT_ORGANIZATION.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PROJECT_ORGANIZATION.md"
        ]
      },
      "created_at": 1754957551.113169,
      "updated_at": 1754957551.113169
    },
    "concept_1083": {
      "id": "concept_1083",
      "type": "concept",
      "name": "- Docker services configuration\n-",
      "description": "Concept: - Docker services configuration\n-",
      "source": "PROJECT_ORGANIZATION.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PROJECT_ORGANIZATION.md"
        ]
      },
      "created_at": 1754957551.113365,
      "updated_at": 1754957551.113365
    },
    "concept_1084": {
      "id": "concept_1084",
      "type": "concept",
      "name": "**File conflicts**: Check if files are in correct locations",
      "description": "Concept: **File conflicts**: Check if files are in correct locations",
      "source": "PROJECT_ORGANIZATION.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PROJECT_ORGANIZATION.md"
        ]
      },
      "created_at": 1754957551.113575,
      "updated_at": 1754957551.113575
    },
    "concept_1085": {
      "id": "concept_1085",
      "type": "concept",
      "name": "Run locally",
      "description": "Concept: Run locally",
      "source": "PROJECT_ORGANIZATION.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PROJECT_ORGANIZATION.md"
        ]
      },
      "created_at": 1754957551.1137621,
      "updated_at": 1754957551.1137621
    },
    "concept_1086": {
      "id": "concept_1086",
      "type": "concept",
      "name": "Getting Help",
      "description": "Concept: Getting Help",
      "source": "PROJECT_ORGANIZATION.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PROJECT_ORGANIZATION.md"
        ]
      },
      "created_at": 1754957551.1139488,
      "updated_at": 1754957551.1139488
    },
    "concept_1087": {
      "id": "concept_1087",
      "type": "concept",
      "name": "**Duplicate configurations** and redundant files",
      "description": "Concept: **Duplicate configurations** and redundant files",
      "source": "PROJECT_ORGANIZATION.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PROJECT_ORGANIZATION.md"
        ]
      },
      "created_at": 1754957551.114154,
      "updated_at": 1754957551.114154
    },
    "concept_1088": {
      "id": "concept_1088",
      "type": "concept",
      "name": "Documentation",
      "description": "Concept: Documentation",
      "source": "PROJECT_ORGANIZATION.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PROJECT_ORGANIZATION.md"
        ]
      },
      "created_at": 1754957551.114341,
      "updated_at": 1754957551.114341
    },
    "concept_1089": {
      "id": "concept_1089",
      "type": "concept",
      "name": "directory\n\n### 3. Maintenance\n\n- Run cleanup script regularly\n- Keep documentation updated\n- Maintain consistent file organization\n\n## \ud83d\udccb File Categories\n\n### Core Application\n\n-",
      "description": "Concept: directory\n\n### 3. Maintenance\n\n- Run cleanup script regularly\n- Keep documentation updated\n- Maintain consistent file organization\n\n## \ud83d\udccb File Categories\n\n### Core Application\n\n-",
      "source": "PROJECT_ORGANIZATION.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PROJECT_ORGANIZATION.md"
        ]
      },
      "created_at": 1754957551.115196,
      "updated_at": 1754957551.115196
    },
    "concept_1090": {
      "id": "concept_1090",
      "type": "concept",
      "name": "Core Application",
      "description": "Concept: Core Application",
      "source": "PROJECT_ORGANIZATION.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PROJECT_ORGANIZATION.md"
        ]
      },
      "created_at": 1754957551.115459,
      "updated_at": 1754957551.115459
    },
    "concept_1091": {
      "id": "concept_1091",
      "type": "concept",
      "name": "### What Gets Cleaned Up\n\n- **Python cache files** (",
      "description": "Concept: ### What Gets Cleaned Up\n\n- **Python cache files** (",
      "source": "PROJECT_ORGANIZATION.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PROJECT_ORGANIZATION.md"
        ]
      },
      "created_at": 1754957551.115687,
      "updated_at": 1754957551.115687
    },
    "concept_1092": {
      "id": "concept_1092",
      "type": "concept",
      "name": "Add tests in `tests/` directory",
      "description": "Concept: Add tests in `tests/` directory",
      "source": "PROJECT_ORGANIZATION.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PROJECT_ORGANIZATION.md"
        ]
      },
      "created_at": 1754957551.115895,
      "updated_at": 1754957551.115895
    },
    "concept_1093": {
      "id": "concept_1093",
      "type": "concept",
      "name": "`main.py` - Main application entry point",
      "description": "Concept: `main.py` - Main application entry point",
      "source": "PROJECT_ORGANIZATION.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PROJECT_ORGANIZATION.md"
        ]
      },
      "created_at": 1754957551.116092,
      "updated_at": 1754957551.116093
    },
    "concept_1094": {
      "id": "concept_1094",
      "type": "concept",
      "name": "Keep documentation updated",
      "description": "Concept: Keep documentation updated",
      "source": "PROJECT_ORGANIZATION.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PROJECT_ORGANIZATION.md"
        ]
      },
      "created_at": 1754957551.1162848,
      "updated_at": 1754957551.1162848
    },
    "concept_1095": {
      "id": "concept_1095",
      "type": "concept",
      "name": "memory-context-manager_v2/\n\u251c\u2500\u2500 \ud83d\udcc1 docs/                    # All documentation and guides\n\u2502   \u251c\u2500\u2500 BRAIN_INTERFACE_GUIDE.md\n\u2502   \u251c\u2500\u2500 BRAIN_PLUGIN_STRUCTURE.md\n\u2502   \u251c\u2500\u2500 CURSOR_SETUP_COMPLETE.md\n\u2502   \u251c\u2500\u2500 DATABASE_INTEGRATION_COMPLETE.md\n\u2502   \u251c\u2500\u2500 DOCKER_SETUP.md\n\u2502   \u251c\u2500\u2500 SHARING_README.md\n\u2502   \u251c\u2500\u2500 TESTING_SUMMARY.md\n\u2502   \u2514\u2500\u2500 TOOL_EXECUTION_FLOWS.md\n\u251c\u2500\u2500 \ud83d\udcc1 scripts/                 # Utility and maintenance scripts\n\u2502   \u2514\u2500\u2500 cleanup_project.py      # Project cleanup and organization\n\u251c\u2500\u2500 \ud83d\udcc1 tests/                   # Test files and test suites\n\u251c\u2500\u2500 \ud83d\udcc1 config/                  # Configuration files\n\u251c\u2500\u2500 \ud83d\udcc1 plugins/                 # Plugin system and extensions\n\u251c\u2500\u2500 \ud83d\udcc1 database/                # Database components and adapters\n\u251c\u2500\u2500 \ud83d\udcc1 src/                     # Core source code\n\u251c\u2500\u2500 \ud83d\udcc1 brain_memory_store/      # Brain memory storage\n\u251c\u2500\u2500 \ud83d\udc33 docker-compose.yml       # Main Docker configuration\n\u251c\u2500\u2500 \ud83d\udc33 Dockerfile               # Production Dockerfile\n\u251c\u2500\u2500 \ud83d\udcd6 README.md                # Main project documentation\n\u251c\u2500\u2500 \ud83d\udce6 pyproject.toml           # Project configuration\n\u2514\u2500\u2500 \ud83d\udd27 .cursorrules             # Cursor IDE configuration",
      "description": "Concept: memory-context-manager_v2/\n\u251c\u2500\u2500 \ud83d\udcc1 docs/                    # All documentation and guides\n\u2502   \u251c\u2500\u2500 BRAIN_INTERFACE_GUIDE.md\n\u2502   \u251c\u2500\u2500 BRAIN_PLUGIN_STRUCTURE.md\n\u2502   \u251c\u2500\u2500 CURSOR_SETUP_COMPLETE.md\n\u2502   \u251c\u2500\u2500 DATABASE_INTEGRATION_COMPLETE.md\n\u2502   \u251c\u2500\u2500 DOCKER_SETUP.md\n\u2502   \u251c\u2500\u2500 SHARING_README.md\n\u2502   \u251c\u2500\u2500 TESTING_SUMMARY.md\n\u2502   \u2514\u2500\u2500 TOOL_EXECUTION_FLOWS.md\n\u251c\u2500\u2500 \ud83d\udcc1 scripts/                 # Utility and maintenance scripts\n\u2502   \u2514\u2500\u2500 cleanup_project.py      # Project cleanup and organization\n\u251c\u2500\u2500 \ud83d\udcc1 tests/                   # Test files and test suites\n\u251c\u2500\u2500 \ud83d\udcc1 config/                  # Configuration files\n\u251c\u2500\u2500 \ud83d\udcc1 plugins/                 # Plugin system and extensions\n\u251c\u2500\u2500 \ud83d\udcc1 database/                # Database components and adapters\n\u251c\u2500\u2500 \ud83d\udcc1 src/                     # Core source code\n\u251c\u2500\u2500 \ud83d\udcc1 brain_memory_store/      # Brain memory storage\n\u251c\u2500\u2500 \ud83d\udc33 docker-compose.yml       # Main Docker configuration\n\u251c\u2500\u2500 \ud83d\udc33 Dockerfile               # Production Dockerfile\n\u251c\u2500\u2500 \ud83d\udcd6 README.md                # Main project documentation\n\u251c\u2500\u2500 \ud83d\udce6 pyproject.toml           # Project configuration\n\u2514\u2500\u2500 \ud83d\udd27 .cursorrules             # Cursor IDE configuration",
      "source": "PROJECT_ORGANIZATION.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PROJECT_ORGANIZATION.md"
        ]
      },
      "created_at": 1754957551.119908,
      "updated_at": 1754957551.119908
    },
    "concept_1096": {
      "id": "concept_1096",
      "type": "concept",
      "name": "\ud83d\ude80 Development Workflow",
      "description": "Concept: \ud83d\ude80 Development Workflow",
      "source": "PROJECT_ORGANIZATION.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PROJECT_ORGANIZATION.md"
        ]
      },
      "created_at": 1754957551.1202009,
      "updated_at": 1754957551.1202009
    },
    "concept_1097": {
      "id": "concept_1097",
      "type": "concept",
      "name": "\ud83d\udccb File Categories",
      "description": "Concept: \ud83d\udccb File Categories",
      "source": "PROJECT_ORGANIZATION.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PROJECT_ORGANIZATION.md"
        ]
      },
      "created_at": 1754957551.120467,
      "updated_at": 1754957551.120467
    },
    "concept_1098": {
      "id": "concept_1098",
      "type": "concept",
      "name": "Temporary files",
      "description": "Concept: Temporary files",
      "source": "PROJECT_ORGANIZATION.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PROJECT_ORGANIZATION.md",
          "project_scanner.py"
        ]
      },
      "created_at": 1754957551.1206641,
      "updated_at": 1754957552.632359
    },
    "concept_1099": {
      "id": "concept_1099",
      "type": "concept",
      "name": "Python cache files",
      "description": "Concept: Python cache files",
      "source": "PROJECT_ORGANIZATION.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PROJECT_ORGANIZATION.md"
        ]
      },
      "created_at": 1754957551.120905,
      "updated_at": 1754957551.120905
    },
    "concept_1100": {
      "id": "concept_1100",
      "type": "concept",
      "name": "`docs/` - Detailed guides and documentation",
      "description": "Concept: `docs/` - Detailed guides and documentation",
      "source": "PROJECT_ORGANIZATION.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PROJECT_ORGANIZATION.md"
        ]
      },
      "created_at": 1754957551.121119,
      "updated_at": 1754957551.121119
    },
    "concept_1101": {
      "id": "concept_1101",
      "type": "concept",
      "name": "directory\n- Update documentation in",
      "description": "Concept: directory\n- Update documentation in",
      "source": "PROJECT_ORGANIZATION.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PROJECT_ORGANIZATION.md"
        ]
      },
      "created_at": 1754957551.12132,
      "updated_at": 1754957551.12132
    },
    "concept_1102": {
      "id": "concept_1102",
      "type": "concept",
      "name": "directory\n\n## \ud83d\ude80 Development Workflow\n\n### 1. Project Setup",
      "description": "Concept: directory\n\n## \ud83d\ude80 Development Workflow\n\n### 1. Project Setup",
      "source": "PROJECT_ORGANIZATION.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PROJECT_ORGANIZATION.md"
        ]
      },
      "created_at": 1754957551.121737,
      "updated_at": 1754957551.121737
    },
    "concept_1103": {
      "id": "concept_1103",
      "type": "concept",
      "name": "- Brain interface implementation\n-",
      "description": "Concept: - Brain interface implementation\n-",
      "source": "PROJECT_ORGANIZATION.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PROJECT_ORGANIZATION.md"
        ]
      },
      "created_at": 1754957551.121964,
      "updated_at": 1754957551.121964
    },
    "concept_1104": {
      "id": "concept_1104",
      "type": "concept",
      "name": "Log files",
      "description": "Concept: Log files",
      "source": "PROJECT_ORGANIZATION.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PROJECT_ORGANIZATION.md",
          "project_scanner.py"
        ]
      },
      "created_at": 1754957551.122165,
      "updated_at": 1754957552.638889
    },
    "concept_1105": {
      "id": "concept_1105",
      "type": "concept",
      "name": "1. Project Setup",
      "description": "Concept: 1. Project Setup",
      "source": "PROJECT_ORGANIZATION.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PROJECT_ORGANIZATION.md"
        ]
      },
      "created_at": 1754957551.1223612,
      "updated_at": 1754957551.1223612
    },
    "concept_1106": {
      "id": "concept_1106",
      "type": "concept",
      "name": "Check `docs/` directory for relevant guides",
      "description": "Concept: Check `docs/` directory for relevant guides",
      "source": "PROJECT_ORGANIZATION.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PROJECT_ORGANIZATION.md"
        ]
      },
      "created_at": 1754957551.122572,
      "updated_at": 1754957551.122572
    },
    "concept_1107": {
      "id": "concept_1107",
      "type": "concept",
      "name": "`brain_interface.py` - Brain interface implementation",
      "description": "Concept: `brain_interface.py` - Brain interface implementation",
      "source": "PROJECT_ORGANIZATION.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PROJECT_ORGANIZATION.md"
        ]
      },
      "created_at": 1754957551.1227798,
      "updated_at": 1754957551.1227798
    },
    "concept_1108": {
      "id": "concept_1108",
      "type": "concept",
      "name": "`CLEANUP_SUMMARY.md` - Cleanup process documentation",
      "description": "Concept: `CLEANUP_SUMMARY.md` - Cleanup process documentation",
      "source": "PROJECT_ORGANIZATION.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PROJECT_ORGANIZATION.md"
        ]
      },
      "created_at": 1754957551.122988,
      "updated_at": 1754957551.122988
    },
    "concept_1109": {
      "id": "concept_1109",
      "type": "concept",
      "name": "directory for relevant guides\n- Review",
      "description": "Concept: directory for relevant guides\n- Review",
      "source": "PROJECT_ORGANIZATION.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PROJECT_ORGANIZATION.md"
        ]
      },
      "created_at": 1754957551.12325,
      "updated_at": 1754957551.12325
    },
    "concept_1110": {
      "id": "concept_1110",
      "type": "concept",
      "name": ")\n- **Temporary files** and development artifacts\n- **Duplicate configurations** and redundant files\n\n### Adding New Files\n\n- **Documentation**: Place in",
      "description": "Concept: )\n- **Temporary files** and development artifacts\n- **Duplicate configurations** and redundant files\n\n### Adding New Files\n\n- **Documentation**: Place in",
      "source": "PROJECT_ORGANIZATION.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PROJECT_ORGANIZATION.md"
        ]
      },
      "created_at": 1754957551.123544,
      "updated_at": 1754957551.123544
    },
    "concept_1111": {
      "id": "concept_1111",
      "type": "concept",
      "name": "`README.md` - Main project overview",
      "description": "Concept: `README.md` - Main project overview",
      "source": "PROJECT_ORGANIZATION.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PROJECT_ORGANIZATION.md"
        ]
      },
      "created_at": 1754957551.1237519,
      "updated_at": 1754957551.1237519
    },
    "concept_1112": {
      "id": "concept_1112",
      "type": "concept",
      "name": "Git Ignore Patterns",
      "description": "Concept: Git Ignore Patterns",
      "source": "PROJECT_ORGANIZATION.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PROJECT_ORGANIZATION.md"
        ]
      },
      "created_at": 1754957551.123956,
      "updated_at": 1754957551.123956
    },
    "concept_1113": {
      "id": "concept_1113",
      "type": "concept",
      "name": "Create plugins in `plugins/` directory",
      "description": "Concept: Create plugins in `plugins/` directory",
      "source": "PROJECT_ORGANIZATION.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PROJECT_ORGANIZATION.md"
        ]
      },
      "created_at": 1754957551.124158,
      "updated_at": 1754957551.124158
    },
    "concept_1114": {
      "id": "concept_1114",
      "type": "concept",
      "name": "Configuration",
      "description": "Concept: Configuration",
      "source": "PROJECT_ORGANIZATION.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PROJECT_ORGANIZATION.md",
          "README.md"
        ]
      },
      "created_at": 1754957551.124353,
      "updated_at": 1754957551.157748
    },
    "concept_1115": {
      "id": "concept_1115",
      "type": "concept",
      "name": "`docker-compose.yml` - Docker services configuration",
      "description": "Concept: `docker-compose.yml` - Docker services configuration",
      "source": "PROJECT_ORGANIZATION.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "PROJECT_ORGANIZATION.md"
        ]
      },
      "created_at": 1754957551.1245599,
      "updated_at": 1754957551.1245599
    },
    "doc_1116": {
      "id": "doc_1116",
      "type": "document",
      "name": "Readme",
      "description": "Document: README.md",
      "source": "README.md",
      "confidence": 0.9,
      "metadata": {
        "file_size": 8019,
        "lines": 269,
        "language": "unknown",
        "last_modified": 1754604874.0393448
      },
      "created_at": 1754957551.126751,
      "updated_at": 1754957551.126751
    },
    "concept_1117": {
      "id": "concept_1117",
      "type": "concept",
      "name": "`get_resource_usage`: Get current system resource usage",
      "description": "Concept: `get_resource_usage`: Get current system resource usage",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.1269739,
      "updated_at": 1754957551.1269739
    },
    "concept_1118": {
      "id": "concept_1118",
      "type": "concept",
      "name": "Verification",
      "description": "Concept: Verification",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.127181,
      "updated_at": 1754957551.127181
    },
    "concept_1119": {
      "id": "concept_1119",
      "type": "concept",
      "name": ": Add context information to conversation history\n-",
      "description": "Concept: : Add context information to conversation history\n-",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.1273978,
      "updated_at": 1754957551.1273978
    },
    "concept_1120": {
      "id": "concept_1120",
      "type": "concept",
      "name": "For systems without UV, use:",
      "description": "Concept: For systems without UV, use:",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.127608,
      "updated_at": 1754957551.127608
    },
    "concept_1121": {
      "id": "concept_1121",
      "type": "concept",
      "name": "`list_plugins`: List all loaded plugins and their information",
      "description": "Concept: `list_plugins`: List all loaded plugins and their information",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.127828,
      "updated_at": 1754957551.127828
    },
    "concept_1122": {
      "id": "concept_1122",
      "type": "concept",
      "name": "python\n# plugins/my_plugin.py\nimport sys\nimport os\n\n# Add the parent directory to the path\nsys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))\n\nfrom src.plugin_interface import BasePlugin, PluginMetadata, ToolDefinition\n\nclass MyCustomPlugin(BasePlugin):\n    @property\n    def metadata(self) -> PluginMetadata:\n        return PluginMetadata(\n            name=\"my_custom_plugin\",\n            version=\"1.0.0\",\n            description=\"My custom plugin description\",\n            author=\"Your Name\"\n        )\n    \n    def get_tools(self) -> List[ToolDefinition]:\n        return [\n            ToolDefinition(\n                name=\"my_tool\",\n                description=\"Description of my tool\",\n                handler=self.my_tool_handler\n            )\n        ]\n    \n    def my_tool_handler(self, param1: str) -> str:\n        \"\"\"Handle the custom tool\"\"\"\n        return f\"Processed: {param1}\"\n    \n    def _setup(self):\n        \"\"\"Called when plugin is initialized\"\"\"\n        print(\"My plugin is starting up!\")\n    \n    def _teardown(self):\n        \"\"\"Called when plugin is cleaned up\"\"\"\n        print(\"My plugin is shutting down!\")",
      "description": "Concept: python\n# plugins/my_plugin.py\nimport sys\nimport os\n\n# Add the parent directory to the path\nsys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))\n\nfrom src.plugin_interface import BasePlugin, PluginMetadata, ToolDefinition\n\nclass MyCustomPlugin(BasePlugin):\n    @property\n    def metadata(self) -> PluginMetadata:\n        return PluginMetadata(\n            name=\"my_custom_plugin\",\n            version=\"1.0.0\",\n            description=\"My custom plugin description\",\n            author=\"Your Name\"\n        )\n    \n    def get_tools(self) -> List[ToolDefinition]:\n        return [\n            ToolDefinition(\n                name=\"my_tool\",\n                description=\"Description of my tool\",\n                handler=self.my_tool_handler\n            )\n        ]\n    \n    def my_tool_handler(self, param1: str) -> str:\n        \"\"\"Handle the custom tool\"\"\"\n        return f\"Processed: {param1}\"\n    \n    def _setup(self):\n        \"\"\"Called when plugin is initialized\"\"\"\n        print(\"My plugin is starting up!\")\n    \n    def _teardown(self):\n        \"\"\"Called when plugin is cleaned up\"\"\"\n        print(\"My plugin is shutting down!\")",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.128462,
      "updated_at": 1754957551.128462
    },
    "concept_1123": {
      "id": "concept_1123",
      "type": "concept",
      "name": "`clear_memory`: Clear all memory entries",
      "description": "Concept: `clear_memory`: Clear all memory entries",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.128675,
      "updated_at": 1754957551.128675
    },
    "concept_1124": {
      "id": "concept_1124",
      "type": "concept",
      "name": ": Return list of resource definitions (optional)\n-",
      "description": "Concept: : Return list of resource definitions (optional)\n-",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.128882,
      "updated_at": 1754957551.128882
    },
    "concept_1125": {
      "id": "concept_1125",
      "type": "concept",
      "name": ": Called during plugin cleanup (optional)\n-",
      "description": "Concept: : Called during plugin cleanup (optional)\n-",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.129086,
      "updated_at": 1754957551.129086
    },
    "concept_1126": {
      "id": "concept_1126",
      "type": "concept",
      "name": "Setup for Cursor",
      "description": "Concept: Setup for Cursor",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.129281,
      "updated_at": 1754957551.1292832
    },
    "concept_1127": {
      "id": "concept_1127",
      "type": "concept",
      "name": "bash\nuv run python setup_mcp.py",
      "description": "Concept: bash\nuv run python setup_mcp.py",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.129484,
      "updated_at": 1754957551.129484
    },
    "concept_1128": {
      "id": "concept_1128",
      "type": "concept",
      "name": "`write_file`: Write content to a file",
      "description": "Concept: `write_file`: Write content to a file",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.129688,
      "updated_at": 1754957551.129688
    },
    "concept_1129": {
      "id": "concept_1129",
      "type": "concept",
      "name": "Installation",
      "description": "Concept: Installation",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.1298869,
      "updated_at": 1754957551.129888
    },
    "concept_1130": {
      "id": "concept_1130",
      "type": "concept",
      "name": "`on_server_shutdown()`: Called when server shuts down (optional)",
      "description": "Concept: `on_server_shutdown()`: Called when server shuts down (optional)",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.130104,
      "updated_at": 1754957551.130105
    },
    "concept_1131": {
      "id": "concept_1131",
      "type": "concept",
      "name": ": Required property defining plugin information\n-",
      "description": "Concept: : Required property defining plugin information\n-",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.130311,
      "updated_at": 1754957551.130311
    },
    "concept_1132": {
      "id": "concept_1132",
      "type": "concept",
      "name": ": Called when server shuts down (optional)\n\n## Plugin Independence\n\nEach plugin operates independently and can:\n\n- Define its own tools, resources, and prompts\n- Manage its own state and data\n- Have separate dependencies\n- Be loaded/unloaded without affecting other plugins\n- Implement custom initialization and cleanup logic\n\n## Configuration\n\nThe server can be configured by:\n\n1. Setting plugin directories in the server constructor\n2. Modifying plugin files in the",
      "description": "Concept: : Called when server shuts down (optional)\n\n## Plugin Independence\n\nEach plugin operates independently and can:\n\n- Define its own tools, resources, and prompts\n- Manage its own state and data\n- Have separate dependencies\n- Be loaded/unloaded without affecting other plugins\n- Implement custom initialization and cleanup logic\n\n## Configuration\n\nThe server can be configured by:\n\n1. Setting plugin directories in the server constructor\n2. Modifying plugin files in the",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.130689,
      "updated_at": 1754957551.130689
    },
    "concept_1133": {
      "id": "concept_1133",
      "type": "concept",
      "name": "directory\n3. Using environment variables for plugin-specific settings\n\n## Integration with Cursor\n\n### Automatic Setup\n\nUse the setup script to configure Cursor integration:",
      "description": "Concept: directory\n3. Using environment variables for plugin-specific settings\n\n## Integration with Cursor\n\n### Automatic Setup\n\nUse the setup script to configure Cursor integration:",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.1310122,
      "updated_at": 1754957551.1310122
    },
    "concept_1134": {
      "id": "concept_1134",
      "type": "concept",
      "name": "`add_context`: Add context information to conversation history",
      "description": "Concept: `add_context`: Add context information to conversation history",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.131233,
      "updated_at": 1754957551.131233
    },
    "concept_1135": {
      "id": "concept_1135",
      "type": "concept",
      "name": ": Get current system resource usage\n-",
      "description": "Concept: : Get current system resource usage\n-",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.1314938,
      "updated_at": 1754957551.1314938
    },
    "concept_1136": {
      "id": "concept_1136",
      "type": "concept",
      "name": "`get_resources()`: Return list of resource definitions (optional)",
      "description": "Concept: `get_resources()`: Return list of resource definitions (optional)",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.1317492,
      "updated_at": 1754957551.1317492
    },
    "concept_1137": {
      "id": "concept_1137",
      "type": "concept",
      "name": ": Get environment variables (filtered for security)\n\n## Creating Custom Plugins\n\n### Plugin Structure\n\nCreate a new Python file in the",
      "description": "Concept: : Get environment variables (filtered for security)\n\n## Creating Custom Plugins\n\n### Plugin Structure\n\nCreate a new Python file in the",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.132009,
      "updated_at": 1754957551.132009
    },
    "concept_1138": {
      "id": "concept_1138",
      "type": "concept",
      "name": "`get_python_info`: Get Python interpreter information",
      "description": "Concept: `get_python_info`: Get Python interpreter information",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.132234,
      "updated_at": 1754957551.132234
    },
    "concept_1139": {
      "id": "concept_1139",
      "type": "concept",
      "name": "Tool registration and execution",
      "description": "Concept: Tool registration and execution",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.132447,
      "updated_at": 1754957551.132447
    },
    "concept_1140": {
      "id": "concept_1140",
      "type": "concept",
      "name": "`on_server_startup()`: Called when server starts (optional)",
      "description": "Concept: `on_server_startup()`: Called when server starts (optional)",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.132753,
      "updated_at": 1754957551.132753
    },
    "concept_1141": {
      "id": "concept_1141",
      "type": "concept",
      "name": "https://github.com/modelcontextprotocol/python-sdk",
      "description": "Concept: https://github.com/modelcontextprotocol/python-sdk",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.13297,
      "updated_at": 1754957551.13297
    },
    "concept_1142": {
      "id": "concept_1142",
      "type": "concept",
      "name": "Error handling and debugging information",
      "description": "Concept: Error handling and debugging information",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.133178,
      "updated_at": 1754957551.133178
    },
    "concept_1143": {
      "id": "concept_1143",
      "type": "concept",
      "name": ": Read file contents\n-",
      "description": "Concept: : Read file contents\n-",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.133394,
      "updated_at": 1754957551.133394
    },
    "concept_1144": {
      "id": "concept_1144",
      "type": "concept",
      "name": ": Clear all memory entries\n\n### System Info Plugin\n-",
      "description": "Concept: : Clear all memory entries\n\n### System Info Plugin\n-",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.133601,
      "updated_at": 1754957551.133601
    },
    "concept_1145": {
      "id": "concept_1145",
      "type": "concept",
      "name": "\u2705 Create the MCP configuration file",
      "description": "Concept: \u2705 Create the MCP configuration file",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.1340952,
      "updated_at": 1754957551.1340952
    },
    "concept_1146": {
      "id": "concept_1146",
      "type": "concept",
      "name": "### Plugin Interface Methods\n\n-",
      "description": "Concept: ### Plugin Interface Methods\n\n-",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.134302,
      "updated_at": 1754957551.134302
    },
    "concept_1147": {
      "id": "concept_1147",
      "type": "concept",
      "name": "Plugin loading is restricted to the designated plugins directory",
      "description": "Concept: Plugin loading is restricted to the designated plugins directory",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.1345139,
      "updated_at": 1754957551.1345139
    },
    "concept_1148": {
      "id": "concept_1148",
      "type": "concept",
      "name": "`get_system_info`: Get general system information",
      "description": "Concept: `get_system_info`: Get general system information",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.1347232,
      "updated_at": 1754957551.1347241
    },
    "concept_1149": {
      "id": "concept_1149",
      "type": "concept",
      "name": "`server_status`: Get server status and statistics",
      "description": "Concept: `server_status`: Get server status and statistics",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.134953,
      "updated_at": 1754957551.134953
    },
    "concept_1150": {
      "id": "concept_1150",
      "type": "concept",
      "name": ": List all loaded plugins and their information\n-",
      "description": "Concept: : List all loaded plugins and their information\n-",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.135164,
      "updated_at": 1754957551.135165
    },
    "concept_1151": {
      "id": "concept_1151",
      "type": "concept",
      "name": "in your home directory\n\n### Verification\n\nAfter configuration:\n\n1. Restart Cursor IDE\n2. Open Cursor Settings \u2192 Features \u2192 Model Context Protocol\n3. Verify \"memory-context-manager\" appears in the server list\n4. Check that the server status shows as connected\n\nYou can test the server manually:",
      "description": "Concept: in your home directory\n\n### Verification\n\nAfter configuration:\n\n1. Restart Cursor IDE\n2. Open Cursor Settings \u2192 Features \u2192 Model Context Protocol\n3. Verify \"memory-context-manager\" appears in the server list\n4. Check that the server status shows as connected\n\nYou can test the server manually:",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.136279,
      "updated_at": 1754957551.136279
    },
    "concept_1152": {
      "id": "concept_1152",
      "type": "concept",
      "name": ": Called during plugin initialization (optional)\n-",
      "description": "Concept: : Called during plugin initialization (optional)\n-",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.136498,
      "updated_at": 1754957551.136498
    },
    "concept_1153": {
      "id": "concept_1153",
      "type": "concept",
      "name": "Configuration Locations",
      "description": "Concept: Configuration Locations",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.136697,
      "updated_at": 1754957551.136697
    },
    "concept_1154": {
      "id": "concept_1154",
      "type": "concept",
      "name": "Quick Start",
      "description": "Concept: Quick Start",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.1368918,
      "updated_at": 1754957551.1368918
    },
    "concept_1155": {
      "id": "concept_1155",
      "type": "concept",
      "name": "3. Implement the required",
      "description": "Concept: 3. Implement the required",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.137105,
      "updated_at": 1754957551.137105
    },
    "concept_1156": {
      "id": "concept_1156",
      "type": "concept",
      "name": "System Info Plugin",
      "description": "Concept: System Info Plugin",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.13731,
      "updated_at": 1754957551.13731
    },
    "concept_1157": {
      "id": "concept_1157",
      "type": "concept",
      "name": "`retrieve_memory`: Retrieve information from memory by key",
      "description": "Concept: `retrieve_memory`: Retrieve information from memory by key",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.137533,
      "updated_at": 1754957551.137533
    },
    "concept_1158": {
      "id": "concept_1158",
      "type": "concept",
      "name": "directory\n2. Inherit from",
      "description": "Concept: directory\n2. Inherit from",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.137735,
      "updated_at": 1754957551.137735
    },
    "concept_1159": {
      "id": "concept_1159",
      "type": "concept",
      "name": "This will:\n- \u2705 Create the MCP configuration file\n- \u2705 Set correct paths and environment variables\n- \u2705 Configure for project-level use\n\n### Manual Configuration\n\nIf you prefer manual setup, create a",
      "description": "Concept: This will:\n- \u2705 Create the MCP configuration file\n- \u2705 Set correct paths and environment variables\n- \u2705 Configure for project-level use\n\n### Manual Configuration\n\nIf you prefer manual setup, create a",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.1385431,
      "updated_at": 1754957551.1385431
    },
    "concept_1160": {
      "id": "concept_1160",
      "type": "concept",
      "name": "Plugin Independence",
      "description": "Concept: Plugin Independence",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.138752,
      "updated_at": 1754957551.138752
    },
    "concept_1161": {
      "id": "concept_1161",
      "type": "concept",
      "name": "## Available Tools\n\n### Core Server Tools\n-",
      "description": "Concept: ## Available Tools\n\n### Core Server Tools\n-",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.138966,
      "updated_at": 1754957551.138966
    },
    "concept_1162": {
      "id": "concept_1162",
      "type": "concept",
      "name": "Add the parent directory to the path",
      "description": "Concept: Add the parent directory to the path",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.139174,
      "updated_at": 1754957551.139174
    },
    "concept_1163": {
      "id": "concept_1163",
      "type": "concept",
      "name": "file in your project directory:",
      "description": "Concept: file in your project directory:",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.13938,
      "updated_at": 1754957551.13938
    },
    "concept_1164": {
      "id": "concept_1164",
      "type": "concept",
      "name": "Memory Context Plugin",
      "description": "Concept: Memory Context Plugin",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.139582,
      "updated_at": 1754957551.139582
    },
    "concept_1165": {
      "id": "concept_1165",
      "type": "concept",
      "name": "Security Considerations",
      "description": "Concept: Security Considerations",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.1397948,
      "updated_at": 1754957551.1397948
    },
    "concept_1166": {
      "id": "concept_1166",
      "type": "concept",
      "name": "in your project root\n- **Global**:",
      "description": "Concept: in your project root\n- **Global**:",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.1402502,
      "updated_at": 1754957551.1402502
    },
    "concept_1167": {
      "id": "concept_1167",
      "type": "concept",
      "name": "Define its own tools, resources, and prompts",
      "description": "Concept: Define its own tools, resources, and prompts",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.1405911,
      "updated_at": 1754957551.1405911
    },
    "concept_1168": {
      "id": "concept_1168",
      "type": "concept",
      "name": "Environment variables are filtered to exclude sensitive information",
      "description": "Concept: Environment variables are filtered to exclude sensitive information",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.140843,
      "updated_at": 1754957551.140843
    },
    "concept_1169": {
      "id": "concept_1169",
      "type": "concept",
      "name": "`get_environment_vars`: Get environment variables (filtered for security)",
      "description": "Concept: `get_environment_vars`: Get environment variables (filtered for security)",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.141129,
      "updated_at": 1754957551.141129
    },
    "concept_1170": {
      "id": "concept_1170",
      "type": "concept",
      "name": "`metadata`: Required property defining plugin information",
      "description": "Concept: `metadata`: Required property defining plugin information",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.141357,
      "updated_at": 1754957551.141357
    },
    "concept_1171": {
      "id": "concept_1171",
      "type": "concept",
      "name": "`list_directory`: List files and directories",
      "description": "Concept: `list_directory`: List files and directories",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.141572,
      "updated_at": 1754957551.141572
    },
    "concept_1172": {
      "id": "concept_1172",
      "type": "concept",
      "name": ": Called when server starts (optional)\n-",
      "description": "Concept: : Called when server starts (optional)\n-",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.141793,
      "updated_at": 1754957551.141793
    },
    "concept_1173": {
      "id": "concept_1173",
      "type": "concept",
      "name": "**System Integration**: File operations and system information access",
      "description": "Concept: **System Integration**: File operations and system information access",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.1420538,
      "updated_at": 1754957551.1420538
    },
    "concept_1174": {
      "id": "concept_1174",
      "type": "concept",
      "name": "`file_exists`: Check if a file or directory exists",
      "description": "Concept: `file_exists`: Check if a file or directory exists",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.142273,
      "updated_at": 1754957551.142273
    },
    "concept_1175": {
      "id": "concept_1175",
      "type": "concept",
      "name": "Manual run (for testing)",
      "description": "Concept: Manual run (for testing)",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.1424892,
      "updated_at": 1754957551.1424892
    },
    "concept_1176": {
      "id": "concept_1176",
      "type": "concept",
      "name": "`reload_plugin`: Reload a specific plugin by name",
      "description": "Concept: `reload_plugin`: Reload a specific plugin by name",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.1427069,
      "updated_at": 1754957551.1427069
    },
    "concept_1177": {
      "id": "concept_1177",
      "type": "concept",
      "name": "**Extensible Plugin System**: Add custom functionality through independent plugins",
      "description": "Concept: **Extensible Plugin System**: Add custom functionality through independent plugins",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.1429398,
      "updated_at": 1754957551.1429398
    },
    "concept_1178": {
      "id": "concept_1178",
      "type": "concept",
      "name": "bash\n# Automatic setup\nuv run python setup_mcp.py\n\n# Manual run (for testing)\nuv run python main.py",
      "description": "Concept: bash\n# Automatic setup\nuv run python setup_mcp.py\n\n# Manual run (for testing)\nuv run python main.py",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.1431801,
      "updated_at": 1754957551.1431801
    },
    "concept_1179": {
      "id": "concept_1179",
      "type": "concept",
      "name": "`get_context_summary`: Get a summary of recent conversation context",
      "description": "Concept: `get_context_summary`: Get a summary of recent conversation context",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.143411,
      "updated_at": 1754957551.143411
    },
    "concept_1180": {
      "id": "concept_1180",
      "type": "concept",
      "name": "\u2705 Set correct paths and environment variables",
      "description": "Concept: \u2705 Set correct paths and environment variables",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.1437922,
      "updated_at": 1754957551.1437922
    },
    "concept_1181": {
      "id": "concept_1181",
      "type": "concept",
      "name": "All plugin operations are logged for audit purposes",
      "description": "Concept: All plugin operations are logged for audit purposes",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.14401,
      "updated_at": 1754957551.14401
    },
    "concept_1182": {
      "id": "concept_1182",
      "type": "concept",
      "name": ": Get server status and statistics\n\n### File Operations Plugin\n-",
      "description": "Concept: : Get server status and statistics\n\n### File Operations Plugin\n-",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.144232,
      "updated_at": 1754957551.144232
    },
    "concept_1183": {
      "id": "concept_1183",
      "type": "concept",
      "name": "bash\n# Install dependencies\nuv add \"mcp[cli]>=1.0.0\" \"pydantic>=2.0.0\" \"typing-extensions>=4.0.0\" \"psutil>=5.9.0\"\n\n# Or using pip\npip install \"mcp[cli]>=1.0.0\" pydantic>=2.0.0 typing-extensions>=4.0.0 psutil>=5.9.0",
      "description": "Concept: bash\n# Install dependencies\nuv add \"mcp[cli]>=1.0.0\" \"pydantic>=2.0.0\" \"typing-extensions>=4.0.0\" \"psutil>=5.9.0\"\n\n# Or using pip\npip install \"mcp[cli]>=1.0.0\" pydantic>=2.0.0 typing-extensions>=4.0.0 psutil>=5.9.0",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.14452,
      "updated_at": 1754957551.14452
    },
    "concept_1184": {
      "id": "concept_1184",
      "type": "concept",
      "name": ": Return list of tool definitions\n-",
      "description": "Concept: : Return list of tool definitions\n-",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.1447291,
      "updated_at": 1754957551.1447291
    },
    "concept_1185": {
      "id": "concept_1185",
      "type": "concept",
      "name": "Available Tools",
      "description": "Concept: Available Tools",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.144931,
      "updated_at": 1754957551.144931
    },
    "concept_1186": {
      "id": "concept_1186",
      "type": "concept",
      "name": ": Store information in persistent memory\n-",
      "description": "Concept: : Store information in persistent memory\n-",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.145144,
      "updated_at": 1754957551.145144
    },
    "concept_1187": {
      "id": "concept_1187",
      "type": "concept",
      "name": "File Operations Plugin",
      "description": "Concept: File Operations Plugin",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.145349,
      "updated_at": 1754957551.145349
    },
    "concept_1188": {
      "id": "concept_1188",
      "type": "concept",
      "name": ": Get Python interpreter information\n-",
      "description": "Concept: : Get Python interpreter information\n-",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.145559,
      "updated_at": 1754957551.145559
    },
    "concept_1189": {
      "id": "concept_1189",
      "type": "concept",
      "name": "**Built-in Tools**: Core server management and plugin information tools",
      "description": "Concept: **Built-in Tools**: Core server management and plugin information tools",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.145853,
      "updated_at": 1754957551.145853
    },
    "concept_1190": {
      "id": "concept_1190",
      "type": "concept",
      "name": "**stdin/stdout Communication**: Maximum reliability for agent integration",
      "description": "Concept: **stdin/stdout Communication**: Maximum reliability for agent integration",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.146142,
      "updated_at": 1754957551.146142
    },
    "concept_1191": {
      "id": "concept_1191",
      "type": "concept",
      "name": "Have separate dependencies",
      "description": "Concept: Have separate dependencies",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.146383,
      "updated_at": 1754957551.146383
    },
    "concept_1192": {
      "id": "concept_1192",
      "type": "concept",
      "name": "Server lifecycle events",
      "description": "Concept: Server lifecycle events",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.14659,
      "updated_at": 1754957551.14659
    },
    "concept_1193": {
      "id": "concept_1193",
      "type": "concept",
      "name": "Plugin Interface Methods",
      "description": "Concept: Plugin Interface Methods",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.146797,
      "updated_at": 1754957551.146797
    },
    "concept_1194": {
      "id": "concept_1194",
      "type": "concept",
      "name": "**Project-specific**: `.cursor/mcp.json` in your project root",
      "description": "Concept: **Project-specific**: `.cursor/mcp.json` in your project root",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.147017,
      "updated_at": 1754957551.147017
    },
    "concept_1195": {
      "id": "concept_1195",
      "type": "concept",
      "name": "`search_memory`: Search memory entries by keyword",
      "description": "Concept: `search_memory`: Search memory entries by keyword",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.1472309,
      "updated_at": 1754957551.1472309
    },
    "concept_1196": {
      "id": "concept_1196",
      "type": "concept",
      "name": "`read_file`: Read file contents",
      "description": "Concept: `read_file`: Read file contents",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.147458,
      "updated_at": 1754957551.147458
    },
    "concept_1197": {
      "id": "concept_1197",
      "type": "concept",
      "name": "Automatic Setup",
      "description": "Concept: Automatic Setup",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.1476831,
      "updated_at": 1754957551.156188
    },
    "concept_1198": {
      "id": "concept_1198",
      "type": "concept",
      "name": "json\n{\n  \"mcpServers\": {\n    \"memory-context-manager\": {\n      \"command\": \"uv\",\n      \"args\": [\"run\", \"python\", \"main.py\"],\n      \"cwd\": \"/path/to/your/memory-context-manager_v2\",\n      \"env\": {\n        \"PYTHONPATH\": \"/path/to/your/memory-context-manager_v2\",\n        \"MCP_LOG_LEVEL\": \"INFO\"\n      }\n    }\n  }\n}",
      "description": "Concept: json\n{\n  \"mcpServers\": {\n    \"memory-context-manager\": {\n      \"command\": \"uv\",\n      \"args\": [\"run\", \"python\", \"main.py\"],\n      \"cwd\": \"/path/to/your/memory-context-manager_v2\",\n      \"env\": {\n        \"PYTHONPATH\": \"/path/to/your/memory-context-manager_v2\",\n        \"MCP_LOG_LEVEL\": \"INFO\"\n      }\n    }\n  }\n}",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.148017,
      "updated_at": 1754957551.148017
    },
    "concept_1199": {
      "id": "concept_1199",
      "type": "concept",
      "name": "Manage its own state and data",
      "description": "Concept: Manage its own state and data",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.148234,
      "updated_at": 1754957551.148234
    },
    "concept_1200": {
      "id": "concept_1200",
      "type": "concept",
      "name": "\u2705 Configure for project-level use",
      "description": "Concept: \u2705 Configure for project-level use",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.148565,
      "updated_at": 1754957551.148565
    },
    "concept_1201": {
      "id": "concept_1201",
      "type": "concept",
      "name": "Contributing",
      "description": "Concept: Contributing",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.148772,
      "updated_at": 1754957551.148772
    },
    "concept_1202": {
      "id": "concept_1202",
      "type": "concept",
      "name": "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\n\u0002                  MCP Server                             \u0002\n\u001c\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000$\n\u0002  \f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010  \f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010  \f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010     \u0002\n\u0002  \u0002   Plugin    \u0002  \u0002   Plugin    \u0002  \u0002   Plugin    \u0002     \u0002\n\u0002  \u0002  Manager    \u0002  \u0002  Registry   \u0002  \u0002 Interface   \u0002     \u0002\n\u0002  \u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018  \u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018  \u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018     \u0002\n\u001c\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000$\n\u0002                 Plugin System                           \u0002\n\u0002  \f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010  \f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010  \f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010     \u0002\n\u0002  \u0002    File     \u0002  \u0002   Memory    \u0002  \u0002   System    \u0002     \u0002\n\u0002  \u0002 Operations  \u0002  \u0002  Context    \u0002  \u0002    Info     \u0002     \u0002\n\u0002  \u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018  \u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018  \u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018     \u0002\n\u001c\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000$\n\u0002              stdin/stdout Transport                     \u0002\n\u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018",
      "description": "Concept: \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\n\u0002                  MCP Server                             \u0002\n\u001c\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000$\n\u0002  \f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010  \f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010  \f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010     \u0002\n\u0002  \u0002   Plugin    \u0002  \u0002   Plugin    \u0002  \u0002   Plugin    \u0002     \u0002\n\u0002  \u0002  Manager    \u0002  \u0002  Registry   \u0002  \u0002 Interface   \u0002     \u0002\n\u0002  \u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018  \u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018  \u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018     \u0002\n\u001c\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000$\n\u0002                 Plugin System                           \u0002\n\u0002  \f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010  \f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010  \f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010     \u0002\n\u0002  \u0002    File     \u0002  \u0002   Memory    \u0002  \u0002   System    \u0002     \u0002\n\u0002  \u0002 Operations  \u0002  \u0002  Context    \u0002  \u0002    Info     \u0002     \u0002\n\u0002  \u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018  \u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018  \u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018     \u0002\n\u001c\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000$\n\u0002              stdin/stdout Transport                     \u0002\n\u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.14935,
      "updated_at": 1754957551.14935
    },
    "concept_1203": {
      "id": "concept_1203",
      "type": "concept",
      "name": ": Return list of prompt definitions (optional)\n-",
      "description": "Concept: : Return list of prompt definitions (optional)\n-",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.149565,
      "updated_at": 1754957551.149565
    },
    "concept_1204": {
      "id": "concept_1204",
      "type": "concept",
      "name": "Test with MCP development server",
      "description": "Concept: Test with MCP development server",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.149774,
      "updated_at": 1754957551.149774
    },
    "concept_1205": {
      "id": "concept_1205",
      "type": "concept",
      "name": "### Setup for Cursor",
      "description": "Concept: ### Setup for Cursor",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.1499789,
      "updated_at": 1754957551.1499789
    },
    "concept_1206": {
      "id": "concept_1206",
      "type": "concept",
      "name": "`_setup()`: Called during plugin initialization (optional)",
      "description": "Concept: `_setup()`: Called during plugin initialization (optional)",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.150204,
      "updated_at": 1754957551.150204
    },
    "concept_1207": {
      "id": "concept_1207",
      "type": "concept",
      "name": "Plugin loading and initialization events",
      "description": "Concept: Plugin loading and initialization events",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.1504178,
      "updated_at": 1754957551.1504178
    },
    "concept_1208": {
      "id": "concept_1208",
      "type": "concept",
      "name": ": Search memory entries by keyword\n-",
      "description": "Concept: : Search memory entries by keyword\n-",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.150632,
      "updated_at": 1754957551.150632
    },
    "concept_1209": {
      "id": "concept_1209",
      "type": "concept",
      "name": "directory:",
      "description": "Concept: directory:",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.150833,
      "updated_at": 1754957551.150833
    },
    "concept_1210": {
      "id": "concept_1210",
      "type": "concept",
      "name": "bash\n# Test with MCP development server\nuv run mcp dev main.py",
      "description": "Concept: bash\n# Test with MCP development server\nuv run mcp dev main.py",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.151278,
      "updated_at": 1754957551.151278
    },
    "concept_1211": {
      "id": "concept_1211",
      "type": "concept",
      "name": "`_teardown()`: Called during plugin cleanup (optional)",
      "description": "Concept: `_teardown()`: Called during plugin cleanup (optional)",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.151553,
      "updated_at": 1754957551.151553
    },
    "concept_1212": {
      "id": "concept_1212",
      "type": "concept",
      "name": "## Architecture",
      "description": "Concept: ## Architecture",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.151784,
      "updated_at": 1754957551.151784
    },
    "concept_1213": {
      "id": "concept_1213",
      "type": "concept",
      "name": "Memory Context Manager v2",
      "description": "Concept: Memory Context Manager v2",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.1519942,
      "updated_at": 1754957551.1519942
    },
    "concept_1214": {
      "id": "concept_1214",
      "type": "concept",
      "name": "Manual Configuration",
      "description": "Concept: Manual Configuration",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.152202,
      "updated_at": 1754957551.152202
    },
    "concept_1215": {
      "id": "concept_1215",
      "type": "concept",
      "name": "### Configuration Locations\n\n- **Project-specific**:",
      "description": "Concept: ### Configuration Locations\n\n- **Project-specific**:",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.152427,
      "updated_at": 1754957551.152427
    },
    "concept_1216": {
      "id": "concept_1216",
      "type": "concept",
      "name": "**Persistent Memory**: Context and memory management capabilities",
      "description": "Concept: **Persistent Memory**: Context and memory management capabilities",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.1526558,
      "updated_at": 1754957551.1526558
    },
    "concept_1217": {
      "id": "concept_1217",
      "type": "concept",
      "name": "Testing",
      "description": "Concept: Testing",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.152858,
      "updated_at": 1754957551.152858
    },
    "concept_1218": {
      "id": "concept_1218",
      "type": "concept",
      "name": ": Reload a specific plugin by name\n-",
      "description": "Concept: : Reload a specific plugin by name\n-",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.153072,
      "updated_at": 1754957551.153072
    },
    "concept_1219": {
      "id": "concept_1219",
      "type": "concept",
      "name": "Plugin Structure",
      "description": "Concept: Plugin Structure",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.1532779,
      "updated_at": 1754957551.1532779
    },
    "concept_1220": {
      "id": "concept_1220",
      "type": "concept",
      "name": "`get_prompts()`: Return list of prompt definitions (optional)",
      "description": "Concept: `get_prompts()`: Return list of prompt definitions (optional)",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.153504,
      "updated_at": 1754957551.153504
    },
    "concept_1221": {
      "id": "concept_1221",
      "type": "concept",
      "name": ": Check if a file or directory exists\n\n### Memory Context Plugin\n-",
      "description": "Concept: : Check if a file or directory exists\n\n### Memory Context Plugin\n-",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.1537411,
      "updated_at": 1754957551.1537411
    },
    "concept_1222": {
      "id": "concept_1222",
      "type": "concept",
      "name": "Architecture",
      "description": "Concept: Architecture",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.1539571,
      "updated_at": 1754957551.1539571
    },
    "concept_1223": {
      "id": "concept_1223",
      "type": "concept",
      "name": "Implement custom initialization and cleanup logic",
      "description": "Concept: Implement custom initialization and cleanup logic",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.154181,
      "updated_at": 1754957551.154181
    },
    "concept_1224": {
      "id": "concept_1224",
      "type": "concept",
      "name": "plugins/my_plugin.py",
      "description": "Concept: plugins/my_plugin.py",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.1543932,
      "updated_at": 1754957551.1543932
    },
    "concept_1225": {
      "id": "concept_1225",
      "type": "concept",
      "name": "Or using pip",
      "description": "Concept: Or using pip",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.1546,
      "updated_at": 1754957551.1546
    },
    "concept_1226": {
      "id": "concept_1226",
      "type": "concept",
      "name": "**Global**: `~/.cursor/mcp.json` in your home directory",
      "description": "Concept: **Global**: `~/.cursor/mcp.json` in your home directory",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.154834,
      "updated_at": 1754957551.154835
    },
    "concept_1227": {
      "id": "concept_1227",
      "type": "concept",
      "name": "**MCP Protocol Compliance**: Full compatibility with the Model Context Protocol",
      "description": "Concept: **MCP Protocol Compliance**: Full compatibility with the Model Context Protocol",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.155076,
      "updated_at": 1754957551.155076
    },
    "concept_1228": {
      "id": "concept_1228",
      "type": "concept",
      "name": "`store_memory`: Store information in persistent memory",
      "description": "Concept: `store_memory`: Store information in persistent memory",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.155305,
      "updated_at": 1754957551.155305
    },
    "concept_1229": {
      "id": "concept_1229",
      "type": "concept",
      "name": "Be loaded/unloaded without affecting other plugins",
      "description": "Concept: Be loaded/unloaded without affecting other plugins",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.1555352,
      "updated_at": 1754957551.1555352
    },
    "concept_1230": {
      "id": "concept_1230",
      "type": "concept",
      "name": ": Retrieve information from memory by key\n-",
      "description": "Concept: : Retrieve information from memory by key\n-",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.155759,
      "updated_at": 1754957551.155759
    },
    "concept_1231": {
      "id": "concept_1231",
      "type": "concept",
      "name": ": Get a summary of recent conversation context\n-",
      "description": "Concept: : Get a summary of recent conversation context\n-",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.155982,
      "updated_at": 1754957551.155982
    },
    "concept_1232": {
      "id": "concept_1232",
      "type": "concept",
      "name": "MCP Python SDK",
      "description": "Concept: MCP Python SDK",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.156405,
      "updated_at": 1754957551.156405
    },
    "concept_1233": {
      "id": "concept_1233",
      "type": "concept",
      "name": "bash\nuv run python main.py",
      "description": "Concept: bash\nuv run python main.py",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.15663,
      "updated_at": 1754957551.15663
    },
    "concept_1234": {
      "id": "concept_1234",
      "type": "concept",
      "name": "`get_tools()`: Return list of tool definitions",
      "description": "Concept: `get_tools()`: Return list of tool definitions",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.156872,
      "updated_at": 1754957551.156872
    },
    "concept_1235": {
      "id": "concept_1235",
      "type": "concept",
      "name": "Integration with Cursor",
      "description": "Concept: Integration with Cursor",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.157094,
      "updated_at": 1754957551.157094
    },
    "concept_1236": {
      "id": "concept_1236",
      "type": "concept",
      "name": ": Write content to a file\n-",
      "description": "Concept: : Write content to a file\n-",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.15731,
      "updated_at": 1754957551.15731
    },
    "concept_1237": {
      "id": "concept_1237",
      "type": "concept",
      "name": ": Get general system information\n-",
      "description": "Concept: : Get general system information\n-",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.157533,
      "updated_at": 1754957551.157533
    },
    "concept_1238": {
      "id": "concept_1238",
      "type": "concept",
      "name": "property\n4. Add your tools, resources, or prompts\n5. The plugin will be automatically loaded on server restart\n\n## Testing",
      "description": "Concept: property\n4. Add your tools, resources, or prompts\n5. The plugin will be automatically loaded on server restart\n\n## Testing",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.1580229,
      "updated_at": 1754957551.1580229
    },
    "concept_1239": {
      "id": "concept_1239",
      "type": "concept",
      "name": "Core Server Tools",
      "description": "Concept: Core Server Tools",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.15824,
      "updated_at": 1754957551.15824
    },
    "concept_1240": {
      "id": "concept_1240",
      "type": "concept",
      "name": ": List files and directories\n-",
      "description": "Concept: : List files and directories\n-",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.1584792,
      "updated_at": 1754957551.1584792
    },
    "concept_1241": {
      "id": "concept_1241",
      "type": "concept",
      "name": "## Logging\n\nThe server includes comprehensive logging:\n\n- Plugin loading and initialization events\n- Tool registration and execution\n- Error handling and debugging information\n- Server lifecycle events\n\n## Security Considerations\n\n- Environment variables are filtered to exclude sensitive information\n- Plugin loading is restricted to the designated plugins directory\n- All plugin operations are logged for audit purposes\n- File operations are subject to standard filesystem permissions\n\n## Contributing\n\nTo add new plugins:\n\n1. Create a new Python file in the",
      "description": "Concept: ## Logging\n\nThe server includes comprehensive logging:\n\n- Plugin loading and initialization events\n- Tool registration and execution\n- Error handling and debugging information\n- Server lifecycle events\n\n## Security Considerations\n\n- Environment variables are filtered to exclude sensitive information\n- Plugin loading is restricted to the designated plugins directory\n- All plugin operations are logged for audit purposes\n- File operations are subject to standard filesystem permissions\n\n## Contributing\n\nTo add new plugins:\n\n1. Create a new Python file in the",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.1589692,
      "updated_at": 1754957551.1589692
    },
    "concept_1242": {
      "id": "concept_1242",
      "type": "concept",
      "name": "**Hot Plugin Management**: Load, unload, and reload plugins at runtime",
      "description": "Concept: **Hot Plugin Management**: Load, unload, and reload plugins at runtime",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.159229,
      "updated_at": 1754957551.159229
    },
    "concept_1243": {
      "id": "concept_1243",
      "type": "concept",
      "name": "File operations are subject to standard filesystem permissions",
      "description": "Concept: File operations are subject to standard filesystem permissions",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.159484,
      "updated_at": 1754957551.159484
    },
    "concept_1244": {
      "id": "concept_1244",
      "type": "concept",
      "name": "Creating Custom Plugins",
      "description": "Concept: Creating Custom Plugins",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.1597261,
      "updated_at": 1754957551.1597261
    },
    "concept_1245": {
      "id": "concept_1245",
      "type": "concept",
      "name": "json\n{\n  \"mcpServers\": {\n    \"memory-context-manager\": {\n      \"command\": \"python3\",\n      \"args\": [\"main.py\"],\n      \"cwd\": \"/path/to/your/memory-context-manager_v2\",\n      \"env\": {\n        \"PYTHONPATH\": \"/path/to/your/memory-context-manager_v2\"\n      }\n    }\n  }\n}",
      "description": "Concept: json\n{\n  \"mcpServers\": {\n    \"memory-context-manager\": {\n      \"command\": \"python3\",\n      \"args\": [\"main.py\"],\n      \"cwd\": \"/path/to/your/memory-context-manager_v2\",\n      \"env\": {\n        \"PYTHONPATH\": \"/path/to/your/memory-context-manager_v2\"\n      }\n    }\n  }\n}",
      "source": "README.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README.md"
        ]
      },
      "created_at": 1754957551.160085,
      "updated_at": 1754957551.160085
    },
    "doc_1246": {
      "id": "doc_1246",
      "type": "document",
      "name": "Readme_Restructured_System",
      "description": "Document: README_RESTRUCTURED_SYSTEM.md",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.9,
      "metadata": {
        "file_size": 10229,
        "lines": 371,
        "language": "unknown",
        "last_modified": 1754953477.0840647
      },
      "created_at": 1754957551.163071,
      "updated_at": 1754957551.163071
    },
    "concept_1247": {
      "id": "concept_1247",
      "type": "concept",
      "name": "\ud83c\udfaf **Next Steps**",
      "description": "Concept: \ud83c\udfaf **Next Steps**",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.163386,
      "updated_at": 1754957551.163386
    },
    "concept_1248": {
      "id": "concept_1248",
      "type": "concept",
      "name": "\ud83c\udf89 **Success Story**",
      "description": "Concept: \ud83c\udf89 **Success Story**",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.1639638,
      "updated_at": 1754957551.1639638
    },
    "concept_1249": {
      "id": "concept_1249",
      "type": "concept",
      "name": "** - Comprehensive self-monitoring and health checks\n- **",
      "description": "Concept: ** - Comprehensive self-monitoring and health checks\n- **",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.1641989,
      "updated_at": 1754957551.1641989
    },
    "concept_1250": {
      "id": "concept_1250",
      "type": "concept",
      "name": "** - Analyze system and tool performance\n- **",
      "description": "Concept: ** - Analyze system and tool performance\n- **",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.164507,
      "updated_at": 1754957551.164507
    },
    "concept_1251": {
      "id": "concept_1251",
      "type": "concept",
      "name": "100% backward compatibility",
      "description": "Concept: 100% backward compatibility",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.1648178,
      "updated_at": 1754957551.1648178
    },
    "concept_1252": {
      "id": "concept_1252",
      "type": "concept",
      "name": "All existing plugins remain intact",
      "description": "Concept: All existing plugins remain intact",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.165072,
      "updated_at": 1754957551.165072
    },
    "concept_1253": {
      "id": "concept_1253",
      "type": "concept",
      "name": "**3. Use the Tools**",
      "description": "Concept: **3. Use the Tools**",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.165289,
      "updated_at": 1754957551.165289
    },
    "concept_1254": {
      "id": "concept_1254",
      "type": "concept",
      "name": "**`workflow_health_check`** - Comprehensive workflow health check",
      "description": "Concept: **`workflow_health_check`** - Comprehensive workflow health check",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.165528,
      "updated_at": 1754957551.165528
    },
    "concept_1255": {
      "id": "concept_1255",
      "type": "concept",
      "name": "\ud83c\udfaf **What This Is**",
      "description": "Concept: \ud83c\udfaf **What This Is**",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.1658182,
      "updated_at": 1754957551.1658182
    },
    "concept_1256": {
      "id": "concept_1256",
      "type": "concept",
      "name": "### **Option 2: Use Standalone**",
      "description": "Concept: ### **Option 2: Use Standalone**",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.166183,
      "updated_at": 1754957551.166183
    },
    "concept_1257": {
      "id": "concept_1257",
      "type": "concept",
      "name": "**`think_deeply`** - Deep thinking with context analysis",
      "description": "Concept: **`think_deeply`** - Deep thinking with context analysis",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.166525,
      "updated_at": 1754957551.166525
    },
    "concept_1258": {
      "id": "concept_1258",
      "type": "concept",
      "name": "** - Enhanced context retrieval (Phase 1)\n- **",
      "description": "Concept: ** - Enhanced context retrieval (Phase 1)\n- **",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.166757,
      "updated_at": 1754957551.166757
    },
    "concept_1259": {
      "id": "concept_1259",
      "type": "concept",
      "name": "bash\n# See the complete system in action\npython demo_restructured_cognitive_system.py",
      "description": "Concept: bash\n# See the complete system in action\npython demo_restructured_cognitive_system.py",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.167011,
      "updated_at": 1754957551.167011
    },
    "concept_1260": {
      "id": "concept_1260",
      "type": "concept",
      "name": "** - Unified memory operations (store, retrieve, search, clear)\n- **",
      "description": "Concept: ** - Unified memory operations (store, retrieve, search, clear)\n- **",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.167774,
      "updated_at": 1754957551.167774
    },
    "concept_1261": {
      "id": "concept_1261",
      "type": "concept",
      "name": "### **Documentation**\n\n- **",
      "description": "Concept: ### **Documentation**\n\n- **",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.167994,
      "updated_at": 1754957551.167994
    },
    "concept_1262": {
      "id": "concept_1262",
      "type": "concept",
      "name": "**`track_conversation`** - Track conversation for learning",
      "description": "Concept: **`track_conversation`** - Track conversation for learning",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.168236,
      "updated_at": 1754957551.168236
    },
    "concept_1263": {
      "id": "concept_1263",
      "type": "concept",
      "name": "**`memory_operations`** - Unified memory operations (store, retrieve, search, clear)",
      "description": "Concept: **`memory_operations`** - Unified memory operations (store, retrieve, search, clear)",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.168488,
      "updated_at": 1754957551.168489
    },
    "concept_1264": {
      "id": "concept_1264",
      "type": "concept",
      "name": "**`optimize_workflow`** - Optimize workflows based on learning",
      "description": "Concept: **`optimize_workflow`** - Optimize workflows based on learning",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.168863,
      "updated_at": 1754957551.168863
    },
    "concept_1265": {
      "id": "concept_1265",
      "type": "concept",
      "name": "**`get_cursor_context`** - Cursor conversation context",
      "description": "Concept: **`get_cursor_context`** - Cursor conversation context",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.169237,
      "updated_at": 1754957551.169237
    },
    "concept_1266": {
      "id": "concept_1266",
      "type": "concept",
      "name": "** - Main restructured plugin (18 tools)\n- **",
      "description": "Concept: ** - Main restructured plugin (18 tools)\n- **",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.1694632,
      "updated_at": 1754957551.1694632
    },
    "concept_1267": {
      "id": "concept_1267",
      "type": "concept",
      "name": "### **2. Run the Demo**",
      "description": "Concept: ### **2. Run the Demo**",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.1697888,
      "updated_at": 1754957551.1697888
    },
    "concept_1268": {
      "id": "concept_1268",
      "type": "concept",
      "name": "\ud83d\ude80 **Getting Started**",
      "description": "Concept: \ud83d\ude80 **Getting Started**",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.170093,
      "updated_at": 1754957551.170093
    },
    "concept_1269": {
      "id": "concept_1269",
      "type": "concept",
      "name": "** - Optimize workflows based on learning\n\n### **\ud83e\udde0 DOMAIN 5: OUTPUT & ACTION**\n\n- **",
      "description": "Concept: ** - Optimize workflows based on learning\n\n### **\ud83e\udde0 DOMAIN 5: OUTPUT & ACTION**\n\n- **",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.17077,
      "updated_at": 1754957551.17077
    },
    "concept_1270": {
      "id": "concept_1270",
      "type": "concept",
      "name": "---\n\n## \ud83c\udf89 **Success Story**\n\nWe have successfully **transformed** your system from:\n\n\u274c **48 scattered, overlapping tools**\n\u274c **Complex tool discovery and usage**\n\u274c **Difficult maintenance and updates**\n\u274c **No natural workflow progression**\n\nInto:\n\n\u2705 **18 organized, cognitive domain tools**\n\u2705 **Intuitive, brain-focused organization**\n\u2705 **Easy maintenance and updates**\n\u2705 **Natural cognitive workflow progression**\n\u2705 **100% functionality preservation**\n\n---\n\n## \ud83d\udd17 **Quick Reference**\n\n### **Main Plugin**",
      "description": "Concept: ---\n\n## \ud83c\udf89 **Success Story**\n\nWe have successfully **transformed** your system from:\n\n\u274c **48 scattered, overlapping tools**\n\u274c **Complex tool discovery and usage**\n\u274c **Difficult maintenance and updates**\n\u274c **No natural workflow progression**\n\nInto:\n\n\u2705 **18 organized, cognitive domain tools**\n\u2705 **Intuitive, brain-focused organization**\n\u2705 **Easy maintenance and updates**\n\u2705 **Natural cognitive workflow progression**\n\u2705 **100% functionality preservation**\n\n---\n\n## \ud83d\udd17 **Quick Reference**\n\n### **Main Plugin**",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.173184,
      "updated_at": 1754957551.173184
    },
    "concept_1271": {
      "id": "concept_1271",
      "type": "concept",
      "name": "python\nfrom plugins.cognitive_brain_restructured import CognitiveBrainRestructuredPlugin\n\nplugin = CognitiveBrainRestructuredPlugin()\nplugin._setup()\n\n# Use any of the 18 cognitive tools\nresult = await plugin._memory_operations_handler(\"store\", \"important fact\")",
      "description": "Concept: python\nfrom plugins.cognitive_brain_restructured import CognitiveBrainRestructuredPlugin\n\nplugin = CognitiveBrainRestructuredPlugin()\nplugin._setup()\n\n# Use any of the 18 cognitive tools\nresult = await plugin._memory_operations_handler(\"store\", \"important fact\")",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.173594,
      "updated_at": 1754957551.173594
    },
    "concept_1272": {
      "id": "concept_1272",
      "type": "concept",
      "name": "**`perceive_and_analyze`** - Unified perception and analysis",
      "description": "Concept: **`perceive_and_analyze`** - Unified perception and analysis",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.173841,
      "updated_at": 1754957551.173841
    },
    "concept_1273": {
      "id": "concept_1273",
      "type": "concept",
      "name": "** - Complete demonstration script\n- **",
      "description": "Concept: ** - Complete demonstration script\n- **",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.174104,
      "updated_at": 1754957551.174104
    },
    "concept_1274": {
      "id": "concept_1274",
      "type": "concept",
      "name": "**1. Test the System**",
      "description": "Concept: **1. Test the System**",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.1743731,
      "updated_at": 1754957551.1743731
    },
    "concept_1275": {
      "id": "concept_1275",
      "type": "concept",
      "name": "** - Intelligent tool orchestration (Phase 2)\n- **",
      "description": "Concept: ** - Intelligent tool orchestration (Phase 2)\n- **",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.174606,
      "updated_at": 1754957551.174606
    },
    "concept_1276": {
      "id": "concept_1276",
      "type": "concept",
      "name": "\ud83d\ude80 **Ready for Production**",
      "description": "Concept: \ud83d\ude80 **Ready for Production**",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.174935,
      "updated_at": 1754957551.174935
    },
    "concept_1277": {
      "id": "concept_1277",
      "type": "concept",
      "name": "** - Unified learning and adaptation system\n- **",
      "description": "Concept: ** - Unified learning and adaptation system\n- **",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.1751711,
      "updated_at": 1754957551.1751711
    },
    "concept_1278": {
      "id": "concept_1278",
      "type": "concept",
      "name": "**Preserved Functionality**",
      "description": "Concept: **Preserved Functionality**",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.1753962,
      "updated_at": 1754957551.1753962
    },
    "concept_1279": {
      "id": "concept_1279",
      "type": "concept",
      "name": "### **3. Run the Demo**",
      "description": "Concept: ### **3. Run the Demo**",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.1756191,
      "updated_at": 1754957551.1756191
    },
    "concept_1280": {
      "id": "concept_1280",
      "type": "concept",
      "name": "**2. Test the System**",
      "description": "Concept: **2. Test the System**",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.17584,
      "updated_at": 1754957551.17584
    },
    "concept_1281": {
      "id": "concept_1281",
      "type": "concept",
      "name": "** - Cursor conversation context\n\n### **\ud83e\udde0 DOMAIN 2: MEMORY & STORAGE**\n\n- **",
      "description": "Concept: ** - Cursor conversation context\n\n### **\ud83e\udde0 DOMAIN 2: MEMORY & STORAGE**\n\n- **",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.1765,
      "updated_at": 1754957551.1765
    },
    "concept_1282": {
      "id": "concept_1282",
      "type": "concept",
      "name": "\ud83c\udfaf **Key Benefits**",
      "description": "Concept: \ud83c\udfaf **Key Benefits**",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.176918,
      "updated_at": 1754957551.176918
    },
    "concept_1283": {
      "id": "concept_1283",
      "type": "concept",
      "name": "**Complete Example**",
      "description": "Concept: **Complete Example**",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.177141,
      "updated_at": 1754957551.177141
    },
    "concept_1284": {
      "id": "concept_1284",
      "type": "concept",
      "name": "**`ai_chat_with_memory`** - AI chat with memory enhancement",
      "description": "Concept: **`ai_chat_with_memory`** - AI chat with memory enhancement",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.177378,
      "updated_at": 1754957551.177378
    },
    "concept_1285": {
      "id": "concept_1285",
      "type": "concept",
      "name": "**\ud83e\udde0 DOMAIN 4: LEARNING & ADAPTATION**",
      "description": "Concept: **\ud83e\udde0 DOMAIN 4: LEARNING & ADAPTATION**",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md",
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.1777458,
      "updated_at": 1754957551.5165818
    },
    "concept_1286": {
      "id": "concept_1286",
      "type": "concept",
      "name": "**Core Files**",
      "description": "Concept: **Core Files**",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.177967,
      "updated_at": 1754957551.177967
    },
    "concept_1287": {
      "id": "concept_1287",
      "type": "concept",
      "name": "python\n# In your main.py\nfrom plugins.cognitive_brain_restructured import CognitiveBrainRestructuredPlugin\n\nrestructured_plugin = CognitiveBrainRestructuredPlugin()\nrestructured_plugin._setup()\n\n# Add tools to your MCP server\nfor tool in restructured_plugin.get_tools():\n    # Register each tool\n    pass",
      "description": "Concept: python\n# In your main.py\nfrom plugins.cognitive_brain_restructured import CognitiveBrainRestructuredPlugin\n\nrestructured_plugin = CognitiveBrainRestructuredPlugin()\nrestructured_plugin._setup()\n\n# Add tools to your MCP server\nfor tool in restructured_plugin.get_tools():\n    # Register each tool\n    pass",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.178318,
      "updated_at": 1754957551.178318
    },
    "concept_1288": {
      "id": "concept_1288",
      "type": "concept",
      "name": "** - This overview document\n\n### **Preserved Functionality**\n\n- All existing plugins remain intact\n- 100% backward compatibility\n- All 48 original tools still accessible\n- Enhanced cognitive domain interface\n\n---\n\n## \ud83c\udfaf **Key Benefits**\n\n### **1. Cognitive Efficiency**\n\n- **Natural Workflow**: Tools follow human cognitive processes\n- **Intuitive Usage**: No need to remember scattered tool names\n- **Logical Organization**: Related functions grouped together\n\n### **2. Massive Redundancy Elimination**\n\n- **Before**: 48 scattered, overlapping tools\n- **After**: 18 organized, cognitive domain tools\n- **Reduction**: 62.5% fewer tools with 100% functionality\n\n### **3. Improved Maintainability**\n\n- **Centralized Logic**: All related functionality in one place\n- **Easier Updates**: Changes affect entire cognitive domains\n- **Better Testing**: Comprehensive testing per domain\n\n### **4. Enhanced User Experience**\n\n- **Faster Discovery**: Users find tools in logical domains\n- **Better Learning**: Natural cognitive progression\n- **Reduced Confusion**: Clear tool categorization\n\n---\n\n## \ud83d\ude80 **Getting Started**\n\n### **1. Verify Installation**",
      "description": "Concept: ** - This overview document\n\n### **Preserved Functionality**\n\n- All existing plugins remain intact\n- 100% backward compatibility\n- All 48 original tools still accessible\n- Enhanced cognitive domain interface\n\n---\n\n## \ud83c\udfaf **Key Benefits**\n\n### **1. Cognitive Efficiency**\n\n- **Natural Workflow**: Tools follow human cognitive processes\n- **Intuitive Usage**: No need to remember scattered tool names\n- **Logical Organization**: Related functions grouped together\n\n### **2. Massive Redundancy Elimination**\n\n- **Before**: 48 scattered, overlapping tools\n- **After**: 18 organized, cognitive domain tools\n- **Reduction**: 62.5% fewer tools with 100% functionality\n\n### **3. Improved Maintainability**\n\n- **Centralized Logic**: All related functionality in one place\n- **Easier Updates**: Changes affect entire cognitive domains\n- **Better Testing**: Comprehensive testing per domain\n\n### **4. Enhanced User Experience**\n\n- **Faster Discovery**: Users find tools in logical domains\n- **Better Learning**: Natural cognitive progression\n- **Reduced Confusion**: Clear tool categorization\n\n---\n\n## \ud83d\ude80 **Getting Started**\n\n### **1. Verify Installation**",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.182863,
      "updated_at": 1754957551.182863
    },
    "concept_1289": {
      "id": "concept_1289",
      "type": "concept",
      "name": "** - AI chat with memory enhancement\n\n### **\ud83e\udde0 DOMAIN 6: SELF-MONITORING**\n\n- **",
      "description": "Concept: ** - AI chat with memory enhancement\n\n### **\ud83e\udde0 DOMAIN 6: SELF-MONITORING**\n\n- **",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.183431,
      "updated_at": 1754957551.183431
    },
    "concept_1290": {
      "id": "concept_1290",
      "type": "concept",
      "name": "**\ud83e\udde0 DOMAIN 1: PERCEPTION & INPUT**",
      "description": "Concept: **\ud83e\udde0 DOMAIN 1: PERCEPTION & INPUT**",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md",
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.183831,
      "updated_at": 1754957551.5186949
    },
    "concept_1291": {
      "id": "concept_1291",
      "type": "concept",
      "name": "**`analyze_performance`** - Analyze system and tool performance",
      "description": "Concept: **`analyze_performance`** - Analyze system and tool performance",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.184267,
      "updated_at": 1754957551.184267
    },
    "concept_1292": {
      "id": "concept_1292",
      "type": "concept",
      "name": "All 48 original tools still accessible",
      "description": "Concept: All 48 original tools still accessible",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.1844962,
      "updated_at": 1754957551.1844962
    },
    "concept_1293": {
      "id": "concept_1293",
      "type": "concept",
      "name": "Use independently",
      "description": "Concept: Use independently",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.1848829,
      "updated_at": 1754957551.1848829
    },
    "concept_1294": {
      "id": "concept_1294",
      "type": "concept",
      "name": "**\ud83e\udde0 DOMAIN 2: MEMORY & STORAGE**",
      "description": "Concept: **\ud83e\udde0 DOMAIN 2: MEMORY & STORAGE**",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md",
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.1852329,
      "updated_at": 1754957551.521079
    },
    "concept_1295": {
      "id": "concept_1295",
      "type": "concept",
      "name": "** - Executive summary\n- **",
      "description": "Concept: ** - Executive summary\n- **",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.185612,
      "updated_at": 1754957551.185612
    },
    "concept_1296": {
      "id": "concept_1296",
      "type": "concept",
      "name": "Start with memory operations",
      "description": "Concept: Start with memory operations",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.1858408,
      "updated_at": 1754957551.1858408
    },
    "concept_1297": {
      "id": "concept_1297",
      "type": "concept",
      "name": "---\n\n## \ud83d\udcca **What We Achieved**\n\n| **Metric**            | **Before** | **After** | **Improvement**             |\n| --------------------- | ---------- | --------- | --------------------------- |\n| **Tool Count**        | 48         | 18        | **62.5% reduction**         |\n| **Cognitive Domains** | 0          | 6         | **New organization**        |\n| **Functionality**     | 100%       | 100%      | **Zero loss**               |\n| **User Experience**   | Scattered  | Organized | **Major improvement**       |\n| **Maintainability**   | Complex    | Simple    | **Significant improvement** |\n| **Workflow**          | Manual     | Natural   | **Cognitive progression**   |\n\n---\n\n## \ud83d\udd27 **Integration Options**\n\n### **Option 1: Add to MCP Server**",
      "description": "Concept: ---\n\n## \ud83d\udcca **What We Achieved**\n\n| **Metric**            | **Before** | **After** | **Improvement**             |\n| --------------------- | ---------- | --------- | --------------------------- |\n| **Tool Count**        | 48         | 18        | **62.5% reduction**         |\n| **Cognitive Domains** | 0          | 6         | **New organization**        |\n| **Functionality**     | 100%       | 100%      | **Zero loss**               |\n| **User Experience**   | Scattered  | Organized | **Major improvement**       |\n| **Maintainability**   | Complex    | Simple    | **Significant improvement** |\n| **Workflow**          | Manual     | Natural   | **Cognitive progression**   |\n\n---\n\n## \ud83d\udd27 **Integration Options**\n\n### **Option 1: Add to MCP Server**",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.189038,
      "updated_at": 1754957551.189038
    },
    "concept_1298": {
      "id": "concept_1298",
      "type": "concept",
      "name": "**Option 1: Add to MCP Server**",
      "description": "Concept: **Option 1: Add to MCP Server**",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.189273,
      "updated_at": 1754957551.189273
    },
    "concept_1299": {
      "id": "concept_1299",
      "type": "concept",
      "name": "\ud83d\udcca **What We Achieved**",
      "description": "Concept: \ud83d\udcca **What We Achieved**",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.189603,
      "updated_at": 1754957551.189603
    },
    "concept_1300": {
      "id": "concept_1300",
      "type": "concept",
      "name": "**`enhanced_context_retrieval`** - Enhanced context retrieval (Phase 1)",
      "description": "Concept: **`enhanced_context_retrieval`** - Enhanced context retrieval (Phase 1)",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.189871,
      "updated_at": 1754957551.189871
    },
    "concept_1301": {
      "id": "concept_1301",
      "type": "concept",
      "name": "**`orchestrate_tools`** - Intelligent tool orchestration (Phase 2)",
      "description": "Concept: **`orchestrate_tools`** - Intelligent tool orchestration (Phase 2)",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.190388,
      "updated_at": 1754957551.190388
    },
    "concept_1302": {
      "id": "concept_1302",
      "type": "concept",
      "name": "** - Auto-process and store message context\n- **",
      "description": "Concept: ** - Auto-process and store message context\n- **",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.1906428,
      "updated_at": 1754957551.1906428
    },
    "concept_1303": {
      "id": "concept_1303",
      "type": "concept",
      "name": "**`demo_restructured_cognitive_system.py`** - Complete demonstration script",
      "description": "Concept: **`demo_restructured_cognitive_system.py`** - Complete demonstration script",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.1909041,
      "updated_at": 1754957551.1909041
    },
    "concept_1304": {
      "id": "concept_1304",
      "type": "concept",
      "name": "\ud83d\udcc1 **Files Overview**",
      "description": "Concept: \ud83d\udcc1 **Files Overview**",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.191283,
      "updated_at": 1754957551.191284
    },
    "concept_1305": {
      "id": "concept_1305",
      "type": "concept",
      "name": "**`INTEGRATION_GUIDE.md`** - Integration and troubleshooting guide",
      "description": "Concept: **`INTEGRATION_GUIDE.md`** - Integration and troubleshooting guide",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.191584,
      "updated_at": 1754957551.191584
    },
    "concept_1306": {
      "id": "concept_1306",
      "type": "concept",
      "name": "\ud83d\udcc8 **Performance Monitoring**",
      "description": "Concept: \ud83d\udcc8 **Performance Monitoring**",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.191946,
      "updated_at": 1754957551.191946
    },
    "concept_1307": {
      "id": "concept_1307",
      "type": "concept",
      "name": "**2. Run the Demo**",
      "description": "Concept: **2. Run the Demo**",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.1922271,
      "updated_at": 1754957551.1922271
    },
    "concept_1308": {
      "id": "concept_1308",
      "type": "concept",
      "name": "** - Build comprehensive context\n\n### **\ud83e\udde0 DOMAIN 4: LEARNING & ADAPTATION**\n\n- **",
      "description": "Concept: ** - Build comprehensive context\n\n### **\ud83e\udde0 DOMAIN 4: LEARNING & ADAPTATION**\n\n- **",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.192796,
      "updated_at": 1754957551.192796
    },
    "concept_1309": {
      "id": "concept_1309",
      "type": "concept",
      "name": "** - Comprehensive system documentation\n- **",
      "description": "Concept: ** - Comprehensive system documentation\n- **",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.193203,
      "updated_at": 1754957551.193203
    },
    "concept_1310": {
      "id": "concept_1310",
      "type": "concept",
      "name": "**`auto_process_message`** - Auto-process and store message context",
      "description": "Concept: **`auto_process_message`** - Auto-process and store message context",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.193481,
      "updated_at": 1754957551.193481
    },
    "concept_1311": {
      "id": "concept_1311",
      "type": "concept",
      "name": "---\n\n## \ud83d\udcc8 **Performance Monitoring**\n\n### **Check System Status**",
      "description": "Concept: ---\n\n## \ud83d\udcc8 **Performance Monitoring**\n\n### **Check System Status**",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.19399,
      "updated_at": 1754957551.19399
    },
    "concept_1312": {
      "id": "concept_1312",
      "type": "concept",
      "name": "Import and use",
      "description": "Concept: Import and use",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.194217,
      "updated_at": 1754957551.194217
    },
    "concept_1313": {
      "id": "concept_1313",
      "type": "concept",
      "name": "** - Unified perception and analysis\n- **",
      "description": "Concept: ** - Unified perception and analysis\n- **",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.194457,
      "updated_at": 1754957551.194457
    },
    "concept_1314": {
      "id": "concept_1314",
      "type": "concept",
      "name": "In your main.py",
      "description": "Concept: In your main.py",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.194687,
      "updated_at": 1754957551.194688
    },
    "concept_1315": {
      "id": "concept_1315",
      "type": "concept",
      "name": "bash\n# See all features in action\npython demo_restructured_cognitive_system.py",
      "description": "Concept: bash\n# See all features in action\npython demo_restructured_cognitive_system.py",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.194946,
      "updated_at": 1754957551.194946
    },
    "concept_1316": {
      "id": "concept_1316",
      "type": "concept",
      "name": "**`plugins/cognitive_brain_restructured.py`** - Main restructured plugin (18 tools)",
      "description": "Concept: **`plugins/cognitive_brain_restructured.py`** - Main restructured plugin (18 tools)",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.1952,
      "updated_at": 1754957551.1952
    },
    "concept_1317": {
      "id": "concept_1317",
      "type": "concept",
      "name": "**\ud83e\udde0 DOMAIN 6: SELF-MONITORING**",
      "description": "Concept: **\ud83e\udde0 DOMAIN 6: SELF-MONITORING**",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md",
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.195682,
      "updated_at": 1754957551.530488
    },
    "concept_1318": {
      "id": "concept_1318",
      "type": "concept",
      "name": "bash\n# Check if everything is in place\nls -la plugins/cognitive_brain_restructured.py\nls -la demo_restructured_cognitive_system.py",
      "description": "Concept: bash\n# Check if everything is in place\nls -la plugins/cognitive_brain_restructured.py\nls -la demo_restructured_cognitive_system.py",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.1959739,
      "updated_at": 1754957551.1959739
    },
    "concept_1319": {
      "id": "concept_1319",
      "type": "concept",
      "name": "**`build_comprehensive_context`** - Build comprehensive context",
      "description": "Concept: **`build_comprehensive_context`** - Build comprehensive context",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.196401,
      "updated_at": 1754957551.196401
    },
    "concept_1320": {
      "id": "concept_1320",
      "type": "concept",
      "name": "**\ud83e\udde0 DOMAIN 5: OUTPUT & ACTION**",
      "description": "Concept: **\ud83e\udde0 DOMAIN 5: OUTPUT & ACTION**",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md",
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.1967611,
      "updated_at": 1754957551.5312262
    },
    "concept_1321": {
      "id": "concept_1321",
      "type": "concept",
      "name": "** - Deep thinking with context analysis\n- **",
      "description": "Concept: ** - Deep thinking with context analysis\n- **",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.197133,
      "updated_at": 1754957551.197133
    },
    "concept_1322": {
      "id": "concept_1322",
      "type": "concept",
      "name": "See the complete system in action",
      "description": "Concept: See the complete system in action",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.1973708,
      "updated_at": 1754957551.1973708
    },
    "concept_1323": {
      "id": "concept_1323",
      "type": "concept",
      "name": "### **3. Use the Tools**",
      "description": "Concept: ### **3. Use the Tools**",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.1977909,
      "updated_at": 1754957551.1977909
    },
    "concept_1324": {
      "id": "concept_1324",
      "type": "concept",
      "name": "Use any of the 18 cognitive tools",
      "description": "Concept: Use any of the 18 cognitive tools",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.198027,
      "updated_at": 1754957551.198027
    },
    "concept_1325": {
      "id": "concept_1325",
      "type": "concept",
      "name": "** - Process multiple messages efficiently\n- **",
      "description": "Concept: ** - Process multiple messages efficiently\n- **",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.1983712,
      "updated_at": 1754957551.1983712
    },
    "concept_1326": {
      "id": "concept_1326",
      "type": "concept",
      "name": "**`self_monitor`** - Comprehensive self-monitoring and health checks",
      "description": "Concept: **`self_monitor`** - Comprehensive self-monitoring and health checks",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.198666,
      "updated_at": 1754957551.198666
    },
    "concept_1327": {
      "id": "concept_1327",
      "type": "concept",
      "name": "**`batch_workflow_processing`** - Process multiple messages efficiently",
      "description": "Concept: **`batch_workflow_processing`** - Process multiple messages efficiently",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.1989381,
      "updated_at": 1754957551.1989381
    },
    "concept_1328": {
      "id": "concept_1328",
      "type": "concept",
      "name": "**`learn_and_adapt`** - Unified learning and adaptation system",
      "description": "Concept: **`learn_and_adapt`** - Unified learning and adaptation system",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.199244,
      "updated_at": 1754957551.199244
    },
    "concept_1329": {
      "id": "concept_1329",
      "type": "concept",
      "name": "python\n# Import and use\nfrom plugins.cognitive_brain_restructured import CognitiveBrainRestructuredPlugin\n\nplugin = CognitiveBrainRestructuredPlugin()\nplugin._setup()\n\n# Start with memory operations\nawait plugin._memory_operations_handler(\"store\", \"My first memory\")",
      "description": "Concept: python\n# Import and use\nfrom plugins.cognitive_brain_restructured import CognitiveBrainRestructuredPlugin\n\nplugin = CognitiveBrainRestructuredPlugin()\nplugin._setup()\n\n# Start with memory operations\nawait plugin._memory_operations_handler(\"store\", \"My first memory\")",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.199598,
      "updated_at": 1754957551.199598
    },
    "concept_1330": {
      "id": "concept_1330",
      "type": "concept",
      "name": "** - Continuous learning cycle (Phase 3)\n- **",
      "description": "Concept: ** - Continuous learning cycle (Phase 3)\n- **",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.199899,
      "updated_at": 1754957551.199899
    },
    "concept_1331": {
      "id": "concept_1331",
      "type": "concept",
      "name": "**`README_RESTRUCTURED_SYSTEM.md`** - This overview document",
      "description": "Concept: **`README_RESTRUCTURED_SYSTEM.md`** - This overview document",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.200161,
      "updated_at": 1754957551.200161
    },
    "concept_1332": {
      "id": "concept_1332",
      "type": "concept",
      "name": "---\n\n## \ud83e\udde0 **The 6 Cognitive Domains**\n\n### **\ud83e\udde0 DOMAIN 1: PERCEPTION & INPUT**\n\n- **",
      "description": "Concept: ---\n\n## \ud83e\udde0 **The 6 Cognitive Domains**\n\n### **\ud83e\udde0 DOMAIN 1: PERCEPTION & INPUT**\n\n- **",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.20095,
      "updated_at": 1754957551.20095
    },
    "concept_1333": {
      "id": "concept_1333",
      "type": "concept",
      "name": "Basic test",
      "description": "Concept: Basic test",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.2012138,
      "updated_at": 1754957551.2012138
    },
    "concept_1334": {
      "id": "concept_1334",
      "type": "concept",
      "name": "**3. Run the Demo**",
      "description": "Concept: **3. Run the Demo**",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.201494,
      "updated_at": 1754957551.201494
    },
    "concept_1335": {
      "id": "concept_1335",
      "type": "concept",
      "name": "python\n# Use independently\nplugin = CognitiveBrainRestructuredPlugin()\nplugin._setup()\n\n# Use any tool\nresult = await plugin._memory_operations_handler(\"store\", \"Test memory\")",
      "description": "Concept: python\n# Use independently\nplugin = CognitiveBrainRestructuredPlugin()\nplugin._setup()\n\n# Use any tool\nresult = await plugin._memory_operations_handler(\"store\", \"Test memory\")",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.201822,
      "updated_at": 1754957551.201822
    },
    "concept_1336": {
      "id": "concept_1336",
      "type": "concept",
      "name": "** - Comprehensive workflow health check\n\n---\n\n## \ud83d\udd04 **Natural Cognitive Workflow**\n\n### **Complete Example**",
      "description": "Concept: ** - Comprehensive workflow health check\n\n---\n\n## \ud83d\udd04 **Natural Cognitive Workflow**\n\n### **Complete Example**",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.202517,
      "updated_at": 1754957551.202517
    },
    "concept_1337": {
      "id": "concept_1337",
      "type": "concept",
      "name": "**`execute_enhanced_workflow`** - Execute complete enhanced workflow",
      "description": "Concept: **`execute_enhanced_workflow`** - Execute complete enhanced workflow",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.2027771,
      "updated_at": 1754957551.2027771
    },
    "concept_1338": {
      "id": "concept_1338",
      "type": "concept",
      "name": "Check if everything is in place",
      "description": "Concept: Check if everything is in place",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.203016,
      "updated_at": 1754957551.203016
    },
    "concept_1339": {
      "id": "concept_1339",
      "type": "concept",
      "name": "\ud83e\udde0 **Cognitive Brain Restructured - Complete System**",
      "description": "Concept: \ud83e\udde0 **Cognitive Brain Restructured - Complete System**",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.2035332,
      "updated_at": 1754957551.2035341
    },
    "concept_1340": {
      "id": "concept_1340",
      "type": "concept",
      "name": "Enhanced cognitive domain interface",
      "description": "Concept: Enhanced cognitive domain interface",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.203786,
      "updated_at": 1754957551.203786
    },
    "concept_1341": {
      "id": "concept_1341",
      "type": "concept",
      "name": "** - Integration and troubleshooting guide\n- **",
      "description": "Concept: ** - Integration and troubleshooting guide\n- **",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.204038,
      "updated_at": 1754957551.204038
    },
    "concept_1342": {
      "id": "concept_1342",
      "type": "concept",
      "name": "**`continuous_learning_cycle`** - Continuous learning cycle (Phase 3)",
      "description": "Concept: **`continuous_learning_cycle`** - Continuous learning cycle (Phase 3)",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.204423,
      "updated_at": 1754957551.204423
    },
    "concept_1343": {
      "id": "concept_1343",
      "type": "concept",
      "name": "**Option 2: Use Standalone**",
      "description": "Concept: **Option 2: Use Standalone**",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.204833,
      "updated_at": 1754957551.204833
    },
    "concept_1344": {
      "id": "concept_1344",
      "type": "concept",
      "name": "\ud83d\udd27 **Integration Options**",
      "description": "Concept: \ud83d\udd27 **Integration Options**",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.205184,
      "updated_at": 1754957551.205184
    },
    "concept_1345": {
      "id": "concept_1345",
      "type": "concept",
      "name": "---\n\n## \ud83d\udcc1 **Files Overview**\n\n### **Core Files**\n\n- **",
      "description": "Concept: ---\n\n## \ud83d\udcc1 **Files Overview**\n\n### **Core Files**\n\n- **",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.2056699,
      "updated_at": 1754957551.2056699
    },
    "concept_1346": {
      "id": "concept_1346",
      "type": "concept",
      "name": "See all features in action",
      "description": "Concept: See all features in action",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.2059069,
      "updated_at": 1754957551.2059069
    },
    "concept_1347": {
      "id": "concept_1347",
      "type": "concept",
      "name": "**\ud83e\udde0 DOMAIN 3: PROCESSING & THINKING**",
      "description": "Concept: **\ud83e\udde0 DOMAIN 3: PROCESSING & THINKING**",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md",
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.2064672,
      "updated_at": 1754957551.541611
    },
    "concept_1348": {
      "id": "concept_1348",
      "type": "concept",
      "name": "\ud83e\udde0 **The 6 Cognitive Domains**",
      "description": "Concept: \ud83e\udde0 **The 6 Cognitive Domains**",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.207114,
      "updated_at": 1754957551.207114
    },
    "concept_1349": {
      "id": "concept_1349",
      "type": "concept",
      "name": "\ud83d\udd04 **Natural Cognitive Workflow**",
      "description": "Concept: \ud83d\udd04 **Natural Cognitive Workflow**",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.207497,
      "updated_at": 1754957551.207497
    },
    "concept_1350": {
      "id": "concept_1350",
      "type": "concept",
      "name": "**`RESTRUCTURED_COGNITIVE_SYSTEM.md`** - Comprehensive system documentation",
      "description": "Concept: **`RESTRUCTURED_COGNITIVE_SYSTEM.md`** - Comprehensive system documentation",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.207765,
      "updated_at": 1754957551.207765
    },
    "concept_1351": {
      "id": "concept_1351",
      "type": "concept",
      "name": "** - Track conversation for learning\n\n### **\ud83e\udde0 DOMAIN 3: PROCESSING & THINKING**\n\n- **",
      "description": "Concept: ** - Track conversation for learning\n\n### **\ud83e\udde0 DOMAIN 3: PROCESSING & THINKING**\n\n- **",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.2083719,
      "updated_at": 1754957551.2083719
    },
    "concept_1352": {
      "id": "concept_1352",
      "type": "concept",
      "name": "**`COGNITIVE_RESTRUCTURING_SUMMARY.md`** - Executive summary",
      "description": "Concept: **`COGNITIVE_RESTRUCTURING_SUMMARY.md`** - Executive summary",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.2086349,
      "updated_at": 1754957551.2086349
    },
    "concept_1353": {
      "id": "concept_1353",
      "type": "concept",
      "name": "**4. Start Using**",
      "description": "Concept: **4. Start Using**",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.20908,
      "updated_at": 1754957551.20908
    },
    "concept_1354": {
      "id": "concept_1354",
      "type": "concept",
      "name": "### **Plugin Not Found**",
      "description": "Concept: ### **Plugin Not Found**",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.2093198,
      "updated_at": 1754957551.2093198
    },
    "concept_1355": {
      "id": "concept_1355",
      "type": "concept",
      "name": "python\n# 1. PERCEPTION: Analyze input and get context\ncontext = await plugin._enhanced_context_retrieval_handler(\"Analyze system performance\")\n\n# 2. MEMORY: Store and retrieve relevant information\nawait plugin._memory_operations_handler(\"store\", \"System performance analysis requested\")\n\n# 3. THINKING: Process and orchestrate tools\nthoughts = await plugin._think_deeply_handler(\"How to analyze system performance\", \"technical\")\n\n# 4. LEARNING: Learn from the interaction\nawait plugin._learn_and_adapt_handler(\"learn\", \"User requested system analysis\", \"technical\")\n\n# 5. ACTION: Execute the workflow\nworkflow_result = await plugin._execute_enhanced_workflow_handler(\"Analyze system performance\", \"aggressive\")\n\n# 6. MONITORING: Check system health\nhealth_status = await plugin._self_monitor_handler(\"comprehensive\", \"all\")",
      "description": "Concept: python\n# 1. PERCEPTION: Analyze input and get context\ncontext = await plugin._enhanced_context_retrieval_handler(\"Analyze system performance\")\n\n# 2. MEMORY: Store and retrieve relevant information\nawait plugin._memory_operations_handler(\"store\", \"System performance analysis requested\")\n\n# 3. THINKING: Process and orchestrate tools\nthoughts = await plugin._think_deeply_handler(\"How to analyze system performance\", \"technical\")\n\n# 4. LEARNING: Learn from the interaction\nawait plugin._learn_and_adapt_handler(\"learn\", \"User requested system analysis\", \"technical\")\n\n# 5. ACTION: Execute the workflow\nworkflow_result = await plugin._execute_enhanced_workflow_handler(\"Analyze system performance\", \"aggressive\")\n\n# 6. MONITORING: Check system health\nhealth_status = await plugin._self_monitor_handler(\"comprehensive\", \"all\")",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.209989,
      "updated_at": 1754957551.209989
    },
    "concept_1356": {
      "id": "concept_1356",
      "type": "concept",
      "name": "**1. Verify Installation**",
      "description": "Concept: **1. Verify Installation**",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.210232,
      "updated_at": 1754957551.210232
    },
    "concept_1357": {
      "id": "concept_1357",
      "type": "concept",
      "name": "** - Execute complete enhanced workflow\n- **",
      "description": "Concept: ** - Execute complete enhanced workflow\n- **",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.210479,
      "updated_at": 1754957551.210479
    },
    "concept_1358": {
      "id": "concept_1358",
      "type": "concept",
      "name": "### **4. Start Using**",
      "description": "Concept: ### **4. Start Using**",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.210905,
      "updated_at": 1754957551.210905
    },
    "concept_1359": {
      "id": "concept_1359",
      "type": "concept",
      "name": "bash\n# Basic test\npython -c \"\nimport sys; sys.path.insert(0, '.')\nfrom plugins.cognitive_brain_restructured import CognitiveBrainRestructuredPlugin\nplugin = CognitiveBrainRestructuredPlugin()\nplugin._setup()\nprint('\u2705 System ready!')\n\"",
      "description": "Concept: bash\n# Basic test\npython -c \"\nimport sys; sys.path.insert(0, '.')\nfrom plugins.cognitive_brain_restructured import CognitiveBrainRestructuredPlugin\nplugin = CognitiveBrainRestructuredPlugin()\nplugin._setup()\nprint('\u2705 System ready!')\n\"",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.21212,
      "updated_at": 1754957551.21212
    },
    "concept_1360": {
      "id": "concept_1360",
      "type": "concept",
      "name": "### **2. Test the System**",
      "description": "Concept: ### **2. Test the System**",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.2134101,
      "updated_at": 1754957551.2134101
    },
    "concept_1361": {
      "id": "concept_1361",
      "type": "concept",
      "name": "---\n\n## \ud83d\udd0d **Troubleshooting**\n\n### **Import Errors**",
      "description": "Concept: ---\n\n## \ud83d\udd0d **Troubleshooting**\n\n### **Import Errors**",
      "source": "README_RESTRUCTURED_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "README_RESTRUCTURED_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.2139049,
      "updated_at": 1754957551.2139049
    },
    "doc_1362": {
      "id": "doc_1362",
      "type": "document",
      "name": "Restructured_Cognitive_System",
      "description": "Document: RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.9,
      "metadata": {
        "file_size": 14896,
        "lines": 402,
        "language": "unknown",
        "last_modified": 1754953224.068807
      },
      "created_at": 1754957551.217912,
      "updated_at": 1754957551.217912
    },
    "concept_1363": {
      "id": "concept_1363",
      "type": "concept",
      "name": "learn_and_adapt",
      "description": "Concept: learn_and_adapt",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.218176,
      "updated_at": 1754957551.218176
    },
    "concept_1364": {
      "id": "concept_1364",
      "type": "concept",
      "name": "\ud83e\udde0 **DOMAIN 2: MEMORY & STORAGE**",
      "description": "Concept: \ud83e\udde0 **DOMAIN 2: MEMORY & STORAGE**",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.218554,
      "updated_at": 1754957551.218554
    },
    "concept_1365": {
      "id": "concept_1365",
      "type": "concept",
      "name": "Retrieve memory",
      "description": "Concept: Retrieve memory",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.218791,
      "updated_at": 1754957551.218791
    },
    "concept_1366": {
      "id": "concept_1366",
      "type": "concept",
      "name": "### **Unified Memory Operations**",
      "description": "Concept: ### **Unified Memory Operations**",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.219053,
      "updated_at": 1754957551.219053
    },
    "concept_1367": {
      "id": "concept_1367",
      "type": "concept",
      "name": "**Plugin Structure**",
      "description": "Concept: **Plugin Structure**",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.219286,
      "updated_at": 1754957551.219286
    },
    "concept_1368": {
      "id": "concept_1368",
      "type": "concept",
      "name": "**Usage**: `track_conversation(user_message=\"msg\", assistant_response=\"response\")`",
      "description": "Concept: **Usage**: `track_conversation(user_message=\"msg\", assistant_response=\"response\")`",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.219548,
      "updated_at": 1754957551.219548
    },
    "concept_1369": {
      "id": "concept_1369",
      "type": "concept",
      "name": "**Optimized Routing**: Direct routing to appropriate handlers",
      "description": "Concept: **Optimized Routing**: Direct routing to appropriate handlers",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.2198331,
      "updated_at": 1754957551.2198331
    },
    "concept_1370": {
      "id": "concept_1370",
      "type": "concept",
      "name": "**Consolidates**: `optimize_workflow`, `performance_optimization`, `learning_application`",
      "description": "Concept: **Consolidates**: `optimize_workflow`, `performance_optimization`, `learning_application`",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.220104,
      "updated_at": 1754957551.220104
    },
    "concept_1371": {
      "id": "concept_1371",
      "type": "concept",
      "name": "**Usage**: `build_comprehensive_context(user_message=\"query\", context_depth=\"comprehensive\")`",
      "description": "Concept: **Usage**: `build_comprehensive_context(user_message=\"query\", context_depth=\"comprehensive\")`",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.220433,
      "updated_at": 1754957551.220433
    },
    "concept_1372": {
      "id": "concept_1372",
      "type": "concept",
      "name": "**Function**: Comprehensive workflow health check",
      "description": "Concept: **Function**: Comprehensive workflow health check",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.22084,
      "updated_at": 1754957551.22084
    },
    "concept_1373": {
      "id": "concept_1373",
      "type": "concept",
      "name": "**14. `batch_workflow_processing`**",
      "description": "Concept: **14. `batch_workflow_processing`**",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.2210839,
      "updated_at": 1754957551.2210839
    },
    "concept_1374": {
      "id": "concept_1374",
      "type": "concept",
      "name": "memory_enhanced_chat",
      "description": "Concept: memory_enhanced_chat",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.221376,
      "updated_at": 1754957551.221376
    },
    "concept_1375": {
      "id": "concept_1375",
      "type": "concept",
      "name": "**Usage**: `analyze_performance(analysis_type=\"comprehensive\", target=\"all\")`",
      "description": "Concept: **Usage**: `analyze_performance(analysis_type=\"comprehensive\", target=\"all\")`",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.221666,
      "updated_at": 1754957551.221666
    },
    "concept_1376": {
      "id": "concept_1376",
      "type": "concept",
      "name": "**Function**: Automatically process and store message context",
      "description": "Concept: **Function**: Automatically process and store message context",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.221994,
      "updated_at": 1754957551.221994
    },
    "concept_1377": {
      "id": "concept_1377",
      "type": "concept",
      "name": "learning_optimization",
      "description": "Concept: learning_optimization",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.2224169,
      "updated_at": 1754957551.2224169
    },
    "concept_1378": {
      "id": "concept_1378",
      "type": "concept",
      "name": "Store memory",
      "description": "Concept: Store memory",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.223747,
      "updated_at": 1754957551.2237482
    },
    "concept_1379": {
      "id": "concept_1379",
      "type": "concept",
      "name": "**Function**: Execute complete enhanced workflow (all phases)",
      "description": "Concept: **Function**: Execute complete enhanced workflow (all phases)",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.2243688,
      "updated_at": 1754957551.2243688
    },
    "concept_1380": {
      "id": "concept_1380",
      "type": "concept",
      "name": "**Backward Compatibility**: Existing tool calls continue to work",
      "description": "Concept: **Backward Compatibility**: Existing tool calls continue to work",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.2247329,
      "updated_at": 1754957551.2247329
    },
    "concept_1381": {
      "id": "concept_1381",
      "type": "concept",
      "name": "**Function**: Continuous learning cycle (Phase 3)",
      "description": "Concept: **Function**: Continuous learning cycle (Phase 3)",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.225025,
      "updated_at": 1754957551.225025
    },
    "concept_1382": {
      "id": "concept_1382",
      "type": "concept",
      "name": "**Brain Analogy**: Prefrontal cortex + executive functions",
      "description": "Concept: **Brain Analogy**: Prefrontal cortex + executive functions",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.2252958,
      "updated_at": 1754957551.2252958
    },
    "concept_1383": {
      "id": "concept_1383",
      "type": "concept",
      "name": "**10. `learn_and_adapt`**",
      "description": "Concept: **10. `learn_and_adapt`**",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.225606,
      "updated_at": 1754957551.225606
    },
    "concept_1384": {
      "id": "concept_1384",
      "type": "concept",
      "name": "**Function**: AI chat with automatic memory enhancement",
      "description": "Concept: **Function**: AI chat with automatic memory enhancement",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.2258759,
      "updated_at": 1754957551.2258759
    },
    "concept_1385": {
      "id": "concept_1385",
      "type": "concept",
      "name": "Redundant context building functions",
      "description": "Concept: Redundant context building functions",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.2261279,
      "updated_at": 1754957551.2261279
    },
    "concept_1386": {
      "id": "concept_1386",
      "type": "concept",
      "name": "**2. Reduced Redundancy**",
      "description": "Concept: **2. Reduced Redundancy**",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.226409,
      "updated_at": 1754957551.226409
    },
    "concept_1387": {
      "id": "concept_1387",
      "type": "concept",
      "name": "\ud83e\udde0 **DOMAIN 4: LEARNING & ADAPTATION**",
      "description": "Concept: \ud83e\udde0 **DOMAIN 4: LEARNING & ADAPTATION**",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.226829,
      "updated_at": 1754957551.226829
    },
    "concept_1388": {
      "id": "concept_1388",
      "type": "concept",
      "name": "**Brain Analogy**: Working memory + conversation context",
      "description": "Concept: **Brain Analogy**: Working memory + conversation context",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.227083,
      "updated_at": 1754957551.227083
    },
    "concept_1389": {
      "id": "concept_1389",
      "type": "concept",
      "name": "**Brain Analogy**: Performance monitoring + analysis",
      "description": "Concept: **Brain Analogy**: Performance monitoring + analysis",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.227336,
      "updated_at": 1754957551.227336
    },
    "concept_1390": {
      "id": "concept_1390",
      "type": "concept",
      "name": "intelligent_response",
      "description": "Concept: intelligent_response",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.2275882,
      "updated_at": 1754957551.2275882
    },
    "concept_1391": {
      "id": "concept_1391",
      "type": "concept",
      "name": "**Cleaner API**: 18 tools instead of 48 scattered functions",
      "description": "Concept: **Cleaner API**: 18 tools instead of 48 scattered functions",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.227852,
      "updated_at": 1754957551.227852
    },
    "concept_1392": {
      "id": "concept_1392",
      "type": "concept",
      "name": "**Consolidates**: `analyze_context_deeply`, `content_analysis`, `pattern_recognition`",
      "description": "Concept: **Consolidates**: `analyze_context_deeply`, `content_analysis`, `pattern_recognition`",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.228134,
      "updated_at": 1754957551.228134
    },
    "concept_1393": {
      "id": "concept_1393",
      "type": "concept",
      "name": "**Consolidates**: `enhanced_context_retrieval`, `context_building`, `memory_search`",
      "description": "Concept: **Consolidates**: `enhanced_context_retrieval`, `context_building`, `memory_search`",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.228417,
      "updated_at": 1754957551.228417
    },
    "concept_1394": {
      "id": "concept_1394",
      "type": "concept",
      "name": "**Consolidates**: `continuous_learning_cycle`, `learning_optimization`, `pattern_learning`",
      "description": "Concept: **Consolidates**: `continuous_learning_cycle`, `learning_optimization`, `pattern_learning`",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.2287,
      "updated_at": 1754957551.2287
    },
    "concept_1395": {
      "id": "concept_1395",
      "type": "concept",
      "name": "python\n# Learn from new information\nawait learn_and_adapt(\"learn\", \"New pattern discovered\", \"pattern_recognition\")\n\n# Reflect on recent experiences\nreflection = await learn_and_adapt(\"reflect\", \"\", \"recent_interactions\")\n\n# Background processing\ndreaming = await learn_and_adapt(\"dream\", \"\", \"\")\n\n# Remember important information\nawait learn_and_adapt(\"remember\", \"Critical system insight\", \"system_optimization\")",
      "description": "Concept: python\n# Learn from new information\nawait learn_and_adapt(\"learn\", \"New pattern discovered\", \"pattern_recognition\")\n\n# Reflect on recent experiences\nreflection = await learn_and_adapt(\"reflect\", \"\", \"recent_interactions\")\n\n# Background processing\ndreaming = await learn_and_adapt(\"dream\", \"\", \"\")\n\n# Remember important information\nawait learn_and_adapt(\"remember\", \"Critical system insight\", \"system_optimization\")",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.229137,
      "updated_at": 1754957551.229137
    },
    "concept_1396": {
      "id": "concept_1396",
      "type": "concept",
      "name": "workflow_planning",
      "description": "Concept: workflow_planning",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.229377,
      "updated_at": 1754957551.229377
    },
    "concept_1397": {
      "id": "concept_1397",
      "type": "concept",
      "name": "**Comprehensive Learning System**",
      "description": "Concept: **Comprehensive Learning System**",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.229625,
      "updated_at": 1754957551.229625
    },
    "concept_1398": {
      "id": "concept_1398",
      "type": "concept",
      "name": "**Usage**: `workflow_health_check(check_level=\"comprehensive\")`",
      "description": "Concept: **Usage**: `workflow_health_check(check_level=\"comprehensive\")`",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.2298849,
      "updated_at": 1754957551.2298849
    },
    "concept_1399": {
      "id": "concept_1399",
      "type": "concept",
      "name": "**After**: `enhanced_context_retrieval` + `build_comprehensive_context`",
      "description": "Concept: **After**: `enhanced_context_retrieval` + `build_comprehensive_context`",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.2302022,
      "updated_at": 1754957551.2302022
    },
    "concept_1400": {
      "id": "concept_1400",
      "type": "concept",
      "name": "status_monitoring",
      "description": "Concept: status_monitoring",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.230443,
      "updated_at": 1754957551.230443
    },
    "concept_1401": {
      "id": "concept_1401",
      "type": "concept",
      "name": "**Function**: Unified perception and analysis system",
      "description": "Concept: **Function**: Unified perception and analysis system",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.23071,
      "updated_at": 1754957551.23071
    },
    "concept_1402": {
      "id": "concept_1402",
      "type": "concept",
      "name": "**Function**: Deep thinking with full context analysis",
      "description": "Concept: **Function**: Deep thinking with full context analysis",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.230967,
      "updated_at": 1754957551.230967
    },
    "concept_1403": {
      "id": "concept_1403",
      "type": "concept",
      "name": "All existing functionality remains accessible",
      "description": "Concept: All existing functionality remains accessible",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.2312162,
      "updated_at": 1754957551.2312162
    },
    "concept_1404": {
      "id": "concept_1404",
      "type": "concept",
      "name": "tool_coordination",
      "description": "Concept: tool_coordination",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.2314508,
      "updated_at": 1754957551.2314508
    },
    "concept_1405": {
      "id": "concept_1405",
      "type": "concept",
      "name": "enhanced_context_retrieval",
      "description": "Concept: enhanced_context_retrieval",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md",
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.231989,
      "updated_at": 1754957551.5006988
    },
    "concept_1406": {
      "id": "concept_1406",
      "type": "concept",
      "name": "**11. `continuous_learning_cycle`**",
      "description": "Concept: **11. `continuous_learning_cycle`**",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.2328022,
      "updated_at": 1754957551.2328022
    },
    "concept_1407": {
      "id": "concept_1407",
      "type": "concept",
      "name": "**\ud83e\udde0 SELF-MONITORING** (3 tools)",
      "description": "Concept: **\ud83e\udde0 SELF-MONITORING** (3 tools)",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.233323,
      "updated_at": 1754957551.233323
    },
    "concept_1408": {
      "id": "concept_1408",
      "type": "concept",
      "name": "**3. `get_cursor_context`**",
      "description": "Concept: **3. `get_cursor_context`**",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.2335832,
      "updated_at": 1754957551.2335832
    },
    "concept_1409": {
      "id": "concept_1409",
      "type": "concept",
      "name": "**Usage**: `continuous_learning_cycle(interaction_data=data, learning_focus=\"context_patterns\")`",
      "description": "Concept: **Usage**: `continuous_learning_cycle(interaction_data=data, learning_focus=\"context_patterns\")`",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.2338738,
      "updated_at": 1754957551.2338738
    },
    "concept_1410": {
      "id": "concept_1410",
      "type": "concept",
      "name": "Documentation updated with new cognitive domain approach",
      "description": "Concept: Documentation updated with new cognitive domain approach",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.2341871,
      "updated_at": 1754957551.2341871
    },
    "concept_1411": {
      "id": "concept_1411",
      "type": "concept",
      "name": "**Consolidates**: `think`, `deep_thinking`, `cognitive_analysis`, `reasoning`",
      "description": "Concept: **Consolidates**: `think`, `deep_thinking`, `cognitive_analysis`, `reasoning`",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.234457,
      "updated_at": 1754957551.234457
    },
    "concept_1412": {
      "id": "concept_1412",
      "type": "concept",
      "name": "**Brain Analogy**: Metacognition + self-awareness",
      "description": "Concept: **Brain Analogy**: Metacognition + self-awareness",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.2347252,
      "updated_at": 1754957551.2347252
    },
    "concept_1413": {
      "id": "concept_1413",
      "type": "concept",
      "name": "context_building",
      "description": "Concept: context_building",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.235008,
      "updated_at": 1754957551.235008
    },
    "concept_1414": {
      "id": "concept_1414",
      "type": "concept",
      "name": "**5. `auto_process_message`**",
      "description": "Concept: **5. `auto_process_message`**",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.235261,
      "updated_at": 1754957551.235261
    },
    "concept_1415": {
      "id": "concept_1415",
      "type": "concept",
      "name": "**Function**: Intelligent tool orchestration (Phase 2)",
      "description": "Concept: **Function**: Intelligent tool orchestration (Phase 2)",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.235522,
      "updated_at": 1754957551.235522
    },
    "concept_1416": {
      "id": "concept_1416",
      "type": "concept",
      "name": "Remember important information",
      "description": "Concept: Remember important information",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.2357702,
      "updated_at": 1754957551.2357702
    },
    "concept_1417": {
      "id": "concept_1417",
      "type": "concept",
      "name": "ai_chat_with_memory(user_message=\"query\", ai_model_name=\"assistant\")",
      "description": "Concept: ai_chat_with_memory(user_message=\"query\", ai_model_name=\"assistant\")",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.23605,
      "updated_at": 1754957551.23605
    },
    "concept_1418": {
      "id": "concept_1418",
      "type": "concept",
      "name": "**Functionality Preservation**: All existing plugins remain intact",
      "description": "Concept: **Functionality Preservation**: All existing plugins remain intact",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.236334,
      "updated_at": 1754957551.236334
    },
    "concept_1419": {
      "id": "concept_1419",
      "type": "concept",
      "name": "think_deeply(message=\"what to think about\", context=\"conversation\")",
      "description": "Concept: think_deeply(message=\"what to think about\", context=\"conversation\")",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.2366168,
      "updated_at": 1754957551.2366168
    },
    "concept_1420": {
      "id": "concept_1420",
      "type": "concept",
      "name": "batch_workflow_processing(user_messages=[\"msg1\", \"msg2\"], workflow_mode=\"standard\")",
      "description": "Concept: batch_workflow_processing(user_messages=[\"msg1\", \"msg2\"], workflow_mode=\"standard\")",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.236911,
      "updated_at": 1754957551.236911
    },
    "concept_1421": {
      "id": "concept_1421",
      "type": "concept",
      "name": "**Memory Management (100% Preserved)**",
      "description": "Concept: **Memory Management (100% Preserved)**",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.2371762,
      "updated_at": 1754957551.2371762
    },
    "concept_1422": {
      "id": "concept_1422",
      "type": "concept",
      "name": "plugins/\n\u251c\u2500\u2500 cognitive_brain_restructured.py          # Main restructured plugin\n\u251c\u2500\u2500 enhanced_context_integration.py         # Preserved for functionality\n\u251c\u2500\u2500 enhanced_workflow_orchestrator.py       # Preserved for functionality\n\u251c\u2500\u2500 auto_memory.py                         # Preserved for functionality\n\u2514\u2500\u2500 ... (other existing plugins)",
      "description": "Concept: plugins/\n\u251c\u2500\u2500 cognitive_brain_restructured.py          # Main restructured plugin\n\u251c\u2500\u2500 enhanced_context_integration.py         # Preserved for functionality\n\u251c\u2500\u2500 enhanced_workflow_orchestrator.py       # Preserved for functionality\n\u251c\u2500\u2500 auto_memory.py                         # Preserved for functionality\n\u2514\u2500\u2500 ... (other existing plugins)",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.2388968,
      "updated_at": 1754957551.2388968
    },
    "concept_1423": {
      "id": "concept_1423",
      "type": "concept",
      "name": "**Usage**: `learn_and_adapt(operation=\"learn\", data=\"new information\", focus=\"general\")`",
      "description": "Concept: **Usage**: `learn_and_adapt(operation=\"learn\", data=\"new information\", focus=\"general\")`",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.2391932,
      "updated_at": 1754957551.2391932
    },
    "concept_1424": {
      "id": "concept_1424",
      "type": "concept",
      "name": "store_memory",
      "description": "Concept: store_memory",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.239481,
      "updated_at": 1754957551.239481
    },
    "concept_1425": {
      "id": "concept_1425",
      "type": "concept",
      "name": "data_integration",
      "description": "Concept: data_integration",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.239732,
      "updated_at": 1754957551.239732
    },
    "concept_1426": {
      "id": "concept_1426",
      "type": "concept",
      "name": "message_processing",
      "description": "Concept: message_processing",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.239987,
      "updated_at": 1754957551.239987
    },
    "concept_1427": {
      "id": "concept_1427",
      "type": "concept",
      "name": "**Usage**: `think_deeply(message=\"what to think about\", context=\"conversation\")`",
      "description": "Concept: **Usage**: `think_deeply(message=\"what to think about\", context=\"conversation\")`",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.2402701,
      "updated_at": 1754957551.2402701
    },
    "concept_1428": {
      "id": "concept_1428",
      "type": "concept",
      "name": "**Tools**",
      "description": "Concept: **Tools**",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.2405179,
      "updated_at": 1754957551.2405179
    },
    "concept_1429": {
      "id": "concept_1429",
      "type": "concept",
      "name": "**Context Building (100% Preserved)**",
      "description": "Concept: **Context Building (100% Preserved)**",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.2407749,
      "updated_at": 1754957551.2407749
    },
    "concept_1430": {
      "id": "concept_1430",
      "type": "concept",
      "name": "analyze_workflow_performance",
      "description": "Concept: analyze_workflow_performance",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.241027,
      "updated_at": 1754957551.241027
    },
    "concept_1431": {
      "id": "concept_1431",
      "type": "concept",
      "name": "execute_enhanced_workflow",
      "description": "Concept: execute_enhanced_workflow",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.2412758,
      "updated_at": 1754957551.2412758
    },
    "concept_1432": {
      "id": "concept_1432",
      "type": "concept",
      "name": "Complex tool discovery and usage",
      "description": "Concept: Complex tool discovery and usage",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.241527,
      "updated_at": 1754957551.241527
    },
    "concept_1433": {
      "id": "concept_1433",
      "type": "concept",
      "name": "**Consolidates**: `ai_chat_with_memory`, `memory_enhanced_chat`, `intelligent_response`",
      "description": "Concept: **Consolidates**: `ai_chat_with_memory`, `memory_enhanced_chat`, `intelligent_response`",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.241805,
      "updated_at": 1754957551.241805
    },
    "concept_1434": {
      "id": "concept_1434",
      "type": "concept",
      "name": "**Function**: Optimize workflows based on learning",
      "description": "Concept: **Function**: Optimize workflows based on learning",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.242065,
      "updated_at": 1754957551.242065
    },
    "concept_1435": {
      "id": "concept_1435",
      "type": "concept",
      "name": "batch_workflow_processing",
      "description": "Concept: batch_workflow_processing",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md",
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.242364,
      "updated_at": 1754957551.509504
    },
    "concept_1436": {
      "id": "concept_1436",
      "type": "concept",
      "name": "auto_process_message",
      "description": "Concept: auto_process_message",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md",
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.242663,
      "updated_at": 1754957551.510145
    },
    "concept_1437": {
      "id": "concept_1437",
      "type": "concept",
      "name": "python\n# 1. PERCEPTION: Analyze input and get context\ncontext = await perceive_and_analyze(\"Analyze this system performance\")\nmemory_context = await enhanced_context_retrieval(\"system performance analysis\")\n\n# 2. MEMORY: Store and retrieve relevant information\nawait memory_operations(\"store\", \"System performance analysis requested\")\nstored_data = await memory_operations(\"retrieve\", \"\", \"system performance\")\n\n# 3. THINKING: Process and orchestrate tools\nthoughts = await think_deeply(\"How to analyze system performance\", \"technical\")\norchestration = await orchestrate_tools(memory_context, \"comprehensive_analysis\")\n\n# 4. LEARNING: Learn from the interaction\nawait learn_and_adapt(\"learn\", \"User requested system performance analysis\", \"technical\")\nlearning_cycle = await continuous_learning_cycle(interaction_data, \"performance_patterns\")\n\n# 5. ACTION: Execute the workflow\nworkflow_result = await execute_enhanced_workflow(\"Analyze system performance\", \"aggressive\")\n\n# 6. MONITORING: Check system health\nhealth_status = await self_monitor(\"comprehensive\", \"all\")\nperformance_metrics = await analyze_performance(\"comprehensive\", \"workflow\")",
      "description": "Concept: python\n# 1. PERCEPTION: Analyze input and get context\ncontext = await perceive_and_analyze(\"Analyze this system performance\")\nmemory_context = await enhanced_context_retrieval(\"system performance analysis\")\n\n# 2. MEMORY: Store and retrieve relevant information\nawait memory_operations(\"store\", \"System performance analysis requested\")\nstored_data = await memory_operations(\"retrieve\", \"\", \"system performance\")\n\n# 3. THINKING: Process and orchestrate tools\nthoughts = await think_deeply(\"How to analyze system performance\", \"technical\")\norchestration = await orchestrate_tools(memory_context, \"comprehensive_analysis\")\n\n# 4. LEARNING: Learn from the interaction\nawait learn_and_adapt(\"learn\", \"User requested system performance analysis\", \"technical\")\nlearning_cycle = await continuous_learning_cycle(interaction_data, \"performance_patterns\")\n\n# 5. ACTION: Execute the workflow\nworkflow_result = await execute_enhanced_workflow(\"Analyze system performance\", \"aggressive\")\n\n# 6. MONITORING: Check system health\nhealth_status = await self_monitor(\"comprehensive\", \"all\")\nperformance_metrics = await analyze_performance(\"comprehensive\", \"workflow\")",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.243466,
      "updated_at": 1754957551.243466
    },
    "concept_1438": {
      "id": "concept_1438",
      "type": "concept",
      "name": "**\ud83e\udde0 OUTPUT & ACTION** (3 tools)",
      "description": "Concept: **\ud83e\udde0 OUTPUT & ACTION** (3 tools)",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.24386,
      "updated_at": 1754957551.24386
    },
    "concept_1439": {
      "id": "concept_1439",
      "type": "concept",
      "name": "**Function**: Unified learning and adaptation system",
      "description": "Concept: **Function**: Unified learning and adaptation system",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.244301,
      "updated_at": 1754957551.244301
    },
    "concept_1440": {
      "id": "concept_1440",
      "type": "concept",
      "name": "\ud83d\ude80 **Migration Guide**",
      "description": "Concept: \ud83d\ude80 **Migration Guide**",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.244649,
      "updated_at": 1754957551.244649
    },
    "concept_1441": {
      "id": "concept_1441",
      "type": "concept",
      "name": "**Brain Analogy**: Hippocampus + context retrieval networks",
      "description": "Concept: **Brain Analogy**: Hippocampus + context retrieval networks",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.2449229,
      "updated_at": 1754957551.2449229
    },
    "concept_1442": {
      "id": "concept_1442",
      "type": "concept",
      "name": "**\ud83e\udde0 PERCEPTION & INPUT** (3 tools)",
      "description": "Concept: **\ud83e\udde0 PERCEPTION & INPUT** (3 tools)",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.2453508,
      "updated_at": 1754957551.2453508
    },
    "concept_1443": {
      "id": "concept_1443",
      "type": "concept",
      "name": "**Consolidates**: `self_monitoring`, `health_check`, `status_monitoring`, `consciousness_check`",
      "description": "Concept: **Consolidates**: `self_monitoring`, `health_check`, `status_monitoring`, `consciousness_check`",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.245646,
      "updated_at": 1754957551.245646
    },
    "concept_1444": {
      "id": "concept_1444",
      "type": "concept",
      "name": "track_conversation(user_message=\"msg\", assistant_response=\"response\")",
      "description": "Concept: track_conversation(user_message=\"msg\", assistant_response=\"response\")",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.245915,
      "updated_at": 1754957551.245915
    },
    "concept_1445": {
      "id": "concept_1445",
      "type": "concept",
      "name": "**Consolidates**: `workflow_health_check`, `system_health`, `component_monitoring`",
      "description": "Concept: **Consolidates**: `workflow_health_check`, `system_health`, `component_monitoring`",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.246189,
      "updated_at": 1754957551.246189
    },
    "concept_1446": {
      "id": "concept_1446",
      "type": "concept",
      "name": "**Preservation**: All analysis and optimization features available",
      "description": "Concept: **Preservation**: All analysis and optimization features available",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.2464588,
      "updated_at": 1754957551.2464588
    },
    "concept_1447": {
      "id": "concept_1447",
      "type": "concept",
      "name": "**Before**: `execute_enhanced_workflow`, `batch_workflow_processing`, `workflow_health_check`",
      "description": "Concept: **Before**: `execute_enhanced_workflow`, `batch_workflow_processing`, `workflow_health_check`",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.246751,
      "updated_at": 1754957551.246751
    },
    "concept_1448": {
      "id": "concept_1448",
      "type": "concept",
      "name": "health_check",
      "description": "Concept: health_check",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.2469912,
      "updated_at": 1754957551.2469912
    },
    "concept_1449": {
      "id": "concept_1449",
      "type": "concept",
      "name": "Background processing",
      "description": "Concept: Background processing",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.2472398,
      "updated_at": 1754957551.2472398
    },
    "concept_1450": {
      "id": "concept_1450",
      "type": "concept",
      "name": "**Better Caching**: Related operations can share resources",
      "description": "Concept: **Better Caching**: Related operations can share resources",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.247508,
      "updated_at": 1754957551.247509
    },
    "concept_1451": {
      "id": "concept_1451",
      "type": "concept",
      "name": "component_monitoring",
      "description": "Concept: component_monitoring",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.247756,
      "updated_at": 1754957551.247756
    },
    "concept_1452": {
      "id": "concept_1452",
      "type": "concept",
      "name": "**Function**: Analyze system and tool performance",
      "description": "Concept: **Function**: Analyze system and tool performance",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.248019,
      "updated_at": 1754957551.248019
    },
    "concept_1453": {
      "id": "concept_1453",
      "type": "concept",
      "name": "perceive_and_analyze",
      "description": "Concept: perceive_and_analyze",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md",
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.24834,
      "updated_at": 1754957551.5144992
    },
    "concept_1454": {
      "id": "concept_1454",
      "type": "concept",
      "name": "**Consolidates**: `auto_process_message`, `auto_memory`, `message_processing`",
      "description": "Concept: **Consolidates**: `auto_process_message`, `auto_memory`, `message_processing`",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.248621,
      "updated_at": 1754957551.248621
    },
    "concept_1455": {
      "id": "concept_1455",
      "type": "concept",
      "name": "self_monitor",
      "description": "Concept: self_monitor",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.248874,
      "updated_at": 1754957551.248874
    },
    "concept_1456": {
      "id": "concept_1456",
      "type": "concept",
      "name": "Inconsistent naming conventions",
      "description": "Concept: Inconsistent naming conventions",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.249125,
      "updated_at": 1754957551.249125
    },
    "concept_1457": {
      "id": "concept_1457",
      "type": "concept",
      "name": "self_monitoring",
      "description": "Concept: self_monitoring",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md",
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.249374,
      "updated_at": 1754957551.516217
    },
    "concept_1458": {
      "id": "concept_1458",
      "type": "concept",
      "name": "remember_fact",
      "description": "Concept: remember_fact",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.24962,
      "updated_at": 1754957551.24962
    },
    "concept_1459": {
      "id": "concept_1459",
      "type": "concept",
      "name": "**After**: `analyze_performance` + `optimize_workflow`",
      "description": "Concept: **After**: `analyze_performance` + `optimize_workflow`",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.249886,
      "updated_at": 1754957551.249886
    },
    "concept_1460": {
      "id": "concept_1460",
      "type": "concept",
      "name": "**Brain Analogy**: Executive planning + tool coordination",
      "description": "Concept: **Brain Analogy**: Executive planning + tool coordination",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.250147,
      "updated_at": 1754957551.250147
    },
    "concept_1461": {
      "id": "concept_1461",
      "type": "concept",
      "name": "conversation_tracking",
      "description": "Concept: conversation_tracking",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.250391,
      "updated_at": 1754957551.250391
    },
    "concept_1462": {
      "id": "concept_1462",
      "type": "concept",
      "name": "Old scattered tools removed from main interface",
      "description": "Concept: Old scattered tools removed from main interface",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.2506518,
      "updated_at": 1754957551.2506518
    },
    "concept_1463": {
      "id": "concept_1463",
      "type": "concept",
      "name": "**Usage**: `get_cursor_context()`",
      "description": "Concept: **Usage**: `get_cursor_context()`",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.2509031,
      "updated_at": 1754957551.2509031
    },
    "concept_1464": {
      "id": "concept_1464",
      "type": "concept",
      "name": "**Phase 1: Immediate Benefits**",
      "description": "Concept: **Phase 1: Immediate Benefits**",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.2511559,
      "updated_at": 1754957551.2511559
    },
    "concept_1465": {
      "id": "concept_1465",
      "type": "concept",
      "name": "**Usage**: `orchestrate_tools(context_data=data, target_goal=\"enhanced_response\")`",
      "description": "Concept: **Usage**: `orchestrate_tools(context_data=data, target_goal=\"enhanced_response\")`",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.25144,
      "updated_at": 1754957551.25144
    },
    "concept_1466": {
      "id": "concept_1466",
      "type": "concept",
      "name": "enhanced_context_retrieval(user_message=\"query\", include_history=True)",
      "description": "Concept: enhanced_context_retrieval(user_message=\"query\", include_history=True)",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.251759,
      "updated_at": 1754957551.251759
    },
    "concept_1467": {
      "id": "concept_1467",
      "type": "concept",
      "name": "**Brain Analogy**: Conversation memory + learning tracking",
      "description": "Concept: **Brain Analogy**: Conversation memory + learning tracking",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.252026,
      "updated_at": 1754957551.252026
    },
    "concept_1468": {
      "id": "concept_1468",
      "type": "concept",
      "name": "conversation_context",
      "description": "Concept: conversation_context",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.252362,
      "updated_at": 1754957551.252362
    },
    "concept_1469": {
      "id": "concept_1469",
      "type": "concept",
      "name": "**Usage**: `ai_chat_with_memory(user_message=\"query\", ai_model_name=\"assistant\")`",
      "description": "Concept: **Usage**: `ai_chat_with_memory(user_message=\"query\", ai_model_name=\"assistant\")`",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.2528262,
      "updated_at": 1754957551.2528262
    },
    "concept_1470": {
      "id": "concept_1470",
      "type": "concept",
      "name": "**Usage**: `perceive_and_analyze(content=\"text to analyze\", analysis_type=\"comprehensive\")`",
      "description": "Concept: **Usage**: `perceive_and_analyze(content=\"text to analyze\", analysis_type=\"comprehensive\")`",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.253141,
      "updated_at": 1754957551.253141
    },
    "concept_1471": {
      "id": "concept_1471",
      "type": "concept",
      "name": "adapt",
      "description": "Concept: adapt",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.253406,
      "updated_at": 1754957551.253406
    },
    "concept_1472": {
      "id": "concept_1472",
      "type": "concept",
      "name": "**2. `enhanced_context_retrieval`**",
      "description": "Concept: **2. `enhanced_context_retrieval`**",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.253737,
      "updated_at": 1754957551.253737
    },
    "concept_1473": {
      "id": "concept_1473",
      "type": "concept",
      "name": "**Function**: Unified memory operations (store, retrieve, search, clear)",
      "description": "Concept: **Function**: Unified memory operations (store, retrieve, search, clear)",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.2540312,
      "updated_at": 1754957551.2540312
    },
    "concept_1474": {
      "id": "concept_1474",
      "type": "concept",
      "name": "**Phase 3: Full Restructuring**",
      "description": "Concept: **Phase 3: Full Restructuring**",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.2543428,
      "updated_at": 1754957551.2543428
    },
    "concept_1475": {
      "id": "concept_1475",
      "type": "concept",
      "name": "**Function**: Enhanced context retrieval (Phase 1)",
      "description": "Concept: **Function**: Enhanced context retrieval (Phase 1)",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.254606,
      "updated_at": 1754957551.254606
    },
    "concept_1476": {
      "id": "concept_1476",
      "type": "concept",
      "name": "analyze_performance",
      "description": "Concept: analyze_performance",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.254858,
      "updated_at": 1754957551.254858
    },
    "concept_1477": {
      "id": "concept_1477",
      "type": "concept",
      "name": "\ud83e\udde0 **DOMAIN 3: PROCESSING & THINKING**",
      "description": "Concept: \ud83e\udde0 **DOMAIN 3: PROCESSING & THINKING**",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.255271,
      "updated_at": 1754957551.255271
    },
    "concept_1478": {
      "id": "concept_1478",
      "type": "concept",
      "name": "**Consolidates**: `batch_workflow_processing`, `bulk_processing`, `efficiency_optimization`",
      "description": "Concept: **Consolidates**: `batch_workflow_processing`, `bulk_processing`, `efficiency_optimization`",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.255559,
      "updated_at": 1754957551.255559
    },
    "concept_1479": {
      "id": "concept_1479",
      "type": "concept",
      "name": "deep_thinking",
      "description": "Concept: deep_thinking",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.255805,
      "updated_at": 1754957551.255805
    },
    "concept_1480": {
      "id": "concept_1480",
      "type": "concept",
      "name": "efficiency_optimization",
      "description": "Concept: efficiency_optimization",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.256096,
      "updated_at": 1754957551.256096
    },
    "concept_1481": {
      "id": "concept_1481",
      "type": "concept",
      "name": "**Preservation**: All context building capabilities maintained",
      "description": "Concept: **Preservation**: All context building capabilities maintained",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.256363,
      "updated_at": 1754957551.256363
    },
    "concept_1482": {
      "id": "concept_1482",
      "type": "concept",
      "name": "**Consolidates**: `execute_enhanced_workflow`, `workflow_execution`, `phase_coordination`",
      "description": "Concept: **Consolidates**: `execute_enhanced_workflow`, `workflow_execution`, `phase_coordination`",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.256651,
      "updated_at": 1754957551.256651
    },
    "concept_1483": {
      "id": "concept_1483",
      "type": "concept",
      "name": "Learn from new information",
      "description": "Concept: Learn from new information",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.256905,
      "updated_at": 1754957551.256905
    },
    "concept_1484": {
      "id": "concept_1484",
      "type": "concept",
      "name": "**Unified Interface**: New restructured plugin provides consolidated access",
      "description": "Concept: **Unified Interface**: New restructured plugin provides consolidated access",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.257184,
      "updated_at": 1754957551.257184
    },
    "concept_1485": {
      "id": "concept_1485",
      "type": "concept",
      "name": "memory_operations",
      "description": "Concept: memory_operations",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.2574332,
      "updated_at": 1754957551.2574332
    },
    "concept_1486": {
      "id": "concept_1486",
      "type": "concept",
      "name": "\ud83d\udd27 **Implementation Details**",
      "description": "Concept: \ud83d\udd27 **Implementation Details**",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.257814,
      "updated_at": 1754957551.257814
    },
    "concept_1487": {
      "id": "concept_1487",
      "type": "concept",
      "name": "**Brain Analogy**: Continuous learning + pattern consolidation",
      "description": "Concept: **Brain Analogy**: Continuous learning + pattern consolidation",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.258087,
      "updated_at": 1754957551.258087
    },
    "concept_1488": {
      "id": "concept_1488",
      "type": "concept",
      "name": "retrieve_memory",
      "description": "Concept: retrieve_memory",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.258336,
      "updated_at": 1754957551.258336
    },
    "concept_1489": {
      "id": "concept_1489",
      "type": "concept",
      "name": "workflow_health_check",
      "description": "Concept: workflow_health_check",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md",
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.258691,
      "updated_at": 1754957551.524043
    },
    "concept_1490": {
      "id": "concept_1490",
      "type": "concept",
      "name": "**Usage**: `self_monitor(monitoring_type=\"comprehensive\", focus_area=\"all\")`",
      "description": "Concept: **Usage**: `self_monitor(monitoring_type=\"comprehensive\", focus_area=\"all\")`",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.258971,
      "updated_at": 1754957551.258971
    },
    "concept_1491": {
      "id": "concept_1491",
      "type": "concept",
      "name": "**Before**: `analyze_tool_performance`, `analyze_workflow_performance`, `performance_metrics`, `optimization`",
      "description": "Concept: **Before**: `analyze_tool_performance`, `analyze_workflow_performance`, `performance_metrics`, `optimization`",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.259278,
      "updated_at": 1754957551.259278
    },
    "concept_1492": {
      "id": "concept_1492",
      "type": "concept",
      "name": "Existing tools marked as deprecated (but functional)",
      "description": "Concept: Existing tools marked as deprecated (but functional)",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.259545,
      "updated_at": 1754957551.259545
    },
    "concept_1493": {
      "id": "concept_1493",
      "type": "concept",
      "name": "workflow_health_check(check_level=\"comprehensive\")",
      "description": "Concept: workflow_health_check(check_level=\"comprehensive\")",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.259815,
      "updated_at": 1754957551.259815
    },
    "concept_1494": {
      "id": "concept_1494",
      "type": "concept",
      "name": "Complete human brain-focused organization",
      "description": "Concept: Complete human brain-focused organization",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.260077,
      "updated_at": 1754957551.260077
    },
    "concept_1495": {
      "id": "concept_1495",
      "type": "concept",
      "name": "**4. `memory_operations`**",
      "description": "Concept: **4. `memory_operations`**",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.260332,
      "updated_at": 1754957551.260332
    },
    "concept_1496": {
      "id": "concept_1496",
      "type": "concept",
      "name": "**Natural Cognitive Workflow**",
      "description": "Concept: **Natural Cognitive Workflow**",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.26059,
      "updated_at": 1754957551.26059
    },
    "concept_1497": {
      "id": "concept_1497",
      "type": "concept",
      "name": "pattern_learning",
      "description": "Concept: pattern_learning",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.2608871,
      "updated_at": 1754957551.2608871
    },
    "concept_1498": {
      "id": "concept_1498",
      "type": "concept",
      "name": "system_health",
      "description": "Concept: system_health",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.261142,
      "updated_at": 1754957551.261142
    },
    "concept_1499": {
      "id": "concept_1499",
      "type": "concept",
      "name": "**Eliminated Duplicates**: No more overlapping functionality",
      "description": "Concept: **Eliminated Duplicates**: No more overlapping functionality",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.2614248,
      "updated_at": 1754957551.2614248
    },
    "concept_1500": {
      "id": "concept_1500",
      "type": "concept",
      "name": "**1. `perceive_and_analyze`**",
      "description": "Concept: **1. `perceive_and_analyze`**",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.261684,
      "updated_at": 1754957551.261684
    },
    "concept_1501": {
      "id": "concept_1501",
      "type": "concept",
      "name": "Scattered performance analysis tools",
      "description": "Concept: Scattered performance analysis tools",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.2619462,
      "updated_at": 1754957551.2619462
    },
    "concept_1502": {
      "id": "concept_1502",
      "type": "concept",
      "name": "optimize_workflow",
      "description": "Concept: optimize_workflow",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.262196,
      "updated_at": 1754957551.262196
    },
    "concept_1503": {
      "id": "concept_1503",
      "type": "concept",
      "name": "**Consolidates**: `store_memory`, `retrieve_memory`, `search_memory`, `clear_memory`, `remember_fact`",
      "description": "Concept: **Consolidates**: `store_memory`, `retrieve_memory`, `search_memory`, `clear_memory`, `remember_fact`",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.262551,
      "updated_at": 1754957551.262551
    },
    "concept_1504": {
      "id": "concept_1504",
      "type": "concept",
      "name": "**6. `track_conversation`**",
      "description": "Concept: **6. `track_conversation`**",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.262828,
      "updated_at": 1754957551.262828
    },
    "concept_1505": {
      "id": "concept_1505",
      "type": "concept",
      "name": "\ud83e\udde0 **DOMAIN 1: PERCEPTION & INPUT**",
      "description": "Concept: \ud83e\udde0 **DOMAIN 1: PERCEPTION & INPUT**",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.263236,
      "updated_at": 1754957551.263236
    },
    "concept_1506": {
      "id": "concept_1506",
      "type": "concept",
      "name": "perceive_and_analyze(content=\"text to analyze\", analysis_type=\"comprehensive\")",
      "description": "Concept: perceive_and_analyze(content=\"text to analyze\", analysis_type=\"comprehensive\")",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.263532,
      "updated_at": 1754957551.263532
    },
    "concept_1507": {
      "id": "concept_1507",
      "type": "concept",
      "name": "performance_metrics",
      "description": "Concept: performance_metrics",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.263787,
      "updated_at": 1754957551.263787
    },
    "concept_1508": {
      "id": "concept_1508",
      "type": "concept",
      "name": "**Function**: Get comprehensive Cursor conversation context",
      "description": "Concept: **Function**: Get comprehensive Cursor conversation context",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.264063,
      "updated_at": 1754957551.264063
    },
    "concept_1509": {
      "id": "concept_1509",
      "type": "concept",
      "name": "\ud83c\udfaf **Benefits of Restructuring**",
      "description": "Concept: \ud83c\udfaf **Benefits of Restructuring**",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.2644548,
      "updated_at": 1754957551.2644548
    },
    "concept_1510": {
      "id": "concept_1510",
      "type": "concept",
      "name": "**Integration Strategy**",
      "description": "Concept: **Integration Strategy**",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.264725,
      "updated_at": 1754957551.264725
    },
    "concept_1511": {
      "id": "concept_1511",
      "type": "concept",
      "name": "**Consolidates**: `track_cursor_conversation`, `conversation_tracking`, `learning_tracking`",
      "description": "Concept: **Consolidates**: `track_cursor_conversation`, `conversation_tracking`, `learning_tracking`",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.2650821,
      "updated_at": 1754957551.2650821
    },
    "concept_1512": {
      "id": "concept_1512",
      "type": "concept",
      "name": "**Brain Analogy**: Automatic memory encoding",
      "description": "Concept: **Brain Analogy**: Automatic memory encoding",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.2653599,
      "updated_at": 1754957551.2653599
    },
    "concept_1513": {
      "id": "concept_1513",
      "type": "concept",
      "name": "**Usage**: `optimize_workflow(optimization_focus=\"performance\", target_metrics=[\"speed\", \"accuracy\"])`",
      "description": "Concept: **Usage**: `optimize_workflow(optimization_focus=\"performance\", target_metrics=[\"speed\", \"accuracy\"])`",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.265667,
      "updated_at": 1754957551.265667
    },
    "concept_1514": {
      "id": "concept_1514",
      "type": "concept",
      "name": "---\n\n## \ud83c\udfaf **Benefits of Restructuring**\n\n### **1. Cognitive Efficiency**\n\n- **Natural Workflow**: Tools follow human cognitive processes\n- **Intuitive Usage**: No need to remember scattered tool names\n- **Logical Organization**: Related functions grouped together\n\n### **2. Reduced Redundancy**\n\n- **Eliminated Duplicates**: No more overlapping functionality\n- **Unified Interfaces**: Single tool for related operations\n- **Cleaner API**: 18 tools instead of 48 scattered functions\n\n### **3. Improved Maintainability**\n\n- **Centralized Logic**: All related functionality in one place\n- **Easier Updates**: Changes affect entire cognitive domains\n- **Better Testing**: Comprehensive testing per domain\n\n### **4. Enhanced User Experience**\n\n- **Faster Discovery**: Users find tools in logical domains\n- **Better Learning**: Natural cognitive progression\n- **Reduced Confusion**: Clear tool categorization\n\n---\n\n## \ud83d\udd27 **Implementation Details**\n\n### **Plugin Structure**",
      "description": "Concept: ---\n\n## \ud83c\udfaf **Benefits of Restructuring**\n\n### **1. Cognitive Efficiency**\n\n- **Natural Workflow**: Tools follow human cognitive processes\n- **Intuitive Usage**: No need to remember scattered tool names\n- **Logical Organization**: Related functions grouped together\n\n### **2. Reduced Redundancy**\n\n- **Eliminated Duplicates**: No more overlapping functionality\n- **Unified Interfaces**: Single tool for related operations\n- **Cleaner API**: 18 tools instead of 48 scattered functions\n\n### **3. Improved Maintainability**\n\n- **Centralized Logic**: All related functionality in one place\n- **Easier Updates**: Changes affect entire cognitive domains\n- **Better Testing**: Comprehensive testing per domain\n\n### **4. Enhanced User Experience**\n\n- **Faster Discovery**: Users find tools in logical domains\n- **Better Learning**: Natural cognitive progression\n- **Reduced Confusion**: Clear tool categorization\n\n---\n\n## \ud83d\udd27 **Implementation Details**\n\n### **Plugin Structure**",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.27021,
      "updated_at": 1754957551.27021
    },
    "concept_1515": {
      "id": "concept_1515",
      "type": "concept",
      "name": "build_comprehensive_context(user_message=\"query\", context_depth=\"comprehensive\")",
      "description": "Concept: build_comprehensive_context(user_message=\"query\", context_depth=\"comprehensive\")",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.270535,
      "updated_at": 1754957551.270536
    },
    "concept_1516": {
      "id": "concept_1516",
      "type": "concept",
      "name": "\ud83c\udfd7\ufe0f **Restructuring Results**",
      "description": "Concept: \ud83c\udfd7\ufe0f **Restructuring Results**",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.270953,
      "updated_at": 1754957551.270953
    },
    "concept_1517": {
      "id": "concept_1517",
      "type": "concept",
      "name": "**17. `analyze_performance`**",
      "description": "Concept: **17. `analyze_performance`**",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.27128,
      "updated_at": 1754957551.27128
    },
    "concept_1518": {
      "id": "concept_1518",
      "type": "concept",
      "name": "**Performance Impact**",
      "description": "Concept: **Performance Impact**",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.271543,
      "updated_at": 1754957551.271543
    },
    "concept_1519": {
      "id": "concept_1519",
      "type": "concept",
      "name": "optimize_workflow(optimization_focus=\"performance\", target_metrics=[\"speed\", \"accuracy\"])",
      "description": "Concept: optimize_workflow(optimization_focus=\"performance\", target_metrics=[\"speed\", \"accuracy\"])",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.271981,
      "updated_at": 1754957551.271981
    },
    "concept_1520": {
      "id": "concept_1520",
      "type": "concept",
      "name": "phase_coordination",
      "description": "Concept: phase_coordination",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.272247,
      "updated_at": 1754957551.272247
    },
    "concept_1521": {
      "id": "concept_1521",
      "type": "concept",
      "name": "**7. `think_deeply`**",
      "description": "Concept: **7. `think_deeply`**",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.2725801,
      "updated_at": 1754957551.2725801
    },
    "concept_1522": {
      "id": "concept_1522",
      "type": "concept",
      "name": "analyze_tool_performance",
      "description": "Concept: analyze_tool_performance",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.2729769,
      "updated_at": 1754957551.2729769
    },
    "concept_1523": {
      "id": "concept_1523",
      "type": "concept",
      "name": "**\ud83e\udde0 LEARNING & ADAPTATION** (3 tools)",
      "description": "Concept: **\ud83e\udde0 LEARNING & ADAPTATION** (3 tools)",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.2734551,
      "updated_at": 1754957551.2734551
    },
    "concept_1524": {
      "id": "concept_1524",
      "type": "concept",
      "name": "Users migrate to new unified interfaces",
      "description": "Concept: Users migrate to new unified interfaces",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.273731,
      "updated_at": 1754957551.273731
    },
    "concept_1525": {
      "id": "concept_1525",
      "type": "concept",
      "name": "analyze_performance(analysis_type=\"comprehensive\", target=\"all\")",
      "description": "Concept: analyze_performance(analysis_type=\"comprehensive\", target=\"all\")",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.274017,
      "updated_at": 1754957551.274017
    },
    "concept_1526": {
      "id": "concept_1526",
      "type": "concept",
      "name": "**Improved Efficiency**: Reduced tool discovery overhead",
      "description": "Concept: **Improved Efficiency**: Reduced tool discovery overhead",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.274318,
      "updated_at": 1754957551.274318
    },
    "concept_1527": {
      "id": "concept_1527",
      "type": "concept",
      "name": "**Brain Analogy**: Response generation + memory integration",
      "description": "Concept: **Brain Analogy**: Response generation + memory integration",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.2746181,
      "updated_at": 1754957551.2746181
    },
    "concept_1528": {
      "id": "concept_1528",
      "type": "concept",
      "name": "Search memory",
      "description": "Concept: Search memory",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.2749,
      "updated_at": 1754957551.2749
    },
    "concept_1529": {
      "id": "concept_1529",
      "type": "concept",
      "name": "\ud83e\udde0 **Cognitive Brain Restructured - Human Brain-Focused Organization**",
      "description": "Concept: \ud83e\udde0 **Cognitive Brain Restructured - Human Brain-Focused Organization**",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.275521,
      "updated_at": 1754957551.275521
    },
    "concept_1530": {
      "id": "concept_1530",
      "type": "concept",
      "name": "**Purpose**",
      "description": "Concept: **Purpose**",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.2758012,
      "updated_at": 1754957551.2758012
    },
    "concept_1531": {
      "id": "concept_1531",
      "type": "concept",
      "name": "search_memory",
      "description": "Concept: search_memory",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.2760699,
      "updated_at": 1754957551.2760699
    },
    "concept_1532": {
      "id": "concept_1532",
      "type": "concept",
      "name": "auto_process_message(user_message=\"message to process\")",
      "description": "Concept: auto_process_message(user_message=\"message to process\")",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.276417,
      "updated_at": 1754957551.276417
    },
    "concept_1533": {
      "id": "concept_1533",
      "type": "concept",
      "name": "**Function**: Track conversation for learning and context",
      "description": "Concept: **Function**: Track conversation for learning and context",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.276719,
      "updated_at": 1754957551.276719
    },
    "concept_1534": {
      "id": "concept_1534",
      "type": "concept",
      "name": "self_monitor(monitoring_type=\"comprehensive\", focus_area=\"all\")",
      "description": "Concept: self_monitor(monitoring_type=\"comprehensive\", focus_area=\"all\")",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.277011,
      "updated_at": 1754957551.277011
    },
    "concept_1535": {
      "id": "concept_1535",
      "type": "concept",
      "name": "orchestrate_tools",
      "description": "Concept: orchestrate_tools",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md",
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.277292,
      "updated_at": 1754957551.532033
    },
    "concept_1536": {
      "id": "concept_1536",
      "type": "concept",
      "name": "### **Comprehensive Learning System**",
      "description": "Concept: ### **Comprehensive Learning System**",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.2775738,
      "updated_at": 1754957551.2775738
    },
    "concept_1537": {
      "id": "concept_1537",
      "type": "concept",
      "name": "\ud83d\ude80 **Usage Examples**",
      "description": "Concept: \ud83d\ude80 **Usage Examples**",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.277966,
      "updated_at": 1754957551.277966
    },
    "concept_1538": {
      "id": "concept_1538",
      "type": "concept",
      "name": "performance_optimization",
      "description": "Concept: performance_optimization",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.27825,
      "updated_at": 1754957551.27825
    },
    "concept_1539": {
      "id": "concept_1539",
      "type": "concept",
      "name": "Multiple overlapping memory management tools",
      "description": "Concept: Multiple overlapping memory management tools",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.278529,
      "updated_at": 1754957551.278529
    },
    "concept_1540": {
      "id": "concept_1540",
      "type": "concept",
      "name": "**Unified Interfaces**: Single tool for related operations",
      "description": "Concept: **Unified Interfaces**: Single tool for related operations",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.2788239,
      "updated_at": 1754957551.2788239
    },
    "concept_1541": {
      "id": "concept_1541",
      "type": "concept",
      "name": "**Performance Analysis (100% Preserved)**",
      "description": "Concept: **Performance Analysis (100% Preserved)**",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.279109,
      "updated_at": 1754957551.279109
    },
    "concept_1542": {
      "id": "concept_1542",
      "type": "concept",
      "name": "**8. `orchestrate_tools`**",
      "description": "Concept: **8. `orchestrate_tools`**",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.279382,
      "updated_at": 1754957551.279382
    },
    "concept_1543": {
      "id": "concept_1543",
      "type": "concept",
      "name": "Reflect on recent experiences",
      "description": "Concept: Reflect on recent experiences",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.2796469,
      "updated_at": 1754957551.2796469
    },
    "concept_1544": {
      "id": "concept_1544",
      "type": "concept",
      "name": "cursor_context_summary",
      "description": "Concept: cursor_context_summary",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.279968,
      "updated_at": 1754957551.279968
    },
    "concept_1545": {
      "id": "concept_1545",
      "type": "concept",
      "name": "**Usage**: `batch_workflow_processing(user_messages=[\"msg1\", \"msg2\"], workflow_mode=\"standard\")`",
      "description": "Concept: **Usage**: `batch_workflow_processing(user_messages=[\"msg1\", \"msg2\"], workflow_mode=\"standard\")`",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.280278,
      "updated_at": 1754957551.280278
    },
    "concept_1546": {
      "id": "concept_1546",
      "type": "concept",
      "name": "**Zero Functionality Loss**: 100% feature preservation",
      "description": "Concept: **Zero Functionality Loss**: 100% feature preservation",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.280567,
      "updated_at": 1754957551.280567
    },
    "concept_1547": {
      "id": "concept_1547",
      "type": "concept",
      "name": "Users can start using new cognitive domain tools",
      "description": "Concept: Users can start using new cognitive domain tools",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.280855,
      "updated_at": 1754957551.280855
    },
    "concept_1548": {
      "id": "concept_1548",
      "type": "concept",
      "name": "**Brain Analogy**: Skill optimization + learning application",
      "description": "Concept: **Brain Analogy**: Skill optimization + learning application",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.281162,
      "updated_at": 1754957551.281162
    },
    "concept_1549": {
      "id": "concept_1549",
      "type": "concept",
      "name": "**Before**: `enhanced_context_retrieval`, `build_comprehensive_context`, `context_building`, `context_synthesis`",
      "description": "Concept: **Before**: `enhanced_context_retrieval`, `build_comprehensive_context`, `context_building`, `context_synthesis`",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.281504,
      "updated_at": 1754957551.281504
    },
    "concept_1550": {
      "id": "concept_1550",
      "type": "concept",
      "name": "**Function**: Comprehensive self-monitoring and health checks",
      "description": "Concept: **Function**: Comprehensive self-monitoring and health checks",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.281847,
      "updated_at": 1754957551.281847
    },
    "concept_1551": {
      "id": "concept_1551",
      "type": "concept",
      "name": "**Brain Analogy**: Hippocampus + memory consolidation",
      "description": "Concept: **Brain Analogy**: Hippocampus + memory consolidation",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.282136,
      "updated_at": 1754957551.282136
    },
    "concept_1552": {
      "id": "concept_1552",
      "type": "concept",
      "name": "**Brain Analogy**: Visual cortex + pattern recognition areas",
      "description": "Concept: **Brain Analogy**: Visual cortex + pattern recognition areas",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.28246,
      "updated_at": 1754957551.28246
    },
    "concept_1553": {
      "id": "concept_1553",
      "type": "concept",
      "name": "**After**: `memory_operations` + `auto_process_message` + `track_conversation`",
      "description": "Concept: **After**: `memory_operations` + `auto_process_message` + `track_conversation`",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.28277,
      "updated_at": 1754957551.28277
    },
    "concept_1554": {
      "id": "concept_1554",
      "type": "concept",
      "name": "optimization",
      "description": "Concept: optimization",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.283102,
      "updated_at": 1754957551.283102
    },
    "concept_1555": {
      "id": "concept_1555",
      "type": "concept",
      "name": "**\ud83e\udde0 PROCESSING & THINKING** (3 tools)",
      "description": "Concept: **\ud83e\udde0 PROCESSING & THINKING** (3 tools)",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.2836218,
      "updated_at": 1754957551.2836218
    },
    "concept_1556": {
      "id": "concept_1556",
      "type": "concept",
      "name": "**Consolidates**: `build_comprehensive_context`, `context_synthesis`, `data_integration`",
      "description": "Concept: **Consolidates**: `build_comprehensive_context`, `context_synthesis`, `data_integration`",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.283925,
      "updated_at": 1754957551.283925
    },
    "concept_1557": {
      "id": "concept_1557",
      "type": "concept",
      "name": "**Brain Analogy**: System health + component monitoring",
      "description": "Concept: **Brain Analogy**: System health + component monitoring",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.284225,
      "updated_at": 1754957551.284225
    },
    "concept_1558": {
      "id": "concept_1558",
      "type": "concept",
      "name": "learning_tracking",
      "description": "Concept: learning_tracking",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.284544,
      "updated_at": 1754957551.284544
    },
    "concept_1559": {
      "id": "concept_1559",
      "type": "concept",
      "name": "**18. `workflow_health_check`**",
      "description": "Concept: **18. `workflow_health_check`**",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.284831,
      "updated_at": 1754957551.284831
    },
    "concept_1560": {
      "id": "concept_1560",
      "type": "concept",
      "name": "Clear memory",
      "description": "Concept: Clear memory",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.285095,
      "updated_at": 1754957551.285096
    },
    "concept_1561": {
      "id": "concept_1561",
      "type": "concept",
      "name": "pattern_recognition",
      "description": "Concept: pattern_recognition",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.28537,
      "updated_at": 1754957551.28537
    },
    "concept_1562": {
      "id": "concept_1562",
      "type": "concept",
      "name": "continuous_learning_cycle",
      "description": "Concept: continuous_learning_cycle",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md",
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.285662,
      "updated_at": 1754957551.536544
    },
    "concept_1563": {
      "id": "concept_1563",
      "type": "concept",
      "name": "track_conversation",
      "description": "Concept: track_conversation",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.2859452,
      "updated_at": 1754957551.2859452
    },
    "concept_1564": {
      "id": "concept_1564",
      "type": "concept",
      "name": "continuous_learning_cycle(interaction_data=data, learning_focus=\"context_patterns\")",
      "description": "Concept: continuous_learning_cycle(interaction_data=data, learning_focus=\"context_patterns\")",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.286245,
      "updated_at": 1754957551.286245
    },
    "concept_1565": {
      "id": "concept_1565",
      "type": "concept",
      "name": "**Usage**: `auto_process_message(user_message=\"message to process\")`",
      "description": "Concept: **Usage**: `auto_process_message(user_message=\"message to process\")`",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.286535,
      "updated_at": 1754957551.286535
    },
    "concept_1566": {
      "id": "concept_1566",
      "type": "concept",
      "name": "**Consolidates**: `learn_from`, `reflect`, `dream`, `remember`, `adapt`",
      "description": "Concept: **Consolidates**: `learn_from`, `reflect`, `dream`, `remember`, `adapt`",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.2868218,
      "updated_at": 1754957551.2868218
    },
    "concept_1567": {
      "id": "concept_1567",
      "type": "concept",
      "name": "**12. `optimize_workflow`**",
      "description": "Concept: **12. `optimize_workflow`**",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.287101,
      "updated_at": 1754957551.287101
    },
    "concept_1568": {
      "id": "concept_1568",
      "type": "concept",
      "name": "get_cursor_context()",
      "description": "Concept: get_cursor_context()",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.2873669,
      "updated_at": 1754957551.2873669
    },
    "concept_1569": {
      "id": "concept_1569",
      "type": "concept",
      "name": "Cognitive domain tools become primary interface",
      "description": "Concept: Cognitive domain tools become primary interface",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.2876449,
      "updated_at": 1754957551.2876449
    },
    "concept_1570": {
      "id": "concept_1570",
      "type": "concept",
      "name": "**15. `ai_chat_with_memory`**",
      "description": "Concept: **15. `ai_chat_with_memory`**",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.287912,
      "updated_at": 1754957551.287912
    },
    "concept_1571": {
      "id": "concept_1571",
      "type": "concept",
      "name": "**13. `execute_enhanced_workflow`**",
      "description": "Concept: **13. `execute_enhanced_workflow`**",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.288182,
      "updated_at": 1754957551.288182
    },
    "concept_1572": {
      "id": "concept_1572",
      "type": "concept",
      "name": "**Usage**: `memory_operations(operation=\"store\", data=\"important fact\")`",
      "description": "Concept: **Usage**: `memory_operations(operation=\"store\", data=\"important fact\")`",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.2884731,
      "updated_at": 1754957551.2884731
    },
    "concept_1573": {
      "id": "concept_1573",
      "type": "concept",
      "name": "orchestrate_tools(context_data=data, target_goal=\"enhanced_response\")",
      "description": "Concept: orchestrate_tools(context_data=data, target_goal=\"enhanced_response\")",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.288764,
      "updated_at": 1754957551.288764
    },
    "concept_1574": {
      "id": "concept_1574",
      "type": "concept",
      "name": "**Consolidates**: `get_cursor_context`, `cursor_context_summary`, `conversation_context`",
      "description": "Concept: **Consolidates**: `get_cursor_context`, `cursor_context_summary`, `conversation_context`",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.289064,
      "updated_at": 1754957551.289064
    },
    "concept_1575": {
      "id": "concept_1575",
      "type": "concept",
      "name": "reasoning",
      "description": "Concept: reasoning",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.289323,
      "updated_at": 1754957551.289323
    },
    "concept_1576": {
      "id": "concept_1576",
      "type": "concept",
      "name": "\ud83c\udf89 **Conclusion**",
      "description": "Concept: \ud83c\udf89 **Conclusion**",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md",
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.2896798,
      "updated_at": 1754957551.3435452
    },
    "concept_1577": {
      "id": "concept_1577",
      "type": "concept",
      "name": "learn_and_adapt(operation=\"learn\", data=\"new information\", focus=\"general\")",
      "description": "Concept: learn_and_adapt(operation=\"learn\", data=\"new information\", focus=\"general\")",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.290003,
      "updated_at": 1754957551.290003
    },
    "concept_1578": {
      "id": "concept_1578",
      "type": "concept",
      "name": "bulk_processing",
      "description": "Concept: bulk_processing",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.290407,
      "updated_at": 1754957551.290407
    },
    "concept_1579": {
      "id": "concept_1579",
      "type": "concept",
      "name": "**Gradual Migration**: Users can migrate to new interface at their own pace",
      "description": "Concept: **Gradual Migration**: Users can migrate to new interface at their own pace",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.29072,
      "updated_at": 1754957551.29072
    },
    "concept_1580": {
      "id": "concept_1580",
      "type": "concept",
      "name": "execute_enhanced_workflow(user_message=\"query\", workflow_mode=\"standard\")",
      "description": "Concept: execute_enhanced_workflow(user_message=\"query\", workflow_mode=\"standard\")",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.291021,
      "updated_at": 1754957551.291021
    },
    "concept_1581": {
      "id": "concept_1581",
      "type": "concept",
      "name": "**Usage**: `execute_enhanced_workflow(user_message=\"query\", workflow_mode=\"standard\")`",
      "description": "Concept: **Usage**: `execute_enhanced_workflow(user_message=\"query\", workflow_mode=\"standard\")`",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.291328,
      "updated_at": 1754957551.291328
    },
    "concept_1582": {
      "id": "concept_1582",
      "type": "concept",
      "name": "**Before**: `store_memory`, `retrieve_memory`, `search_memory`, `clear_memory`, `remember_fact`, `auto_process_message`",
      "description": "Concept: **Before**: `store_memory`, `retrieve_memory`, `search_memory`, `clear_memory`, `remember_fact`, `auto_process_message`",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.291668,
      "updated_at": 1754957551.291668
    },
    "concept_1583": {
      "id": "concept_1583",
      "type": "concept",
      "name": "**Consolidates**: `orchestrate_tools`, `tool_coordination`, `workflow_planning`",
      "description": "Concept: **Consolidates**: `orchestrate_tools`, `tool_coordination`, `workflow_planning`",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.292026,
      "updated_at": 1754957551.292026
    },
    "concept_1584": {
      "id": "concept_1584",
      "type": "concept",
      "name": "\ud83d\udd04 **Functionality Preservation Mapping**",
      "description": "Concept: \ud83d\udd04 **Functionality Preservation Mapping**",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.292544,
      "updated_at": 1754957551.292544
    },
    "concept_1585": {
      "id": "concept_1585",
      "type": "concept",
      "name": "workflow_execution",
      "description": "Concept: workflow_execution",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.292851,
      "updated_at": 1754957551.292851
    },
    "concept_1586": {
      "id": "concept_1586",
      "type": "concept",
      "name": "**Unified Memory Operations**",
      "description": "Concept: **Unified Memory Operations**",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.293149,
      "updated_at": 1754957551.29315
    },
    "concept_1587": {
      "id": "concept_1587",
      "type": "concept",
      "name": "clear_memory",
      "description": "Concept: clear_memory",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.2934358,
      "updated_at": 1754957551.2934358
    },
    "concept_1588": {
      "id": "concept_1588",
      "type": "concept",
      "name": "**Preservation**: All operations available through unified interface",
      "description": "Concept: **Preservation**: All operations available through unified interface",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.293746,
      "updated_at": 1754957551.293746
    },
    "concept_1589": {
      "id": "concept_1589",
      "type": "concept",
      "name": "**Preservation**: All workflow capabilities maintained",
      "description": "Concept: **Preservation**: All workflow capabilities maintained",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.294046,
      "updated_at": 1754957551.294046
    },
    "concept_1590": {
      "id": "concept_1590",
      "type": "concept",
      "name": "**Usage**: `enhanced_context_retrieval(user_message=\"query\", include_history=True)`",
      "description": "Concept: **Usage**: `enhanced_context_retrieval(user_message=\"query\", include_history=True)`",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.294357,
      "updated_at": 1754957551.294357
    },
    "concept_1591": {
      "id": "concept_1591",
      "type": "concept",
      "name": "**Consolidates**: `analyze_tool_performance`, `analyze_workflow_performance`, `performance_metrics`",
      "description": "Concept: **Consolidates**: `analyze_tool_performance`, `analyze_workflow_performance`, `performance_metrics`",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.2946749,
      "updated_at": 1754957551.2946749
    },
    "concept_1592": {
      "id": "concept_1592",
      "type": "concept",
      "name": "\ud83e\udde0 **DOMAIN 5: OUTPUT & ACTION**",
      "description": "Concept: \ud83e\udde0 **DOMAIN 5: OUTPUT & ACTION**",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.295106,
      "updated_at": 1754957551.295106
    },
    "concept_1593": {
      "id": "concept_1593",
      "type": "concept",
      "name": "**16. `self_monitor`**",
      "description": "Concept: **16. `self_monitor`**",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.2954009,
      "updated_at": 1754957551.2954009
    },
    "concept_1594": {
      "id": "concept_1594",
      "type": "concept",
      "name": "content_analysis",
      "description": "Concept: content_analysis",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.295718,
      "updated_at": 1754957551.295718
    },
    "concept_1595": {
      "id": "concept_1595",
      "type": "concept",
      "name": "**Brain Analogy**: Context integration + synthesis",
      "description": "Concept: **Brain Analogy**: Context integration + synthesis",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.296041,
      "updated_at": 1754957551.296041
    },
    "concept_1596": {
      "id": "concept_1596",
      "type": "concept",
      "name": "**\ud83e\udde0 MEMORY & STORAGE** (3 tools)",
      "description": "Concept: **\ud83e\udde0 MEMORY & STORAGE** (3 tools)",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.296586,
      "updated_at": 1754957551.296586
    },
    "concept_1597": {
      "id": "concept_1597",
      "type": "concept",
      "name": "**Brain Analogy**: Action planning + execution",
      "description": "Concept: **Brain Analogy**: Action planning + execution",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.296879,
      "updated_at": 1754957551.2968802
    },
    "concept_1598": {
      "id": "concept_1598",
      "type": "concept",
      "name": "learning_application",
      "description": "Concept: learning_application",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.2972102,
      "updated_at": 1754957551.2972102
    },
    "concept_1599": {
      "id": "concept_1599",
      "type": "concept",
      "name": "**Function**: Build comprehensive context using all available data",
      "description": "Concept: **Function**: Build comprehensive context using all available data",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.297503,
      "updated_at": 1754957551.297503
    },
    "concept_1600": {
      "id": "concept_1600",
      "type": "concept",
      "name": "memory_search",
      "description": "Concept: memory_search",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.2977679,
      "updated_at": 1754957551.2977679
    },
    "concept_1601": {
      "id": "concept_1601",
      "type": "concept",
      "name": "**Brain Analogy**: Learning networks + neuroplasticity",
      "description": "Concept: **Brain Analogy**: Learning networks + neuroplasticity",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.298056,
      "updated_at": 1754957551.298056
    },
    "concept_1602": {
      "id": "concept_1602",
      "type": "concept",
      "name": "build_comprehensive_context",
      "description": "Concept: build_comprehensive_context",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.298351,
      "updated_at": 1754957551.298351
    },
    "concept_1603": {
      "id": "concept_1603",
      "type": "concept",
      "name": "**After**: `execute_enhanced_workflow` + `batch_workflow_processing` + `workflow_health_check`",
      "description": "Concept: **After**: `execute_enhanced_workflow` + `batch_workflow_processing` + `workflow_health_check`",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.298677,
      "updated_at": 1754957551.298677
    },
    "concept_1604": {
      "id": "concept_1604",
      "type": "concept",
      "name": "New restructured plugin available alongside existing tools",
      "description": "Concept: New restructured plugin available alongside existing tools",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.29898,
      "updated_at": 1754957551.29898
    },
    "concept_1605": {
      "id": "concept_1605",
      "type": "concept",
      "name": "**9. `build_comprehensive_context`**",
      "description": "Concept: **9. `build_comprehensive_context`**",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.299319,
      "updated_at": 1754957551.299319
    },
    "concept_1606": {
      "id": "concept_1606",
      "type": "concept",
      "name": "cognitive_analysis",
      "description": "Concept: cognitive_analysis",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.2995992,
      "updated_at": 1754957551.2995992
    },
    "concept_1607": {
      "id": "concept_1607",
      "type": "concept",
      "name": "memory_operations(operation=\"store\", data=\"important fact\")",
      "description": "Concept: memory_operations(operation=\"store\", data=\"important fact\")",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.2998981,
      "updated_at": 1754957551.2998981
    },
    "concept_1608": {
      "id": "concept_1608",
      "type": "concept",
      "name": "\ud83e\udde0 **DOMAIN 6: SELF-MONITORING**",
      "description": "Concept: \ud83e\udde0 **DOMAIN 6: SELF-MONITORING**",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.30032,
      "updated_at": 1754957551.30032
    },
    "concept_1609": {
      "id": "concept_1609",
      "type": "concept",
      "name": "**Workflow Management (100% Preserved)**",
      "description": "Concept: **Workflow Management (100% Preserved)**",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.3006048,
      "updated_at": 1754957551.3006048
    },
    "concept_1610": {
      "id": "concept_1610",
      "type": "concept",
      "name": "python\n# Store memory\nawait memory_operations(\"store\", \"Important fact about user preferences\")\n\n# Retrieve memory\nuser_prefs = await memory_operations(\"retrieve\", \"\", \"user preferences\")\n\n# Search memory\nsearch_results = await memory_operations(\"search\", \"\", \"performance analysis\")\n\n# Clear memory\nawait memory_operations(\"clear\", \"\", \"\")",
      "description": "Concept: python\n# Store memory\nawait memory_operations(\"store\", \"Important fact about user preferences\")\n\n# Retrieve memory\nuser_prefs = await memory_operations(\"retrieve\", \"\", \"user preferences\")\n\n# Search memory\nsearch_results = await memory_operations(\"search\", \"\", \"performance analysis\")\n\n# Clear memory\nawait memory_operations(\"clear\", \"\", \"\")",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.301051,
      "updated_at": 1754957551.301051
    },
    "concept_1611": {
      "id": "concept_1611",
      "type": "concept",
      "name": "**Function**: Process multiple messages through enhanced workflow",
      "description": "Concept: **Function**: Process multiple messages through enhanced workflow",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.301356,
      "updated_at": 1754957551.301356
    },
    "concept_1612": {
      "id": "concept_1612",
      "type": "concept",
      "name": "**Brain Analogy**: Batch processing + efficiency",
      "description": "Concept: **Brain Analogy**: Batch processing + efficiency",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.3017101,
      "updated_at": 1754957551.3017101
    },
    "concept_1613": {
      "id": "concept_1613",
      "type": "concept",
      "name": "context_synthesis",
      "description": "Concept: context_synthesis",
      "source": "RESTRUCTURED_COGNITIVE_SYSTEM.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "RESTRUCTURED_COGNITIVE_SYSTEM.md"
        ]
      },
      "created_at": 1754957551.3019788,
      "updated_at": 1754957551.3019788
    },
    "doc_1614": {
      "id": "doc_1614",
      "type": "document",
      "name": "Roadmap",
      "description": "Document: ROADMAP.md",
      "source": "ROADMAP.md",
      "confidence": 0.9,
      "metadata": {
        "file_size": 13585,
        "lines": 368,
        "language": "unknown",
        "last_modified": 1754957256.0694237
      },
      "created_at": 1754957551.3060439,
      "updated_at": 1754957551.3060439
    },
    "concept_1615": {
      "id": "concept_1615",
      "type": "concept",
      "name": "**README Processing**: Extract project descriptions, setup instructions, usage examples",
      "description": "Concept: **README Processing**: Extract project descriptions, setup instructions, usage examples",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.306358,
      "updated_at": 1754957551.306358
    },
    "concept_1616": {
      "id": "concept_1616",
      "type": "concept",
      "name": "**Scanning Strategy**: How deep should we scan? (files, content, git history?)",
      "description": "Concept: **Scanning Strategy**: How deep should we scan? (files, content, git history?)",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.306675,
      "updated_at": 1754957551.306676
    },
    "concept_1617": {
      "id": "concept_1617",
      "type": "concept",
      "name": "**2.3 Contextual Memory Enhancement**",
      "description": "Concept: **2.3 Contextual Memory Enhancement**",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.306962,
      "updated_at": 1754957551.306962
    },
    "concept_1618": {
      "id": "concept_1618",
      "type": "concept",
      "name": "**Context Switching**: How you move between different project areas",
      "description": "Concept: **Context Switching**: How you move between different project areas",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.3072672,
      "updated_at": 1754957551.3072672
    },
    "concept_1619": {
      "id": "concept_1619",
      "type": "concept",
      "name": "**Week 9-10**: Coding preference learning and pattern recognition",
      "description": "Concept: **Week 9-10**: Coding preference learning and pattern recognition",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.30757,
      "updated_at": 1754957551.30757
    },
    "concept_1620": {
      "id": "concept_1620",
      "type": "concept",
      "name": "**Accuracy**: 95%+ correct dependency detection",
      "description": "Concept: **Accuracy**: 95%+ correct dependency detection",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.307852,
      "updated_at": 1754957551.307852
    },
    "concept_1621": {
      "id": "concept_1621",
      "type": "concept",
      "name": "**\ud83c\udfad The Ultimate Goal**",
      "description": "Concept: **\ud83c\udfad The Ultimate Goal**",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.308238,
      "updated_at": 1754957551.308238
    },
    "concept_1622": {
      "id": "concept_1622",
      "type": "concept",
      "name": "**Change Detection**: Monitor file modifications and updates",
      "description": "Concept: **Change Detection**: Monitor file modifications and updates",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.308531,
      "updated_at": 1754957551.308531
    },
    "concept_1623": {
      "id": "concept_1623",
      "type": "concept",
      "name": "**Project Structure Mapping**: Index all files, directories, and their relationships",
      "description": "Concept: **Project Structure Mapping**: Index all files, directories, and their relationships",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.308843,
      "updated_at": 1754957551.308843
    },
    "concept_1624": {
      "id": "concept_1624",
      "type": "concept",
      "name": "**Week 15**: Intelligent assistant behavior and predictive features",
      "description": "Concept: **Week 15**: Intelligent assistant behavior and predictive features",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.3091462,
      "updated_at": 1754957551.3091462
    },
    "concept_1625": {
      "id": "concept_1625",
      "type": "concept",
      "name": "**Cross-Project Intelligence**: Apply learnings across different projects",
      "description": "Concept: **Cross-Project Intelligence**: Apply learnings across different projects",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.3094451,
      "updated_at": 1754957551.3094451
    },
    "concept_1626": {
      "id": "concept_1626",
      "type": "concept",
      "name": "python\nclass DocumentationProcessor:\n    def __init__(self):\n        self.parsers = {}         # Different document type parsers\n        self.knowledge_graph = {} # Semantic knowledge relationships\n        self.context_store = {}   # Contextual memory storage\n\n    def process_document(self, doc_path: str) -> DocumentContext:\n        \"\"\"Process and extract knowledge from documents\"\"\"\n        pass\n\n    def build_knowledge_graph(self) -> KnowledgeGraph:\n        \"\"\"Construct semantic relationships between concepts\"\"\"\n        pass\n\n    def store_context(self, context: ContextData) -> bool:\n        \"\"\"Store contextual information with metadata\"\"\"\n        pass",
      "description": "Concept: python\nclass DocumentationProcessor:\n    def __init__(self):\n        self.parsers = {}         # Different document type parsers\n        self.knowledge_graph = {} # Semantic knowledge relationships\n        self.context_store = {}   # Contextual memory storage\n\n    def process_document(self, doc_path: str) -> DocumentContext:\n        \"\"\"Process and extract knowledge from documents\"\"\"\n        pass\n\n    def build_knowledge_graph(self) -> KnowledgeGraph:\n        \"\"\"Construct semantic relationships between concepts\"\"\"\n        pass\n\n    def store_context(self, context: ContextData) -> bool:\n        \"\"\"Store contextual information with metadata\"\"\"\n        pass",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.310092,
      "updated_at": 1754957551.310092
    },
    "concept_1627": {
      "id": "concept_1627",
      "type": "concept",
      "name": "python\nclass ProjectScanner:\n    def __init__(self, project_root: str):\n        self.project_root = project_root\n        self.file_index = {}\n        self.dependency_graph = {}\n        self.code_patterns = {}\n\n    def scan_project(self) -> ProjectIndex:\n        \"\"\"Comprehensive project scanning and indexing\"\"\"\n        pass\n\n    def detect_changes(self) -> List[FileChange]:\n        \"\"\"Detect and track file modifications\"\"\"\n        pass\n\n    def build_dependency_graph(self) -> DependencyGraph:\n        \"\"\"Build project dependency relationships\"\"\"\n        pass",
      "description": "Concept: python\nclass ProjectScanner:\n    def __init__(self, project_root: str):\n        self.project_root = project_root\n        self.file_index = {}\n        self.dependency_graph = {}\n        self.code_patterns = {}\n\n    def scan_project(self) -> ProjectIndex:\n        \"\"\"Comprehensive project scanning and indexing\"\"\"\n        pass\n\n    def detect_changes(self) -> List[FileChange]:\n        \"\"\"Detect and track file modifications\"\"\"\n        pass\n\n    def build_dependency_graph(self) -> DependencyGraph:\n        \"\"\"Build project dependency relationships\"\"\"\n        pass",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.3107,
      "updated_at": 1754957551.3107
    },
    "concept_1628": {
      "id": "concept_1628",
      "type": "concept",
      "name": "**Pattern Recognition**: 90%+ accuracy in workflow patterns",
      "description": "Concept: **Pattern Recognition**: 90%+ accuracy in workflow patterns",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.311003,
      "updated_at": 1754957551.311003
    },
    "concept_1629": {
      "id": "concept_1629",
      "type": "concept",
      "name": "**Learning Pattern Recognition**: Identify how you approach different types of challenges",
      "description": "Concept: **Learning Pattern Recognition**: Identify how you approach different types of challenges",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.3113332,
      "updated_at": 1754957551.3113332
    },
    "concept_1630": {
      "id": "concept_1630",
      "type": "concept",
      "name": "**Knowledge Transfer**: Apply patterns from one project to another",
      "description": "Concept: **Knowledge Transfer**: Apply patterns from one project to another",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.311647,
      "updated_at": 1754957551.311647
    },
    "concept_1631": {
      "id": "concept_1631",
      "type": "concept",
      "name": "**\ud83c\udfaf Phase 3: Personalization (Weeks 9-12)**",
      "description": "Concept: **\ud83c\udfaf Phase 3: Personalization (Weeks 9-12)**",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.312203,
      "updated_at": 1754957551.312203
    },
    "concept_1632": {
      "id": "concept_1632",
      "type": "concept",
      "name": "**Predictive Development**: Suggest improvements before you implement them",
      "description": "Concept: **Predictive Development**: Suggest improvements before you implement them",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.3125818,
      "updated_at": 1754957551.3125818
    },
    "concept_1633": {
      "id": "concept_1633",
      "type": "concept",
      "name": "**Week 3**: Dependency detection and relationship mapping",
      "description": "Concept: **Week 3**: Dependency detection and relationship mapping",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.312922,
      "updated_at": 1754957551.312922
    },
    "concept_1634": {
      "id": "concept_1634",
      "type": "concept",
      "name": "**SQLite**: Local context storage",
      "description": "Concept: **SQLite**: Local context storage",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.313226,
      "updated_at": 1754957551.313226
    },
    "concept_1635": {
      "id": "concept_1635",
      "type": "concept",
      "name": "**\ud83d\udcca Phase 3 Success Metrics**",
      "description": "Concept: **\ud83d\udcca Phase 3 Success Metrics**",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.313707,
      "updated_at": 1754957551.313707
    },
    "concept_1636": {
      "id": "concept_1636",
      "type": "concept",
      "name": "**\ud83d\ude80 Beyond the Roadmap**",
      "description": "Concept: **\ud83d\ude80 Beyond the Roadmap**",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.314153,
      "updated_at": 1754957551.314153
    },
    "concept_1637": {
      "id": "concept_1637",
      "type": "concept",
      "name": "**Problem-Solution Mapping**: Link problems to their solutions and context",
      "description": "Concept: **Problem-Solution Mapping**: Link problems to their solutions and context",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.3144908,
      "updated_at": 1754957551.3144908
    },
    "concept_1638": {
      "id": "concept_1638",
      "type": "concept",
      "name": "**1.1 File System Scanner**",
      "description": "Concept: **1.1 File System Scanner**",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.314882,
      "updated_at": 1754957551.314882
    },
    "concept_1639": {
      "id": "concept_1639",
      "type": "concept",
      "name": "**Cross-Project Intelligence**: Apply patterns across different codebases",
      "description": "Concept: **Cross-Project Intelligence**: Apply patterns across different codebases",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.315234,
      "updated_at": 1754957551.315234
    },
    "concept_1640": {
      "id": "concept_1640",
      "type": "concept",
      "name": "**4.3 Advanced Context Features**",
      "description": "Concept: **4.3 Advanced Context Features**",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.3155358,
      "updated_at": 1754957551.3155358
    },
    "concept_1641": {
      "id": "concept_1641",
      "type": "concept",
      "name": "**File Type Recognition**: Categorize by language, framework, and purpose",
      "description": "Concept: **File Type Recognition**: Categorize by language, framework, and purpose",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.315867,
      "updated_at": 1754957551.315867
    },
    "concept_1642": {
      "id": "concept_1642",
      "type": "concept",
      "name": "\ud83c\udfa8 **PHASE 3: PERSONALIZATION & BEHAVIOR INJECTION**",
      "description": "Concept: \ud83c\udfa8 **PHASE 3: PERSONALIZATION & BEHAVIOR INJECTION**",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.316564,
      "updated_at": 1754957551.316564
    },
    "concept_1643": {
      "id": "concept_1643",
      "type": "concept",
      "name": "**Development Workflow**: Your typical development process and preferences",
      "description": "Concept: **Development Workflow**: Your typical development process and preferences",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.316923,
      "updated_at": 1754957551.316923
    },
    "concept_1644": {
      "id": "concept_1644",
      "type": "concept",
      "name": "**Library Preferences**: Track your favorite tools and frameworks",
      "description": "Concept: **Library Preferences**: Track your favorite tools and frameworks",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.317238,
      "updated_at": 1754957551.317238
    },
    "concept_1645": {
      "id": "concept_1645",
      "type": "concept",
      "name": "**Personalization**: Significant improvement in user satisfaction",
      "description": "Concept: **Personalization**: Significant improvement in user satisfaction",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.317565,
      "updated_at": 1754957551.317565
    },
    "concept_1646": {
      "id": "concept_1646",
      "type": "concept",
      "name": "**Architecture Analysis**: Understand project structure patterns",
      "description": "Concept: **Architecture Analysis**: Understand project structure patterns",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.3178759,
      "updated_at": 1754957551.3178759
    },
    "concept_1647": {
      "id": "concept_1647",
      "type": "concept",
      "name": "**Technology Stack Detection**: Identify frameworks, libraries, and tools",
      "description": "Concept: **Technology Stack Detection**: Identify frameworks, libraries, and tools",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.318191,
      "updated_at": 1754957551.318191
    },
    "concept_1648": {
      "id": "concept_1648",
      "type": "concept",
      "name": "**Update Frequency**: Real-time change detection",
      "description": "Concept: **Update Frequency**: Real-time change detection",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.318492,
      "updated_at": 1754957551.318492
    },
    "concept_1649": {
      "id": "concept_1649",
      "type": "concept",
      "name": "**Relevance Scoring**: Rank context by relevance to current work",
      "description": "Concept: **Relevance Scoring**: Rank context by relevance to current work",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.318819,
      "updated_at": 1754957551.318819
    },
    "concept_1650": {
      "id": "concept_1650",
      "type": "concept",
      "name": "**\ud83d\udcad Questions to Consider**",
      "description": "Concept: **\ud83d\udcad Questions to Consider**",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.31926,
      "updated_at": 1754957551.31926
    },
    "concept_1651": {
      "id": "concept_1651",
      "type": "concept",
      "name": "**Problem-Solving Approaches**: How you debug, test, and iterate",
      "description": "Concept: **Problem-Solving Approaches**: How you debug, test, and iterate",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.319584,
      "updated_at": 1754957551.319584
    },
    "concept_1652": {
      "id": "concept_1652",
      "type": "concept",
      "name": "\ud83e\udde0 **PHASE 1: PROJECT INTELLIGENCE LAYER**",
      "description": "Concept: \ud83e\udde0 **PHASE 1: PROJECT INTELLIGENCE LAYER**",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.3200982,
      "updated_at": 1754957551.3200982
    },
    "concept_1653": {
      "id": "concept_1653",
      "type": "concept",
      "name": "**2.2 Knowledge Graph Construction**",
      "description": "Concept: **2.2 Knowledge Graph Construction**",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.3204129,
      "updated_at": 1754957551.3204129
    },
    "concept_1654": {
      "id": "concept_1654",
      "type": "concept",
      "name": "**Preference Database**: Personal coding patterns and preferences",
      "description": "Concept: **Preference Database**: Personal coding patterns and preferences",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.320746,
      "updated_at": 1754957551.320746
    },
    "concept_1655": {
      "id": "concept_1655",
      "type": "concept",
      "name": "**Docker**: Containerization and deployment",
      "description": "Concept: **Docker**: Containerization and deployment",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.321207,
      "updated_at": 1754957551.321207
    },
    "concept_1656": {
      "id": "concept_1656",
      "type": "concept",
      "name": "**1.3 Project Context Mapping**",
      "description": "Concept: **1.3 Project Context Mapping**",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.321512,
      "updated_at": 1754957551.321512
    },
    "concept_1657": {
      "id": "concept_1657",
      "type": "concept",
      "name": "**\ud83d\udcca Success Metrics**",
      "description": "Concept: **\ud83d\udcca Success Metrics**",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.321922,
      "updated_at": 1754957551.321922
    },
    "concept_1658": {
      "id": "concept_1658",
      "type": "concept",
      "name": "**Project Scanning**: < 5 seconds for typical projects",
      "description": "Concept: **Project Scanning**: < 5 seconds for typical projects",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.322377,
      "updated_at": 1754957551.322377
    },
    "concept_1659": {
      "id": "concept_1659",
      "type": "concept",
      "name": "**Context Storage**: 100% of project context captured",
      "description": "Concept: **Context Storage**: 100% of project context captured",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.322727,
      "updated_at": 1754957551.322727
    },
    "concept_1660": {
      "id": "concept_1660",
      "type": "concept",
      "name": "**Python 3.11+**: Core development language",
      "description": "Concept: **Python 3.11+**: Core development language",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.323068,
      "updated_at": 1754957551.323068
    },
    "concept_1661": {
      "id": "concept_1661",
      "type": "concept",
      "name": "**Real-time Collaboration**: Live context sharing during pair programming",
      "description": "Concept: **Real-time Collaboration**: Live context sharing during pair programming",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.323481,
      "updated_at": 1754957551.323481
    },
    "concept_1662": {
      "id": "concept_1662",
      "type": "concept",
      "name": "**1.2 Code Pattern Recognition**",
      "description": "Concept: **1.2 Code Pattern Recognition**",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.323793,
      "updated_at": 1754957551.323793
    },
    "concept_1663": {
      "id": "concept_1663",
      "type": "concept",
      "name": "**Memory Usage**: < 100MB for large projects",
      "description": "Concept: **Memory Usage**: < 100MB for large projects",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.324173,
      "updated_at": 1754957551.324173
    },
    "concept_1664": {
      "id": "concept_1664",
      "type": "concept",
      "name": "\ud83d\ude80 **PHASE 4: INTELLIGENT CONTEXT ORCHESTRATION**",
      "description": "Concept: \ud83d\ude80 **PHASE 4: INTELLIGENT CONTEXT ORCHESTRATION**",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.324812,
      "updated_at": 1754957551.324812
    },
    "concept_1665": {
      "id": "concept_1665",
      "type": "concept",
      "name": "**Documentation Processing**: 90%+ content extraction",
      "description": "Concept: **Documentation Processing**: 90%+ content extraction",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.325126,
      "updated_at": 1754957551.325126
    },
    "concept_1666": {
      "id": "concept_1666",
      "type": "concept",
      "name": "**4.2 Intelligent Assistant Behavior**",
      "description": "Concept: **4.2 Intelligent Assistant Behavior**",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.32545,
      "updated_at": 1754957551.32545
    },
    "concept_1667": {
      "id": "concept_1667",
      "type": "concept",
      "name": "**Git Integration**: Version control and change tracking",
      "description": "Concept: **Git Integration**: Version control and change tracking",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.325762,
      "updated_at": 1754957551.325762
    },
    "concept_1668": {
      "id": "concept_1668",
      "type": "concept",
      "name": "**Knowledge Graph**: 1000+ semantic relationships",
      "description": "Concept: **Knowledge Graph**: 1000+ semantic relationships",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.326072,
      "updated_at": 1754957551.326072
    },
    "concept_1669": {
      "id": "concept_1669",
      "type": "concept",
      "name": "**Week 7**: Knowledge graph construction and semantic relationships",
      "description": "Concept: **Week 7**: Knowledge graph construction and semantic relationships",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.3264089,
      "updated_at": 1754957551.3264089
    },
    "concept_1670": {
      "id": "concept_1670",
      "type": "concept",
      "name": "**Configuration Understanding**: Parse config files, environment variables",
      "description": "Concept: **Configuration Understanding**: Parse config files, environment variables",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.326751,
      "updated_at": 1754957551.326751
    },
    "concept_1671": {
      "id": "concept_1671",
      "type": "concept",
      "name": "**Index Storage**",
      "description": "Concept: **Index Storage**",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.327036,
      "updated_at": 1754957551.327036
    },
    "concept_1672": {
      "id": "concept_1672",
      "type": "concept",
      "name": "**\ud83d\ude80 Ready to Start Phase 1**",
      "description": "Concept: **\ud83d\ude80 Ready to Start Phase 1**",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.327523,
      "updated_at": 1754957551.327523
    },
    "concept_1673": {
      "id": "concept_1673",
      "type": "concept",
      "name": "**\ud83c\udfaf Phase 2: Knowledge Ingestion (Weeks 5-8)**",
      "description": "Concept: **\ud83c\udfaf Phase 2: Knowledge Ingestion (Weeks 5-8)**",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.328131,
      "updated_at": 1754957551.328131
    },
    "concept_1674": {
      "id": "concept_1674",
      "type": "concept",
      "name": "python\nclass PreferenceLearningEngine:\n    def __init__(self):\n        self.style_patterns = {}      # Coding style preferences\n        self.workflow_patterns = {}   # Development workflow patterns\n        self.decision_patterns = {}   # Architectural decision patterns\n        self.learning_patterns = {}   # How you learn and adapt\n\n    def learn_from_code(self, code_sample: str) -> StylePattern:\n        \"\"\"Learn coding style from code samples\"\"\"\n        pass\n\n    def learn_from_workflow(self, workflow_data: WorkflowData) -> WorkflowPattern:\n        \"\"\"Learn workflow patterns from development activities\"\"\"\n        pass\n\n    def predict_context_needs(self, current_context: Context) -> List[ContextSuggestion]:\n        \"\"\"Predict what context you'll need next\"\"\"\n        pass",
      "description": "Concept: python\nclass PreferenceLearningEngine:\n    def __init__(self):\n        self.style_patterns = {}      # Coding style preferences\n        self.workflow_patterns = {}   # Development workflow patterns\n        self.decision_patterns = {}   # Architectural decision patterns\n        self.learning_patterns = {}   # How you learn and adapt\n\n    def learn_from_code(self, code_sample: str) -> StylePattern:\n        \"\"\"Learn coding style from code samples\"\"\"\n        pass\n\n    def learn_from_workflow(self, workflow_data: WorkflowData) -> WorkflowPattern:\n        \"\"\"Learn workflow patterns from development activities\"\"\"\n        pass\n\n    def predict_context_needs(self, current_context: Context) -> List[ContextSuggestion]:\n        \"\"\"Predict what context you'll need next\"\"\"\n        pass",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.3288488,
      "updated_at": 1754957551.3288488
    },
    "concept_1675": {
      "id": "concept_1675",
      "type": "concept",
      "name": "**Week 8**: Contextual memory storage and retrieval",
      "description": "Concept: **Week 8**: Contextual memory storage and retrieval",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.329151,
      "updated_at": 1754957551.329151
    },
    "concept_1676": {
      "id": "concept_1676",
      "type": "concept",
      "name": "**IDE Integration**: Project context awareness",
      "description": "Concept: **IDE Integration**: Project context awareness",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.3294442,
      "updated_at": 1754957551.3294442
    },
    "concept_1677": {
      "id": "concept_1677",
      "type": "concept",
      "name": "**Cross-Reference Mapping**: Link related concepts across different parts of the project",
      "description": "Concept: **Cross-Reference Mapping**: Link related concepts across different parts of the project",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.3297548,
      "updated_at": 1754957551.3297548
    },
    "concept_1678": {
      "id": "concept_1678",
      "type": "concept",
      "name": "**\ud83d\udcca Phase 2 Success Metrics**",
      "description": "Concept: **\ud83d\udcca Phase 2 Success Metrics**",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.3301802,
      "updated_at": 1754957551.3301802
    },
    "concept_1679": {
      "id": "concept_1679",
      "type": "concept",
      "name": "**Week 4**: Code pattern recognition and initial indexing",
      "description": "Concept: **Week 4**: Code pattern recognition and initial indexing",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.3304791,
      "updated_at": 1754957551.3304791
    },
    "concept_1680": {
      "id": "concept_1680",
      "type": "concept",
      "name": "**Architectural Decisions**: Understand why you choose certain patterns",
      "description": "Concept: **Architectural Decisions**: Understand why you choose certain patterns",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.330784,
      "updated_at": 1754957551.330784
    },
    "concept_1681": {
      "id": "concept_1681",
      "type": "concept",
      "name": "**3.3 Intelligent Context Injection**",
      "description": "Concept: **3.3 Intelligent Context Injection**",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.3310678,
      "updated_at": 1754957551.3310678
    },
    "concept_1682": {
      "id": "concept_1682",
      "type": "concept",
      "name": "**\ud83d\udcca Data Storage**",
      "description": "Concept: **\ud83d\udcca Data Storage**",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.3314471,
      "updated_at": 1754957551.3314471
    },
    "concept_1683": {
      "id": "concept_1683",
      "type": "concept",
      "name": "**Proactive Context Provision**: Provide relevant context before you ask",
      "description": "Concept: **Proactive Context Provision**: Provide relevant context before you ask",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.331784,
      "updated_at": 1754957551.331784
    },
    "concept_1684": {
      "id": "concept_1684",
      "type": "concept",
      "name": "**Temporal Context**: Understand what you were working on when",
      "description": "Concept: **Temporal Context**: Understand what you were working on when",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.332101,
      "updated_at": 1754957551.332101
    },
    "concept_1685": {
      "id": "concept_1685",
      "type": "concept",
      "name": "**Week 5-6**: Documentation parser and basic knowledge extraction",
      "description": "Concept: **Week 5-6**: Documentation parser and basic knowledge extraction",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.332416,
      "updated_at": 1754957551.332416
    },
    "concept_1686": {
      "id": "concept_1686",
      "type": "concept",
      "name": "**User Experience**: Dramatic improvement in development workflow",
      "description": "Concept: **User Experience**: Dramatic improvement in development workflow",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.3327942,
      "updated_at": 1754957551.332795
    },
    "concept_1687": {
      "id": "concept_1687",
      "type": "concept",
      "name": "**Scanning Speed**: < 5 seconds for typical projects",
      "description": "Concept: **Scanning Speed**: < 5 seconds for typical projects",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.333144,
      "updated_at": 1754957551.333144
    },
    "concept_1688": {
      "id": "concept_1688",
      "type": "concept",
      "name": "python\nclass ProjectIndex:\n    def __init__(self):\n        self.files = {}           # File metadata and content\n        self.dependencies = {}    # Package and module dependencies\n        self.patterns = {}        # Code patterns and style preferences\n        self.context = {}         # Project context and metadata\n        self.history = {}         # Change history and evolution",
      "description": "Concept: python\nclass ProjectIndex:\n    def __init__(self):\n        self.files = {}           # File metadata and content\n        self.dependencies = {}    # Package and module dependencies\n        self.patterns = {}        # Code patterns and style preferences\n        self.context = {}         # Project context and metadata\n        self.history = {}         # Change history and evolution",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.333683,
      "updated_at": 1754957551.333683
    },
    "concept_1689": {
      "id": "concept_1689",
      "type": "concept",
      "name": "**Code Comments**: Extract inline documentation and explanations",
      "description": "Concept: **Code Comments**: Extract inline documentation and explanations",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.3340511,
      "updated_at": 1754957551.3340511
    },
    "concept_1690": {
      "id": "concept_1690",
      "type": "concept",
      "name": "**Week 1-2**: Basic file system scanner and project structure mapping",
      "description": "Concept: **Week 1-2**: Basic file system scanner and project structure mapping",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.334371,
      "updated_at": 1754957551.334371
    },
    "concept_1691": {
      "id": "concept_1691",
      "type": "concept",
      "name": "**Function/Class Discovery**: Index all code entities with their locations",
      "description": "Concept: **Function/Class Discovery**: Index all code entities with their locations",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.334681,
      "updated_at": 1754957551.334681
    },
    "concept_1692": {
      "id": "concept_1692",
      "type": "concept",
      "name": "**External References**: Process links, citations, and related resources",
      "description": "Concept: **External References**: Process links, citations, and related resources",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.334993,
      "updated_at": 1754957551.334993
    },
    "concept_1693": {
      "id": "concept_1693",
      "type": "concept",
      "name": "**Context Store**: Temporal and contextual information",
      "description": "Concept: **Context Store**: Temporal and contextual information",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.335291,
      "updated_at": 1754957551.335291
    },
    "concept_1694": {
      "id": "concept_1694",
      "type": "concept",
      "name": "**Workflow Optimization**: Suggest improvements based on your patterns",
      "description": "Concept: **Workflow Optimization**: Suggest improvements based on your patterns",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.3356001,
      "updated_at": 1754957551.3356001
    },
    "concept_1695": {
      "id": "concept_1695",
      "type": "concept",
      "name": "\ud83d\ude80 **MEMORY CONTEXT MANAGER v2 - DEVELOPMENT ROADMAP**",
      "description": "Concept: \ud83d\ude80 **MEMORY CONTEXT MANAGER v2 - DEVELOPMENT ROADMAP**",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.336191,
      "updated_at": 1754957551.336191
    },
    "concept_1696": {
      "id": "concept_1696",
      "type": "concept",
      "name": "**Storage Strategy**: How should we store and organize the project index?",
      "description": "Concept: **Storage Strategy**: How should we store and organize the project index?",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.336503,
      "updated_at": 1754957551.336503
    },
    "concept_1697": {
      "id": "concept_1697",
      "type": "concept",
      "name": "**Proactive Delivery**: Provide context when it's most useful",
      "description": "Concept: **Proactive Delivery**: Provide context when it's most useful",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.3368099,
      "updated_at": 1754957551.3368099
    },
    "concept_1698": {
      "id": "concept_1698",
      "type": "concept",
      "name": "**Knowledge Graph**: Semantic relationships and concepts",
      "description": "Concept: **Knowledge Graph**: Semantic relationships and concepts",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.337127,
      "updated_at": 1754957551.337127
    },
    "concept_1699": {
      "id": "concept_1699",
      "type": "concept",
      "name": "**Proactive Assistance**: 60%+ of context provided before asking",
      "description": "Concept: **Proactive Assistance**: 60%+ of context provided before asking",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.337452,
      "updated_at": 1754957551.337452
    },
    "concept_1700": {
      "id": "concept_1700",
      "type": "concept",
      "name": "**Dependency Detection**: Identify package.json, requirements.txt, pyproject.toml, etc.",
      "description": "Concept: **Dependency Detection**: Identify package.json, requirements.txt, pyproject.toml, etc.",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.337775,
      "updated_at": 1754957551.337775
    },
    "concept_1701": {
      "id": "concept_1701",
      "type": "concept",
      "name": "**Scanner Architecture**",
      "description": "Concept: **Scanner Architecture**",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.338058,
      "updated_at": 1754957551.338058
    },
    "concept_1702": {
      "id": "concept_1702",
      "type": "concept",
      "name": "**Import/Export Mapping**: Track module dependencies and relationships",
      "description": "Concept: **Import/Export Mapping**: Track module dependencies and relationships",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.338378,
      "updated_at": 1754957551.338378
    },
    "concept_1703": {
      "id": "concept_1703",
      "type": "concept",
      "name": "**\ud83d\udcca Phase 1 Success Metrics**",
      "description": "Concept: **\ud83d\udcca Phase 1 Success Metrics**",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.3391209,
      "updated_at": 1754957551.3391209
    },
    "concept_1704": {
      "id": "concept_1704",
      "type": "concept",
      "name": "**\ud83d\udccb Core Features to Implement**",
      "description": "Concept: **\ud83d\udccb Core Features to Implement**",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.339562,
      "updated_at": 1754957551.339562
    },
    "concept_1705": {
      "id": "concept_1705",
      "type": "concept",
      "name": "**Week 13-14**: Context orchestrator and multi-source integration",
      "description": "Concept: **Week 13-14**: Context orchestrator and multi-source integration",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.340107,
      "updated_at": 1754957551.340107
    },
    "concept_1706": {
      "id": "concept_1706",
      "type": "concept",
      "name": "**Project-Specific Context**: Store context tied to specific files and modules",
      "description": "Concept: **Project-Specific Context**: Store context tied to specific files and modules",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.340488,
      "updated_at": 1754957551.340488
    },
    "concept_1707": {
      "id": "concept_1707",
      "type": "concept",
      "name": "**Team Collaboration**: Share context and preferences with team members",
      "description": "Concept: **Team Collaboration**: Share context and preferences with team members",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.3409011,
      "updated_at": 1754957551.3409011
    },
    "concept_1708": {
      "id": "concept_1708",
      "type": "concept",
      "name": "**Learning Patterns**: How you approach new technologies and concepts",
      "description": "Concept: **Learning Patterns**: How you approach new technologies and concepts",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.341312,
      "updated_at": 1754957551.341312
    },
    "concept_1709": {
      "id": "concept_1709",
      "type": "concept",
      "name": "**\ud83c\udfaf Phase 4: Intelligent Orchestration (Weeks 13-16)**",
      "description": "Concept: **\ud83c\udfaf Phase 4: Intelligent Orchestration (Weeks 13-16)**",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.342001,
      "updated_at": 1754957551.342001
    },
    "concept_1710": {
      "id": "concept_1710",
      "type": "concept",
      "name": "**\ud83d\udd0c Integration Points**",
      "description": "Concept: **\ud83d\udd0c Integration Points**",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.342428,
      "updated_at": 1754957551.342428
    },
    "concept_1711": {
      "id": "concept_1711",
      "type": "concept",
      "name": "**Multi-Source Integration**: Combine project, documentation, and personal context",
      "description": "Concept: **Multi-Source Integration**: Combine project, documentation, and personal context",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.34274,
      "updated_at": 1754957551.342741
    },
    "concept_1712": {
      "id": "concept_1712",
      "type": "concept",
      "name": "**Project Index Database**: File metadata and relationships",
      "description": "Concept: **Project Index Database**: File metadata and relationships",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.343164,
      "updated_at": 1754957551.343164
    },
    "concept_1713": {
      "id": "concept_1713",
      "type": "concept",
      "name": "**Context-Aware Responses**: Tailor responses to current project context",
      "description": "Concept: **Context-Aware Responses**: Tailor responses to current project context",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.34386,
      "updated_at": 1754957551.34386
    },
    "concept_1714": {
      "id": "concept_1714",
      "type": "concept",
      "name": "**\ud83d\udcca Phase 4 Success Metrics**",
      "description": "Concept: **\ud83d\udcca Phase 4 Success Metrics**",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.344296,
      "updated_at": 1754957551.344296
    },
    "concept_1715": {
      "id": "concept_1715",
      "type": "concept",
      "name": "**Learning Integration**: Continuous improvement over time",
      "description": "Concept: **Learning Integration**: Continuous improvement over time",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.344596,
      "updated_at": 1754957551.344596
    },
    "concept_1716": {
      "id": "concept_1716",
      "type": "concept",
      "name": "**Context Orchestration**: Seamless multi-source integration",
      "description": "Concept: **Context Orchestration**: Seamless multi-source integration",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.344897,
      "updated_at": 1754957551.344897
    },
    "concept_1717": {
      "id": "concept_1717",
      "type": "concept",
      "name": "**MCP Server**: Enhanced context provision",
      "description": "Concept: **MCP Server**: Enhanced context provision",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.345191,
      "updated_at": 1754957551.345191
    },
    "concept_1718": {
      "id": "concept_1718",
      "type": "concept",
      "name": "**Foundation Established**: Ready for advanced context enhancement",
      "description": "Concept: **Foundation Established**: Ready for advanced context enhancement",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.3454988,
      "updated_at": 1754957551.3454988
    },
    "concept_1719": {
      "id": "concept_1719",
      "type": "concept",
      "name": "**Week 11**: Workflow pattern analysis and behavior modeling",
      "description": "Concept: **Week 11**: Workflow pattern analysis and behavior modeling",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.3458009,
      "updated_at": 1754957551.3458009
    },
    "concept_1720": {
      "id": "concept_1720",
      "type": "concept",
      "name": "**Preference Learning Engine**",
      "description": "Concept: **Preference Learning Engine**",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.346084,
      "updated_at": 1754957551.346084
    },
    "concept_1721": {
      "id": "concept_1721",
      "type": "concept",
      "name": "**3.1 Coding Preference Learning**",
      "description": "Concept: **3.1 Coding Preference Learning**",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.34637,
      "updated_at": 1754957551.3463712
    },
    "concept_1722": {
      "id": "concept_1722",
      "type": "concept",
      "name": "**Mission Statement**",
      "description": "Concept: **Mission Statement**",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.34681,
      "updated_at": 1754957551.34681
    },
    "concept_1723": {
      "id": "concept_1723",
      "type": "concept",
      "name": "\ud83c\udfaf **Project Vision & Mission**",
      "description": "Concept: \ud83c\udfaf **Project Vision & Mission**",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.3472471,
      "updated_at": 1754957551.3472471
    },
    "concept_1724": {
      "id": "concept_1724",
      "type": "concept",
      "name": "\ud83d\udee0 **TECHNICAL REQUIREMENTS**",
      "description": "Concept: \ud83d\udee0 **TECHNICAL REQUIREMENTS**",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.347678,
      "updated_at": 1754957551.347678
    },
    "concept_1725": {
      "id": "concept_1725",
      "type": "concept",
      "name": "**Learning Integration**: Continuously improve based on your feedback",
      "description": "Concept: **Learning Integration**: Continuously improve based on your feedback",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.347988,
      "updated_at": 1754957551.347988
    },
    "concept_1726": {
      "id": "concept_1726",
      "type": "concept",
      "name": "**Contextual Memory**: Long-term memory of project context and decisions",
      "description": "Concept: **Contextual Memory**: Long-term memory of project context and decisions",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.348314,
      "updated_at": 1754957551.348314
    },
    "concept_1727": {
      "id": "concept_1727",
      "type": "concept",
      "name": "\ud83c\udfaf **IMMEDIATE NEXT STEPS**",
      "description": "Concept: \ud83c\udfaf **IMMEDIATE NEXT STEPS**",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.348743,
      "updated_at": 1754957551.348743
    },
    "concept_1728": {
      "id": "concept_1728",
      "type": "concept",
      "name": "**Predictive Assistance**: Anticipate what context you'll need",
      "description": "Concept: **Predictive Assistance**: Anticipate what context you'll need",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.3490539,
      "updated_at": 1754957551.3490539
    },
    "concept_1729": {
      "id": "concept_1729",
      "type": "concept",
      "name": "**File System Watchers**: Real-time change detection",
      "description": "Concept: **File System Watchers**: Real-time change detection",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.349355,
      "updated_at": 1754957551.349356
    },
    "concept_1730": {
      "id": "concept_1730",
      "type": "concept",
      "name": "**API Documentation**: Parse OpenAPI specs, JSDoc, Python docstrings",
      "description": "Concept: **API Documentation**: Parse OpenAPI specs, JSDoc, Python docstrings",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.349666,
      "updated_at": 1754957551.349666
    },
    "concept_1731": {
      "id": "concept_1731",
      "type": "concept",
      "name": "**\ud83c\udfaf Primary Goal**",
      "description": "Concept: **\ud83c\udfaf Primary Goal**",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.3500748,
      "updated_at": 1754957551.3500748
    },
    "concept_1732": {
      "id": "concept_1732",
      "type": "concept",
      "name": "\ud83d\udcda **PHASE 2: KNOWLEDGE INGESTION ENGINE**",
      "description": "Concept: \ud83d\udcda **PHASE 2: KNOWLEDGE INGESTION ENGINE**",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.350572,
      "updated_at": 1754957551.350572
    },
    "concept_1733": {
      "id": "concept_1733",
      "type": "concept",
      "name": "**Build System Recognition**: Understand build tools, scripts, and processes",
      "description": "Concept: **Build System Recognition**: Understand build tools, scripts, and processes",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.350904,
      "updated_at": 1754957551.350904
    },
    "concept_1734": {
      "id": "concept_1734",
      "type": "concept",
      "name": "**\ud83c\udfaf Phase 1: Project Intelligence (Weeks 1-4)**",
      "description": "Concept: **\ud83c\udfaf Phase 1: Project Intelligence (Weeks 1-4)**",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.351499,
      "updated_at": 1754957551.351499
    },
    "concept_1735": {
      "id": "concept_1735",
      "type": "concept",
      "name": "**Version Control Integration**: Git history and branch context",
      "description": "Concept: **Version Control Integration**: Git history and branch context",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.3518112,
      "updated_at": 1754957551.3518112
    },
    "concept_1736": {
      "id": "concept_1736",
      "type": "concept",
      "name": "**Integration Points**: How should this integrate with our existing MCP tools?",
      "description": "Concept: **Integration Points**: How should this integrate with our existing MCP tools?",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.352124,
      "updated_at": 1754957551.352124
    },
    "concept_1737": {
      "id": "concept_1737",
      "type": "concept",
      "name": "**2.1 Documentation Parser**",
      "description": "Concept: **2.1 Documentation Parser**",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.35241,
      "updated_at": 1754957551.35241
    },
    "concept_1738": {
      "id": "concept_1738",
      "type": "concept",
      "name": "**\ud83d\udd27 Development Tools**",
      "description": "Concept: **\ud83d\udd27 Development Tools**",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.352853,
      "updated_at": 1754957551.352853
    },
    "concept_1739": {
      "id": "concept_1739",
      "type": "concept",
      "name": "**Semantic Relationships**: Build connections between concepts, patterns, and implementations",
      "description": "Concept: **Semantic Relationships**: Build connections between concepts, patterns, and implementations",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.3532858,
      "updated_at": 1754957551.3532858
    },
    "concept_1740": {
      "id": "concept_1740",
      "type": "concept",
      "name": "**FastAPI**: API development and integration",
      "description": "Concept: **FastAPI**: API development and integration",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.3536682,
      "updated_at": 1754957551.3536682
    },
    "concept_1741": {
      "id": "concept_1741",
      "type": "concept",
      "name": "**Problem Evolution**: Track how problems and solutions evolve",
      "description": "Concept: **Problem Evolution**: Track how problems and solutions evolve",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.3539898,
      "updated_at": 1754957551.3539898
    },
    "concept_1742": {
      "id": "concept_1742",
      "type": "concept",
      "name": "**Works across projects** - applies learnings and patterns universally",
      "description": "Concept: **Works across projects** - applies learnings and patterns universally",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.3543081,
      "updated_at": 1754957551.3543081
    },
    "concept_1743": {
      "id": "concept_1743",
      "type": "concept",
      "name": "**Week 16**: Advanced context features and system optimization",
      "description": "Concept: **Week 16**: Advanced context features and system optimization",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.354611,
      "updated_at": 1754957551.354611
    },
    "concept_1744": {
      "id": "concept_1744",
      "type": "concept",
      "name": "**Preference Learning**: 80%+ accuracy in style recognition",
      "description": "Concept: **Preference Learning**: 80%+ accuracy in style recognition",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.354918,
      "updated_at": 1754957551.354918
    },
    "concept_1745": {
      "id": "concept_1745",
      "type": "concept",
      "name": "#### **Index Storage**",
      "description": "Concept: #### **Index Storage**",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.355204,
      "updated_at": 1754957551.355204
    },
    "concept_1746": {
      "id": "concept_1746",
      "type": "concept",
      "name": "**Clean Architecture**: Human brain-inspired cognitive domains",
      "description": "Concept: **Clean Architecture**: Human brain-inspired cognitive domains",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.3555079,
      "updated_at": 1754957551.3555079
    },
    "concept_1747": {
      "id": "concept_1747",
      "type": "concept",
      "name": "**Tool Consolidation**: Reduced from 48 to 6 organized cognitive tools",
      "description": "Concept: **Tool Consolidation**: Reduced from 48 to 6 organized cognitive tools",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.35582,
      "updated_at": 1754957551.35582
    },
    "concept_1748": {
      "id": "concept_1748",
      "type": "concept",
      "name": "\ud83c\udf1f **VISION FOR THE FUTURE**",
      "description": "Concept: \ud83c\udf1f **VISION FOR THE FUTURE**",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.35625,
      "updated_at": 1754957551.35625
    },
    "concept_1749": {
      "id": "concept_1749",
      "type": "concept",
      "name": "**Knowledge Evolution**: Track how understanding evolves over time",
      "description": "Concept: **Knowledge Evolution**: Track how understanding evolves over time",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.356639,
      "updated_at": 1754957551.356652
    },
    "concept_1750": {
      "id": "concept_1750",
      "type": "concept",
      "name": "**Temporal Context**: Remember what you were working on when",
      "description": "Concept: **Temporal Context**: Remember what you were working on when",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.356997,
      "updated_at": 1754957551.356997
    },
    "concept_1751": {
      "id": "concept_1751",
      "type": "concept",
      "name": "**Predictive Assistance**: Anticipate questions and provide answers proactively",
      "description": "Concept: **Predictive Assistance**: Anticipate questions and provide answers proactively",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.357321,
      "updated_at": 1754957551.357321
    },
    "concept_1752": {
      "id": "concept_1752",
      "type": "concept",
      "name": "**Documentation Processor**",
      "description": "Concept: **Documentation Processor**",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.3576121,
      "updated_at": 1754957551.3576121
    },
    "concept_1753": {
      "id": "concept_1753",
      "type": "concept",
      "name": "**Personalized Suggestions**: Tailor recommendations to your style",
      "description": "Concept: **Personalized Suggestions**: Tailor recommendations to your style",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.3579361,
      "updated_at": 1754957551.3579361
    },
    "concept_1754": {
      "id": "concept_1754",
      "type": "concept",
      "name": "**3.2 Workflow Pattern Recognition**",
      "description": "Concept: **3.2 Workflow Pattern Recognition**",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.3582342,
      "updated_at": 1754957551.3582342
    },
    "concept_1755": {
      "id": "concept_1755",
      "type": "concept",
      "name": "**Week 12**: Initial context injection and personalization",
      "description": "Concept: **Week 12**: Initial context injection and personalization",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.3585558,
      "updated_at": 1754957551.3585558
    },
    "concept_1756": {
      "id": "concept_1756",
      "type": "concept",
      "name": "**Dependency Detection**: 95%+ accuracy",
      "description": "Concept: **Dependency Detection**: 95%+ accuracy",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.35885,
      "updated_at": 1754957551.35885
    },
    "concept_1757": {
      "id": "concept_1757",
      "type": "concept",
      "name": "**Query Response**: < 2 seconds for context retrieval",
      "description": "Concept: **Query Response**: < 2 seconds for context retrieval",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.359175,
      "updated_at": 1754957551.359175
    },
    "concept_1758": {
      "id": "concept_1758",
      "type": "concept",
      "name": "**Zero Functionality Loss**: 100% of original capabilities preserved",
      "description": "Concept: **Zero Functionality Loss**: 100% of original capabilities preserved",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.359488,
      "updated_at": 1754957551.359488
    },
    "concept_1759": {
      "id": "concept_1759",
      "type": "concept",
      "name": "**Contextual Linking**: Connect documentation to actual code",
      "description": "Concept: **Contextual Linking**: Connect documentation to actual code",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.3597991,
      "updated_at": 1754957551.3597991
    },
    "concept_1760": {
      "id": "concept_1760",
      "type": "concept",
      "name": "**4.1 Context Orchestrator**",
      "description": "Concept: **4.1 Context Orchestrator**",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.360254,
      "updated_at": 1754957551.360254
    },
    "concept_1761": {
      "id": "concept_1761",
      "type": "concept",
      "name": "**Contextual Synthesis**: Combine multiple context sources intelligently",
      "description": "Concept: **Contextual Synthesis**: Combine multiple context sources intelligently",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.3605702,
      "updated_at": 1754957551.3605702
    },
    "concept_1762": {
      "id": "concept_1762",
      "type": "concept",
      "name": "---\n\n## \ud83c\udfa8 **PHASE 3: PERSONALIZATION & BEHAVIOR INJECTION**\n\n### **\ud83c\udfaf Primary Goal**\n\nLearn your personal coding preferences, workflow patterns, and automatically inject relevant context.\n\n### **\ud83d\udccb Core Features to Implement**\n\n#### **3.1 Coding Preference Learning**\n\n- **Style Recognition**: Learn your naming conventions, code organization, and patterns\n- **Architectural Decisions**: Understand why you choose certain patterns\n- **Library Preferences**: Track your favorite tools and frameworks\n- **Code Quality Standards**: Learn your testing, documentation, and review preferences\n\n#### **3.2 Workflow Pattern Recognition**\n\n- **Problem-Solving Approaches**: How you debug, test, and iterate\n- **Development Workflow**: Your typical development process and preferences\n- **Context Switching**: How you move between different project areas\n- **Learning Patterns**: How you approach new technologies and concepts\n\n#### **3.3 Intelligent Context Injection**\n\n- **Proactive Context Provision**: Provide relevant context before you ask\n- **Predictive Assistance**: Anticipate what context you'll need\n- **Personalized Suggestions**: Tailor recommendations to your style\n- **Workflow Optimization**: Suggest improvements based on your patterns\n\n### **\ud83d\udd27 Technical Implementation**\n\n#### **Preference Learning Engine**",
      "description": "Concept: ---\n\n## \ud83c\udfa8 **PHASE 3: PERSONALIZATION & BEHAVIOR INJECTION**\n\n### **\ud83c\udfaf Primary Goal**\n\nLearn your personal coding preferences, workflow patterns, and automatically inject relevant context.\n\n### **\ud83d\udccb Core Features to Implement**\n\n#### **3.1 Coding Preference Learning**\n\n- **Style Recognition**: Learn your naming conventions, code organization, and patterns\n- **Architectural Decisions**: Understand why you choose certain patterns\n- **Library Preferences**: Track your favorite tools and frameworks\n- **Code Quality Standards**: Learn your testing, documentation, and review preferences\n\n#### **3.2 Workflow Pattern Recognition**\n\n- **Problem-Solving Approaches**: How you debug, test, and iterate\n- **Development Workflow**: Your typical development process and preferences\n- **Context Switching**: How you move between different project areas\n- **Learning Patterns**: How you approach new technologies and concepts\n\n#### **3.3 Intelligent Context Injection**\n\n- **Proactive Context Provision**: Provide relevant context before you ask\n- **Predictive Assistance**: Anticipate what context you'll need\n- **Personalized Suggestions**: Tailor recommendations to your style\n- **Workflow Optimization**: Suggest improvements based on your patterns\n\n### **\ud83d\udd27 Technical Implementation**\n\n#### **Preference Learning Engine**",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.367821,
      "updated_at": 1754957551.367821
    },
    "concept_1763": {
      "id": "concept_1763",
      "type": "concept",
      "name": "\ud83d\udcc5 **IMPLEMENTATION TIMELINE**",
      "description": "Concept: \ud83d\udcc5 **IMPLEMENTATION TIMELINE**",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.368296,
      "updated_at": 1754957551.368296
    },
    "concept_1764": {
      "id": "concept_1764",
      "type": "concept",
      "name": "**Style Recognition**: Learn your naming conventions, code organization, and patterns",
      "description": "Concept: **Style Recognition**: Learn your naming conventions, code organization, and patterns",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.368628,
      "updated_at": 1754957551.368628
    },
    "concept_1765": {
      "id": "concept_1765",
      "type": "concept",
      "name": "**Advanced AI Integration**: Leverage LLMs for deeper code understanding",
      "description": "Concept: **Advanced AI Integration**: Leverage LLMs for deeper code understanding",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.368947,
      "updated_at": 1754957551.368947
    },
    "concept_1766": {
      "id": "concept_1766",
      "type": "concept",
      "name": "**\ud83d\udd27 Technical Implementation**",
      "description": "Concept: **\ud83d\udd27 Technical Implementation**",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.369396,
      "updated_at": 1754957551.369396
    },
    "concept_1767": {
      "id": "concept_1767",
      "type": "concept",
      "name": "**Update Frequency**: How often should we re-scan for changes?",
      "description": "Concept: **Update Frequency**: How often should we re-scan for changes?",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.3697112,
      "updated_at": 1754957551.3697112
    },
    "concept_1768": {
      "id": "concept_1768",
      "type": "concept",
      "name": "**Context Injection**: 70%+ relevance in proactive suggestions",
      "description": "Concept: **Context Injection**: 70%+ relevance in proactive suggestions",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.3700218,
      "updated_at": 1754957551.3700218
    },
    "concept_1769": {
      "id": "concept_1769",
      "type": "concept",
      "name": "**Current State (Phase 0 - COMPLETED \u2705)**",
      "description": "Concept: **Current State (Phase 0 - COMPLETED \u2705)**",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.3705149,
      "updated_at": 1754957551.3705149
    },
    "concept_1770": {
      "id": "concept_1770",
      "type": "concept",
      "name": "**Git Hooks**: Commit and branch context",
      "description": "Concept: **Git Hooks**: Commit and branch context",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.3708212,
      "updated_at": 1754957551.3708212
    },
    "concept_1771": {
      "id": "concept_1771",
      "type": "concept",
      "name": "### **\ud83d\udcca Success Metrics**\n\n- **Scanning Speed**: < 5 seconds for typical projects\n- **Accuracy**: 95%+ correct dependency detection\n- **Memory Usage**: < 100MB for large projects\n- **Update Frequency**: Real-time change detection\n\n---\n\n## \ud83d\udcda **PHASE 2: KNOWLEDGE INGESTION ENGINE**\n\n### **\ud83c\udfaf Primary Goal**\n\nProcess and understand documentation, code comments, and external references to build a comprehensive knowledge base.\n\n### **\ud83d\udccb Core Features to Implement**\n\n#### **2.1 Documentation Parser**\n\n- **README Processing**: Extract project descriptions, setup instructions, usage examples\n- **API Documentation**: Parse OpenAPI specs, JSDoc, Python docstrings\n- **Code Comments**: Extract inline documentation and explanations\n- **External References**: Process links, citations, and related resources\n\n#### **2.2 Knowledge Graph Construction**\n\n- **Semantic Relationships**: Build connections between concepts, patterns, and implementations\n- **Contextual Linking**: Connect documentation to actual code\n- **Cross-Reference Mapping**: Link related concepts across different parts of the project\n- **Knowledge Evolution**: Track how understanding evolves over time\n\n#### **2.3 Contextual Memory Enhancement**\n\n- **Project-Specific Context**: Store context tied to specific files and modules\n- **Temporal Context**: Remember what you were working on when\n- **Problem-Solution Mapping**: Link problems to their solutions and context\n- **Learning Pattern Recognition**: Identify how you approach different types of challenges\n\n### **\ud83d\udd27 Technical Implementation**\n\n#### **Documentation Processor**",
      "description": "Concept: ### **\ud83d\udcca Success Metrics**\n\n- **Scanning Speed**: < 5 seconds for typical projects\n- **Accuracy**: 95%+ correct dependency detection\n- **Memory Usage**: < 100MB for large projects\n- **Update Frequency**: Real-time change detection\n\n---\n\n## \ud83d\udcda **PHASE 2: KNOWLEDGE INGESTION ENGINE**\n\n### **\ud83c\udfaf Primary Goal**\n\nProcess and understand documentation, code comments, and external references to build a comprehensive knowledge base.\n\n### **\ud83d\udccb Core Features to Implement**\n\n#### **2.1 Documentation Parser**\n\n- **README Processing**: Extract project descriptions, setup instructions, usage examples\n- **API Documentation**: Parse OpenAPI specs, JSDoc, Python docstrings\n- **Code Comments**: Extract inline documentation and explanations\n- **External References**: Process links, citations, and related resources\n\n#### **2.2 Knowledge Graph Construction**\n\n- **Semantic Relationships**: Build connections between concepts, patterns, and implementations\n- **Contextual Linking**: Connect documentation to actual code\n- **Cross-Reference Mapping**: Link related concepts across different parts of the project\n- **Knowledge Evolution**: Track how understanding evolves over time\n\n#### **2.3 Contextual Memory Enhancement**\n\n- **Project-Specific Context**: Store context tied to specific files and modules\n- **Temporal Context**: Remember what you were working on when\n- **Problem-Solution Mapping**: Link problems to their solutions and context\n- **Learning Pattern Recognition**: Identify how you approach different types of challenges\n\n### **\ud83d\udd27 Technical Implementation**\n\n#### **Documentation Processor**",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.379253,
      "updated_at": 1754957551.379253
    },
    "concept_1772": {
      "id": "concept_1772",
      "type": "concept",
      "name": "**Pattern Identification**: Learn your coding style and preferences",
      "description": "Concept: **Pattern Identification**: Learn your coding style and preferences",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.3796139,
      "updated_at": 1754957551.379615
    },
    "concept_1773": {
      "id": "concept_1773",
      "type": "concept",
      "name": "\ud83c\udfaf **SUCCESS CRITERIA**",
      "description": "Concept: \ud83c\udfaf **SUCCESS CRITERIA**",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.3800478,
      "updated_at": 1754957551.3800478
    },
    "concept_1774": {
      "id": "concept_1774",
      "type": "concept",
      "name": "**Code Quality Standards**: Learn your testing, documentation, and review preferences",
      "description": "Concept: **Code Quality Standards**: Learn your testing, documentation, and review preferences",
      "source": "ROADMAP.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "ROADMAP.md"
        ]
      },
      "created_at": 1754957551.38039,
      "updated_at": 1754957551.38039
    },
    "doc_1775": {
      "id": "doc_1775",
      "type": "document",
      "name": "Tools_And_Workflows",
      "description": "Document: TOOLS_AND_WORKFLOWS.md",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.9,
      "metadata": {
        "file_size": 12339,
        "lines": 528,
        "language": "unknown",
        "last_modified": 1754941411.3743613
      },
      "created_at": 1754957551.384037,
      "updated_at": 1754957551.384037
    },
    "concept_1776": {
      "id": "concept_1776",
      "type": "concept",
      "name": "Clean up unnecessary data regularly",
      "description": "Concept: Clean up unnecessary data regularly",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.384361,
      "updated_at": 1754957551.384361
    },
    "concept_1777": {
      "id": "concept_1777",
      "type": "concept",
      "name": "Leverage cognitive tools for complex thinking tasks",
      "description": "Concept: Leverage cognitive tools for complex thinking tasks",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.3846982,
      "updated_at": 1754957551.3846982
    },
    "concept_1778": {
      "id": "concept_1778",
      "type": "concept",
      "name": "### Problem Solving",
      "description": "Concept: ### Problem Solving",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.3850188,
      "updated_at": 1754957551.3850188
    },
    "concept_1779": {
      "id": "concept_1779",
      "type": "concept",
      "name": "18. **get_resource_usage**",
      "description": "Concept: 18. **get_resource_usage**",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.385333,
      "updated_at": 1754957551.385333
    },
    "concept_1780": {
      "id": "concept_1780",
      "type": "concept",
      "name": "35. **test_llm_connection**",
      "description": "Concept: 35. **test_llm_connection**",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.385665,
      "updated_at": 1754957551.385665
    },
    "concept_1781": {
      "id": "concept_1781",
      "type": "concept",
      "name": "\ud83e\udde0 Core Brain Interface Tools",
      "description": "Concept: \ud83e\udde0 Core Brain Interface Tools",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.386158,
      "updated_at": 1754957551.386158
    },
    "concept_1782": {
      "id": "concept_1782",
      "type": "concept",
      "name": "1. **brain_info**",
      "description": "Concept: 1. **brain_info**",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.386484,
      "updated_at": 1754957551.386484
    },
    "concept_1783": {
      "id": "concept_1783",
      "type": "concept",
      "name": "**Use Case**: Learning, experience storage, important information retention\n\n### 23. **recall**\n\n**Purpose**: Search through memories and past experiences\n**Workflow**:",
      "description": "Concept: **Use Case**: Learning, experience storage, important information retention\n\n### 23. **recall**\n\n**Purpose**: Search through memories and past experiences\n**Workflow**:",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.386983,
      "updated_at": 1754957551.386983
    },
    "concept_1784": {
      "id": "concept_1784",
      "type": "concept",
      "name": "Request \u2192 Context Analysis \u2192 Relevant Info Selection \u2192 Context Injection",
      "description": "Concept: Request \u2192 Context Analysis \u2192 Relevant Info Selection \u2192 Context Injection",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.387691,
      "updated_at": 1754957551.387691
    },
    "concept_1785": {
      "id": "concept_1785",
      "type": "concept",
      "name": "3. **Error Handling**",
      "description": "Concept: 3. **Error Handling**",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.388004,
      "updated_at": 1754957551.388004
    },
    "concept_1786": {
      "id": "concept_1786",
      "type": "concept",
      "name": "Request \u2192 Context Retrieval \u2192 User Info + History \u2192 Context Summary Return",
      "description": "Concept: Request \u2192 Context Retrieval \u2192 User Info + History \u2192 Context Summary Return",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.3887172,
      "updated_at": 1754957551.3887172
    },
    "concept_1787": {
      "id": "concept_1787",
      "type": "concept",
      "name": "**Parameters**:\n\n-",
      "description": "Concept: **Parameters**:\n\n-",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.3890188,
      "updated_at": 1754957551.3890188
    },
    "concept_1788": {
      "id": "concept_1788",
      "type": "concept",
      "name": "\ud83e\uddea Testing and Validation Tools",
      "description": "Concept: \ud83e\uddea Testing and Validation Tools",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.3894882,
      "updated_at": 1754957551.389489
    },
    "concept_1789": {
      "id": "concept_1789",
      "type": "concept",
      "name": "4. **list_plugins**",
      "description": "Concept: 4. **list_plugins**",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.389833,
      "updated_at": 1754957551.389833
    },
    "concept_1790": {
      "id": "concept_1790",
      "type": "concept",
      "name": "Source + Lesson Type \u2192 Content Processing \u2192 Knowledge Extraction \u2192 Learning Confirmation",
      "description": "Concept: Source + Lesson Type \u2192 Content Processing \u2192 Knowledge Extraction \u2192 Learning Confirmation",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.390614,
      "updated_at": 1754957551.390614
    },
    "concept_1791": {
      "id": "concept_1791",
      "type": "concept",
      "name": "Search Term + Limit \u2192 Function Call Search \u2192 Pattern Matching \u2192 Search Results",
      "description": "Concept: Search Term + Limit \u2192 Function Call Search \u2192 Pattern Matching \u2192 Search Results",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.391427,
      "updated_at": 1754957551.391427
    },
    "concept_1792": {
      "id": "concept_1792",
      "type": "concept",
      "name": "**Use Case**: System testing, validation, debugging\n\n### 37. **list_available_models**\n\n**Purpose**: List available LLM models from Ollama\n**Workflow**:",
      "description": "Concept: **Use Case**: System testing, validation, debugging\n\n### 37. **list_available_models**\n\n**Purpose**: List available LLM models from Ollama\n**Workflow**:",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.39185,
      "updated_at": 1754957551.39185
    },
    "concept_1793": {
      "id": "concept_1793",
      "type": "concept",
      "name": "Request \u2192 System Status Check \u2192 Statistics Collection \u2192 Status Report Return",
      "description": "Concept: Request \u2192 System Status Check \u2192 Statistics Collection \u2192 Status Report Return",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.392575,
      "updated_at": 1754957551.392576
    },
    "concept_1794": {
      "id": "concept_1794",
      "type": "concept",
      "name": "**Use Case**: Monitoring, health checks, performance analysis\n\n## \ud83e\udde0 Memory and Context Tools\n\n### 7. **store_memory**\n\n**Purpose**: Store information in persistent memory\n**Workflow**:",
      "description": "Concept: **Use Case**: Monitoring, health checks, performance analysis\n\n## \ud83e\udde0 Memory and Context Tools\n\n### 7. **store_memory**\n\n**Purpose**: Store information in persistent memory\n**Workflow**:",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.3939772,
      "updated_at": 1754957551.3939772
    },
    "concept_1795": {
      "id": "concept_1795",
      "type": "concept",
      "name": "Request \u2192 Statistics Collection \u2192 Metric Analysis \u2192 Performance Report",
      "description": "Concept: Request \u2192 Statistics Collection \u2192 Metric Analysis \u2192 Performance Report",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.3947232,
      "updated_at": 1754957551.3947232
    },
    "concept_1796": {
      "id": "concept_1796",
      "type": "concept",
      "name": "`value`: Information to store",
      "description": "Concept: `value`: Information to store",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.395056,
      "updated_at": 1754957551.395056
    },
    "concept_1797": {
      "id": "concept_1797",
      "type": "concept",
      "name": "Count Parameter \u2192 Context Retrieval \u2192 Summary Generation \u2192 Context Summary Return",
      "description": "Concept: Count Parameter \u2192 Context Retrieval \u2192 Summary Generation \u2192 Context Summary Return",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.395797,
      "updated_at": 1754957551.395797
    },
    "concept_1798": {
      "id": "concept_1798",
      "type": "concept",
      "name": "**Use Case**: Privacy, fresh start, debugging\n\n## \ud83d\udcc1 File Operations Tools\n\n### 13. **read_file**\n\n**Purpose**: Read the contents of a file\n**Workflow**:",
      "description": "Concept: **Use Case**: Privacy, fresh start, debugging\n\n## \ud83d\udcc1 File Operations Tools\n\n### 13. **read_file**\n\n**Purpose**: Read the contents of a file\n**Workflow**:",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.3969831,
      "updated_at": 1754957551.3969831
    },
    "concept_1799": {
      "id": "concept_1799",
      "type": "concept",
      "name": "`tags`: Optional categorization tags",
      "description": "Concept: `tags`: Optional categorization tags",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.397305,
      "updated_at": 1754957551.397305
    },
    "concept_1800": {
      "id": "concept_1800",
      "type": "concept",
      "name": "27. **dream**",
      "description": "Concept: 27. **dream**",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.397612,
      "updated_at": 1754957551.397612
    },
    "concept_1801": {
      "id": "concept_1801",
      "type": "concept",
      "name": "**Use Case**: Initial setup, debugging, understanding system capabilities\n\n### 2. **ai_chat_with_memory**\n\n**Purpose**: Enhanced AI chat with persistent memory and context awareness\n**Workflow**:",
      "description": "Concept: **Use Case**: Initial setup, debugging, understanding system capabilities\n\n### 2. **ai_chat_with_memory**\n\n**Purpose**: Enhanced AI chat with persistent memory and context awareness\n**Workflow**:",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.398061,
      "updated_at": 1754957551.398062
    },
    "concept_1802": {
      "id": "concept_1802",
      "type": "concept",
      "name": "Key \u2192 Memory Lookup \u2192 Value Retrieval \u2192 Return Stored Information",
      "description": "Concept: Key \u2192 Memory Lookup \u2192 Value Retrieval \u2192 Return Stored Information",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.3989062,
      "updated_at": 1754957551.3989062
    },
    "concept_1803": {
      "id": "concept_1803",
      "type": "concept",
      "name": "**Use Case**: Conversation history, learning from interactions, context building\n\n### 30. **cursor_auto_inject_context**\n\n**Purpose**: Auto-inject relevant context for new Cursor conversations\n**Workflow**:",
      "description": "Concept: **Use Case**: Conversation history, learning from interactions, context building\n\n### 30. **cursor_auto_inject_context**\n\n**Purpose**: Auto-inject relevant context for new Cursor conversations\n**Workflow**:",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.399431,
      "updated_at": 1754957551.399431
    },
    "concept_1804": {
      "id": "concept_1804",
      "type": "concept",
      "name": "\ud83d\udcc1 File Operations Tools",
      "description": "Concept: \ud83d\udcc1 File Operations Tools",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.399887,
      "updated_at": 1754957551.399887
    },
    "concept_1805": {
      "id": "concept_1805",
      "type": "concept",
      "name": "**Use Case**: Reading configuration files, documents, code files\n\n### 14. **write_file**\n\n**Purpose**: Write content to a file\n**Workflow**:",
      "description": "Concept: **Use Case**: Reading configuration files, documents, code files\n\n### 14. **write_file**\n\n**Purpose**: Write content to a file\n**Workflow**:",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.400279,
      "updated_at": 1754957551.40028
    },
    "concept_1806": {
      "id": "concept_1806",
      "type": "concept",
      "name": "### Memory-Enhanced Workflow",
      "description": "Concept: ### Memory-Enhanced Workflow",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.4005902,
      "updated_at": 1754957551.4005902
    },
    "concept_1807": {
      "id": "concept_1807",
      "type": "concept",
      "name": "**Use Case**: System validation, troubleshooting, health checks\n\n### 36. **test_memory_system**\n\n**Purpose**: Test the memory system with sample conversations\n**Workflow**:",
      "description": "Concept: **Use Case**: System validation, troubleshooting, health checks\n\n### 36. **test_memory_system**\n\n**Purpose**: Test the memory system with sample conversations\n**Workflow**:",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.4009972,
      "updated_at": 1754957551.4009972
    },
    "concept_1808": {
      "id": "concept_1808",
      "type": "concept",
      "name": "File Management",
      "description": "Concept: File Management",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.401296,
      "updated_at": 1754957551.401296
    },
    "concept_1809": {
      "id": "concept_1809",
      "type": "concept",
      "name": "Request \u2192 Model Discovery \u2192 Model List Generation \u2192 Available Models Return",
      "description": "Concept: Request \u2192 Model Discovery \u2192 Model List Generation \u2192 Available Models Return",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.402017,
      "updated_at": 1754957551.402017
    },
    "concept_1810": {
      "id": "concept_1810",
      "type": "concept",
      "name": "**Use Case**: System health checks, troubleshooting, performance monitoring\n\n## \ud83e\uddea Testing and Validation Tools\n\n### 35. **test_llm_connection**\n\n**Purpose**: Test connection to the Ollama LLM service\n**Workflow**:",
      "description": "Concept: **Use Case**: System health checks, troubleshooting, performance monitoring\n\n## \ud83e\uddea Testing and Validation Tools\n\n### 35. **test_llm_connection**\n\n**Purpose**: Test connection to the Ollama LLM service\n**Workflow**:",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.403546,
      "updated_at": 1754957551.403546
    },
    "concept_1811": {
      "id": "concept_1811",
      "type": "concept",
      "name": "Provide clear, specific parameters",
      "description": "Concept: Provide clear, specific parameters",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.4038742,
      "updated_at": 1754957551.4038742
    },
    "concept_1812": {
      "id": "concept_1812",
      "type": "concept",
      "name": "## \ud83c\udfaf Best Practices for Tool Usage\n\n### 1. **Tool Selection**\n\n- Choose the most specific tool for your task\n- Use memory tools for persistent information\n- Leverage cognitive tools for complex thinking tasks\n\n### 2. **Parameter Optimization**\n\n- Provide clear, specific parameters\n- Use appropriate data types\n- Include relevant context when available\n\n### 3. **Error Handling**\n\n- Always check for errors in tool responses\n- Implement fallback strategies\n- Log errors for debugging\n\n### 4. **Performance Considerations**\n\n- Use lightweight tools for simple tasks\n- Batch operations when possible\n- Monitor tool execution times\n\n### 5. **Memory Management**\n\n- Store important information persistently\n- Use tags for organization\n- Clean up unnecessary data regularly\n\n## \ud83d\ude80 Advanced Tool Combinations\n\n### Conversation Enhancement",
      "description": "Concept: ## \ud83c\udfaf Best Practices for Tool Usage\n\n### 1. **Tool Selection**\n\n- Choose the most specific tool for your task\n- Use memory tools for persistent information\n- Leverage cognitive tools for complex thinking tasks\n\n### 2. **Parameter Optimization**\n\n- Provide clear, specific parameters\n- Use appropriate data types\n- Include relevant context when available\n\n### 3. **Error Handling**\n\n- Always check for errors in tool responses\n- Implement fallback strategies\n- Log errors for debugging\n\n### 4. **Performance Considerations**\n\n- Use lightweight tools for simple tasks\n- Batch operations when possible\n- Monitor tool execution times\n\n### 5. **Memory Management**\n\n- Store important information persistently\n- Use tags for organization\n- Clean up unnecessary data regularly\n\n## \ud83d\ude80 Advanced Tool Combinations\n\n### Conversation Enhancement",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.4086778,
      "updated_at": 1754957551.4086778
    },
    "concept_1813": {
      "id": "concept_1813",
      "type": "concept",
      "name": "1. Tool Execution \u2192 2. Error Detection \u2192 3. Error Logging \u2192 4. Fallback Response \u2192 5. User Notification",
      "description": "Concept: 1. Tool Execution \u2192 2. Error Detection \u2192 3. Error Logging \u2192 4. Fallback Response \u2192 5. User Notification",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.409576,
      "updated_at": 1754957551.409576
    },
    "concept_1814": {
      "id": "concept_1814",
      "type": "concept",
      "name": "Performance Monitoring Workflow",
      "description": "Concept: Performance Monitoring Workflow",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.40991,
      "updated_at": 1754957551.40991
    },
    "concept_1815": {
      "id": "concept_1815",
      "type": "concept",
      "name": "Topic \u2192 Self-Analysis \u2192 Pattern Recognition \u2192 Reflection Results",
      "description": "Concept: Topic \u2192 Self-Analysis \u2192 Pattern Recognition \u2192 Reflection Results",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.410613,
      "updated_at": 1754957551.410613
    },
    "concept_1816": {
      "id": "concept_1816",
      "type": "concept",
      "name": "21. **think**",
      "description": "Concept: 21. **think**",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.410929,
      "updated_at": 1754957551.410929
    },
    "concept_1817": {
      "id": "concept_1817",
      "type": "concept",
      "name": "31. **get_function_call_history**",
      "description": "Concept: 31. **get_function_call_history**",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.411264,
      "updated_at": 1754957551.411264
    },
    "concept_1818": {
      "id": "concept_1818",
      "type": "concept",
      "name": "4. **Performance Considerations**",
      "description": "Concept: 4. **Performance Considerations**",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.411603,
      "updated_at": 1754957551.411604
    },
    "concept_1819": {
      "id": "concept_1819",
      "type": "concept",
      "name": "11. **get_context_summary**",
      "description": "Concept: 11. **get_context_summary**",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.411978,
      "updated_at": 1754957551.411978
    },
    "concept_1820": {
      "id": "concept_1820",
      "type": "concept",
      "name": "**Use Case**: System diagnostics, environment understanding, troubleshooting\n\n### 18. **get_resource_usage**\n\n**Purpose**: Get current system resource usage\n**Workflow**:",
      "description": "Concept: **Use Case**: System diagnostics, environment understanding, troubleshooting\n\n### 18. **get_resource_usage**\n\n**Purpose**: Get current system resource usage\n**Workflow**:",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.41248,
      "updated_at": 1754957551.41248
    },
    "concept_1821": {
      "id": "concept_1821",
      "type": "concept",
      "name": "25. **consciousness_check**",
      "description": "Concept: 25. **consciousness_check**",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.4128199,
      "updated_at": 1754957551.4128199
    },
    "concept_1822": {
      "id": "concept_1822",
      "type": "concept",
      "name": "5. **Memory Management**",
      "description": "Concept: 5. **Memory Management**",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.413152,
      "updated_at": 1754957551.413152
    },
    "concept_1823": {
      "id": "concept_1823",
      "type": "concept",
      "name": "**Use Case**: Development, plugin updates, troubleshooting\n\n### 6. **server_status**\n\n**Purpose**: Get server status and statistics\n**Workflow**:",
      "description": "Concept: **Use Case**: Development, plugin updates, troubleshooting\n\n### 6. **server_status**\n\n**Purpose**: Get server status and statistics\n**Workflow**:",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.4135768,
      "updated_at": 1754957551.4135768
    },
    "concept_1824": {
      "id": "concept_1824",
      "type": "concept",
      "name": "14. **write_file**",
      "description": "Concept: 14. **write_file**",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.4139142,
      "updated_at": 1754957551.4139142
    },
    "concept_1825": {
      "id": "concept_1825",
      "type": "concept",
      "name": "**Use Case**: Performance monitoring, usage analytics, system optimization\n\n### 33. **search_function_calls**\n\n**Purpose**: Search function calls by content, context, or parameters\n**Workflow**:",
      "description": "Concept: **Use Case**: Performance monitoring, usage analytics, system optimization\n\n### 33. **search_function_calls**\n\n**Purpose**: Search function calls by content, context, or parameters\n**Workflow**:",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.414368,
      "updated_at": 1754957551.414368
    },
    "concept_1826": {
      "id": "concept_1826",
      "type": "concept",
      "name": "32. **get_session_statistics**",
      "description": "Concept: 32. **get_session_statistics**",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.41473,
      "updated_at": 1754957551.41473
    },
    "concept_1827": {
      "id": "concept_1827",
      "type": "concept",
      "name": ": Information to store\n-",
      "description": "Concept: : Information to store\n-",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.415122,
      "updated_at": 1754957551.415122
    },
    "concept_1828": {
      "id": "concept_1828",
      "type": "concept",
      "name": "### File Management",
      "description": "Concept: ### File Management",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.415456,
      "updated_at": 1754957551.415456
    },
    "concept_1829": {
      "id": "concept_1829",
      "type": "concept",
      "name": "Conversation Enhancement",
      "description": "Concept: Conversation Enhancement",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.415806,
      "updated_at": 1754957551.415807
    },
    "concept_1830": {
      "id": "concept_1830",
      "type": "concept",
      "name": "`ai_model_name`: AI model to use (default: \"assistant\")",
      "description": "Concept: `ai_model_name`: AI model to use (default: \"assistant\")",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.416172,
      "updated_at": 1754957551.416172
    },
    "concept_1831": {
      "id": "concept_1831",
      "type": "concept",
      "name": "Memory-Enhanced Workflow",
      "description": "Concept: Memory-Enhanced Workflow",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.4165199,
      "updated_at": 1754957551.4165199
    },
    "concept_1832": {
      "id": "concept_1832",
      "type": "concept",
      "name": "**Use Case**: Performance monitoring, capacity planning, system health checks\n\n### 19. **get_python_info**\n\n**Purpose**: Get Python interpreter information\n**Workflow**:",
      "description": "Concept: **Use Case**: Performance monitoring, capacity planning, system health checks\n\n### 19. **get_python_info**\n\n**Purpose**: Get Python interpreter information\n**Workflow**:",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.416947,
      "updated_at": 1754957551.416947
    },
    "concept_1833": {
      "id": "concept_1833",
      "type": "concept",
      "name": "System Monitoring",
      "description": "Concept: System Monitoring",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.4172668,
      "updated_at": 1754957551.4172668
    },
    "concept_1834": {
      "id": "concept_1834",
      "type": "concept",
      "name": ": Unique identifier for the memory\n-",
      "description": "Concept: : Unique identifier for the memory\n-",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.417595,
      "updated_at": 1754957551.417595
    },
    "concept_1835": {
      "id": "concept_1835",
      "type": "concept",
      "name": "Request \u2192 Plugin Registry Scan \u2192 Plugin List Generation \u2192 Return Plugin Details",
      "description": "Concept: Request \u2192 Plugin Registry Scan \u2192 Plugin List Generation \u2192 Return Plugin Details",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.418365,
      "updated_at": 1754957551.418365
    },
    "concept_1836": {
      "id": "concept_1836",
      "type": "concept",
      "name": "Include relevant context when available",
      "description": "Concept: Include relevant context when available",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.4187021,
      "updated_at": 1754957551.4187021
    },
    "concept_1837": {
      "id": "concept_1837",
      "type": "concept",
      "name": "Use tags for organization",
      "description": "Concept: Use tags for organization",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.4190562,
      "updated_at": 1754957551.4190562
    },
    "concept_1838": {
      "id": "concept_1838",
      "type": "concept",
      "name": "16. **file_exists**",
      "description": "Concept: 16. **file_exists**",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.419484,
      "updated_at": 1754957551.419484
    },
    "concept_1839": {
      "id": "concept_1839",
      "type": "concept",
      "name": "\ud83d\udd0c Plugin Management Tools",
      "description": "Concept: \ud83d\udd0c Plugin Management Tools",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.41999,
      "updated_at": 1754957551.41999
    },
    "concept_1840": {
      "id": "concept_1840",
      "type": "concept",
      "name": "Log errors for debugging",
      "description": "Concept: Log errors for debugging",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.4203231,
      "updated_at": 1754957551.4203231
    },
    "concept_1841": {
      "id": "concept_1841",
      "type": "concept",
      "name": "1. Tool Execution Start \u2192 2. Performance Metrics Collection \u2192 3. Tool Execution End \u2192 4. Metrics Storage \u2192 5. Performance Analysis",
      "description": "Concept: 1. Tool Execution Start \u2192 2. Performance Metrics Collection \u2192 3. Tool Execution End \u2192 4. Metrics Storage \u2192 5. Performance Analysis",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.421319,
      "updated_at": 1754957551.421319
    },
    "concept_1842": {
      "id": "concept_1842",
      "type": "concept",
      "name": "22. **remember**",
      "description": "Concept: 22. **remember**",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.421637,
      "updated_at": 1754957551.421637
    },
    "concept_1843": {
      "id": "concept_1843",
      "type": "concept",
      "name": "Store important information persistently",
      "description": "Concept: Store important information persistently",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.421959,
      "updated_at": 1754957551.421959
    },
    "concept_1844": {
      "id": "concept_1844",
      "type": "concept",
      "name": "Path \u2192 Existence Check \u2192 Boolean Result Return",
      "description": "Concept: Path \u2192 Existence Check \u2192 Boolean Result Return",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.422534,
      "updated_at": 1754957551.422534
    },
    "concept_1845": {
      "id": "concept_1845",
      "type": "concept",
      "name": "Use memory tools for persistent information",
      "description": "Concept: Use memory tools for persistent information",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.422863,
      "updated_at": 1754957551.422863
    },
    "concept_1846": {
      "id": "concept_1846",
      "type": "concept",
      "name": "8. **retrieve_memory**",
      "description": "Concept: 8. **retrieve_memory**",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.423187,
      "updated_at": 1754957551.423187
    },
    "concept_1847": {
      "id": "concept_1847",
      "type": "concept",
      "name": "13. **read_file**",
      "description": "Concept: 13. **read_file**",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.4235039,
      "updated_at": 1754957551.4235039
    },
    "concept_1848": {
      "id": "concept_1848",
      "type": "concept",
      "name": "**Use Case**: System administration, debugging, understanding available functionality\n\n### 5. **reload_plugin**\n\n**Purpose**: Reload a specific plugin by name\n**Workflow**:",
      "description": "Concept: **Use Case**: System administration, debugging, understanding available functionality\n\n### 5. **reload_plugin**\n\n**Purpose**: Reload a specific plugin by name\n**Workflow**:",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.423938,
      "updated_at": 1754957551.423938
    },
    "concept_1849": {
      "id": "concept_1849",
      "type": "concept",
      "name": "\ud83d\udd04 Tool Workflow Patterns",
      "description": "Concept: \ud83d\udd04 Tool Workflow Patterns",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.424395,
      "updated_at": 1754957551.424395
    },
    "concept_1850": {
      "id": "concept_1850",
      "type": "concept",
      "name": "User Message + Assistant Response \u2192 Conversation Storage \u2192 Learning Update \u2192 Tracking Confirmation",
      "description": "Concept: User Message + Assistant Response \u2192 Conversation Storage \u2192 Learning Update \u2192 Tracking Confirmation",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.425299,
      "updated_at": 1754957551.425299
    },
    "concept_1851": {
      "id": "concept_1851",
      "type": "concept",
      "name": "**Use Case**: Deep thinking, problem solving, context-aware responses\n\n### 22. **remember**\n\n**Purpose**: Store important information with emotional weight\n**Workflow**:",
      "description": "Concept: **Use Case**: Deep thinking, problem solving, context-aware responses\n\n### 22. **remember**\n\n**Purpose**: Store important information with emotional weight\n**Workflow**:",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.425758,
      "updated_at": 1754957551.425758
    },
    "concept_1852": {
      "id": "concept_1852",
      "type": "concept",
      "name": "**Use Case**: Knowledge retrieval, experience recall, context building\n\n### 24. **reflect**\n\n**Purpose**: Engage in self-reflection and metacognition\n**Workflow**:",
      "description": "Concept: **Use Case**: Knowledge retrieval, experience recall, context building\n\n### 24. **reflect**\n\n**Purpose**: Engage in self-reflection and metacognition\n**Workflow**:",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.426191,
      "updated_at": 1754957551.426191
    },
    "concept_1853": {
      "id": "concept_1853",
      "type": "concept",
      "name": "Request \u2192 Environment Scan \u2192 Variable Filtering \u2192 Safe Variables Return",
      "description": "Concept: Request \u2192 Environment Scan \u2192 Variable Filtering \u2192 Safe Variables Return",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.4269598,
      "updated_at": 1754957551.4269598
    },
    "concept_1854": {
      "id": "concept_1854",
      "type": "concept",
      "name": "Information + Importance \u2192 Emotional Tagging \u2192 Memory Storage \u2192 Confirmation",
      "description": "Concept: Information + Importance \u2192 Emotional Tagging \u2192 Memory Storage \u2192 Confirmation",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.427711,
      "updated_at": 1754957551.427711
    },
    "concept_1855": {
      "id": "concept_1855",
      "type": "concept",
      "name": "1. Tool Selection \u2192 2. Parameter Preparation \u2192 3. Tool Execution \u2192 4. Result Processing \u2192 5. Action/Response",
      "description": "Concept: 1. Tool Selection \u2192 2. Parameter Preparation \u2192 3. Tool Execution \u2192 4. Result Processing \u2192 5. Action/Response",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.428588,
      "updated_at": 1754957551.428588
    },
    "concept_1856": {
      "id": "concept_1856",
      "type": "concept",
      "name": "3. **quick_memory_chat**",
      "description": "Concept: 3. **quick_memory_chat**",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.4289181,
      "updated_at": 1754957551.4289181
    },
    "concept_1857": {
      "id": "concept_1857",
      "type": "concept",
      "name": "24. **reflect**",
      "description": "Concept: 24. **reflect**",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.429229,
      "updated_at": 1754957551.429229
    },
    "concept_1858": {
      "id": "concept_1858",
      "type": "concept",
      "name": "Request \u2192 Connection Test \u2192 Service Validation \u2192 Connection Status Return",
      "description": "Concept: Request \u2192 Connection Test \u2192 Service Validation \u2192 Connection Status Return",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.429954,
      "updated_at": 1754957551.429954
    },
    "concept_1859": {
      "id": "concept_1859",
      "type": "concept",
      "name": "**Use Case**: Simple questions, quick responses, when full memory context isn't needed\n\n## \ud83d\udd0c Plugin Management Tools\n\n### 4. **list_plugins**\n\n**Purpose**: List all loaded plugins and their information\n**Workflow**:",
      "description": "Concept: **Use Case**: Simple questions, quick responses, when full memory context isn't needed\n\n## \ud83d\udd0c Plugin Management Tools\n\n### 4. **list_plugins**\n\n**Purpose**: List all loaded plugins and their information\n**Workflow**:",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.43152,
      "updated_at": 1754957551.43152
    },
    "concept_1860": {
      "id": "concept_1860",
      "type": "concept",
      "name": "\ud83e\udde0 Cognitive Brain Plugin Tools",
      "description": "Concept: \ud83e\udde0 Cognitive Brain Plugin Tools",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.4320252,
      "updated_at": 1754957551.4320252
    },
    "concept_1861": {
      "id": "concept_1861",
      "type": "concept",
      "name": "**Use Case**: Debugging, performance analysis, usage tracking\n\n### 32. **get_session_statistics**\n\n**Purpose**: Get comprehensive session statistics and performance metrics\n**Workflow**:",
      "description": "Concept: **Use Case**: Debugging, performance analysis, usage tracking\n\n### 32. **get_session_statistics**\n\n**Purpose**: Get comprehensive session statistics and performance metrics\n**Workflow**:",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.4324648,
      "updated_at": 1754957551.4324648
    },
    "concept_1862": {
      "id": "concept_1862",
      "type": "concept",
      "name": "get_cursor_context() \u2192 ai_chat_with_memory() \u2192 track_cursor_conversation()",
      "description": "Concept: get_cursor_context() \u2192 ai_chat_with_memory() \u2192 track_cursor_conversation()",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.4331908,
      "updated_at": 1754957551.4331908
    },
    "concept_1863": {
      "id": "concept_1863",
      "type": "concept",
      "name": "File Path + Content \u2192 Directory Creation (if needed) \u2192 File Writing \u2192 Success Confirmation",
      "description": "Concept: File Path + Content \u2192 Directory Creation (if needed) \u2192 File Writing \u2192 Success Confirmation",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.4339771,
      "updated_at": 1754957551.4339771
    },
    "concept_1864": {
      "id": "concept_1864",
      "type": "concept",
      "name": "Use appropriate data types",
      "description": "Concept: Use appropriate data types",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.434297,
      "updated_at": 1754957551.434297
    },
    "concept_1865": {
      "id": "concept_1865",
      "type": "concept",
      "name": "Request \u2192 Resource Monitoring \u2192 Metrics Collection \u2192 Resource Report Return",
      "description": "Concept: Request \u2192 Resource Monitoring \u2192 Metrics Collection \u2192 Resource Report Return",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.435083,
      "updated_at": 1754957551.435083
    },
    "concept_1866": {
      "id": "concept_1866",
      "type": "concept",
      "name": "9. **search_memory**",
      "description": "Concept: 9. **search_memory**",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.435403,
      "updated_at": 1754957551.435403
    },
    "concept_1867": {
      "id": "concept_1867",
      "type": "concept",
      "name": "Use lightweight tools for simple tasks",
      "description": "Concept: Use lightweight tools for simple tasks",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.435732,
      "updated_at": 1754957551.435732
    },
    "concept_1868": {
      "id": "concept_1868",
      "type": "concept",
      "name": "**Use Case**: Building conversation context, maintaining session state\n\n### 11. **get_context_summary**\n\n**Purpose**: Get a summary of recent conversation context\n**Workflow**:",
      "description": "Concept: **Use Case**: Building conversation context, maintaining session state\n\n### 11. **get_context_summary**\n\n**Purpose**: Get a summary of recent conversation context\n**Workflow**:",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.436162,
      "updated_at": 1754957551.436162
    },
    "concept_1869": {
      "id": "concept_1869",
      "type": "concept",
      "name": "1. **Tool Selection**",
      "description": "Concept: 1. **Tool Selection**",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.4364932,
      "updated_at": 1754957551.4364932
    },
    "concept_1870": {
      "id": "concept_1870",
      "type": "concept",
      "name": "**Use Case**: Learning improvement, self-awareness, performance analysis\n\n### 25. **consciousness_check**\n\n**Purpose**: Check current state of consciousness and awareness\n**Workflow**:",
      "description": "Concept: **Use Case**: Learning improvement, self-awareness, performance analysis\n\n### 25. **consciousness_check**\n\n**Purpose**: Check current state of consciousness and awareness\n**Workflow**:",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.436924,
      "updated_at": 1754957551.436924
    },
    "concept_1871": {
      "id": "concept_1871",
      "type": "concept",
      "name": "Plugin Name \u2192 Plugin Unload \u2192 Plugin Reload \u2192 Status Return",
      "description": "Concept: Plugin Name \u2192 Plugin Unload \u2192 Plugin Reload \u2192 Status Return",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.4376,
      "updated_at": 1754957551.4376
    },
    "concept_1872": {
      "id": "concept_1872",
      "type": "concept",
      "name": "**Use Case**: Configuration checking, environment debugging, security auditing\n\n## \ud83e\udde0 Cognitive Brain Plugin Tools\n\n### 21. **think**\n\n**Purpose**: Think and respond with memory and context\n**Workflow**:",
      "description": "Concept: **Use Case**: Configuration checking, environment debugging, security auditing\n\n## \ud83e\udde0 Cognitive Brain Plugin Tools\n\n### 21. **think**\n\n**Purpose**: Think and respond with memory and context\n**Workflow**:",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.439072,
      "updated_at": 1754957551.439072
    },
    "concept_1873": {
      "id": "concept_1873",
      "type": "concept",
      "name": "\ud83d\udd0d Analysis and Monitoring Tools",
      "description": "Concept: \ud83d\udd0d Analysis and Monitoring Tools",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.4395678,
      "updated_at": 1754957551.4395678
    },
    "concept_1874": {
      "id": "concept_1874",
      "type": "concept",
      "name": "2. **Parameter Optimization**",
      "description": "Concept: 2. **Parameter Optimization**",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.440025,
      "updated_at": 1754957551.440025
    },
    "concept_1875": {
      "id": "concept_1875",
      "type": "concept",
      "name": "**Use Case**: File system navigation, project exploration, directory management\n\n### 16. **file_exists**\n\n**Purpose**: Check if a file or directory exists\n**Workflow**:",
      "description": "Concept: **Use Case**: File system navigation, project exploration, directory management\n\n### 16. **file_exists**\n\n**Purpose**: Check if a file or directory exists\n**Workflow**:",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.4405801,
      "updated_at": 1754957551.440581
    },
    "concept_1876": {
      "id": "concept_1876",
      "type": "concept",
      "name": "**Use Case**: Environment verification, dependency checking, debugging\n\n### 20. **get_environment_vars**\n\n**Purpose**: Get environment variables (filtered for security)\n**Workflow**:",
      "description": "Concept: **Use Case**: Environment verification, dependency checking, debugging\n\n### 20. **get_environment_vars**\n\n**Purpose**: Get environment variables (filtered for security)\n**Workflow**:",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.441056,
      "updated_at": 1754957551.441056
    },
    "concept_1877": {
      "id": "concept_1877",
      "type": "concept",
      "name": "1. Context Retrieval \u2192 2. Tool Execution \u2192 3. Memory Storage \u2192 4. Response Generation \u2192 5. Learning Update",
      "description": "Concept: 1. Context Retrieval \u2192 2. Tool Execution \u2192 3. Memory Storage \u2192 4. Response Generation \u2192 5. Learning Update",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.441952,
      "updated_at": 1754957551.441952
    },
    "concept_1878": {
      "id": "concept_1878",
      "type": "concept",
      "name": "20. **get_environment_vars**",
      "description": "Concept: 20. **get_environment_vars**",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.442282,
      "updated_at": 1754957551.442282
    },
    "concept_1879": {
      "id": "concept_1879",
      "type": "concept",
      "name": "Error Handling Workflow",
      "description": "Concept: Error Handling Workflow",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.442604,
      "updated_at": 1754957551.442604
    },
    "concept_1880": {
      "id": "concept_1880",
      "type": "concept",
      "name": "30. **cursor_auto_inject_context**",
      "description": "Concept: 30. **cursor_auto_inject_context**",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.4429288,
      "updated_at": 1754957551.4429288
    },
    "concept_1881": {
      "id": "concept_1881",
      "type": "concept",
      "name": "Context + Type \u2192 Context Storage \u2192 History Update \u2192 Confirmation",
      "description": "Concept: Context + Type \u2192 Context Storage \u2192 History Update \u2192 Confirmation",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.443607,
      "updated_at": 1754957551.443607
    },
    "concept_1882": {
      "id": "concept_1882",
      "type": "concept",
      "name": "**Use Case**: Knowledge acquisition, document processing, continuous learning\n\n### 27. **dream**\n\n**Purpose**: Background processing and memory consolidation\n**Workflow**:",
      "description": "Concept: **Use Case**: Knowledge acquisition, document processing, continuous learning\n\n### 27. **dream**\n\n**Purpose**: Background processing and memory consolidation\n**Workflow**:",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.4440389,
      "updated_at": 1754957551.4440389
    },
    "concept_1883": {
      "id": "concept_1883",
      "type": "concept",
      "name": "Implement fallback strategies",
      "description": "Concept: Implement fallback strategies",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.444363,
      "updated_at": 1754957551.444363
    },
    "concept_1884": {
      "id": "concept_1884",
      "type": "concept",
      "name": "Batch operations when possible",
      "description": "Concept: Batch operations when possible",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.4446878,
      "updated_at": 1754957551.4446878
    },
    "concept_1885": {
      "id": "concept_1885",
      "type": "concept",
      "name": "Keyword \u2192 Memory Search \u2192 Pattern Matching \u2192 Relevant Results Return",
      "description": "Concept: Keyword \u2192 Memory Search \u2192 Pattern Matching \u2192 Relevant Results Return",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.4454882,
      "updated_at": 1754957551.4454882
    },
    "concept_1886": {
      "id": "concept_1886",
      "type": "concept",
      "name": "**Use Case**: Debugging, usage analysis, pattern recognition\n\n### 34. **get_comprehensive_system_status**\n\n**Purpose**: Get complete system status overview\n**Workflow**:",
      "description": "Concept: **Use Case**: Debugging, usage analysis, pattern recognition\n\n### 34. **get_comprehensive_system_status**\n\n**Purpose**: Get complete system status overview\n**Workflow**:",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.445965,
      "updated_at": 1754957551.445965
    },
    "concept_1887": {
      "id": "concept_1887",
      "type": "concept",
      "name": "**Use Case**: Accessing saved information, retrieving context, user preferences\n\n### 9. **search_memory**\n\n**Purpose**: Search memory entries by keyword\n**Workflow**:",
      "description": "Concept: **Use Case**: Accessing saved information, retrieving context, user preferences\n\n### 9. **search_memory**\n\n**Purpose**: Search memory entries by keyword\n**Workflow**:",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.4464052,
      "updated_at": 1754957551.4464052
    },
    "concept_1888": {
      "id": "concept_1888",
      "type": "concept",
      "name": "26. **learn_from**",
      "description": "Concept: 26. **learn_from**",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.4467268,
      "updated_at": 1754957551.4467268
    },
    "concept_1889": {
      "id": "concept_1889",
      "type": "concept",
      "name": "File Path \u2192 File Existence Check \u2192 Content Reading \u2192 Content Return",
      "description": "Concept: File Path \u2192 File Existence Check \u2192 Content Reading \u2192 Content Return",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.447432,
      "updated_at": 1754957551.447432
    },
    "concept_1890": {
      "id": "concept_1890",
      "type": "concept",
      "name": "19. **get_python_info**",
      "description": "Concept: 19. **get_python_info**",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.4477582,
      "updated_at": 1754957551.4477582
    },
    "concept_1891": {
      "id": "concept_1891",
      "type": "concept",
      "name": "Request \u2192 Platform Detection \u2192 System Info Collection \u2192 System Details Return",
      "description": "Concept: Request \u2192 Platform Detection \u2192 System Info Collection \u2192 System Details Return",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.448541,
      "updated_at": 1754957551.448541
    },
    "concept_1892": {
      "id": "concept_1892",
      "type": "concept",
      "name": "### System Monitoring",
      "description": "Concept: ### System Monitoring",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.4488819,
      "updated_at": 1754957551.4488819
    },
    "concept_1893": {
      "id": "concept_1893",
      "type": "concept",
      "name": "list_directory() \u2192 file_exists() \u2192 read_file() \u2192 write_file()",
      "description": "Concept: list_directory() \u2192 file_exists() \u2192 read_file() \u2192 write_file()",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.44957,
      "updated_at": 1754957551.44957
    },
    "concept_1894": {
      "id": "concept_1894",
      "type": "concept",
      "name": "User Message \u2192 Quick AI Processing \u2192 Response Return",
      "description": "Concept: User Message \u2192 Quick AI Processing \u2192 Response Return",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.450221,
      "updated_at": 1754957551.450221
    },
    "concept_1895": {
      "id": "concept_1895",
      "type": "concept",
      "name": "10. **add_context**",
      "description": "Concept: 10. **add_context**",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.4505868,
      "updated_at": 1754957551.4505868
    },
    "concept_1896": {
      "id": "concept_1896",
      "type": "concept",
      "name": "Limit + Function Name \u2192 History Retrieval \u2192 Call Analysis \u2192 History Report",
      "description": "Concept: Limit + Function Name \u2192 History Retrieval \u2192 Call Analysis \u2192 History Report",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.451354,
      "updated_at": 1754957551.451354
    },
    "concept_1897": {
      "id": "concept_1897",
      "type": "concept",
      "name": "Confirmation \u2192 Memory Clear \u2192 Storage Reset \u2192 Confirmation Return",
      "description": "Concept: Confirmation \u2192 Memory Clear \u2192 Storage Reset \u2192 Confirmation Return",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.4520981,
      "updated_at": 1754957551.4520981
    },
    "concept_1898": {
      "id": "concept_1898",
      "type": "concept",
      "name": "\ud83d\udee0\ufe0f Tools and Workflows Guide",
      "description": "Concept: \ud83d\udee0\ufe0f Tools and Workflows Guide",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.452616,
      "updated_at": 1754957551.452616
    },
    "concept_1899": {
      "id": "concept_1899",
      "type": "concept",
      "name": "Request \u2192 System Scan \u2192 Status Collection \u2192 Comprehensive Report",
      "description": "Concept: Request \u2192 System Scan \u2192 Status Collection \u2192 Comprehensive Report",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.453336,
      "updated_at": 1754957551.453336
    },
    "concept_1900": {
      "id": "concept_1900",
      "type": "concept",
      "name": "Key + Value + Tags \u2192 Memory Storage \u2192 Persistence \u2192 Success Confirmation",
      "description": "Concept: Key + Value + Tags \u2192 Memory Storage \u2192 Persistence \u2192 Success Confirmation",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.454081,
      "updated_at": 1754957551.454081
    },
    "concept_1901": {
      "id": "concept_1901",
      "type": "concept",
      "name": "### Error Handling Workflow",
      "description": "Concept: ### Error Handling Workflow",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.454423,
      "updated_at": 1754957551.454423
    },
    "concept_1902": {
      "id": "concept_1902",
      "type": "concept",
      "name": "`key`: Unique identifier for the memory",
      "description": "Concept: `key`: Unique identifier for the memory",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.454761,
      "updated_at": 1754957551.454761
    },
    "concept_1903": {
      "id": "concept_1903",
      "type": "concept",
      "name": ": AI model to use (default: \"assistant\")\n  **Use Case**: Main conversation interface with memory persistence\n\n### 3. **quick_memory_chat**\n\n**Purpose**: Fast, lightweight chat without full memory processing\n**Workflow**:",
      "description": "Concept: : AI model to use (default: \"assistant\")\n  **Use Case**: Main conversation interface with memory persistence\n\n### 3. **quick_memory_chat**\n\n**Purpose**: Fast, lightweight chat without full memory processing\n**Workflow**:",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.455412,
      "updated_at": 1754957551.455412
    },
    "concept_1904": {
      "id": "concept_1904",
      "type": "concept",
      "name": "37. **list_available_models**",
      "description": "Concept: 37. **list_available_models**",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.455841,
      "updated_at": 1754957551.455841
    },
    "concept_1905": {
      "id": "concept_1905",
      "type": "concept",
      "name": "Request \u2192 State Assessment \u2192 Awareness Check \u2192 Consciousness Report",
      "description": "Concept: Request \u2192 State Assessment \u2192 Awareness Check \u2192 Consciousness Report",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.4565718,
      "updated_at": 1754957551.4565718
    },
    "concept_1906": {
      "id": "concept_1906",
      "type": "concept",
      "name": "Request \u2192 Sample Data Generation \u2192 Memory Operations Test \u2192 Test Results Return",
      "description": "Concept: Request \u2192 Sample Data Generation \u2192 Memory Operations Test \u2192 Test Results Return",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.457386,
      "updated_at": 1754957551.457386
    },
    "concept_1907": {
      "id": "concept_1907",
      "type": "concept",
      "name": "15. **list_directory**",
      "description": "Concept: 15. **list_directory**",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.457748,
      "updated_at": 1754957551.457748
    },
    "concept_1908": {
      "id": "concept_1908",
      "type": "concept",
      "name": "36. **test_memory_system**",
      "description": "Concept: 36. **test_memory_system**",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.4580932,
      "updated_at": 1754957551.4580932
    },
    "concept_1909": {
      "id": "concept_1909",
      "type": "concept",
      "name": "12. **clear_memory**",
      "description": "Concept: 12. **clear_memory**",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.458446,
      "updated_at": 1754957551.458446
    },
    "concept_1910": {
      "id": "concept_1910",
      "type": "concept",
      "name": "**Use Case**: Model selection, system configuration, capability discovery\n\n## \ud83d\udd04 Tool Workflow Patterns\n\n### Basic Tool Usage Pattern",
      "description": "Concept: **Use Case**: Model selection, system configuration, capability discovery\n\n## \ud83d\udd04 Tool Workflow Patterns\n\n### Basic Tool Usage Pattern",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.4596102,
      "updated_at": 1754957551.4596102
    },
    "concept_1911": {
      "id": "concept_1911",
      "type": "concept",
      "name": "34. **get_comprehensive_system_status**",
      "description": "Concept: 34. **get_comprehensive_system_status**",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.459965,
      "updated_at": 1754957551.459965
    },
    "concept_1912": {
      "id": "concept_1912",
      "type": "concept",
      "name": "\ud83e\udde0 Memory and Context Tools",
      "description": "Concept: \ud83e\udde0 Memory and Context Tools",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.460466,
      "updated_at": 1754957551.460466
    },
    "concept_1913": {
      "id": "concept_1913",
      "type": "concept",
      "name": ": Optional categorization tags\n  **Use Case**: Saving important information, user preferences, conversation context\n\n### 8. **retrieve_memory**\n\n**Purpose**: Retrieve information from memory by key\n**Workflow**:",
      "description": "Concept: : Optional categorization tags\n  **Use Case**: Saving important information, user preferences, conversation context\n\n### 8. **retrieve_memory**\n\n**Purpose**: Retrieve information from memory by key\n**Workflow**:",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.460972,
      "updated_at": 1754957551.460972
    },
    "concept_1914": {
      "id": "concept_1914",
      "type": "concept",
      "name": "Always check for errors in tool responses",
      "description": "Concept: Always check for errors in tool responses",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.461329,
      "updated_at": 1754957551.461329
    },
    "concept_1915": {
      "id": "concept_1915",
      "type": "concept",
      "name": "29. **track_cursor_conversation**",
      "description": "Concept: 29. **track_cursor_conversation**",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.461667,
      "updated_at": 1754957551.461667
    },
    "concept_1916": {
      "id": "concept_1916",
      "type": "concept",
      "name": "**Use Case**: File validation, conditional operations, error prevention\n\n## \ud83d\udcbb System Information Tools\n\n### 17. **get_system_info**\n\n**Purpose**: Get general system information\n**Workflow**:",
      "description": "Concept: **Use Case**: File validation, conditional operations, error prevention\n\n## \ud83d\udcbb System Information Tools\n\n### 17. **get_system_info**\n\n**Purpose**: Get general system information\n**Workflow**:",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.4631,
      "updated_at": 1754957551.4631
    },
    "concept_1917": {
      "id": "concept_1917",
      "type": "concept",
      "name": "Request \u2192 Background Processing \u2192 Memory Consolidation \u2192 Processing Status",
      "description": "Concept: Request \u2192 Background Processing \u2192 Memory Consolidation \u2192 Processing Status",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.463846,
      "updated_at": 1754957551.463846
    },
    "concept_1918": {
      "id": "concept_1918",
      "type": "concept",
      "name": "Directory Path \u2192 Path Validation \u2192 Directory Scanning \u2192 File List Return",
      "description": "Concept: Directory Path \u2192 Path Validation \u2192 Directory Scanning \u2192 File List Return",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.464745,
      "updated_at": 1754957551.464745
    },
    "concept_1919": {
      "id": "concept_1919",
      "type": "concept",
      "name": "### Performance Monitoring Workflow",
      "description": "Concept: ### Performance Monitoring Workflow",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.4651608,
      "updated_at": 1754957551.4651608
    },
    "concept_1920": {
      "id": "concept_1920",
      "type": "concept",
      "name": "23. **recall**",
      "description": "Concept: 23. **recall**",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.465508,
      "updated_at": 1754957551.465508
    },
    "concept_1921": {
      "id": "concept_1921",
      "type": "concept",
      "name": "Request \u2192 Python Environment Check \u2192 Version/Path Info \u2192 Python Details Return",
      "description": "Concept: Request \u2192 Python Environment Check \u2192 Version/Path Info \u2192 Python Details Return",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.466281,
      "updated_at": 1754957551.466281
    },
    "concept_1922": {
      "id": "concept_1922",
      "type": "concept",
      "name": "Choose the most specific tool for your task",
      "description": "Concept: Choose the most specific tool for your task",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.466629,
      "updated_at": 1754957551.466629
    },
    "concept_1923": {
      "id": "concept_1923",
      "type": "concept",
      "name": ": The user's input message\n-",
      "description": "Concept: : The user's input message\n-",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.466965,
      "updated_at": 1754957551.466965
    },
    "concept_1924": {
      "id": "concept_1924",
      "type": "concept",
      "name": "**Use Case**: Finding related information, context discovery, knowledge retrieval\n\n### 10. **add_context**\n\n**Purpose**: Add context information to conversation history\n**Workflow**:",
      "description": "Concept: **Use Case**: Finding related information, context discovery, knowledge retrieval\n\n### 10. **add_context**\n\n**Purpose**: Add context information to conversation history\n**Workflow**:",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.4674182,
      "updated_at": 1754957551.4674182
    },
    "concept_1925": {
      "id": "concept_1925",
      "type": "concept",
      "name": "**Use Case**: Seamless conversation flow, automatic context provision\n\n## \ud83d\udd0d Analysis and Monitoring Tools\n\n### 31. **get_function_call_history**\n\n**Purpose**: Get comprehensive function call history with traceability\n**Workflow**:",
      "description": "Concept: **Use Case**: Seamless conversation flow, automatic context provision\n\n## \ud83d\udd0d Analysis and Monitoring Tools\n\n### 31. **get_function_call_history**\n\n**Purpose**: Get comprehensive function call history with traceability\n**Workflow**:",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.469213,
      "updated_at": 1754957551.469213
    },
    "concept_1926": {
      "id": "concept_1926",
      "type": "concept",
      "name": "6. **server_status**",
      "description": "Concept: 6. **server_status**",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.469568,
      "updated_at": 1754957551.469568
    },
    "concept_1927": {
      "id": "concept_1927",
      "type": "concept",
      "name": "Monitor tool execution times",
      "description": "Concept: Monitor tool execution times",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.469905,
      "updated_at": 1754957551.469905
    },
    "concept_1928": {
      "id": "concept_1928",
      "type": "concept",
      "name": "Query + Depth \u2192 Memory Search \u2192 Pattern Matching \u2192 Relevant Memories Return",
      "description": "Concept: Query + Depth \u2192 Memory Search \u2192 Pattern Matching \u2192 Relevant Memories Return",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.4706728,
      "updated_at": 1754957551.4706728
    },
    "concept_1929": {
      "id": "concept_1929",
      "type": "concept",
      "name": "\ud83d\udcbb System Information Tools",
      "description": "Concept: \ud83d\udcbb System Information Tools",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.4711628,
      "updated_at": 1754957551.4711628
    },
    "concept_1930": {
      "id": "concept_1930",
      "type": "concept",
      "name": "\ud83d\ude80 Advanced Tool Combinations",
      "description": "Concept: \ud83d\ude80 Advanced Tool Combinations",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.471662,
      "updated_at": 1754957551.471662
    },
    "concept_1931": {
      "id": "concept_1931",
      "type": "concept",
      "name": "7. **store_memory**",
      "description": "Concept: 7. **store_memory**",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.47199,
      "updated_at": 1754957551.47199
    },
    "concept_1932": {
      "id": "concept_1932",
      "type": "concept",
      "name": "get_system_info() \u2192 get_resource_usage() \u2192 get_comprehensive_system_status()",
      "description": "Concept: get_system_info() \u2192 get_resource_usage() \u2192 get_comprehensive_system_status()",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.472752,
      "updated_at": 1754957551.472752
    },
    "concept_1933": {
      "id": "concept_1933",
      "type": "concept",
      "name": "\ud83c\udfaf Best Practices for Tool Usage",
      "description": "Concept: \ud83c\udfaf Best Practices for Tool Usage",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.4732711,
      "updated_at": 1754957551.4732711
    },
    "concept_1934": {
      "id": "concept_1934",
      "type": "concept",
      "name": "**Use Case**: Understanding conversation flow, context review, session management\n\n### 12. **clear_memory**\n\n**Purpose**: Clear all memory entries\n**Workflow**:",
      "description": "Concept: **Use Case**: Understanding conversation flow, context review, session management\n\n### 12. **clear_memory**\n\n**Purpose**: Clear all memory entries\n**Workflow**:",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.473738,
      "updated_at": 1754957551.473738
    },
    "concept_1935": {
      "id": "concept_1935",
      "type": "concept",
      "name": "28. **get_cursor_context**",
      "description": "Concept: 28. **get_cursor_context**",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.474081,
      "updated_at": 1754957551.474081
    },
    "concept_1936": {
      "id": "concept_1936",
      "type": "concept",
      "name": "Basic Tool Usage Pattern",
      "description": "Concept: Basic Tool Usage Pattern",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.474422,
      "updated_at": 1754957551.474422
    },
    "concept_1937": {
      "id": "concept_1937",
      "type": "concept",
      "name": "5. **reload_plugin**",
      "description": "Concept: 5. **reload_plugin**",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.474763,
      "updated_at": 1754957551.474763
    },
    "concept_1938": {
      "id": "concept_1938",
      "type": "concept",
      "name": "Problem Solving",
      "description": "Concept: Problem Solving",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.4751549,
      "updated_at": 1754957551.475156
    },
    "concept_1939": {
      "id": "concept_1939",
      "type": "concept",
      "name": "**Use Case**: System health, cognitive state monitoring, debugging\n\n### 26. **learn_from**\n\n**Purpose**: Learn from text content or documents\n**Workflow**:",
      "description": "Concept: **Use Case**: System health, cognitive state monitoring, debugging\n\n### 26. **learn_from**\n\n**Purpose**: Learn from text content or documents\n**Workflow**:",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.475647,
      "updated_at": 1754957551.475647
    },
    "concept_1940": {
      "id": "concept_1940",
      "type": "concept",
      "name": "`user_message`: The user's input message",
      "description": "Concept: `user_message`: The user's input message",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.476002,
      "updated_at": 1754957551.476002
    },
    "concept_1941": {
      "id": "concept_1941",
      "type": "concept",
      "name": "17. **get_system_info**",
      "description": "Concept: 17. **get_system_info**",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.4763489,
      "updated_at": 1754957551.4763489
    },
    "concept_1942": {
      "id": "concept_1942",
      "type": "concept",
      "name": "**Use Case**: Creating files, saving data, writing logs\n\n### 15. **list_directory**\n\n**Purpose**: List files and directories in a path\n**Workflow**:",
      "description": "Concept: **Use Case**: Creating files, saving data, writing logs\n\n### 15. **list_directory**\n\n**Purpose**: List files and directories in a path\n**Workflow**:",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.4768262,
      "updated_at": 1754957551.4768262
    },
    "concept_1943": {
      "id": "concept_1943",
      "type": "concept",
      "name": "2. **ai_chat_with_memory**",
      "description": "Concept: 2. **ai_chat_with_memory**",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.4771972,
      "updated_at": 1754957551.4771972
    },
    "concept_1944": {
      "id": "concept_1944",
      "type": "concept",
      "name": "think() \u2192 search_memory() \u2192 learn_from() \u2192 remember()",
      "description": "Concept: think() \u2192 search_memory() \u2192 learn_from() \u2192 remember()",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.477899,
      "updated_at": 1754957551.477899
    },
    "concept_1945": {
      "id": "concept_1945",
      "type": "concept",
      "name": "Message + Context \u2192 Memory Retrieval \u2192 Cognitive Processing \u2192 Thoughtful Response",
      "description": "Concept: Message + Context \u2192 Memory Retrieval \u2192 Cognitive Processing \u2192 Thoughtful Response",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.478789,
      "updated_at": 1754957551.478789
    },
    "concept_1946": {
      "id": "concept_1946",
      "type": "concept",
      "name": "User Message \u2192 Memory Context Retrieval \u2192 AI Processing \u2192 Response Generation \u2192 Memory Storage \u2192 Response Return",
      "description": "Concept: User Message \u2192 Memory Context Retrieval \u2192 AI Processing \u2192 Response Generation \u2192 Memory Storage \u2192 Response Return",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.479769,
      "updated_at": 1754957551.479769
    },
    "concept_1947": {
      "id": "concept_1947",
      "type": "concept",
      "name": "\ud83c\udfaf Cursor Integration Tools",
      "description": "Concept: \ud83c\udfaf Cursor Integration Tools",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.4802618,
      "updated_at": 1754957551.4802618
    },
    "concept_1948": {
      "id": "concept_1948",
      "type": "concept",
      "name": "**Use Case**: Memory optimization, background learning, system maintenance\n\n## \ud83c\udfaf Cursor Integration Tools\n\n### 28. **get_cursor_context**\n\n**Purpose**: Get comprehensive context for Cursor conversations\n**Workflow**:",
      "description": "Concept: **Use Case**: Memory optimization, background learning, system maintenance\n\n## \ud83c\udfaf Cursor Integration Tools\n\n### 28. **get_cursor_context**\n\n**Purpose**: Get comprehensive context for Cursor conversations\n**Workflow**:",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.481905,
      "updated_at": 1754957551.481905
    },
    "concept_1949": {
      "id": "concept_1949",
      "type": "concept",
      "name": "User Request \u2192 brain_info() \u2192 Returns brain capabilities, status, and configuration",
      "description": "Concept: User Request \u2192 brain_info() \u2192 Returns brain capabilities, status, and configuration",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.482765,
      "updated_at": 1754957551.482765
    },
    "concept_1950": {
      "id": "concept_1950",
      "type": "concept",
      "name": "33. **search_function_calls**",
      "description": "Concept: 33. **search_function_calls**",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.483131,
      "updated_at": 1754957551.483131
    },
    "concept_1951": {
      "id": "concept_1951",
      "type": "concept",
      "name": "**Use Case**: Cursor IDE integration, conversation continuity, user context\n\n### 29. **track_cursor_conversation**\n\n**Purpose**: Track Cursor conversation for learning and context\n**Workflow**:",
      "description": "Concept: **Use Case**: Cursor IDE integration, conversation continuity, user context\n\n### 29. **track_cursor_conversation**\n\n**Purpose**: Track Cursor conversation for learning and context\n**Workflow**:",
      "source": "TOOLS_AND_WORKFLOWS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOLS_AND_WORKFLOWS.md"
        ]
      },
      "created_at": 1754957551.4836202,
      "updated_at": 1754957551.4836202
    },
    "doc_1952": {
      "id": "doc_1952",
      "type": "document",
      "name": "Tool_Consolidation_Success",
      "description": "Document: TOOL_CONSOLIDATION_SUCCESS.md",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.9,
      "metadata": {
        "file_size": 6559,
        "lines": 203,
        "language": "unknown",
        "last_modified": 1754956154.5579405
      },
      "created_at": 1754957551.4855108,
      "updated_at": 1754957551.4855108
    },
    "concept_1953": {
      "id": "concept_1953",
      "type": "concept",
      "name": "**Benefits Achieved**",
      "description": "Concept: **Benefits Achieved**",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.48593,
      "updated_at": 1754957551.48593
    },
    "concept_1954": {
      "id": "concept_1954",
      "type": "concept",
      "name": "output_and_action",
      "description": "Concept: output_and_action",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.4862819,
      "updated_at": 1754957551.4862819
    },
    "concept_1955": {
      "id": "concept_1955",
      "type": "concept",
      "name": "**Root Cause Analysis**",
      "description": "Concept: **Root Cause Analysis**",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.486702,
      "updated_at": 1754957551.486702
    },
    "concept_1956": {
      "id": "concept_1956",
      "type": "concept",
      "name": "**1. Docker Container Rebuild**",
      "description": "Concept: **1. Docker Container Rebuild**",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.4871,
      "updated_at": 1754957551.4871
    },
    "concept_1957": {
      "id": "concept_1957",
      "type": "concept",
      "name": "**Eliminated duplication** and redundancy",
      "description": "Concept: **Eliminated duplication** and redundancy",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.487811,
      "updated_at": 1754957551.487811
    },
    "concept_1958": {
      "id": "concept_1958",
      "type": "concept",
      "name": "\u274c Tool duplication",
      "description": "Concept: \u274c Tool duplication",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.488288,
      "updated_at": 1754957551.488288
    },
    "concept_1959": {
      "id": "concept_1959",
      "type": "concept",
      "name": "**Faster tool discovery** through domain organization",
      "description": "Concept: **Faster tool discovery** through domain organization",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.4886441,
      "updated_at": 1754957551.4886441
    },
    "concept_1960": {
      "id": "concept_1960",
      "type": "concept",
      "name": "**Result**: Eliminated enhanced brain tool duplication",
      "description": "Concept: **Result**: Eliminated enhanced brain tool duplication",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.488993,
      "updated_at": 1754957551.488993
    },
    "concept_1961": {
      "id": "concept_1961",
      "type": "concept",
      "name": "EnhancedBrainTools",
      "description": "Concept: EnhancedBrainTools",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md",
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py",
          "main.py"
        ]
      },
      "created_at": 1754957551.489325,
      "updated_at": 1754957552.134371
    },
    "concept_1962": {
      "id": "concept_1962",
      "type": "concept",
      "name": "**Final Tool Architecture**",
      "description": "Concept: **Final Tool Architecture**",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.489662,
      "updated_at": 1754957551.489662
    },
    "concept_1963": {
      "id": "concept_1963",
      "type": "concept",
      "name": "processing_and_thinking",
      "description": "Concept: processing_and_thinking",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.490367,
      "updated_at": 1754957551.490367
    },
    "concept_1964": {
      "id": "concept_1964",
      "type": "concept",
      "name": "Actions: `ai_chat_with_memory`, `auto_process_message`, `get_user_context`, `remember_important`, `recall_intelligently`, `forget_selectively`",
      "description": "Concept: Actions: `ai_chat_with_memory`, `auto_process_message`, `get_user_context`, `remember_important`, `recall_intelligently`, `forget_selectively`",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.490957,
      "updated_at": 1754957551.490957
    },
    "concept_1965": {
      "id": "concept_1965",
      "type": "concept",
      "name": "python\n@mcp.tool()\n@log_mcp_tool\ndef perceive_and_analyze(action: str, content: str = \"\", context: str = \"\", **kwargs) -> dict:\n    \"\"\"\ud83e\udde0 PERCEPTION & INPUT: Unified interface for all perception and analysis tools\"\"\"\n    if action == \"brain_info\":\n        # Return brain info functionality\n    elif action == \"list_plugins\":\n        # Return plugin listing functionality\n    # ... etc",
      "description": "Concept: python\n@mcp.tool()\n@log_mcp_tool\ndef perceive_and_analyze(action: str, content: str = \"\", context: str = \"\", **kwargs) -> dict:\n    \"\"\"\ud83e\udde0 PERCEPTION & INPUT: Unified interface for all perception and analysis tools\"\"\"\n    if action == \"brain_info\":\n        # Return brain info functionality\n    elif action == \"list_plugins\":\n        # Return plugin listing functionality\n    # ... etc",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.493634,
      "updated_at": 1754957551.493634
    },
    "concept_1966": {
      "id": "concept_1966",
      "type": "concept",
      "name": "**Maintainable codebase** with consolidated tools",
      "description": "Concept: **Maintainable codebase** with consolidated tools",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.49405,
      "updated_at": 1754957551.49405
    },
    "concept_1967": {
      "id": "concept_1967",
      "type": "concept",
      "name": "memory_and_storage",
      "description": "Concept: memory_and_storage",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.494391,
      "updated_at": 1754957551.494391
    },
    "concept_1968": {
      "id": "concept_1968",
      "type": "concept",
      "name": "**Cleaner Cursor interface**",
      "description": "Concept: **Cleaner Cursor interface**",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.494736,
      "updated_at": 1754957551.494736
    },
    "concept_1969": {
      "id": "concept_1969",
      "type": "concept",
      "name": "Test functionality through action-based routing",
      "description": "Concept: Test functionality through action-based routing",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.4950871,
      "updated_at": 1754957551.4950871
    },
    "concept_1970": {
      "id": "concept_1970",
      "type": "concept",
      "name": "\u2705 **Organization**: 6 cognitive domains",
      "description": "Concept: \u2705 **Organization**: 6 cognitive domains",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.495828,
      "updated_at": 1754957551.495828
    },
    "concept_1971": {
      "id": "concept_1971",
      "type": "concept",
      "name": "**Optimized tool routing**",
      "description": "Concept: **Optimized tool routing**",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.4962199,
      "updated_at": 1754957551.4962199
    },
    "concept_1972": {
      "id": "concept_1972",
      "type": "concept",
      "name": "**Success Metrics**",
      "description": "Concept: **Success Metrics**",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.496565,
      "updated_at": 1754957551.496565
    },
    "concept_1973": {
      "id": "concept_1973",
      "type": "concept",
      "name": "`perceive_and_analyze` - Unified perception and analysis",
      "description": "Concept: `perceive_and_analyze` - Unified perception and analysis",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.4970791,
      "updated_at": 1754957551.4970791
    },
    "concept_1974": {
      "id": "concept_1974",
      "type": "concept",
      "name": "bash\ndocker-compose logs memory_mcp_server --tail=15 | grep \"Total MCP tools\"\n# Expected: \"\ud83d\ude80 Total MCP tools available: 6 consolidated tools\"",
      "description": "Concept: bash\ndocker-compose logs memory_mcp_server --tail=15 | grep \"Total MCP tools\"\n# Expected: \"\ud83d\ude80 Total MCP tools available: 6 consolidated tools\"",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.498297,
      "updated_at": 1754957551.498297
    },
    "concept_1975": {
      "id": "concept_1975",
      "type": "concept",
      "name": "Prevented 12 additional tools from being registered",
      "description": "Concept: Prevented 12 additional tools from being registered",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.498684,
      "updated_at": 1754957551.498684
    },
    "concept_1976": {
      "id": "concept_1976",
      "type": "concept",
      "name": "\u2705 Clean, organized interface",
      "description": "Concept: \u2705 Clean, organized interface",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.499232,
      "updated_at": 1754957551.499232
    },
    "concept_1977": {
      "id": "concept_1977",
      "type": "concept",
      "name": "\u2705 6 cognitive domains",
      "description": "Concept: \u2705 6 cognitive domains",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.4999292,
      "updated_at": 1754957551.4999292
    },
    "concept_1978": {
      "id": "concept_1978",
      "type": "concept",
      "name": "Commented out **30+ individual `@mcp.tool()` decorators**",
      "description": "Concept: Commented out **30+ individual `@mcp.tool()` decorators**",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.500451,
      "updated_at": 1754957551.500451
    },
    "concept_1979": {
      "id": "concept_1979",
      "type": "concept",
      "name": "**Solution Implemented**",
      "description": "Concept: **Solution Implemented**",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.501042,
      "updated_at": 1754957551.501042
    },
    "concept_1980": {
      "id": "concept_1980",
      "type": "concept",
      "name": "#### **Action-Based Routing**\n\n- **Single tool interface** with multiple actions\n- **Preserves all original functionality**\n- **Eliminates tool duplication**\n- **Maintains backward compatibility**\n\n### **Results Achieved**\n\n#### **Before (48 Tools)**\n\n- \u274c Overwhelming tool list\n- \u274c Multiple similar tools\n- \u274c Hard to find right tool\n- \u274c Tool duplication\n- \u274c Complex navigation\n\n#### **After (6 Tools)**\n\n- \u2705 Clean, organized interface\n- \u2705 6 cognitive domains\n- \u2705 Easy tool discovery\n- \u2705 Zero duplication\n- \u2705 Human brain-inspired organization\n\n### **Verification Steps**\n\n#### **1. Docker Container Rebuild**",
      "description": "Concept: #### **Action-Based Routing**\n\n- **Single tool interface** with multiple actions\n- **Preserves all original functionality**\n- **Eliminates tool duplication**\n- **Maintains backward compatibility**\n\n### **Results Achieved**\n\n#### **Before (48 Tools)**\n\n- \u274c Overwhelming tool list\n- \u274c Multiple similar tools\n- \u274c Hard to find right tool\n- \u274c Tool duplication\n- \u274c Complex navigation\n\n#### **After (6 Tools)**\n\n- \u2705 Clean, organized interface\n- \u2705 6 cognitive domains\n- \u2705 Easy tool discovery\n- \u2705 Zero duplication\n- \u2705 Human brain-inspired organization\n\n### **Verification Steps**\n\n#### **1. Docker Container Rebuild**",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.504491,
      "updated_at": 1754957551.504491
    },
    "concept_1981": {
      "id": "concept_1981",
      "type": "concept",
      "name": "\ud83d\ude80 **MISSION ACCOMPLISHED: 48 \u2192 6 Tools (87.5% Reduction)**",
      "description": "Concept: \ud83d\ude80 **MISSION ACCOMPLISHED: 48 \u2192 6 Tools (87.5% Reduction)**",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.505205,
      "updated_at": 1754957551.505205
    },
    "concept_1982": {
      "id": "concept_1982",
      "type": "concept",
      "name": "**Action-Based Routing**",
      "description": "Concept: **Action-Based Routing**",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.505673,
      "updated_at": 1754957551.505673
    },
    "concept_1983": {
      "id": "concept_1983",
      "type": "concept",
      "name": "\u274c Overwhelming tool list",
      "description": "Concept: \u274c Overwhelming tool list",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.506173,
      "updated_at": 1754957551.506173
    },
    "concept_1984": {
      "id": "concept_1984",
      "type": "concept",
      "name": "enhanced_brain_tools_simple.py",
      "description": "Concept: enhanced_brain_tools_simple.py",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.506593,
      "updated_at": 1754957551.506593
    },
    "concept_1985": {
      "id": "concept_1985",
      "type": "concept",
      "name": "**After (6 Tools)**",
      "description": "Concept: **After (6 Tools)**",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.507009,
      "updated_at": 1754957551.507009
    },
    "concept_1986": {
      "id": "concept_1986",
      "type": "concept",
      "name": "**Phase 1: Comment Out Individual Tools**",
      "description": "Concept: **Phase 1: Comment Out Individual Tools**",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.507433,
      "updated_at": 1754957551.507433
    },
    "concept_1987": {
      "id": "concept_1987",
      "type": "concept",
      "name": "workflow_optimization",
      "description": "Concept: workflow_optimization",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.507786,
      "updated_at": 1754957551.507786
    },
    "concept_1988": {
      "id": "concept_1988",
      "type": "concept",
      "name": "\u274c Complex navigation",
      "description": "Concept: \u274c Complex navigation",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.508412,
      "updated_at": 1754957551.508412
    },
    "concept_1989": {
      "id": "concept_1989",
      "type": "concept",
      "name": "**Conclusion**",
      "description": "Concept: **Conclusion**",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.508748,
      "updated_at": 1754957551.508748
    },
    "concept_1990": {
      "id": "concept_1990",
      "type": "concept",
      "name": "#### **3. Tool Count Verification**",
      "description": "Concept: #### **3. Tool Count Verification**",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.509099,
      "updated_at": 1754957551.509099
    },
    "concept_1991": {
      "id": "concept_1991",
      "type": "concept",
      "name": "**3. Tool Count Verification**",
      "description": "Concept: **3. Tool Count Verification**",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.509848,
      "updated_at": 1754957551.509848
    },
    "concept_1992": {
      "id": "concept_1992",
      "type": "concept",
      "name": "\u2705 Human brain-inspired organization",
      "description": "Concept: \u2705 Human brain-inspired organization",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.5108402,
      "updated_at": 1754957551.5108402
    },
    "concept_1993": {
      "id": "concept_1993",
      "type": "concept",
      "name": "\u2705 **Tool Count**: 48 \u2192 6 (**87.5% reduction**)",
      "description": "Concept: \u2705 **Tool Count**: 48 \u2192 6 (**87.5% reduction**)",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.511476,
      "updated_at": 1754957551.511476
    },
    "concept_1994": {
      "id": "concept_1994",
      "type": "concept",
      "name": "**For Users**",
      "description": "Concept: **For Users**",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.5118148,
      "updated_at": 1754957551.5118148
    },
    "concept_1995": {
      "id": "concept_1995",
      "type": "concept",
      "name": "bash\ndocker exec memory_mcp_server uv run python -c \"from main import mcp; print('Tools:', len([f for f in dir(mcp) if f.startswith('tool_')]))\"\n# Expected: \"Tools: 0\" (no direct tool decorators)",
      "description": "Concept: bash\ndocker exec memory_mcp_server uv run python -c \"from main import mcp; print('Tools:', len([f for f in dir(mcp) if f.startswith('tool_')]))\"\n# Expected: \"Tools: 0\" (no direct tool decorators)",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.512321,
      "updated_at": 1754957551.512321
    },
    "concept_1996": {
      "id": "concept_1996",
      "type": "concept",
      "name": "`learning_and_adaptation` - Unified learning operations",
      "description": "Concept: `learning_and_adaptation` - Unified learning operations",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.512695,
      "updated_at": 1754957551.512695
    },
    "concept_1997": {
      "id": "concept_1997",
      "type": "concept",
      "name": "Actions: `learn_from`, `continuous_learning_cycle`, `enhanced_workflow_execution`, `workflow_optimization`, `workflow_performance_analysis`, `batch_workflow_processing`",
      "description": "Concept: Actions: `learn_from`, `continuous_learning_cycle`, `enhanced_workflow_execution`, `workflow_optimization`, `workflow_performance_analysis`, `batch_workflow_processing`",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.5131588,
      "updated_at": 1754957551.5131588
    },
    "concept_1998": {
      "id": "concept_1998",
      "type": "concept",
      "name": "Verify all functionality works",
      "description": "Concept: Verify all functionality works",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.513522,
      "updated_at": 1754957551.5135229
    },
    "concept_1999": {
      "id": "concept_1999",
      "type": "concept",
      "name": "Check tool response times",
      "description": "Concept: Check tool response times",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.513887,
      "updated_at": 1754957551.513887
    },
    "concept_2000": {
      "id": "concept_2000",
      "type": "concept",
      "name": "learning_and_adaptation",
      "description": "Concept: learning_and_adaptation",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.5142431,
      "updated_at": 1754957551.5142431
    },
    "concept_2001": {
      "id": "concept_2001",
      "type": "concept",
      "name": "### **Benefits Achieved**\n\n#### **For Users**\n\n- **75% fewer tools** to navigate\n- **Cognitive domain organization** for intuitive use\n- **Preserved functionality** with better UX\n- **Cleaner Cursor interface**\n\n#### **For Developers**\n\n- **Maintainable codebase** with consolidated tools\n- **Clear tool organization** by cognitive function\n- **Eliminated duplication** and redundancy\n- **Human brain-inspired architecture**\n\n#### **For System Performance**\n\n- **Reduced memory usage** from fewer tool registrations\n- **Faster tool discovery** through domain organization\n- **Cleaner MCP server** with minimal tool overhead\n- **Optimized tool routing**\n\n### **Next Steps for User**\n\n#### **1. Test in Cursor**\n\n- Restart Cursor to load new MCP configuration\n- Verify only 6 tools are visible\n- Test functionality through action-based routing\n\n#### **2. Tool Usage Examples**",
      "description": "Concept: ### **Benefits Achieved**\n\n#### **For Users**\n\n- **75% fewer tools** to navigate\n- **Cognitive domain organization** for intuitive use\n- **Preserved functionality** with better UX\n- **Cleaner Cursor interface**\n\n#### **For Developers**\n\n- **Maintainable codebase** with consolidated tools\n- **Clear tool organization** by cognitive function\n- **Eliminated duplication** and redundancy\n- **Human brain-inspired architecture**\n\n#### **For System Performance**\n\n- **Reduced memory usage** from fewer tool registrations\n- **Faster tool discovery** through domain organization\n- **Cleaner MCP server** with minimal tool overhead\n- **Optimized tool routing**\n\n### **Next Steps for User**\n\n#### **1. Test in Cursor**\n\n- Restart Cursor to load new MCP configuration\n- Verify only 6 tools are visible\n- Test functionality through action-based routing\n\n#### **2. Tool Usage Examples**",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.515559,
      "updated_at": 1754957551.515559
    },
    "concept_2002": {
      "id": "concept_2002",
      "type": "concept",
      "name": "**Cognitive domain organization** for intuitive use",
      "description": "Concept: **Cognitive domain organization** for intuitive use",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.515966,
      "updated_at": 1754957551.515966
    },
    "concept_2003": {
      "id": "concept_2003",
      "type": "concept",
      "name": "**Problem Identified**",
      "description": "Concept: **Problem Identified**",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.5169358,
      "updated_at": 1754957551.5169358
    },
    "concept_2004": {
      "id": "concept_2004",
      "type": "concept",
      "name": "`processing_and_thinking` - Unified thinking operations",
      "description": "Concept: `processing_and_thinking` - Unified thinking operations",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.517309,
      "updated_at": 1754957551.517309
    },
    "concept_2005": {
      "id": "concept_2005",
      "type": "concept",
      "name": "`output_and_action` - Unified action operations",
      "description": "Concept: `output_and_action` - Unified action operations",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.517859,
      "updated_at": 1754957551.517859
    },
    "concept_2006": {
      "id": "concept_2006",
      "type": "concept",
      "name": "`self_monitoring` - Unified monitoring operations",
      "description": "Concept: `self_monitoring` - Unified monitoring operations",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.518332,
      "updated_at": 1754957551.518332
    },
    "concept_2007": {
      "id": "concept_2007",
      "type": "concept",
      "name": "await mcp.call_tool(\"list_plugins\")",
      "description": "Concept: await mcp.call_tool(\"list_plugins\")",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.5190752,
      "updated_at": 1754957551.5190752
    },
    "concept_2008": {
      "id": "concept_2008",
      "type": "concept",
      "name": "Actions: `think_deeply`, `reflect_enhanced`, `understand_deeply`, `code_analyze`, `debug_intelligently`, `refactor_safely`",
      "description": "Concept: Actions: `think_deeply`, `reflect_enhanced`, `understand_deeply`, `code_analyze`, `debug_intelligently`, `refactor_safely`",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.5195782,
      "updated_at": 1754957551.5195782
    },
    "concept_2009": {
      "id": "concept_2009",
      "type": "concept",
      "name": "**Technical Implementation**",
      "description": "Concept: **Technical Implementation**",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.519941,
      "updated_at": 1754957551.519941
    },
    "concept_2010": {
      "id": "concept_2010",
      "type": "concept",
      "name": "**For Developers**",
      "description": "Concept: **For Developers**",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.520303,
      "updated_at": 1754957551.520303
    },
    "concept_2011": {
      "id": "concept_2011",
      "type": "concept",
      "name": "**Results Achieved**",
      "description": "Concept: **Results Achieved**",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.5206609,
      "updated_at": 1754957551.5206609
    },
    "concept_2012": {
      "id": "concept_2012",
      "type": "concept",
      "name": "python\n# Instead of calling individual tools:\n# await mcp.call_tool(\"brain_info\")\n# await mcp.call_tool(\"list_plugins\")\n\n# Use consolidated tools with actions:\nawait mcp.call_tool(\"perceive_and_analyze\", action=\"brain_info\")\nawait mcp.call_tool(\"perceive_and_analyze\", action=\"list_plugins\")",
      "description": "Concept: python\n# Instead of calling individual tools:\n# await mcp.call_tool(\"brain_info\")\n# await mcp.call_tool(\"list_plugins\")\n\n# Use consolidated tools with actions:\nawait mcp.call_tool(\"perceive_and_analyze\", action=\"brain_info\")\nawait mcp.call_tool(\"perceive_and_analyze\", action=\"list_plugins\")",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.521634,
      "updated_at": 1754957551.521634
    },
    "concept_2013": {
      "id": "concept_2013",
      "type": "concept",
      "name": "**Human brain-inspired architecture**",
      "description": "Concept: **Human brain-inspired architecture**",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.522161,
      "updated_at": 1754957551.522161
    },
    "concept_2014": {
      "id": "concept_2014",
      "type": "concept",
      "name": "@mcp.tool()",
      "description": "Concept: @mcp.tool()",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md",
          "main.py"
        ]
      },
      "created_at": 1754957551.522515,
      "updated_at": 1754957552.169343
    },
    "concept_2015": {
      "id": "concept_2015",
      "type": "concept",
      "name": "get_user_context",
      "description": "Concept: get_user_context",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.5228732,
      "updated_at": 1754957551.5228732
    },
    "concept_2016": {
      "id": "concept_2016",
      "type": "concept",
      "name": "**Before (48 Tools)**",
      "description": "Concept: **Before (48 Tools)**",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.5232298,
      "updated_at": 1754957551.5232298
    },
    "concept_2017": {
      "id": "concept_2017",
      "type": "concept",
      "name": "**Single tool interface** with multiple actions",
      "description": "Concept: **Single tool interface** with multiple actions",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.523592,
      "updated_at": 1754957551.523592
    },
    "concept_2018": {
      "id": "concept_2018",
      "type": "concept",
      "name": "#### **2. Log Verification**",
      "description": "Concept: #### **2. Log Verification**",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.524462,
      "updated_at": 1754957551.524462
    },
    "concept_2019": {
      "id": "concept_2019",
      "type": "concept",
      "name": "**Reduced memory usage** from fewer tool registrations",
      "description": "Concept: **Reduced memory usage** from fewer tool registrations",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.524835,
      "updated_at": 1754957551.524835
    },
    "concept_2020": {
      "id": "concept_2020",
      "type": "concept",
      "name": "**Preserves all original functionality**",
      "description": "Concept: **Preserves all original functionality**",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.525208,
      "updated_at": 1754957551.525208
    },
    "concept_2021": {
      "id": "concept_2021",
      "type": "concept",
      "name": "**Cleaner MCP server** with minimal tool overhead",
      "description": "Concept: **Cleaner MCP server** with minimal tool overhead",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.525656,
      "updated_at": 1754957551.525656
    },
    "concept_2022": {
      "id": "concept_2022",
      "type": "concept",
      "name": "\u2705 Zero duplication",
      "description": "Concept: \u2705 Zero duplication",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.526127,
      "updated_at": 1754957551.526127
    },
    "concept_2023": {
      "id": "concept_2023",
      "type": "concept",
      "name": "**1. Test in Cursor**",
      "description": "Concept: **1. Test in Cursor**",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.526499,
      "updated_at": 1754957551.526499
    },
    "concept_2024": {
      "id": "concept_2024",
      "type": "concept",
      "name": "**Next Steps for User**",
      "description": "Concept: **Next Steps for User**",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.52686,
      "updated_at": 1754957551.52686
    },
    "concept_2025": {
      "id": "concept_2025",
      "type": "concept",
      "name": "\u2705 Easy tool discovery",
      "description": "Concept: \u2705 Easy tool discovery",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.527354,
      "updated_at": 1754957551.527354
    },
    "concept_2026": {
      "id": "concept_2026",
      "type": "concept",
      "name": "**Eliminates tool duplication**",
      "description": "Concept: **Eliminates tool duplication**",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.5277288,
      "updated_at": 1754957551.5277288
    },
    "concept_2027": {
      "id": "concept_2027",
      "type": "concept",
      "name": "\u274c Multiple similar tools",
      "description": "Concept: \u274c Multiple similar tools",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.5282362,
      "updated_at": 1754957551.5282362
    },
    "concept_2028": {
      "id": "concept_2028",
      "type": "concept",
      "name": "**Phase 3: Create Consolidated Cognitive System**",
      "description": "Concept: **Phase 3: Create Consolidated Cognitive System**",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.5286279,
      "updated_at": 1754957551.5286279
    },
    "concept_2029": {
      "id": "concept_2029",
      "type": "concept",
      "name": "Report any issues with action routing",
      "description": "Concept: Report any issues with action routing",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.529155,
      "updated_at": 1754957551.529155
    },
    "concept_2030": {
      "id": "concept_2030",
      "type": "concept",
      "name": "Actions: `consciousness_check`, `memory_stats`, `dream`, `initialize_chat_session`, `track_cursor_conversation`, `cursor_auto_inject_context`",
      "description": "Concept: Actions: `consciousness_check`, `memory_stats`, `dream`, `initialize_chat_session`, `track_cursor_conversation`, `cursor_auto_inject_context`",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.5295942,
      "updated_at": 1754957551.5295942
    },
    "concept_2031": {
      "id": "concept_2031",
      "type": "concept",
      "name": "\u2705 **Duplication**: 0% (eliminated)",
      "description": "Concept: \u2705 **Duplication**: 0% (eliminated)",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.530123,
      "updated_at": 1754957551.530123
    },
    "concept_2032": {
      "id": "concept_2032",
      "type": "concept",
      "name": "**100% functionality preserved** through action-based routing",
      "description": "Concept: **100% functionality preserved** through action-based routing",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.530874,
      "updated_at": 1754957551.530874
    },
    "concept_2033": {
      "id": "concept_2033",
      "type": "concept",
      "name": "**For System Performance**",
      "description": "Concept: **For System Performance**",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.531754,
      "updated_at": 1754957551.531754
    },
    "concept_2034": {
      "id": "concept_2034",
      "type": "concept",
      "name": "Expected: \"\ud83d\ude80 Total MCP tools available: 6 consolidated tools\"",
      "description": "Concept: Expected: \"\ud83d\ude80 Total MCP tools available: 6 consolidated tools\"",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.5328698,
      "updated_at": 1754957551.5328698
    },
    "concept_2035": {
      "id": "concept_2035",
      "type": "concept",
      "name": "Actions: `generate_memory_enhanced_response`, `orchestrate_tools`, `tool_performance_analysis`, `context_quality_assessment`, `workflow_health_check`, `enhanced_context_workflow`",
      "description": "Concept: Actions: `generate_memory_enhanced_response`, `orchestrate_tools`, `tool_performance_analysis`, `context_quality_assessment`, `workflow_health_check`, `enhanced_context_workflow`",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.533349,
      "updated_at": 1754957551.533349
    },
    "concept_2036": {
      "id": "concept_2036",
      "type": "concept",
      "name": "context_quality_assessment",
      "description": "Concept: context_quality_assessment",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.533698,
      "updated_at": 1754957551.533698
    },
    "concept_2037": {
      "id": "concept_2037",
      "type": "concept",
      "name": "Expected: \"Tools: 0\" (no direct tool decorators)",
      "description": "Concept: Expected: \"Tools: 0\" (no direct tool decorators)",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.534061,
      "updated_at": 1754957551.534061
    },
    "concept_2038": {
      "id": "concept_2038",
      "type": "concept",
      "name": "**Preserved functionality** with better UX",
      "description": "Concept: **Preserved functionality** with better UX",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.534427,
      "updated_at": 1754957551.534427
    },
    "concept_2039": {
      "id": "concept_2039",
      "type": "concept",
      "name": "**Tool Registration Method**",
      "description": "Concept: **Tool Registration Method**",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.534785,
      "updated_at": 1754957551.534785
    },
    "concept_2040": {
      "id": "concept_2040",
      "type": "concept",
      "name": "Actions: `brain_info`, `list_plugins`, `server_status`, `get_cursor_context`, `enhanced_context_retrieval`, `analyze_context_deeply`, `detect_patterns`, `assess_complexity`",
      "description": "Concept: Actions: `brain_info`, `list_plugins`, `server_status`, `get_cursor_context`, `enhanced_context_retrieval`, `analyze_context_deeply`, `detect_patterns`, `assess_complexity`",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.535251,
      "updated_at": 1754957551.535251
    },
    "concept_2041": {
      "id": "concept_2041",
      "type": "concept",
      "name": "Use consolidated tools with actions:",
      "description": "Concept: Use consolidated tools with actions:",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.535677,
      "updated_at": 1754957551.535677
    },
    "concept_2042": {
      "id": "concept_2042",
      "type": "concept",
      "name": "\ud83c\udfaf TOOL CONSOLIDATION SUCCESS REPORT",
      "description": "Concept: \ud83c\udfaf TOOL CONSOLIDATION SUCCESS REPORT",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.536273,
      "updated_at": 1754957551.536273
    },
    "concept_2043": {
      "id": "concept_2043",
      "type": "concept",
      "name": "Restart Cursor to load new MCP configuration",
      "description": "Concept: Restart Cursor to load new MCP configuration",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.536982,
      "updated_at": 1754957551.536982
    },
    "concept_2044": {
      "id": "concept_2044",
      "type": "concept",
      "name": "enhanced_workflow_execution",
      "description": "Concept: enhanced_workflow_execution",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.537588,
      "updated_at": 1754957551.537588
    },
    "concept_2045": {
      "id": "concept_2045",
      "type": "concept",
      "name": "\u2705 **Maintainability**: Dramatically enhanced",
      "description": "Concept: \u2705 **Maintainability**: Dramatically enhanced",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.538233,
      "updated_at": 1754957551.538233
    },
    "concept_2046": {
      "id": "concept_2046",
      "type": "concept",
      "name": "**Phase 2: Disable Enhanced Brain Tools**",
      "description": "Concept: **Phase 2: Disable Enhanced Brain Tools**",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.5385962,
      "updated_at": 1754957551.5385962
    },
    "concept_2047": {
      "id": "concept_2047",
      "type": "concept",
      "name": "Instead of calling individual tools:",
      "description": "Concept: Instead of calling individual tools:",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.538957,
      "updated_at": 1754957551.538958
    },
    "concept_2048": {
      "id": "concept_2048",
      "type": "concept",
      "name": "**2. Log Verification**",
      "description": "Concept: **2. Log Verification**",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.5393112,
      "updated_at": 1754957551.5393112
    },
    "concept_2049": {
      "id": "concept_2049",
      "type": "concept",
      "name": "**75% fewer tools** to navigate",
      "description": "Concept: **75% fewer tools** to navigate",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.539737,
      "updated_at": 1754957551.539737
    },
    "concept_2050": {
      "id": "concept_2050",
      "type": "concept",
      "name": "generate_memory_enhanced_response",
      "description": "Concept: generate_memory_enhanced_response",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.540104,
      "updated_at": 1754957551.540104
    },
    "concept_2051": {
      "id": "concept_2051",
      "type": "concept",
      "name": "Preserved all functionality in consolidated tools",
      "description": "Concept: Preserved all functionality in consolidated tools",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.540468,
      "updated_at": 1754957551.540468
    },
    "concept_2052": {
      "id": "concept_2052",
      "type": "concept",
      "name": "bash\ndocker-compose down\ndocker-compose build --no-cache memory_mcp_server\ndocker-compose up -d",
      "description": "Concept: bash\ndocker-compose down\ndocker-compose build --no-cache memory_mcp_server\ndocker-compose up -d",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.540871,
      "updated_at": 1754957551.540871
    },
    "concept_2053": {
      "id": "concept_2053",
      "type": "concept",
      "name": "tool_performance_analysis",
      "description": "Concept: tool_performance_analysis",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.5412219,
      "updated_at": 1754957551.5412219
    },
    "concept_2054": {
      "id": "concept_2054",
      "type": "concept",
      "name": "**Maintains backward compatibility**",
      "description": "Concept: **Maintains backward compatibility**",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.5419688,
      "updated_at": 1754957551.5419688
    },
    "concept_2055": {
      "id": "concept_2055",
      "type": "concept",
      "name": "**Clear tool organization** by cognitive function",
      "description": "Concept: **Clear tool organization** by cognitive function",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.542335,
      "updated_at": 1754957551.542335
    },
    "concept_2056": {
      "id": "concept_2056",
      "type": "concept",
      "name": "**6 unified tools** organized in human brain-inspired domains",
      "description": "Concept: **6 unified tools** organized in human brain-inspired domains",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.542712,
      "updated_at": 1754957551.542712
    },
    "concept_2057": {
      "id": "concept_2057",
      "type": "concept",
      "name": "**Result**: Clean, organized tool interface",
      "description": "Concept: **Result**: Clean, organized tool interface",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.543073,
      "updated_at": 1754957551.543073
    },
    "concept_2058": {
      "id": "concept_2058",
      "type": "concept",
      "name": "\u274c Hard to find right tool",
      "description": "Concept: \u274c Hard to find right tool",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.5435789,
      "updated_at": 1754957551.5435789
    },
    "concept_2059": {
      "id": "concept_2059",
      "type": "concept",
      "name": "**Verification Steps**",
      "description": "Concept: **Verification Steps**",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.543933,
      "updated_at": 1754957551.543933
    },
    "concept_2060": {
      "id": "concept_2060",
      "type": "concept",
      "name": "Verify only 6 tools are visible",
      "description": "Concept: Verify only 6 tools are visible",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.544287,
      "updated_at": 1754957551.544287
    },
    "concept_2061": {
      "id": "concept_2061",
      "type": "concept",
      "name": "workflow_performance_analysis",
      "description": "Concept: workflow_performance_analysis",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.544641,
      "updated_at": 1754957551.544641
    },
    "concept_2062": {
      "id": "concept_2062",
      "type": "concept",
      "name": "**Result**: Eliminated tool duplication",
      "description": "Concept: **Result**: Eliminated tool duplication",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.5449998,
      "updated_at": 1754957551.5449998
    },
    "concept_2063": {
      "id": "concept_2063",
      "type": "concept",
      "name": "\u2705 **Functionality**: 100% preserved",
      "description": "Concept: \u2705 **Functionality**: 100% preserved",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.5456178,
      "updated_at": 1754957551.5456178
    },
    "concept_2064": {
      "id": "concept_2064",
      "type": "concept",
      "name": "await mcp.call_tool(\"brain_info\")",
      "description": "Concept: await mcp.call_tool(\"brain_info\")",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.546016,
      "updated_at": 1754957551.546016
    },
    "concept_2065": {
      "id": "concept_2065",
      "type": "concept",
      "name": "`memory_and_storage` - Unified memory operations",
      "description": "Concept: `memory_and_storage` - Unified memory operations",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.5463831,
      "updated_at": 1754957551.5463831
    },
    "concept_2066": {
      "id": "concept_2066",
      "type": "concept",
      "name": "Commented out `EnhancedBrainTools` initialization",
      "description": "Concept: Commented out `EnhancedBrainTools` initialization",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.5467699,
      "updated_at": 1754957551.5467699
    },
    "concept_2067": {
      "id": "concept_2067",
      "type": "concept",
      "name": "**2. Tool Usage Examples**",
      "description": "Concept: **2. Tool Usage Examples**",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.547128,
      "updated_at": 1754957551.547128
    },
    "concept_2068": {
      "id": "concept_2068",
      "type": "concept",
      "name": "enhanced_context_workflow",
      "description": "Concept: enhanced_context_workflow",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.547495,
      "updated_at": 1754957551.547495
    },
    "concept_2069": {
      "id": "concept_2069",
      "type": "concept",
      "name": "\u2705 **User Experience**: Significantly improved",
      "description": "Concept: \u2705 **User Experience**: Significantly improved",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.54827,
      "updated_at": 1754957551.54827
    },
    "concept_2070": {
      "id": "concept_2070",
      "type": "concept",
      "name": "**3. Monitor Performance**",
      "description": "Concept: **3. Monitor Performance**",
      "source": "TOOL_CONSOLIDATION_SUCCESS.md",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "TOOL_CONSOLIDATION_SUCCESS.md"
        ]
      },
      "created_at": 1754957551.54867,
      "updated_at": 1754957551.54867
    },
    "doc_2071": {
      "id": "doc_2071",
      "type": "document",
      "name": "Brain_Interface",
      "description": "Document: brain_interface.py",
      "source": "brain_interface.py",
      "confidence": 0.9,
      "metadata": {
        "file_size": 37293,
        "lines": 779,
        "language": "python",
        "last_modified": 1754944273.8211756
      },
      "created_at": 1754957551.561179,
      "updated_at": 1754957551.561179
    },
    "concept_2072": {
      "id": "concept_2072",
      "type": "concept",
      "name": "identity_profiles",
      "description": "Concept: identity_profiles",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.561568,
      "updated_at": 1754957551.561568
    },
    "concept_2073": {
      "id": "concept_2073",
      "type": "concept",
      "name": "Step 1: Load user identity profile",
      "description": "Concept: Step 1: Load user identity profile",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.561933,
      "updated_at": 1754957551.561933
    },
    "concept_2074": {
      "id": "concept_2074",
      "type": "concept",
      "name": "search_memories",
      "description": "Concept: search_memories",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py",
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.562279,
      "updated_at": 1754957551.8262668
    },
    "concept_2075": {
      "id": "concept_2075",
      "type": "concept",
      "name": "dict",
      "description": "Concept: dict",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py",
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py",
          "function_call_logger.py",
          "knowledge_ingestion_engine.py",
          "llm_client.py",
          "main.py",
          "project_scanner.py",
          "test_enhanced_integration.py",
          "test_mcp_integration.py",
          "tool_registry.py"
        ]
      },
      "created_at": 1754957551.562617,
      "updated_at": 1754957552.825678
    },
    "concept_2076": {
      "id": "concept_2076",
      "type": "concept",
      "name": "Import and use ContextAnalyzer directly",
      "description": "Concept: Import and use ContextAnalyzer directly",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py",
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.562979,
      "updated_at": 1754957551.831563
    },
    "concept_2077": {
      "id": "concept_2077",
      "type": "concept",
      "name": "Perform deep context analysis on the query for better understanding",
      "description": "Concept: Perform deep context analysis on the query for better understanding",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.5633678,
      "updated_at": 1754957551.5633678
    },
    "concept_2078": {
      "id": "concept_2078",
      "type": "concept",
      "name": "Fallback to direct context analysis",
      "description": "Concept: Fallback to direct context analysis",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.5637271,
      "updated_at": 1754957551.5637271
    },
    "concept_2079": {
      "id": "concept_2079",
      "type": "concept",
      "name": "ContextAnalyzer",
      "description": "Concept: ContextAnalyzer",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py",
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.564072,
      "updated_at": 1754957551.832365
    },
    "concept_2080": {
      "id": "concept_2080",
      "type": "concept",
      "name": "Enhanced categorization using context analysis",
      "description": "Concept: Enhanced categorization using context analysis",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.564436,
      "updated_at": 1754957551.564436
    },
    "concept_2081": {
      "id": "concept_2081",
      "type": "concept",
      "name": "emotion_activity",
      "description": "Concept: emotion_activity",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py",
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.564787,
      "updated_at": 1754957551.833625
    },
    "concept_2082": {
      "id": "concept_2082",
      "type": "concept",
      "name": "ai_model_name",
      "description": "Concept: ai_model_name",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py",
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.565173,
      "updated_at": 1754957551.83323
    },
    "concept_2083": {
      "id": "concept_2083",
      "type": "concept",
      "name": "database",
      "description": "Concept: database",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py",
          "function_call_logger.py",
          "main.py"
        ]
      },
      "created_at": 1754957551.565529,
      "updated_at": 1754957552.1389482
    },
    "concept_2084": {
      "id": "concept_2084",
      "type": "concept",
      "name": "Create a mock storage adapter for the analyzer",
      "description": "Concept: Create a mock storage adapter for the analyzer",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py",
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.566099,
      "updated_at": 1754957551.835434
    },
    "concept_2085": {
      "id": "concept_2085",
      "type": "concept",
      "name": "Path",
      "description": "Concept: Path",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py",
          "cleanup_project.py",
          "demo_enhanced_context_system.py",
          "demo_project_scanner.py",
          "demo_restructured_cognitive_system.py",
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py",
          "healthcheck.py",
          "knowledge_ingestion_engine.py",
          "main.py",
          "project_scanner.py",
          "test_tool_registry.py"
        ]
      },
      "created_at": 1754957551.5664809,
      "updated_at": 1754957552.8078232
    },
    "concept_2086": {
      "id": "concept_2086",
      "type": "concept",
      "name": "Create and use the context analyzer",
      "description": "Concept: Create and use the context analyzer",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py",
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.5668411,
      "updated_at": 1754957551.8372538
    },
    "concept_2087": {
      "id": "concept_2087",
      "type": "concept",
      "name": "Default consciousness state",
      "description": "Concept: Default consciousness state",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.5671911,
      "updated_at": 1754957551.5671911
    },
    "concept_2088": {
      "id": "concept_2088",
      "type": "concept",
      "name": "lesson_type",
      "description": "Concept: lesson_type",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.567533,
      "updated_at": 1754957551.567533
    },
    "concept_2089": {
      "id": "concept_2089",
      "type": "concept",
      "name": "context_analysis",
      "description": "Concept: context_analysis",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py",
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py",
          "test_docker_functionality.py"
        ]
      },
      "created_at": 1754957551.567874,
      "updated_at": 1754957552.668273
    },
    "concept_2090": {
      "id": "concept_2090",
      "type": "concept",
      "name": "recent_topics",
      "description": "Concept: recent_topics",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.568241,
      "updated_at": 1754957551.568241
    },
    "concept_2091": {
      "id": "concept_2091",
      "type": "concept",
      "name": "Register clean, human brain-inspired tools with enhanced contextual understanding",
      "description": "Concept: Register clean, human brain-inspired tools with enhanced contextual understanding",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.56867,
      "updated_at": 1754957551.568671
    },
    "concept_2092": {
      "id": "concept_2092",
      "type": "concept",
      "name": "storage",
      "description": "Concept: storage",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py",
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py",
          "main.py"
        ]
      },
      "created_at": 1754957551.5690272,
      "updated_at": 1754957552.468236
    },
    "concept_2093": {
      "id": "concept_2093",
      "type": "concept",
      "name": "category",
      "description": "Concept: category",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py",
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py",
          "test_tool_registry.py"
        ]
      },
      "created_at": 1754957551.569387,
      "updated_at": 1754957552.8088992
    },
    "concept_2094": {
      "id": "concept_2094",
      "type": "concept",
      "name": "context_score",
      "description": "Concept: context_score",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.569737,
      "updated_at": 1754957551.569737
    },
    "concept_2095": {
      "id": "concept_2095",
      "type": "concept",
      "name": "key",
      "description": "Concept: key",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py",
          "demo_enhanced_context_system.py",
          "demo_project_scanner.py",
          "enhanced_brain_tools_simple.py",
          "knowledge_ingestion_engine.py",
          "project_scanner.py"
        ]
      },
      "created_at": 1754957551.570085,
      "updated_at": 1754957552.550449
    },
    "concept_2096": {
      "id": "concept_2096",
      "type": "concept",
      "name": "_register_brain_tools",
      "description": "Concept: _register_brain_tools",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.570472,
      "updated_at": 1754957551.570472
    },
    "concept_2097": {
      "id": "concept_2097",
      "type": "concept",
      "name": "logger",
      "description": "Concept: logger",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py",
          "demo_enhanced_context_system.py",
          "demo_restructured_cognitive_system.py",
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py",
          "function_call_logger.py",
          "knowledge_ingestion_engine.py",
          "llm_client.py",
          "main.py",
          "project_scanner.py",
          "test_enhanced_integration.py",
          "test_mcp_integration.py",
          "tool_registry.py"
        ]
      },
      "created_at": 1754957551.5709262,
      "updated_at": 1754957552.8269062
    },
    "concept_2098": {
      "id": "concept_2098",
      "type": "concept",
      "name": "storage_success",
      "description": "Concept: storage_success",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.571344,
      "updated_at": 1754957551.571344
    },
    "concept_2099": {
      "id": "concept_2099",
      "type": "concept",
      "name": "Add context-based insights",
      "description": "Concept: Add context-based insights",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.571705,
      "updated_at": 1754957551.571705
    },
    "concept_2100": {
      "id": "concept_2100",
      "type": "concept",
      "name": "search_limit",
      "description": "Concept: search_limit",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.572064,
      "updated_at": 1754957551.572064
    },
    "concept_2101": {
      "id": "concept_2101",
      "type": "concept",
      "name": "Get information about available brain tools",
      "description": "Concept: Get information about available brain tools",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.572444,
      "updated_at": 1754957551.572444
    },
    "concept_2102": {
      "id": "concept_2102",
      "type": "concept",
      "name": "hashlib",
      "description": "Concept: hashlib",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py",
          "function_call_logger.py",
          "project_scanner.py"
        ]
      },
      "created_at": 1754957551.572801,
      "updated_at": 1754957552.554796
    },
    "concept_2103": {
      "id": "concept_2103",
      "type": "concept",
      "name": "__init__",
      "description": "Concept: __init__",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py",
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py",
          "function_call_logger.py",
          "knowledge_ingestion_engine.py",
          "llm_client.py",
          "main.py",
          "project_scanner.py",
          "test_enhanced_integration.py",
          "test_mcp_integration.py",
          "tool_registry.py"
        ]
      },
      "created_at": 1754957551.57316,
      "updated_at": 1754957552.828851
    },
    "concept_2104": {
      "id": "concept_2104",
      "type": "concept",
      "name": "context_insights",
      "description": "Concept: context_insights",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.5735302,
      "updated_at": 1754957551.5735302
    },
    "concept_2105": {
      "id": "concept_2105",
      "type": "concept",
      "name": "context_layers",
      "description": "Concept: context_layers",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py",
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.573896,
      "updated_at": 1754957551.84574
    },
    "concept_2106": {
      "id": "concept_2106",
      "type": "concept",
      "name": "This would trigger background memory consolidation",
      "description": "Concept: This would trigger background memory consolidation",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.574301,
      "updated_at": 1754957551.574301
    },
    "concept_2107": {
      "id": "concept_2107",
      "type": "concept",
      "name": "Step 2: Get recent conversation history for this user",
      "description": "Concept: Step 2: Get recent conversation history for this user",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.574705,
      "updated_at": 1754957551.574705
    },
    "concept_2108": {
      "id": "concept_2108",
      "type": "concept",
      "name": "Limit content size for MCP compatibility",
      "description": "Concept: Limit content size for MCP compatibility",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.575087,
      "updated_at": 1754957551.575087
    },
    "concept_2109": {
      "id": "concept_2109",
      "type": "concept",
      "name": "BrainInterface",
      "description": "Concept: BrainInterface",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py",
          "main.py"
        ]
      },
      "created_at": 1754957551.575445,
      "updated_at": 1754957552.246739
    },
    "concept_2110": {
      "id": "concept_2110",
      "type": "concept",
      "name": "session_id",
      "description": "Concept: session_id",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py",
          "function_call_logger.py"
        ]
      },
      "created_at": 1754957551.575885,
      "updated_at": 1754957551.922834
    },
    "concept_2111": {
      "id": "concept_2111",
      "type": "concept",
      "name": "explicit_content",
      "description": "Concept: explicit_content",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.576332,
      "updated_at": 1754957551.576332
    },
    "concept_2112": {
      "id": "concept_2112",
      "type": "concept",
      "name": "Enhanced tags based on context analysis",
      "description": "Concept: Enhanced tags based on context analysis",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.57674,
      "updated_at": 1754957551.57674
    },
    "concept_2113": {
      "id": "concept_2113",
      "type": "concept",
      "name": "text",
      "description": "Concept: text",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py",
          "test_mcp_integration.py",
          "test_mcp_tools.py"
        ]
      },
      "created_at": 1754957551.57711,
      "updated_at": 1754957552.790851
    },
    "concept_2114": {
      "id": "concept_2114",
      "type": "concept",
      "name": "tags",
      "description": "Concept: tags",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.577492,
      "updated_at": 1754957551.577492
    },
    "concept_2115": {
      "id": "concept_2115",
      "type": "concept",
      "name": "Generate simple hash for storage key",
      "description": "Concept: Generate simple hash for storage key",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.577898,
      "updated_at": 1754957551.577898
    },
    "concept_2116": {
      "id": "concept_2116",
      "type": "concept",
      "name": "str",
      "description": "Concept: str",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py",
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py",
          "function_call_logger.py",
          "knowledge_ingestion_engine.py",
          "llm_client.py",
          "main.py",
          "project_scanner.py"
        ]
      },
      "created_at": 1754957551.5782568,
      "updated_at": 1754957552.5657191
    },
    "concept_2117": {
      "id": "concept_2117",
      "type": "concept",
      "name": "frontal_activity",
      "description": "Concept: frontal_activity",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py",
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.578638,
      "updated_at": 1754957551.8531609
    },
    "concept_2118": {
      "id": "concept_2118",
      "type": "concept",
      "name": "Count memories by type",
      "description": "Concept: Count memories by type",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.5791092,
      "updated_at": 1754957551.5791092
    },
    "concept_2119": {
      "id": "concept_2119",
      "type": "concept",
      "name": "Limit error message size",
      "description": "Concept: Limit error message size",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.579492,
      "updated_at": 1754957551.579492
    },
    "concept_2120": {
      "id": "concept_2120",
      "type": "concept",
      "name": "key_memories",
      "description": "Concept: key_memories",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.579852,
      "updated_at": 1754957551.579852
    },
    "concept_2121": {
      "id": "concept_2121",
      "type": "concept",
      "name": "Add the cognitive brain plugin path",
      "description": "Concept: Add the cognitive brain plugin path",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py",
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.580226,
      "updated_at": 1754957551.858318
    },
    "concept_2122": {
      "id": "concept_2122",
      "type": "concept",
      "name": "context_analyzer",
      "description": "Concept: context_analyzer",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py",
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py",
          "healthcheck.py"
        ]
      },
      "created_at": 1754957551.5805929,
      "updated_at": 1754957551.9541361
    },
    "concept_2123": {
      "id": "concept_2123",
      "type": "concept",
      "name": "get_brain_state",
      "description": "Concept: get_brain_state",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py",
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.5809631,
      "updated_at": 1754957551.85901
    },
    "concept_2124": {
      "id": "concept_2124",
      "type": "concept",
      "name": "page_count",
      "description": "Concept: page_count",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.58132,
      "updated_at": 1754957551.58132
    },
    "concept_2125": {
      "id": "concept_2125",
      "type": "concept",
      "name": "memory_value",
      "description": "Concept: memory_value",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.5816908,
      "updated_at": 1754957551.5816908
    },
    "concept_2126": {
      "id": "concept_2126",
      "type": "concept",
      "name": "First, perform deep context analysis for enhanced understanding",
      "description": "Concept: First, perform deep context analysis for enhanced understanding",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.582091,
      "updated_at": 1754957551.582091
    },
    "concept_2127": {
      "id": "concept_2127",
      "type": "concept",
      "name": "Analyze the content",
      "description": "Concept: Analyze the content",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py",
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.5824509,
      "updated_at": 1754957551.859757
    },
    "concept_2128": {
      "id": "concept_2128",
      "type": "concept",
      "name": "Step 6: Update brain state with session info",
      "description": "Concept: Step 6: Update brain state with session info",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.582828,
      "updated_at": 1754957551.582828
    },
    "concept_2129": {
      "id": "concept_2129",
      "type": "concept",
      "name": "technical_terms",
      "description": "Concept: technical_terms",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.5831869,
      "updated_at": 1754957551.5831869
    },
    "concept_2130": {
      "id": "concept_2130",
      "type": "concept",
      "name": "plugin_path",
      "description": "Concept: plugin_path",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py",
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.583541,
      "updated_at": 1754957551.861282
    },
    "concept_2131": {
      "id": "concept_2131",
      "type": "concept",
      "name": "get_brain_db",
      "description": "Concept: get_brain_db",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py",
          "function_call_logger.py",
          "main.py"
        ]
      },
      "created_at": 1754957551.583895,
      "updated_at": 1754957552.348531
    },
    "concept_2132": {
      "id": "concept_2132",
      "type": "concept",
      "name": "feedback",
      "description": "Concept: feedback",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.584249,
      "updated_at": 1754957551.584249
    },
    "concept_2133": {
      "id": "concept_2133",
      "type": "concept",
      "name": "Process with memory system for integration",
      "description": "Concept: Process with memory system for integration",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.584624,
      "updated_at": 1754957551.584624
    },
    "concept_2134": {
      "id": "concept_2134",
      "type": "concept",
      "name": "summary_parts",
      "description": "Concept: summary_parts",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.584984,
      "updated_at": 1754957551.584984
    },
    "concept_2135": {
      "id": "concept_2135",
      "type": "concept",
      "name": "memory_search_results",
      "description": "Concept: memory_search_results",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.585345,
      "updated_at": 1754957551.585345
    },
    "concept_2136": {
      "id": "concept_2136",
      "type": "concept",
      "name": "complexity_level",
      "description": "Concept: complexity_level",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py",
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.585732,
      "updated_at": 1754957551.8643
    },
    "concept_2137": {
      "id": "concept_2137",
      "type": "concept",
      "name": "analysis_type",
      "description": "Concept: analysis_type",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py",
          "demo_restructured_cognitive_system.py"
        ]
      },
      "created_at": 1754957551.5862021,
      "updated_at": 1754957551.738493
    },
    "concept_2138": {
      "id": "concept_2138",
      "type": "concept",
      "name": "summary",
      "description": "Concept: summary",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py",
          "demo_enhanced_context_system.py",
          "demo_restructured_cognitive_system.py",
          "knowledge_ingestion_engine.py",
          "project_scanner.py"
        ]
      },
      "created_at": 1754957551.586595,
      "updated_at": 1754957552.587191
    },
    "concept_2139": {
      "id": "concept_2139",
      "type": "concept",
      "name": "context_enhanced_confidence",
      "description": "Concept: context_enhanced_confidence",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.587026,
      "updated_at": 1754957551.587026
    },
    "concept_2140": {
      "id": "concept_2140",
      "type": "concept",
      "name": "session_updates",
      "description": "Concept: session_updates",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.5873978,
      "updated_at": 1754957551.5873978
    },
    "concept_2141": {
      "id": "concept_2141",
      "type": "concept",
      "name": "context_activity",
      "description": "Concept: context_activity",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py",
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.587751,
      "updated_at": 1754957551.868371
    },
    "concept_2142": {
      "id": "concept_2142",
      "type": "concept",
      "name": "Create enhanced summary with context",
      "description": "Concept: Create enhanced summary with context",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.588119,
      "updated_at": 1754957551.588119
    },
    "concept_2143": {
      "id": "concept_2143",
      "type": "concept",
      "name": "documents",
      "description": "Concept: documents",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.588467,
      "updated_at": 1754957551.588467
    },
    "concept_2144": {
      "id": "concept_2144",
      "type": "concept",
      "name": "Perform deep context analysis for enhanced learning",
      "description": "Concept: Perform deep context analysis for enhanced learning",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.588844,
      "updated_at": 1754957551.588844
    },
    "concept_2145": {
      "id": "concept_2145",
      "type": "concept",
      "name": "Extract technical terms and concepts",
      "description": "Concept: Extract technical terms and concepts",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.589207,
      "updated_at": 1754957551.589207
    },
    "concept_2146": {
      "id": "concept_2146",
      "type": "concept",
      "name": "Use direct context analysis as fallback",
      "description": "Concept: Use direct context analysis as fallback",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.5895722,
      "updated_at": 1754957551.5895722
    },
    "concept_2147": {
      "id": "concept_2147",
      "type": "concept",
      "name": "Enhanced memory tags based on context analysis",
      "description": "Concept: Enhanced memory tags based on context analysis",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py",
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.589966,
      "updated_at": 1754957551.87111
    },
    "concept_2148": {
      "id": "concept_2148",
      "type": "concept",
      "name": "MockStorageAdapter",
      "description": "Concept: MockStorageAdapter",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py",
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.590323,
      "updated_at": 1754957551.873131
    },
    "concept_2149": {
      "id": "concept_2149",
      "type": "concept",
      "name": "page_size",
      "description": "Concept: page_size",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.590676,
      "updated_at": 1754957551.590676
    },
    "concept_2150": {
      "id": "concept_2150",
      "type": "concept",
      "name": "Adjust recall confidence based on context understanding",
      "description": "Concept: Adjust recall confidence based on context understanding",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.591058,
      "updated_at": 1754957551.591058
    },
    "concept_2151": {
      "id": "concept_2151",
      "type": "concept",
      "name": "content_hash",
      "description": "Concept: content_hash",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.591415,
      "updated_at": 1754957551.591415
    },
    "concept_2152": {
      "id": "concept_2152",
      "type": "concept",
      "name": "Database size",
      "description": "Concept: Database size",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.591771,
      "updated_at": 1754957551.591771
    },
    "concept_2153": {
      "id": "concept_2153",
      "type": "concept",
      "name": "typing",
      "description": "Concept: typing",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py",
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py",
          "function_call_logger.py",
          "knowledge_ingestion_engine.py",
          "llm_client.py",
          "main.py",
          "project_scanner.py",
          "test_enhanced_integration.py",
          "test_mcp_integration.py",
          "tool_registry.py"
        ]
      },
      "created_at": 1754957551.5921202,
      "updated_at": 1754957552.824778
    },
    "concept_2154": {
      "id": "concept_2154",
      "type": "concept",
      "name": "sys",
      "description": "Concept: sys",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py",
          "demo_enhanced_context_system.py",
          "demo_restructured_cognitive_system.py",
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py",
          "healthcheck.py",
          "knowledge_ingestion_engine.py",
          "main.py",
          "project_scanner.py",
          "test_tool_registry.py"
        ]
      },
      "created_at": 1754957551.592465,
      "updated_at": 1754957552.8063161
    },
    "concept_2155": {
      "id": "concept_2155",
      "type": "concept",
      "name": "Basic complexity assessment",
      "description": "Concept: Basic complexity assessment",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.592839,
      "updated_at": 1754957551.592839
    },
    "concept_2156": {
      "id": "concept_2156",
      "type": "concept",
      "name": "recent",
      "description": "Concept: recent",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.593195,
      "updated_at": 1754957551.593195
    },
    "concept_2157": {
      "id": "concept_2157",
      "type": "concept",
      "name": "Step 4: Get relevant learning content",
      "description": "Concept: Step 4: Get relevant learning content",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.593567,
      "updated_at": 1754957551.593567
    },
    "concept_2158": {
      "id": "concept_2158",
      "type": "concept",
      "name": "Enhanced relevance scoring using context analysis",
      "description": "Concept: Enhanced relevance scoring using context analysis",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.5939462,
      "updated_at": 1754957551.5939462
    },
    "concept_2159": {
      "id": "concept_2159",
      "type": "concept",
      "name": "memory_result",
      "description": "Concept: memory_result",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py",
          "main.py"
        ]
      },
      "created_at": 1754957551.594642,
      "updated_at": 1754957552.367425
    },
    "concept_2160": {
      "id": "concept_2160",
      "type": "concept",
      "name": "result",
      "description": "Concept: result",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py",
          "demo_restructured_cognitive_system.py",
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py",
          "function_call_logger.py",
          "knowledge_ingestion_engine.py",
          "llm_client.py",
          "main.py",
          "test_docker_functionality.py",
          "test_enhanced_docker.py",
          "test_mcp_tools.py"
        ]
      },
      "created_at": 1754957551.594999,
      "updated_at": 1754957552.79559
    },
    "concept_2161": {
      "id": "concept_2161",
      "type": "concept",
      "name": "complexity_category",
      "description": "Concept: complexity_category",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.5953631,
      "updated_at": 1754957551.5953631
    },
    "concept_2162": {
      "id": "concept_2162",
      "type": "concept",
      "name": "memory_key",
      "description": "Concept: memory_key",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.595735,
      "updated_at": 1754957551.595735
    },
    "concept_2163": {
      "id": "concept_2163",
      "type": "concept",
      "name": "Perform deep context analysis for enhanced memory formation",
      "description": "Concept: Perform deep context analysis for enhanced memory formation",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.596181,
      "updated_at": 1754957551.596181
    },
    "concept_2164": {
      "id": "concept_2164",
      "type": "concept",
      "name": "interaction_summary",
      "description": "Concept: interaction_summary",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.596542,
      "updated_at": 1754957551.596542
    },
    "concept_2165": {
      "id": "concept_2165",
      "type": "concept",
      "name": "db_size_mb",
      "description": "Concept: db_size_mb",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.5969,
      "updated_at": 1754957551.5969
    },
    "concept_2166": {
      "id": "concept_2166",
      "type": "concept",
      "name": "Generate a summary of previous interactions and relevant context",
      "description": "Concept: Generate a summary of previous interactions and relevant context",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.597291,
      "updated_at": 1754957551.597291
    },
    "concept_2167": {
      "id": "concept_2167",
      "type": "concept",
      "name": "base_confidence",
      "description": "Concept: base_confidence",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.597645,
      "updated_at": 1754957551.597645
    },
    "concept_2168": {
      "id": "concept_2168",
      "type": "concept",
      "name": "value",
      "description": "Concept: value",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py",
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957551.597993,
      "updated_at": 1754957552.037693
    },
    "concept_2169": {
      "id": "concept_2169",
      "type": "concept",
      "name": "Try to use the new analyze_context_deeply tool",
      "description": "Concept: Try to use the new analyze_context_deeply tool",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.598481,
      "updated_at": 1754957551.598482
    },
    "concept_2170": {
      "id": "concept_2170",
      "type": "concept",
      "name": "memory_counts",
      "description": "Concept: memory_counts",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.598859,
      "updated_at": 1754957551.598859
    },
    "concept_2171": {
      "id": "concept_2171",
      "type": "concept",
      "name": "limit",
      "description": "Concept: limit",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py",
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py",
          "main.py"
        ]
      },
      "created_at": 1754957551.599318,
      "updated_at": 1754957552.2868228
    },
    "concept_2172": {
      "id": "concept_2172",
      "type": "concept",
      "name": "content_lower",
      "description": "Concept: content_lower",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py",
          "project_scanner.py"
        ]
      },
      "created_at": 1754957551.599673,
      "updated_at": 1754957552.6211689
    },
    "concept_2173": {
      "id": "concept_2173",
      "type": "concept",
      "name": "query",
      "description": "Concept: query",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py",
          "main.py"
        ]
      },
      "created_at": 1754957551.60002,
      "updated_at": 1754957552.375614
    },
    "concept_2174": {
      "id": "concept_2174",
      "type": "concept",
      "name": "content",
      "description": "Concept: content",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py",
          "knowledge_ingestion_engine.py",
          "main.py",
          "project_scanner.py"
        ]
      },
      "created_at": 1754957551.600366,
      "updated_at": 1754957552.6248472
    },
    "concept_2175": {
      "id": "concept_2175",
      "type": "concept",
      "name": "recent_conversations",
      "description": "Concept: recent_conversations",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py",
          "main.py"
        ]
      },
      "created_at": 1754957551.600723,
      "updated_at": 1754957552.3796868
    },
    "concept_2176": {
      "id": "concept_2176",
      "type": "concept",
      "name": "Convert depth to search intensity",
      "description": "Concept: Convert depth to search intensity",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.601089,
      "updated_at": 1754957551.601089
    },
    "concept_2177": {
      "id": "concept_2177",
      "type": "concept",
      "name": "analyzer",
      "description": "Concept: analyzer",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py",
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.601439,
      "updated_at": 1754957551.8886552
    },
    "concept_2178": {
      "id": "concept_2178",
      "type": "concept",
      "name": "Create a simple brain state",
      "description": "Concept: Create a simple brain state",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py",
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.6018088,
      "updated_at": 1754957551.889427
    },
    "concept_2179": {
      "id": "concept_2179",
      "type": "concept",
      "name": "Return enhanced, context-aware response",
      "description": "Concept: Return enhanced, context-aware response",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.602187,
      "updated_at": 1754957551.602187
    },
    "concept_2180": {
      "id": "concept_2180",
      "type": "concept",
      "name": "Enhanced fallback reflection with context analysis",
      "description": "Concept: Enhanced fallback reflection with context analysis",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.602567,
      "updated_at": 1754957551.602567
    },
    "concept_2181": {
      "id": "concept_2181",
      "type": "concept",
      "name": "learning_topics",
      "description": "Concept: learning_topics",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.602921,
      "updated_at": 1754957551.602921
    },
    "concept_2182": {
      "id": "concept_2182",
      "type": "concept",
      "name": "recent_memories",
      "description": "Concept: recent_memories",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.603273,
      "updated_at": 1754957551.603273
    },
    "concept_2183": {
      "id": "concept_2183",
      "type": "concept",
      "name": "user_message",
      "description": "Concept: user_message",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py",
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py",
          "function_call_logger.py",
          "llm_client.py",
          "main.py"
        ]
      },
      "created_at": 1754957551.603631,
      "updated_at": 1754957552.3823822
    },
    "concept_2184": {
      "id": "concept_2184",
      "type": "concept",
      "name": "memory_activity",
      "description": "Concept: memory_activity",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py",
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.603991,
      "updated_at": 1754957551.892662
    },
    "concept_2185": {
      "id": "concept_2185",
      "type": "concept",
      "name": "pathlib",
      "description": "Concept: pathlib",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py",
          "cleanup_project.py",
          "demo_enhanced_context_system.py",
          "demo_project_scanner.py",
          "demo_restructured_cognitive_system.py",
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py",
          "healthcheck.py",
          "knowledge_ingestion_engine.py",
          "main.py",
          "project_scanner.py",
          "test_tool_registry.py"
        ]
      },
      "created_at": 1754957551.604342,
      "updated_at": 1754957552.803116
    },
    "concept_2186": {
      "id": "concept_2186",
      "type": "concept",
      "name": "implicit_goals",
      "description": "Concept: implicit_goals",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.604701,
      "updated_at": 1754957551.604701
    },
    "concept_2187": {
      "id": "concept_2187",
      "type": "concept",
      "name": "Clean interface that mirrors human brain functions",
      "description": "Concept: Clean interface that mirrors human brain functions",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.605088,
      "updated_at": 1754957551.605088
    },
    "concept_2188": {
      "id": "concept_2188",
      "type": "concept",
      "name": "Step 5: Generate interaction summary",
      "description": "Concept: Step 5: Generate interaction summary",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.605462,
      "updated_at": 1754957551.605462
    },
    "concept_2189": {
      "id": "concept_2189",
      "type": "concept",
      "name": "words",
      "description": "Concept: words",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.605851,
      "updated_at": 1754957551.605851
    },
    "concept_2190": {
      "id": "concept_2190",
      "type": "concept",
      "name": "Store in database",
      "description": "Concept: Store in database",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.606463,
      "updated_at": 1754957551.606463
    },
    "concept_2191": {
      "id": "concept_2191",
      "type": "concept",
      "name": "Step 3: Search for relevant memories and experiences",
      "description": "Concept: Step 3: Search for relevant memories and experiences",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.6068811,
      "updated_at": 1754957551.6068811
    },
    "concept_2192": {
      "id": "concept_2192",
      "type": "concept",
      "name": "Perform deep context analysis on the reflection topic",
      "description": "Concept: Perform deep context analysis on the reflection topic",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.60727,
      "updated_at": 1754957551.60727
    },
    "concept_2193": {
      "id": "concept_2193",
      "type": "concept",
      "name": "Get basic stats",
      "description": "Concept: Get basic stats",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.607629,
      "updated_at": 1754957551.607629
    },
    "concept_2194": {
      "id": "concept_2194",
      "type": "concept",
      "name": "mcp",
      "description": "Concept: mcp",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py",
          "main.py",
          "test_docker_functionality.py",
          "test_enhanced_docker.py",
          "tool_registry.py"
        ]
      },
      "created_at": 1754957551.607983,
      "updated_at": 1754957552.82204
    },
    "concept_2195": {
      "id": "concept_2195",
      "type": "concept",
      "name": "FastMCP",
      "description": "Concept: FastMCP",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py",
          "main.py",
          "tool_registry.py"
        ]
      },
      "created_at": 1754957551.608335,
      "updated_at": 1754957552.8230531
    },
    "concept_2196": {
      "id": "concept_2196",
      "type": "concept",
      "name": "enhanced_tags",
      "description": "Concept: enhanced_tags",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py",
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.6086988,
      "updated_at": 1754957551.896965
    },
    "concept_2197": {
      "id": "concept_2197",
      "type": "concept",
      "name": "Format user persona summary",
      "description": "Concept: Format user persona summary",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.60907,
      "updated_at": 1754957551.60907
    },
    "concept_2198": {
      "id": "concept_2198",
      "type": "concept",
      "name": "Store main learning in memory",
      "description": "Concept: Store main learning in memory",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.609452,
      "updated_at": 1754957551.609452
    },
    "concept_2199": {
      "id": "concept_2199",
      "type": "concept",
      "name": "Get recent activity",
      "description": "Concept: Get recent activity",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.6098208,
      "updated_at": 1754957551.6098208
    },
    "concept_2200": {
      "id": "concept_2200",
      "type": "concept",
      "name": "relevant_chunks",
      "description": "Concept: relevant_chunks",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.610175,
      "updated_at": 1754957551.610175
    },
    "concept_2201": {
      "id": "concept_2201",
      "type": "concept",
      "name": "important_words",
      "description": "Concept: important_words",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.610531,
      "updated_at": 1754957551.610531
    },
    "concept_2202": {
      "id": "concept_2202",
      "type": "concept",
      "name": "datetime",
      "description": "Concept: datetime",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py",
          "demo_enhanced_context_system.py",
          "demo_restructured_cognitive_system.py",
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py",
          "function_call_logger.py",
          "knowledge_ingestion_engine.py",
          "main.py",
          "project_scanner.py",
          "test_enhanced_integration.py",
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957551.610879,
      "updated_at": 1754957552.783424
    },
    "concept_2203": {
      "id": "concept_2203",
      "type": "concept",
      "name": "complexity_score",
      "description": "Concept: complexity_score",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py",
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.6112351,
      "updated_at": 1754957551.898083
    },
    "concept_2204": {
      "id": "concept_2204",
      "type": "concept",
      "name": "Enhanced keyword extraction using context analysis",
      "description": "Concept: Enhanced keyword extraction using context analysis",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.611619,
      "updated_at": 1754957551.611619
    },
    "concept_2205": {
      "id": "concept_2205",
      "type": "concept",
      "name": "Enhanced reflection with context insights",
      "description": "Concept: Enhanced reflection with context insights",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.611997,
      "updated_at": 1754957551.611997
    },
    "concept_2206": {
      "id": "concept_2206",
      "type": "concept",
      "name": "key_points",
      "description": "Concept: key_points",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.612351,
      "updated_at": 1754957551.612351
    },
    "concept_2207": {
      "id": "concept_2207",
      "type": "concept",
      "name": "emotional_weight",
      "description": "Concept: emotional_weight",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.612706,
      "updated_at": 1754957551.612706
    },
    "concept_2208": {
      "id": "concept_2208",
      "type": "concept",
      "name": "parts",
      "description": "Concept: parts",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py",
          "project_scanner.py"
        ]
      },
      "created_at": 1754957551.613054,
      "updated_at": 1754957552.648437
    },
    "concept_2209": {
      "id": "concept_2209",
      "type": "concept",
      "name": "SimpleBrainState",
      "description": "Concept: SimpleBrainState",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py",
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.613408,
      "updated_at": 1754957551.899622
    },
    "concept_2210": {
      "id": "concept_2210",
      "type": "concept",
      "name": "cursor",
      "description": "Concept: cursor",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py",
          "function_call_logger.py",
          "main.py"
        ]
      },
      "created_at": 1754957551.613756,
      "updated_at": 1754957552.4946098
    },
    "concept_2211": {
      "id": "concept_2211",
      "type": "concept",
      "name": "topic",
      "description": "Concept: topic",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.614103,
      "updated_at": 1754957551.614103
    },
    "concept_2212": {
      "id": "concept_2212",
      "type": "concept",
      "name": "user_profile",
      "description": "Concept: user_profile",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.6144562,
      "updated_at": 1754957551.6144562
    },
    "concept_2213": {
      "id": "concept_2213",
      "type": "concept",
      "name": "Enhanced processing with context analysis",
      "description": "Concept: Enhanced processing with context analysis",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.6148338,
      "updated_at": 1754957551.6148338
    },
    "concept_2214": {
      "id": "concept_2214",
      "type": "concept",
      "name": "source",
      "description": "Concept: source",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py",
          "knowledge_ingestion_engine.py",
          "project_scanner.py"
        ]
      },
      "created_at": 1754957551.615206,
      "updated_at": 1754957552.654869
    },
    "concept_2215": {
      "id": "concept_2215",
      "type": "concept",
      "name": "client",
      "description": "Concept: client",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py",
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.6155589,
      "updated_at": 1754957551.904247
    },
    "concept_2216": {
      "id": "concept_2216",
      "type": "concept",
      "name": "memory_store",
      "description": "Concept: memory_store",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py",
          "healthcheck.py"
        ]
      },
      "created_at": 1754957551.615962,
      "updated_at": 1754957551.952105
    },
    "concept_2217": {
      "id": "concept_2217",
      "type": "concept",
      "name": "Basic pattern detection",
      "description": "Concept: Basic pattern detection",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.6163871,
      "updated_at": 1754957551.6163871
    },
    "concept_2218": {
      "id": "concept_2218",
      "type": "concept",
      "name": "Extract key information from content with context insights",
      "description": "Concept: Extract key information from content with context insights",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.6168,
      "updated_at": 1754957551.6168
    },
    "concept_2219": {
      "id": "concept_2219",
      "type": "concept",
      "name": "Use the underlying memory-enhanced chat with context insights",
      "description": "Concept: Use the underlying memory-enhanced chat with context insights",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.6172001,
      "updated_at": 1754957551.6172001
    },
    "concept_2220": {
      "id": "concept_2220",
      "type": "concept",
      "name": "sqlite3",
      "description": "Concept: sqlite3",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py",
          "function_call_logger.py",
          "main.py"
        ]
      },
      "created_at": 1754957551.617554,
      "updated_at": 1754957552.2204769
    },
    "concept_2221": {
      "id": "concept_2221",
      "type": "concept",
      "name": "Base score",
      "description": "Concept: Base score",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py"
        ]
      },
      "created_at": 1754957551.617907,
      "updated_at": 1754957551.617907
    },
    "concept_2222": {
      "id": "concept_2222",
      "type": "concept",
      "name": "self",
      "description": "Concept: self",
      "source": "brain_interface.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "brain_interface.py",
          "enhanced_brain_tools.py"
        ]
      },
      "created_at": 1754957551.618284,
      "updated_at": 1754957551.778445
    },
    "doc_2223": {
      "id": "doc_2223",
      "type": "document",
      "name": "Cleanup_Project",
      "description": "Document: cleanup_project.py",
      "source": "cleanup_project.py",
      "confidence": 0.9,
      "metadata": {
        "file_size": 5544,
        "lines": 195,
        "language": "python",
        "last_modified": 1754940827.020449
      },
      "created_at": 1754957551.620509,
      "updated_at": 1754957551.620509
    },
    "concept_2224": {
      "id": "concept_2224",
      "type": "concept",
      "name": "directories",
      "description": "Concept: directories",
      "source": "cleanup_project.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "cleanup_project.py",
          "project_scanner.py"
        ]
      },
      "created_at": 1754957551.620974,
      "updated_at": 1754957552.5293171
    },
    "concept_2225": {
      "id": "concept_2225",
      "type": "concept",
      "name": "logs_dir",
      "description": "Concept: logs_dir",
      "source": "cleanup_project.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "cleanup_project.py"
        ]
      },
      "created_at": 1754957551.6213398,
      "updated_at": 1754957551.6213398
    },
    "concept_2226": {
      "id": "concept_2226",
      "type": "concept",
      "name": "Organize documentation files.",
      "description": "Concept: Organize documentation files.",
      "source": "cleanup_project.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "cleanup_project.py"
        ]
      },
      "created_at": 1754957551.621721,
      "updated_at": 1754957551.621721
    },
    "concept_2227": {
      "id": "concept_2227",
      "type": "concept",
      "name": "Clean up logs directory.",
      "description": "Concept: Clean up logs directory.",
      "source": "cleanup_project.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "cleanup_project.py"
        ]
      },
      "created_at": 1754957551.622099,
      "updated_at": 1754957551.6220999
    },
    "concept_2228": {
      "id": "concept_2228",
      "type": "concept",
      "name": "docker_files",
      "description": "Concept: docker_files",
      "source": "cleanup_project.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "cleanup_project.py"
        ]
      },
      "created_at": 1754957551.622464,
      "updated_at": 1754957551.622464
    },
    "concept_2229": {
      "id": "concept_2229",
      "type": "concept",
      "name": "Main Dockerfile",
      "description": "Concept: Main Dockerfile",
      "source": "cleanup_project.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "cleanup_project.py"
        ]
      },
      "created_at": 1754957551.622826,
      "updated_at": 1754957551.622826
    },
    "concept_2230": {
      "id": "concept_2230",
      "type": "concept",
      "name": "!/usr/bin/env python3",
      "description": "Concept: !/usr/bin/env python3",
      "source": "cleanup_project.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "cleanup_project.py",
          "demo_enhanced_context_system.py",
          "demo_project_scanner.py",
          "demo_restructured_cognitive_system.py",
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py",
          "healthcheck.py",
          "knowledge_ingestion_engine.py",
          "project_scanner.py",
          "test_docker_functionality.py",
          "test_enhanced_docker.py",
          "test_enhanced_integration.py",
          "test_mcp_integration.py",
          "test_mcp_tools.py",
          "test_tool_registry.py",
          "tool_registry.py"
        ]
      },
      "created_at": 1754957551.6231968,
      "updated_at": 1754957552.82604
    },
    "concept_2231": {
      "id": "concept_2231",
      "type": "concept",
      "name": "recursive",
      "description": "Concept: recursive",
      "source": "cleanup_project.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "cleanup_project.py"
        ]
      },
      "created_at": 1754957551.623931,
      "updated_at": 1754957551.623931
    },
    "concept_2232": {
      "id": "concept_2232",
      "type": "concept",
      "name": "Remove __pycache__ directories",
      "description": "Concept: Remove __pycache__ directories",
      "source": "cleanup_project.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "cleanup_project.py"
        ]
      },
      "created_at": 1754957551.624334,
      "updated_at": 1754957551.624334
    },
    "concept_2233": {
      "id": "concept_2233",
      "type": "concept",
      "name": "## \ud83c\udfd7\ufe0f  New Structure",
      "description": "Concept: ## \ud83c\udfd7\ufe0f  New Structure",
      "source": "cleanup_project.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "cleanup_project.py"
        ]
      },
      "created_at": 1754957551.624846,
      "updated_at": 1754957551.624846
    },
    "concept_2234": {
      "id": "concept_2234",
      "type": "concept",
      "name": "Database components",
      "description": "Concept: Database components",
      "source": "cleanup_project.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "cleanup_project.py"
        ]
      },
      "created_at": 1754957551.625236,
      "updated_at": 1754957551.625236
    },
    "concept_2235": {
      "id": "concept_2235",
      "type": "concept",
      "name": "Create docs directory if it doesn't exist",
      "description": "Concept: Create docs directory if it doesn't exist",
      "source": "cleanup_project.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "cleanup_project.py"
        ]
      },
      "created_at": 1754957551.625619,
      "updated_at": 1754957551.625619
    },
    "concept_2236": {
      "id": "concept_2236",
      "type": "concept",
      "name": "Move documentation files to docs directory",
      "description": "Concept: Move documentation files to docs directory",
      "source": "cleanup_project.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "cleanup_project.py"
        ]
      },
      "created_at": 1754957551.626086,
      "updated_at": 1754957551.626086
    },
    "concept_2237": {
      "id": "concept_2237",
      "type": "concept",
      "name": "Configuration files",
      "description": "Concept: Configuration files",
      "source": "cleanup_project.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "cleanup_project.py",
          "demo_project_scanner.py"
        ]
      },
      "created_at": 1754957551.626555,
      "updated_at": 1754957551.695468
    },
    "concept_2238": {
      "id": "concept_2238",
      "type": "concept",
      "name": "doc_files",
      "description": "Concept: doc_files",
      "source": "cleanup_project.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "cleanup_project.py",
          "demo_project_scanner.py",
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957551.6269429,
      "updated_at": 1754957551.990599
    },
    "concept_2239": {
      "id": "concept_2239",
      "type": "concept",
      "name": "Remove Python cache files and directories.",
      "description": "Concept: Remove Python cache files and directories.",
      "source": "cleanup_project.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "cleanup_project.py"
        ]
      },
      "created_at": 1754957551.627393,
      "updated_at": 1754957551.627393
    },
    "concept_2240": {
      "id": "concept_2240",
      "type": "concept",
      "name": "# Getting Started",
      "description": "Concept: # Getting Started",
      "source": "cleanup_project.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "cleanup_project.py"
        ]
      },
      "created_at": 1754957551.627763,
      "updated_at": 1754957551.627763
    },
    "concept_2241": {
      "id": "concept_2241",
      "type": "concept",
      "name": "cleanup_python_cache",
      "description": "Concept: cleanup_python_cache",
      "source": "cleanup_project.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "cleanup_project.py"
        ]
      },
      "created_at": 1754957551.6281412,
      "updated_at": 1754957551.6281412
    },
    "concept_2242": {
      "id": "concept_2242",
      "type": "concept",
      "name": "Project configuration",
      "description": "Concept: Project configuration",
      "source": "cleanup_project.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "cleanup_project.py"
        ]
      },
      "created_at": 1754957551.628543,
      "updated_at": 1754957551.628543
    },
    "concept_2243": {
      "id": "concept_2243",
      "type": "concept",
      "name": "main",
      "description": "Concept: main",
      "source": "cleanup_project.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "cleanup_project.py",
          "demo_enhanced_context_system.py",
          "demo_project_scanner.py",
          "demo_restructured_cognitive_system.py",
          "knowledge_ingestion_engine.py",
          "project_scanner.py",
          "test_enhanced_integration.py",
          "test_mcp_integration.py",
          "test_mcp_tools.py"
        ]
      },
      "created_at": 1754957551.628908,
      "updated_at": 1754957552.792934
    },
    "concept_2244": {
      "id": "concept_2244",
      "type": "concept",
      "name": "cache_path",
      "description": "Concept: cache_path",
      "source": "cleanup_project.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "cleanup_project.py"
        ]
      },
      "created_at": 1754957551.629271,
      "updated_at": 1754957551.629271
    },
    "concept_2245": {
      "id": "concept_2245",
      "type": "concept",
      "name": "glob",
      "description": "Concept: glob",
      "source": "cleanup_project.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "cleanup_project.py"
        ]
      },
      "created_at": 1754957551.629646,
      "updated_at": 1754957551.629646
    },
    "concept_2246": {
      "id": "concept_2246",
      "type": "concept",
      "name": "# Cleanup Script",
      "description": "Concept: # Cleanup Script",
      "source": "cleanup_project.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "cleanup_project.py"
        ]
      },
      "created_at": 1754957551.630219,
      "updated_at": 1754957551.63022
    },
    "concept_2247": {
      "id": "concept_2247",
      "type": "concept",
      "name": "docs_dir",
      "description": "Concept: docs_dir",
      "source": "cleanup_project.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "cleanup_project.py"
        ]
      },
      "created_at": 1754957551.630622,
      "updated_at": 1754957551.630622
    },
    "concept_2248": {
      "id": "concept_2248",
      "type": "concept",
      "name": "dir_name",
      "description": "Concept: dir_name",
      "source": "cleanup_project.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "cleanup_project.py"
        ]
      },
      "created_at": 1754957551.630985,
      "updated_at": 1754957551.630985
    },
    "concept_2249": {
      "id": "concept_2249",
      "type": "concept",
      "name": "create_cleanup_readme",
      "description": "Concept: create_cleanup_readme",
      "source": "cleanup_project.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "cleanup_project.py"
        ]
      },
      "created_at": 1754957551.631409,
      "updated_at": 1754957551.63141
    },
    "concept_2250": {
      "id": "concept_2250",
      "type": "concept",
      "name": "ignore_errors",
      "description": "Concept: ignore_errors",
      "source": "cleanup_project.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "cleanup_project.py"
        ]
      },
      "created_at": 1754957551.6318579,
      "updated_at": 1754957551.6318579
    },
    "concept_2251": {
      "id": "concept_2251",
      "type": "concept",
      "name": "exist_ok",
      "description": "Concept: exist_ok",
      "source": "cleanup_project.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "cleanup_project.py"
        ]
      },
      "created_at": 1754957551.632234,
      "updated_at": 1754957551.632234
    },
    "concept_2252": {
      "id": "concept_2252",
      "type": "concept",
      "name": "cleanup_documentation",
      "description": "Concept: cleanup_documentation",
      "source": "cleanup_project.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "cleanup_project.py"
        ]
      },
      "created_at": 1754957551.632784,
      "updated_at": 1754957551.632784
    },
    "concept_2253": {
      "id": "concept_2253",
      "type": "concept",
      "name": "Consolidate Docker configurations.",
      "description": "Concept: Consolidate Docker configurations.",
      "source": "cleanup_project.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "cleanup_project.py"
        ]
      },
      "created_at": 1754957551.633236,
      "updated_at": 1754957551.633236
    },
    "concept_2254": {
      "id": "concept_2254",
      "type": "concept",
      "name": "shutil",
      "description": "Concept: shutil",
      "source": "cleanup_project.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "cleanup_project.py"
        ]
      },
      "created_at": 1754957551.6336472,
      "updated_at": 1754957551.6336472
    },
    "concept_2255": {
      "id": "concept_2255",
      "type": "concept",
      "name": "Create a clean project structure.",
      "description": "Concept: Create a clean project structure.",
      "source": "cleanup_project.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "cleanup_project.py"
        ]
      },
      "created_at": 1754957551.634051,
      "updated_at": 1754957551.634051
    },
    "concept_2256": {
      "id": "concept_2256",
      "type": "concept",
      "name": "cleanup_readme",
      "description": "Concept: cleanup_readme",
      "source": "cleanup_project.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "cleanup_project.py"
        ]
      },
      "created_at": 1754957551.634421,
      "updated_at": 1754957551.634421
    },
    "concept_2257": {
      "id": "concept_2257",
      "type": "concept",
      "name": "Test files",
      "description": "Concept: Test files",
      "source": "cleanup_project.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "cleanup_project.py"
        ]
      },
      "created_at": 1754957551.63483,
      "updated_at": 1754957551.63483
    },
    "concept_2258": {
      "id": "concept_2258",
      "type": "concept",
      "name": "# Docker Configuration",
      "description": "Concept: # Docker Configuration",
      "source": "cleanup_project.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "cleanup_project.py"
        ]
      },
      "created_at": 1754957551.635204,
      "updated_at": 1754957551.635204
    },
    "concept_2259": {
      "id": "concept_2259",
      "type": "concept",
      "name": "Create a README explaining the cleanup.",
      "description": "Concept: Create a README explaining the cleanup.",
      "source": "cleanup_project.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "cleanup_project.py"
        ]
      },
      "created_at": 1754957551.635594,
      "updated_at": 1754957551.635594
    },
    "concept_2260": {
      "id": "concept_2260",
      "type": "concept",
      "name": "Create necessary directories",
      "description": "Concept: Create necessary directories",
      "source": "cleanup_project.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "cleanup_project.py"
        ]
      },
      "created_at": 1754957551.63597,
      "updated_at": 1754957551.63597
    },
    "concept_2261": {
      "id": "concept_2261",
      "type": "concept",
      "name": "dest_path",
      "description": "Concept: dest_path",
      "source": "cleanup_project.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "cleanup_project.py"
        ]
      },
      "created_at": 1754957551.636456,
      "updated_at": 1754957551.636456
    },
    "concept_2262": {
      "id": "concept_2262",
      "type": "concept",
      "name": "__name__",
      "description": "Concept: __name__",
      "source": "cleanup_project.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "cleanup_project.py",
          "demo_enhanced_context_system.py",
          "demo_project_scanner.py",
          "demo_restructured_cognitive_system.py",
          "healthcheck.py",
          "knowledge_ingestion_engine.py",
          "llm_client.py",
          "main.py",
          "project_scanner.py",
          "test_docker_functionality.py",
          "test_enhanced_docker.py",
          "test_enhanced_integration.py",
          "test_mcp_integration.py",
          "test_mcp_tools.py",
          "test_tool_registry.py"
        ]
      },
      "created_at": 1754957551.636827,
      "updated_at": 1754957552.801604
    },
    "concept_2263": {
      "id": "concept_2263",
      "type": "concept",
      "name": "Source code",
      "description": "Concept: Source code",
      "source": "cleanup_project.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "cleanup_project.py"
        ]
      },
      "created_at": 1754957551.637277,
      "updated_at": 1754957551.637277
    },
    "concept_2264": {
      "id": "concept_2264",
      "type": "concept",
      "name": "Main project README",
      "description": "Concept: Main project README",
      "source": "cleanup_project.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "cleanup_project.py"
        ]
      },
      "created_at": 1754957551.63765,
      "updated_at": 1754957551.63765
    },
    "concept_2265": {
      "id": "concept_2265",
      "type": "concept",
      "name": "## \u2705 Removed",
      "description": "Concept: ## \u2705 Removed",
      "source": "cleanup_project.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "cleanup_project.py"
        ]
      },
      "created_at": 1754957551.638091,
      "updated_at": 1754957551.638091
    },
    "concept_2266": {
      "id": "concept_2266",
      "type": "concept",
      "name": "Main Docker configuration",
      "description": "Concept: Main Docker configuration",
      "source": "cleanup_project.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "cleanup_project.py"
        ]
      },
      "created_at": 1754957551.6384609,
      "updated_at": 1754957551.6384609
    },
    "concept_2267": {
      "id": "concept_2267",
      "type": "concept",
      "name": "Keep the main docker-compose.yml and remove duplicates",
      "description": "Concept: Keep the main docker-compose.yml and remove duplicates",
      "source": "cleanup_project.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "cleanup_project.py"
        ]
      },
      "created_at": 1754957551.639219,
      "updated_at": 1754957551.639219
    },
    "concept_2268": {
      "id": "concept_2268",
      "type": "concept",
      "name": "cleanup_docker_files",
      "description": "Concept: cleanup_docker_files",
      "source": "cleanup_project.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "cleanup_project.py"
        ]
      },
      "created_at": 1754957551.639603,
      "updated_at": 1754957551.639603
    },
    "concept_2269": {
      "id": "concept_2269",
      "type": "concept",
      "name": "All documentation files",
      "description": "Concept: All documentation files",
      "source": "cleanup_project.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "cleanup_project.py"
        ]
      },
      "created_at": 1754957551.640058,
      "updated_at": 1754957551.640058
    },
    "concept_2270": {
      "id": "concept_2270",
      "type": "concept",
      "name": "Utility scripts",
      "description": "Concept: Utility scripts",
      "source": "cleanup_project.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "cleanup_project.py"
        ]
      },
      "created_at": 1754957551.640494,
      "updated_at": 1754957551.640494
    },
    "concept_2271": {
      "id": "concept_2271",
      "type": "concept",
      "name": "## \ud83d\udcc1 Reorganized",
      "description": "Concept: ## \ud83d\udcc1 Reorganized",
      "source": "cleanup_project.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "cleanup_project.py"
        ]
      },
      "created_at": 1754957551.641022,
      "updated_at": 1754957551.641022
    },
    "concept_2272": {
      "id": "concept_2272",
      "type": "concept",
      "name": "create_project_structure",
      "description": "Concept: create_project_structure",
      "source": "cleanup_project.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "cleanup_project.py"
        ]
      },
      "created_at": 1754957551.64143,
      "updated_at": 1754957551.64143
    },
    "concept_2273": {
      "id": "concept_2273",
      "type": "concept",
      "name": "Remove .pyc and .pyo files",
      "description": "Concept: Remove .pyc and .pyo files",
      "source": "cleanup_project.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "cleanup_project.py"
        ]
      },
      "created_at": 1754957551.6418188,
      "updated_at": 1754957551.6418188
    },
    "concept_2274": {
      "id": "concept_2274",
      "type": "concept",
      "name": "cleanup_logs",
      "description": "Concept: cleanup_logs",
      "source": "cleanup_project.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "cleanup_project.py"
        ]
      },
      "created_at": 1754957551.642189,
      "updated_at": 1754957551.642189
    },
    "concept_2275": {
      "id": "concept_2275",
      "type": "concept",
      "name": "Main cleanup function.",
      "description": "Concept: Main cleanup function.",
      "source": "cleanup_project.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "cleanup_project.py"
        ]
      },
      "created_at": 1754957551.6425889,
      "updated_at": 1754957551.6425889
    },
    "concept_2276": {
      "id": "concept_2276",
      "type": "concept",
      "name": "Remove empty logs directory",
      "description": "Concept: Remove empty logs directory",
      "source": "cleanup_project.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "cleanup_project.py"
        ]
      },
      "created_at": 1754957551.64304,
      "updated_at": 1754957551.6430411
    },
    "concept_2277": {
      "id": "concept_2277",
      "type": "concept",
      "name": "Plugin system",
      "description": "Concept: Plugin system",
      "source": "cleanup_project.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "cleanup_project.py"
        ]
      },
      "created_at": 1754957551.6434078,
      "updated_at": 1754957551.6434078
    },
    "concept_2278": {
      "id": "concept_2278",
      "type": "concept",
      "name": "# What Was Cleaned Up",
      "description": "Concept: # What Was Cleaned Up",
      "source": "cleanup_project.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "cleanup_project.py"
        ]
      },
      "created_at": 1754957551.643807,
      "updated_at": 1754957551.643807
    },
    "doc_2279": {
      "id": "doc_2279",
      "type": "document",
      "name": "Demo_Enhanced_Context_System",
      "description": "Document: demo_enhanced_context_system.py",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.9,
      "metadata": {
        "file_size": 19392,
        "lines": 435,
        "language": "python",
        "last_modified": 1754952739.941701
      },
      "created_at": 1754957551.6529129,
      "updated_at": 1754957551.6529129
    },
    "concept_2280": {
      "id": "concept_2280",
      "type": "concept",
      "name": "Show first 2",
      "description": "Concept: Show first 2",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py"
        ]
      },
      "created_at": 1754957551.653294,
      "updated_at": 1754957551.653294
    },
    "concept_2281": {
      "id": "concept_2281",
      "type": "concept",
      "name": "timeframe",
      "description": "Concept: timeframe",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py"
        ]
      },
      "created_at": 1754957551.653662,
      "updated_at": 1754957551.653662
    },
    "concept_2282": {
      "id": "concept_2282",
      "type": "concept",
      "name": "batch_messages",
      "description": "Concept: batch_messages",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py"
        ]
      },
      "created_at": 1754957551.654028,
      "updated_at": 1754957551.654028
    },
    "concept_2283": {
      "id": "concept_2283",
      "type": "concept",
      "name": "context_depth",
      "description": "Concept: context_depth",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py"
        ]
      },
      "created_at": 1754957551.6543932,
      "updated_at": 1754957551.6543932
    },
    "concept_2284": {
      "id": "concept_2284",
      "type": "concept",
      "name": "optimization_result",
      "description": "Concept: optimization_result",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py"
        ]
      },
      "created_at": 1754957551.654767,
      "updated_at": 1754957551.654767
    },
    "concept_2285": {
      "id": "concept_2285",
      "type": "concept",
      "name": "quality_result",
      "description": "Concept: quality_result",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py"
        ]
      },
      "created_at": 1754957551.655133,
      "updated_at": 1754957551.655133
    },
    "concept_2286": {
      "id": "concept_2286",
      "type": "concept",
      "name": "level",
      "description": "Concept: level",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py",
          "demo_restructured_cognitive_system.py",
          "knowledge_ingestion_engine.py",
          "main.py",
          "project_scanner.py",
          "test_enhanced_integration.py",
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957551.655495,
      "updated_at": 1754957552.7380009
    },
    "concept_2287": {
      "id": "concept_2287",
      "type": "concept",
      "name": "Workflow Performance Analysis",
      "description": "Concept: Workflow Performance Analysis",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py"
        ]
      },
      "created_at": 1754957551.6558762,
      "updated_at": 1754957551.6558762
    },
    "concept_2288": {
      "id": "concept_2288",
      "type": "concept",
      "name": "Setup logging",
      "description": "Concept: Setup logging",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py",
          "demo_restructured_cognitive_system.py",
          "main.py"
        ]
      },
      "created_at": 1754957551.6570399,
      "updated_at": 1754957552.325399
    },
    "concept_2289": {
      "id": "concept_2289",
      "type": "concept",
      "name": "Initialize plugins",
      "description": "Concept: Initialize plugins",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py"
        ]
      },
      "created_at": 1754957551.657532,
      "updated_at": 1754957551.657533
    },
    "concept_2290": {
      "id": "concept_2290",
      "type": "concept",
      "name": "target_goal",
      "description": "Concept: target_goal",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py",
          "demo_restructured_cognitive_system.py"
        ]
      },
      "created_at": 1754957551.657984,
      "updated_at": 1754957551.728182
    },
    "concept_2291": {
      "id": "concept_2291",
      "type": "concept",
      "name": "Enhanced Workflow Execution",
      "description": "Concept: Enhanced Workflow Execution",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py"
        ]
      },
      "created_at": 1754957551.659186,
      "updated_at": 1754957551.659186
    },
    "concept_2292": {
      "id": "concept_2292",
      "type": "concept",
      "name": "phase3_result",
      "description": "Concept: phase3_result",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py"
        ]
      },
      "created_at": 1754957551.659549,
      "updated_at": 1754957551.659549
    },
    "concept_2293": {
      "id": "concept_2293",
      "type": "concept",
      "name": "Phase 1 only",
      "description": "Concept: Phase 1 only",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py"
        ]
      },
      "created_at": 1754957551.6599438,
      "updated_at": 1754957551.6599438
    },
    "concept_2294": {
      "id": "concept_2294",
      "type": "concept",
      "name": "Run individual phase demonstration",
      "description": "Concept: Run individual phase demonstration",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py"
        ]
      },
      "created_at": 1754957551.660343,
      "updated_at": 1754957551.660343
    },
    "concept_2295": {
      "id": "concept_2295",
      "type": "concept",
      "name": "include_learning",
      "description": "Concept: include_learning",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py",
          "demo_restructured_cognitive_system.py",
          "main.py"
        ]
      },
      "created_at": 1754957551.6607418,
      "updated_at": 1754957552.242541
    },
    "concept_2296": {
      "id": "concept_2296",
      "type": "concept",
      "name": "Demo user message",
      "description": "Concept: Demo user message",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py"
        ]
      },
      "created_at": 1754957551.661216,
      "updated_at": 1754957551.661216
    },
    "concept_2297": {
      "id": "concept_2297",
      "type": "concept",
      "name": "tool_performance_result",
      "description": "Concept: tool_performance_result",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py"
        ]
      },
      "created_at": 1754957551.6616058,
      "updated_at": 1754957551.6616058
    },
    "concept_2298": {
      "id": "concept_2298",
      "type": "concept",
      "name": "Phase 2: Tool Orchestration",
      "description": "Concept: Phase 2: Tool Orchestration",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py"
        ]
      },
      "created_at": 1754957551.662009,
      "updated_at": 1754957551.662009
    },
    "concept_2299": {
      "id": "concept_2299",
      "type": "concept",
      "name": "phase1_result",
      "description": "Concept: phase1_result",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py"
        ]
      },
      "created_at": 1754957551.662456,
      "updated_at": 1754957551.662456
    },
    "concept_2300": {
      "id": "concept_2300",
      "type": "concept",
      "name": "Workflow Health Check",
      "description": "Concept: Workflow Health Check",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py"
        ]
      },
      "created_at": 1754957551.662855,
      "updated_at": 1754957551.662855
    },
    "concept_2301": {
      "id": "concept_2301",
      "type": "concept",
      "name": "format",
      "description": "Concept: format",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py",
          "demo_restructured_cognitive_system.py",
          "knowledge_ingestion_engine.py",
          "project_scanner.py",
          "test_enhanced_integration.py",
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957551.663221,
      "updated_at": 1754957552.745862
    },
    "concept_2302": {
      "id": "concept_2302",
      "type": "concept",
      "name": "plugins",
      "description": "Concept: plugins",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py",
          "demo_restructured_cognitive_system.py",
          "main.py"
        ]
      },
      "created_at": 1754957551.663588,
      "updated_at": 1754957552.3400478
    },
    "concept_2303": {
      "id": "concept_2303",
      "type": "concept",
      "name": "learning_result",
      "description": "Concept: learning_result",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py",
          "demo_restructured_cognitive_system.py",
          "main.py"
        ]
      },
      "created_at": 1754957551.663978,
      "updated_at": 1754957552.1558452
    },
    "concept_2304": {
      "id": "concept_2304",
      "type": "concept",
      "name": "demonstrate_enhanced_context_system",
      "description": "Concept: demonstrate_enhanced_context_system",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py"
        ]
      },
      "created_at": 1754957551.6643672,
      "updated_at": 1754957551.6643672
    },
    "concept_2305": {
      "id": "concept_2305",
      "type": "concept",
      "name": "Phase 3: Continuous Learning",
      "description": "Concept: Phase 3: Continuous Learning",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py"
        ]
      },
      "created_at": 1754957551.664748,
      "updated_at": 1754957551.664748
    },
    "concept_2306": {
      "id": "concept_2306",
      "type": "concept",
      "name": "Tool Performance Analysis",
      "description": "Concept: Tool Performance Analysis",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py"
        ]
      },
      "created_at": 1754957551.6652071,
      "updated_at": 1754957551.6652071
    },
    "concept_2307": {
      "id": "concept_2307",
      "type": "concept",
      "name": "optimization_focus",
      "description": "Concept: optimization_focus",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py"
        ]
      },
      "created_at": 1754957551.665644,
      "updated_at": 1754957551.665644
    },
    "concept_2308": {
      "id": "concept_2308",
      "type": "concept",
      "name": "Main demonstration function",
      "description": "Concept: Main demonstration function",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py",
          "demo_restructured_cognitive_system.py"
        ]
      },
      "created_at": 1754957551.666406,
      "updated_at": 1754957551.736199
    },
    "concept_2309": {
      "id": "concept_2309",
      "type": "concept",
      "name": "result2",
      "description": "Concept: result2",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py"
        ]
      },
      "created_at": 1754957551.666774,
      "updated_at": 1754957551.666774
    },
    "concept_2310": {
      "id": "concept_2310",
      "type": "concept",
      "name": "EnhancedContextIntegrationPlugin",
      "description": "Concept: EnhancedContextIntegrationPlugin",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py",
          "main.py"
        ]
      },
      "created_at": 1754957551.6671638,
      "updated_at": 1754957552.1680582
    },
    "concept_2311": {
      "id": "concept_2311",
      "type": "concept",
      "name": "plugin",
      "description": "Concept: plugin",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py",
          "demo_restructured_cognitive_system.py",
          "main.py"
        ]
      },
      "created_at": 1754957551.667531,
      "updated_at": 1754957552.2645571
    },
    "concept_2312": {
      "id": "concept_2312",
      "type": "concept",
      "name": "comprehensive_result",
      "description": "Concept: comprehensive_result",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py"
        ]
      },
      "created_at": 1754957551.6679099,
      "updated_at": 1754957551.6679099
    },
    "concept_2313": {
      "id": "concept_2313",
      "type": "concept",
      "name": "include_recommendations",
      "description": "Concept: include_recommendations",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py"
        ]
      },
      "created_at": 1754957551.668342,
      "updated_at": 1754957551.668342
    },
    "concept_2314": {
      "id": "concept_2314",
      "type": "concept",
      "name": "status_icon",
      "description": "Concept: status_icon",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py"
        ]
      },
      "created_at": 1754957551.66913,
      "updated_at": 1754957551.66913
    },
    "concept_2315": {
      "id": "concept_2315",
      "type": "concept",
      "name": "Run main demonstration",
      "description": "Concept: Run main demonstration",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py",
          "demo_restructured_cognitive_system.py"
        ]
      },
      "created_at": 1754957551.669513,
      "updated_at": 1754957551.74084
    },
    "concept_2316": {
      "id": "concept_2316",
      "type": "concept",
      "name": "performance_result",
      "description": "Concept: performance_result",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py",
          "demo_restructured_cognitive_system.py"
        ]
      },
      "created_at": 1754957551.669888,
      "updated_at": 1754957551.741868
    },
    "concept_2317": {
      "id": "concept_2317",
      "type": "concept",
      "name": "EnhancedWorkflowOrchestratorPlugin",
      "description": "Concept: EnhancedWorkflowOrchestratorPlugin",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py",
          "main.py"
        ]
      },
      "created_at": 1754957551.670319,
      "updated_at": 1754957552.172269
    },
    "concept_2318": {
      "id": "concept_2318",
      "type": "concept",
      "name": "Demonstrate the complete enhanced context system",
      "description": "Concept: Demonstrate the complete enhanced context system",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py"
        ]
      },
      "created_at": 1754957551.670741,
      "updated_at": 1754957551.670741
    },
    "concept_2319": {
      "id": "concept_2319",
      "type": "concept",
      "name": "result3",
      "description": "Concept: result3",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py"
        ]
      },
      "created_at": 1754957551.671175,
      "updated_at": 1754957551.671175
    },
    "concept_2320": {
      "id": "concept_2320",
      "type": "concept",
      "name": "Show current performance",
      "description": "Concept: Show current performance",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py"
        ]
      },
      "created_at": 1754957551.6715572,
      "updated_at": 1754957551.6715572
    },
    "concept_2321": {
      "id": "concept_2321",
      "type": "concept",
      "name": "result1",
      "description": "Concept: result1",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py"
        ]
      },
      "created_at": 1754957551.671914,
      "updated_at": 1754957551.671914
    },
    "concept_2322": {
      "id": "concept_2322",
      "type": "concept",
      "name": "Show learning insights",
      "description": "Concept: Show learning insights",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py"
        ]
      },
      "created_at": 1754957551.672287,
      "updated_at": 1754957551.672287
    },
    "concept_2323": {
      "id": "concept_2323",
      "type": "concept",
      "name": "workflow_data",
      "description": "Concept: workflow_data",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py",
          "demo_restructured_cognitive_system.py"
        ]
      },
      "created_at": 1754957551.672648,
      "updated_at": 1754957551.7434711
    },
    "concept_2324": {
      "id": "concept_2324",
      "type": "concept",
      "name": "Add paths",
      "description": "Concept: Add paths",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py",
          "demo_restructured_cognitive_system.py"
        ]
      },
      "created_at": 1754957551.6730108,
      "updated_at": 1754957551.743863
    },
    "concept_2325": {
      "id": "concept_2325",
      "type": "concept",
      "name": "workflow_orchestrator_plugin",
      "description": "Concept: workflow_orchestrator_plugin",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py"
        ]
      },
      "created_at": 1754957551.6734478,
      "updated_at": 1754957551.6734478
    },
    "concept_2326": {
      "id": "concept_2326",
      "type": "concept",
      "name": "Show top performing tools",
      "description": "Concept: Show top performing tools",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py"
        ]
      },
      "created_at": 1754957551.673833,
      "updated_at": 1754957551.673833
    },
    "concept_2327": {
      "id": "concept_2327",
      "type": "concept",
      "name": "Show top 3",
      "description": "Concept: Show top 3",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py"
        ]
      },
      "created_at": 1754957551.6742,
      "updated_at": 1754957551.6742
    },
    "concept_2328": {
      "id": "concept_2328",
      "type": "concept",
      "name": "Show tool recommendations",
      "description": "Concept: Show tool recommendations",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py"
        ]
      },
      "created_at": 1754957551.674579,
      "updated_at": 1754957551.674579
    },
    "concept_2329": {
      "id": "concept_2329",
      "type": "concept",
      "name": "orchestration_result",
      "description": "Concept: orchestration_result",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py",
          "demo_restructured_cognitive_system.py"
        ]
      },
      "created_at": 1754957551.6752992,
      "updated_at": 1754957551.744979
    },
    "concept_2330": {
      "id": "concept_2330",
      "type": "concept",
      "name": "phase2_result",
      "description": "Concept: phase2_result",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py"
        ]
      },
      "created_at": 1754957551.675662,
      "updated_at": 1754957551.675662
    },
    "concept_2331": {
      "id": "concept_2331",
      "type": "concept",
      "name": "Show context components",
      "description": "Concept: Show context components",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py"
        ]
      },
      "created_at": 1754957551.676033,
      "updated_at": 1754957551.676033
    },
    "concept_2332": {
      "id": "concept_2332",
      "type": "concept",
      "name": "status",
      "description": "Concept: status",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py",
          "demo_restructured_cognitive_system.py",
          "llm_client.py",
          "test_enhanced_integration.py",
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957551.676491,
      "updated_at": 1754957552.766947
    },
    "concept_2333": {
      "id": "concept_2333",
      "type": "concept",
      "name": "workflow_result",
      "description": "Concept: workflow_result",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py",
          "demo_restructured_cognitive_system.py"
        ]
      },
      "created_at": 1754957551.676859,
      "updated_at": 1754957551.747245
    },
    "concept_2334": {
      "id": "concept_2334",
      "type": "concept",
      "name": "tool_name",
      "description": "Concept: tool_name",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py"
        ]
      },
      "created_at": 1754957551.677224,
      "updated_at": 1754957551.677224
    },
    "concept_2335": {
      "id": "concept_2335",
      "type": "concept",
      "name": "asyncio",
      "description": "Concept: asyncio",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py",
          "demo_restructured_cognitive_system.py",
          "function_call_logger.py",
          "llm_client.py",
          "main.py",
          "test_docker_functionality.py",
          "test_enhanced_docker.py",
          "test_enhanced_integration.py",
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957551.677601,
      "updated_at": 1754957552.769794
    },
    "concept_2336": {
      "id": "concept_2336",
      "type": "concept",
      "name": "include_history",
      "description": "Concept: include_history",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py",
          "demo_restructured_cognitive_system.py"
        ]
      },
      "created_at": 1754957551.6779678,
      "updated_at": 1754957551.749229
    },
    "concept_2337": {
      "id": "concept_2337",
      "type": "concept",
      "name": "reverse",
      "description": "Concept: reverse",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py",
          "demo_project_scanner.py",
          "enhanced_brain_tools_simple.py",
          "knowledge_ingestion_engine.py",
          "project_scanner.py"
        ]
      },
      "created_at": 1754957551.67841,
      "updated_at": 1754957552.6195562
    },
    "concept_2338": {
      "id": "concept_2338",
      "type": "concept",
      "name": "Import the enhanced context integration plugin",
      "description": "Concept: Import the enhanced context integration plugin",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py"
        ]
      },
      "created_at": 1754957551.678897,
      "updated_at": 1754957551.678897
    },
    "concept_2339": {
      "id": "concept_2339",
      "type": "concept",
      "name": "Demonstrate individual phases separately",
      "description": "Concept: Demonstrate individual phases separately",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py"
        ]
      },
      "created_at": 1754957551.679494,
      "updated_at": 1754957551.679494
    },
    "concept_2340": {
      "id": "concept_2340",
      "type": "concept",
      "name": "check_level",
      "description": "Concept: check_level",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py"
        ]
      },
      "created_at": 1754957551.679878,
      "updated_at": 1754957551.679878
    },
    "concept_2341": {
      "id": "concept_2341",
      "type": "concept",
      "name": "interaction_data",
      "description": "Concept: interaction_data",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py",
          "demo_restructured_cognitive_system.py"
        ]
      },
      "created_at": 1754957551.680257,
      "updated_at": 1754957551.750623
    },
    "concept_2342": {
      "id": "concept_2342",
      "type": "concept",
      "name": "assessment",
      "description": "Concept: assessment",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py"
        ]
      },
      "created_at": 1754957551.680636,
      "updated_at": 1754957551.680636
    },
    "concept_2343": {
      "id": "concept_2343",
      "type": "concept",
      "name": "error",
      "description": "Concept: error",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py",
          "demo_restructured_cognitive_system.py"
        ]
      },
      "created_at": 1754957551.681016,
      "updated_at": 1754957551.751754
    },
    "concept_2344": {
      "id": "concept_2344",
      "type": "concept",
      "name": "include_preferences",
      "description": "Concept: include_preferences",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py",
          "demo_restructured_cognitive_system.py",
          "main.py"
        ]
      },
      "created_at": 1754957551.681393,
      "updated_at": 1754957552.4777532
    },
    "concept_2345": {
      "id": "concept_2345",
      "type": "concept",
      "name": "analysis",
      "description": "Concept: analysis",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py"
        ]
      },
      "created_at": 1754957551.681813,
      "updated_at": 1754957551.681813
    },
    "concept_2346": {
      "id": "concept_2346",
      "type": "concept",
      "name": "demo_message",
      "description": "Concept: demo_message",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py",
          "demo_restructured_cognitive_system.py"
        ]
      },
      "created_at": 1754957551.682545,
      "updated_at": 1754957551.753629
    },
    "concept_2347": {
      "id": "concept_2347",
      "type": "concept",
      "name": "batch_result",
      "description": "Concept: batch_result",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py"
        ]
      },
      "created_at": 1754957551.6829078,
      "updated_at": 1754957551.6829078
    },
    "concept_2348": {
      "id": "concept_2348",
      "type": "concept",
      "name": "Context Quality Assessment",
      "description": "Concept: Context Quality Assessment",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py"
        ]
      },
      "created_at": 1754957551.683636,
      "updated_at": 1754957551.683636
    },
    "concept_2349": {
      "id": "concept_2349",
      "type": "concept",
      "name": "Show phase details",
      "description": "Concept: Show phase details",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py"
        ]
      },
      "created_at": 1754957551.684004,
      "updated_at": 1754957551.684004
    },
    "concept_2350": {
      "id": "concept_2350",
      "type": "concept",
      "name": "current_perf",
      "description": "Concept: current_perf",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py"
        ]
      },
      "created_at": 1754957551.684366,
      "updated_at": 1754957551.684366
    },
    "concept_2351": {
      "id": "concept_2351",
      "type": "concept",
      "name": "health_result",
      "description": "Concept: health_result",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py"
        ]
      },
      "created_at": 1754957551.684736,
      "updated_at": 1754957551.684736
    },
    "concept_2352": {
      "id": "concept_2352",
      "type": "concept",
      "name": "tool_scores",
      "description": "Concept: tool_scores",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py"
        ]
      },
      "created_at": 1754957551.68511,
      "updated_at": 1754957551.68511
    },
    "concept_2353": {
      "id": "concept_2353",
      "type": "concept",
      "name": "assessment_criteria",
      "description": "Concept: assessment_criteria",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py",
          "main.py"
        ]
      },
      "created_at": 1754957551.6854799,
      "updated_at": 1754957552.488553
    },
    "concept_2354": {
      "id": "concept_2354",
      "type": "concept",
      "name": "Show first 3",
      "description": "Concept: Show first 3",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py"
        ]
      },
      "created_at": 1754957551.685843,
      "updated_at": 1754957551.685843
    },
    "concept_2355": {
      "id": "concept_2355",
      "type": "concept",
      "name": "batch_data",
      "description": "Concept: batch_data",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py"
        ]
      },
      "created_at": 1754957551.686205,
      "updated_at": 1754957551.686205
    },
    "concept_2356": {
      "id": "concept_2356",
      "type": "concept",
      "name": "workflow_mode",
      "description": "Concept: workflow_mode",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py",
          "demo_restructured_cognitive_system.py"
        ]
      },
      "created_at": 1754957551.6869261,
      "updated_at": 1754957551.7564569
    },
    "concept_2357": {
      "id": "concept_2357",
      "type": "concept",
      "name": "learning_focus",
      "description": "Concept: learning_focus",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py",
          "demo_restructured_cognitive_system.py"
        ]
      },
      "created_at": 1754957551.6872919,
      "updated_at": 1754957551.757648
    },
    "concept_2358": {
      "id": "concept_2358",
      "type": "concept",
      "name": "comprehensive_context",
      "description": "Concept: comprehensive_context",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py"
        ]
      },
      "created_at": 1754957551.687666,
      "updated_at": 1754957551.687666
    },
    "concept_2359": {
      "id": "concept_2359",
      "type": "concept",
      "name": "Batch Processing Demo",
      "description": "Concept: Batch Processing Demo",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py"
        ]
      },
      "created_at": 1754957551.6880372,
      "updated_at": 1754957551.6880372
    },
    "concept_2360": {
      "id": "concept_2360",
      "type": "concept",
      "name": "target_metrics",
      "description": "Concept: target_metrics",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py"
        ]
      },
      "created_at": 1754957551.688488,
      "updated_at": 1754957551.688488
    },
    "concept_2361": {
      "id": "concept_2361",
      "type": "concept",
      "name": "Phase 1: Enhanced Context Retrieval",
      "description": "Concept: Phase 1: Enhanced Context Retrieval",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py"
        ]
      },
      "created_at": 1754957551.688985,
      "updated_at": 1754957551.688985
    },
    "concept_2362": {
      "id": "concept_2362",
      "type": "concept",
      "name": "Phase 3 only",
      "description": "Concept: Phase 3 only",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py"
        ]
      },
      "created_at": 1754957551.689368,
      "updated_at": 1754957551.689368
    },
    "concept_2363": {
      "id": "concept_2363",
      "type": "concept",
      "name": "context_data",
      "description": "Concept: context_data",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py",
          "demo_restructured_cognitive_system.py"
        ]
      },
      "created_at": 1754957551.6898031,
      "updated_at": 1754957551.760412
    },
    "concept_2364": {
      "id": "concept_2364",
      "type": "concept",
      "name": "enhanced_context_plugin",
      "description": "Concept: enhanced_context_plugin",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py"
        ]
      },
      "created_at": 1754957551.6902452,
      "updated_at": 1754957551.6902452
    },
    "concept_2365": {
      "id": "concept_2365",
      "type": "concept",
      "name": "demonstrate_individual_phases",
      "description": "Concept: demonstrate_individual_phases",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py"
        ]
      },
      "created_at": 1754957551.690634,
      "updated_at": 1754957551.690634
    },
    "concept_2366": {
      "id": "concept_2366",
      "type": "concept",
      "name": "Phase 2 only",
      "description": "Concept: Phase 2 only",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py"
        ]
      },
      "created_at": 1754957551.691006,
      "updated_at": 1754957551.691006
    },
    "concept_2367": {
      "id": "concept_2367",
      "type": "concept",
      "name": "health_data",
      "description": "Concept: health_data",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py"
        ]
      },
      "created_at": 1754957551.691384,
      "updated_at": 1754957551.691384
    },
    "concept_2368": {
      "id": "concept_2368",
      "type": "concept",
      "name": "optimization_data",
      "description": "Concept: optimization_data",
      "source": "demo_enhanced_context_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_enhanced_context_system.py"
        ]
      },
      "created_at": 1754957551.691765,
      "updated_at": 1754957551.691765
    },
    "doc_2369": {
      "id": "doc_2369",
      "type": "document",
      "name": "Demo_Project_Scanner",
      "description": "Document: demo_project_scanner.py",
      "source": "demo_project_scanner.py",
      "confidence": 0.9,
      "metadata": {
        "file_size": 9924,
        "lines": 259,
        "language": "python",
        "last_modified": 1754957255.9615824
      },
      "created_at": 1754957551.695086,
      "updated_at": 1754957551.695086
    },
    "concept_2370": {
      "id": "concept_2370",
      "type": "concept",
      "name": "demo_mcp_integration",
      "description": "Concept: demo_mcp_integration",
      "source": "demo_project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_project_scanner.py"
        ]
      },
      "created_at": 1754957551.696199,
      "updated_at": 1754957551.696199
    },
    "concept_2371": {
      "id": "concept_2371",
      "type": "concept",
      "name": "project_scanner",
      "description": "Concept: project_scanner",
      "source": "demo_project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_project_scanner.py"
        ]
      },
      "created_at": 1754957551.696579,
      "updated_at": 1754957551.696579
    },
    "concept_2372": {
      "id": "concept_2372",
      "type": "concept",
      "name": "scanner",
      "description": "Concept: scanner",
      "source": "demo_project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_project_scanner.py",
          "project_scanner.py"
        ]
      },
      "created_at": 1754957551.696939,
      "updated_at": 1754957552.52605
    },
    "concept_2373": {
      "id": "concept_2373",
      "type": "concept",
      "name": "summary_export",
      "description": "Concept: summary_export",
      "source": "demo_project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_project_scanner.py"
        ]
      },
      "created_at": 1754957551.697658,
      "updated_at": 1754957551.697658
    },
    "concept_2374": {
      "id": "concept_2374",
      "type": "concept",
      "name": "Project structure",
      "description": "Concept: Project structure",
      "source": "demo_project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_project_scanner.py"
        ]
      },
      "created_at": 1754957551.698026,
      "updated_at": 1754957551.698026
    },
    "concept_2375": {
      "id": "concept_2375",
      "type": "concept",
      "name": "tech_stack",
      "description": "Concept: tech_stack",
      "source": "demo_project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_project_scanner.py"
        ]
      },
      "created_at": 1754957551.698644,
      "updated_at": 1754957551.698644
    },
    "concept_2376": {
      "id": "concept_2376",
      "type": "concept",
      "name": "Integration points",
      "description": "Concept: Integration points",
      "source": "demo_project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_project_scanner.py"
        ]
      },
      "created_at": 1754957551.69903,
      "updated_at": 1754957551.69903
    },
    "concept_2377": {
      "id": "concept_2377",
      "type": "concept",
      "name": "Language breakdown",
      "description": "Concept: Language breakdown",
      "source": "demo_project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_project_scanner.py"
        ]
      },
      "created_at": 1754957551.699759,
      "updated_at": 1754957551.699759
    },
    "concept_2378": {
      "id": "concept_2378",
      "type": "concept",
      "name": "Framework detection",
      "description": "Concept: Framework detection",
      "source": "demo_project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_project_scanner.py"
        ]
      },
      "created_at": 1754957551.700135,
      "updated_at": 1754957551.700135
    },
    "concept_2379": {
      "id": "concept_2379",
      "type": "concept",
      "name": "language",
      "description": "Concept: language",
      "source": "demo_project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_project_scanner.py",
          "knowledge_ingestion_engine.py",
          "project_scanner.py"
        ]
      },
      "created_at": 1754957551.700502,
      "updated_at": 1754957552.5990489
    },
    "concept_2380": {
      "id": "concept_2380",
      "type": "concept",
      "name": "scan_duration",
      "description": "Concept: scan_duration",
      "source": "demo_project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_project_scanner.py",
          "project_scanner.py"
        ]
      },
      "created_at": 1754957551.700876,
      "updated_at": 1754957552.5301619
    },
    "concept_2381": {
      "id": "concept_2381",
      "type": "concept",
      "name": "Display summary",
      "description": "Concept: Display summary",
      "source": "demo_project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_project_scanner.py"
        ]
      },
      "created_at": 1754957551.7012491,
      "updated_at": 1754957551.7012491
    },
    "concept_2382": {
      "id": "concept_2382",
      "type": "concept",
      "name": "Python files",
      "description": "Concept: Python files",
      "source": "demo_project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_project_scanner.py"
        ]
      },
      "created_at": 1754957551.701628,
      "updated_at": 1754957551.701628
    },
    "concept_2383": {
      "id": "concept_2383",
      "type": "concept",
      "name": "file_type",
      "description": "Concept: file_type",
      "source": "demo_project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_project_scanner.py",
          "knowledge_ingestion_engine.py",
          "project_scanner.py"
        ]
      },
      "created_at": 1754957551.701996,
      "updated_at": 1754957552.639762
    },
    "concept_2384": {
      "id": "concept_2384",
      "type": "concept",
      "name": "config_files",
      "description": "Concept: config_files",
      "source": "demo_project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_project_scanner.py"
        ]
      },
      "created_at": 1754957551.7023659,
      "updated_at": 1754957551.7023659
    },
    "concept_2385": {
      "id": "concept_2385",
      "type": "concept",
      "name": "Perform comprehensive scan",
      "description": "Concept: Perform comprehensive scan",
      "source": "demo_project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_project_scanner.py"
        ]
      },
      "created_at": 1754957551.703105,
      "updated_at": 1754957551.703105
    },
    "concept_2386": {
      "id": "concept_2386",
      "type": "concept",
      "name": "Show MCP integration",
      "description": "Concept: Show MCP integration",
      "source": "demo_project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_project_scanner.py"
        ]
      },
      "created_at": 1754957551.7034838,
      "updated_at": 1754957551.7034838
    },
    "concept_2387": {
      "id": "concept_2387",
      "type": "concept",
      "name": "Demonstrate the project scanner capabilities",
      "description": "Concept: Demonstrate the project scanner capabilities",
      "source": "demo_project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_project_scanner.py"
        ]
      },
      "created_at": 1754957551.703887,
      "updated_at": 1754957551.703887
    },
    "concept_2388": {
      "id": "concept_2388",
      "type": "concept",
      "name": "Run project scanning demo",
      "description": "Concept: Run project scanning demo",
      "source": "demo_project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_project_scanner.py"
        ]
      },
      "created_at": 1754957551.7042701,
      "updated_at": 1754957551.7042701
    },
    "concept_2389": {
      "id": "concept_2389",
      "type": "concept",
      "name": "Summary export",
      "description": "Concept: Summary export",
      "source": "demo_project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_project_scanner.py"
        ]
      },
      "created_at": 1754957551.7046442,
      "updated_at": 1754957551.7046442
    },
    "concept_2390": {
      "id": "concept_2390",
      "type": "concept",
      "name": "structure",
      "description": "Concept: structure",
      "source": "demo_project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_project_scanner.py",
          "enhanced_brain_tools_simple.py",
          "project_scanner.py"
        ]
      },
      "created_at": 1754957551.705012,
      "updated_at": 1754957552.5367548
    },
    "concept_2391": {
      "id": "concept_2391",
      "type": "concept",
      "name": "json",
      "description": "Concept: json",
      "source": "demo_project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_project_scanner.py",
          "function_call_logger.py",
          "knowledge_ingestion_engine.py",
          "llm_client.py",
          "project_scanner.py",
          "test_docker_functionality.py",
          "test_enhanced_docker.py",
          "test_enhanced_integration.py",
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957551.705374,
      "updated_at": 1754957552.738899
    },
    "concept_2392": {
      "id": "concept_2392",
      "type": "concept",
      "name": "Sample files by category",
      "description": "Concept: Sample files by category",
      "source": "demo_project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_project_scanner.py"
        ]
      },
      "created_at": 1754957551.7057521,
      "updated_at": 1754957551.705753
    },
    "concept_2393": {
      "id": "concept_2393",
      "type": "concept",
      "name": "demo_project_scanning",
      "description": "Concept: demo_project_scanning",
      "source": "demo_project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_project_scanner.py"
        ]
      },
      "created_at": 1754957551.7068238,
      "updated_at": 1754957551.7068238
    },
    "concept_2394": {
      "id": "concept_2394",
      "type": "concept",
      "name": "time",
      "description": "Concept: time",
      "source": "demo_project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_project_scanner.py",
          "healthcheck.py",
          "knowledge_ingestion_engine.py",
          "project_scanner.py",
          "test_mcp_integration.py",
          "test_mcp_tools.py"
        ]
      },
      "created_at": 1754957551.707198,
      "updated_at": 1754957552.7964768
    },
    "concept_2395": {
      "id": "concept_2395",
      "type": "concept",
      "name": "Save demo results",
      "description": "Concept: Save demo results",
      "source": "demo_project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_project_scanner.py"
        ]
      },
      "created_at": 1754957551.707595,
      "updated_at": 1754957551.707595
    },
    "concept_2396": {
      "id": "concept_2396",
      "type": "concept",
      "name": "action",
      "description": "Concept: action",
      "source": "demo_project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_project_scanner.py",
          "main.py"
        ]
      },
      "created_at": 1754957551.707964,
      "updated_at": 1754957552.3034601
    },
    "concept_2397": {
      "id": "concept_2397",
      "type": "concept",
      "name": "percentage",
      "description": "Concept: percentage",
      "source": "demo_project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_project_scanner.py",
          "project_scanner.py"
        ]
      },
      "created_at": 1754957551.708344,
      "updated_at": 1754957552.5751228
    },
    "concept_2398": {
      "id": "concept_2398",
      "type": "concept",
      "name": "indent",
      "description": "Concept: indent",
      "source": "demo_project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_project_scanner.py",
          "knowledge_ingestion_engine.py",
          "project_scanner.py",
          "test_enhanced_integration.py",
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957551.708805,
      "updated_at": 1754957552.7529569
    },
    "concept_2399": {
      "id": "concept_2399",
      "type": "concept",
      "name": "Documentation files",
      "description": "Concept: Documentation files",
      "source": "demo_project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_project_scanner.py"
        ]
      },
      "created_at": 1754957551.709198,
      "updated_at": 1754957551.709198
    },
    "concept_2400": {
      "id": "concept_2400",
      "type": "concept",
      "name": "Initialize scanner for current project",
      "description": "Concept: Initialize scanner for current project",
      "source": "demo_project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_project_scanner.py"
        ]
      },
      "created_at": 1754957551.709596,
      "updated_at": 1754957551.709596
    },
    "concept_2401": {
      "id": "concept_2401",
      "type": "concept",
      "name": "Show first 3 changes",
      "description": "Concept: Show first 3 changes",
      "source": "demo_project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_project_scanner.py"
        ]
      },
      "created_at": 1754957551.710003,
      "updated_at": 1754957551.710003
    },
    "concept_2402": {
      "id": "concept_2402",
      "type": "concept",
      "name": "File type analysis",
      "description": "Concept: File type analysis",
      "source": "demo_project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_project_scanner.py"
        ]
      },
      "created_at": 1754957551.710402,
      "updated_at": 1754957551.710402
    },
    "concept_2403": {
      "id": "concept_2403",
      "type": "concept",
      "name": "json_export",
      "description": "Concept: json_export",
      "source": "demo_project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_project_scanner.py"
        ]
      },
      "created_at": 1754957551.711155,
      "updated_at": 1754957551.711155
    },
    "concept_2404": {
      "id": "concept_2404",
      "type": "concept",
      "name": "Main demo function",
      "description": "Concept: Main demo function",
      "source": "demo_project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_project_scanner.py"
        ]
      },
      "created_at": 1754957551.71154,
      "updated_at": 1754957551.71154
    },
    "concept_2405": {
      "id": "concept_2405",
      "type": "concept",
      "name": "demo_file",
      "description": "Concept: demo_file",
      "source": "demo_project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_project_scanner.py"
        ]
      },
      "created_at": 1754957551.7119281,
      "updated_at": 1754957551.7119281
    },
    "concept_2406": {
      "id": "concept_2406",
      "type": "concept",
      "name": "Show how this integrates with our MCP system",
      "description": "Concept: Show how this integrates with our MCP system",
      "source": "demo_project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_project_scanner.py"
        ]
      },
      "created_at": 1754957551.712373,
      "updated_at": 1754957551.712373
    },
    "concept_2407": {
      "id": "concept_2407",
      "type": "concept",
      "name": "project_index",
      "description": "Concept: project_index",
      "source": "demo_project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_project_scanner.py",
          "project_scanner.py"
        ]
      },
      "created_at": 1754957551.712759,
      "updated_at": 1754957552.5829482
    },
    "concept_2408": {
      "id": "concept_2408",
      "type": "concept",
      "name": "current_dir",
      "description": "Concept: current_dir",
      "source": "demo_project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_project_scanner.py"
        ]
      },
      "created_at": 1754957551.7134972,
      "updated_at": 1754957551.7134972
    },
    "concept_2409": {
      "id": "concept_2409",
      "type": "concept",
      "name": "Change detection demo",
      "description": "Concept: Change detection demo",
      "source": "demo_project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_project_scanner.py"
        ]
      },
      "created_at": 1754957551.713883,
      "updated_at": 1754957551.713883
    },
    "concept_2410": {
      "id": "concept_2410",
      "type": "concept",
      "name": "Technology stack",
      "description": "Concept: Technology stack",
      "source": "demo_project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_project_scanner.py"
        ]
      },
      "created_at": 1754957551.7142642,
      "updated_at": 1754957551.7142642
    },
    "concept_2411": {
      "id": "concept_2411",
      "type": "concept",
      "name": "file_types",
      "description": "Concept: file_types",
      "source": "demo_project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_project_scanner.py"
        ]
      },
      "created_at": 1754957551.7146392,
      "updated_at": 1754957551.7146392
    },
    "concept_2412": {
      "id": "concept_2412",
      "type": "concept",
      "name": "python_files",
      "description": "Concept: python_files",
      "source": "demo_project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_project_scanner.py"
        ]
      },
      "created_at": 1754957551.715175,
      "updated_at": 1754957551.715175
    },
    "concept_2413": {
      "id": "concept_2413",
      "type": "concept",
      "name": "Export capabilities",
      "description": "Concept: Export capabilities",
      "source": "demo_project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_project_scanner.py"
        ]
      },
      "created_at": 1754957551.715623,
      "updated_at": 1754957551.715623
    },
    "concept_2414": {
      "id": "concept_2414",
      "type": "concept",
      "name": "JSON export",
      "description": "Concept: JSON export",
      "source": "demo_project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_project_scanner.py"
        ]
      },
      "created_at": 1754957551.716028,
      "updated_at": 1754957551.716028
    },
    "concept_2415": {
      "id": "concept_2415",
      "type": "concept",
      "name": "frameworks",
      "description": "Concept: frameworks",
      "source": "demo_project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_project_scanner.py",
          "project_scanner.py"
        ]
      },
      "created_at": 1754957551.716417,
      "updated_at": 1754957552.557021
    },
    "concept_2416": {
      "id": "concept_2416",
      "type": "concept",
      "name": "changes",
      "description": "Concept: changes",
      "source": "demo_project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_project_scanner.py",
          "project_scanner.py"
        ]
      },
      "created_at": 1754957551.7167912,
      "updated_at": 1754957552.5596101
    },
    "concept_2417": {
      "id": "concept_2417",
      "type": "concept",
      "name": "ProjectScanner",
      "description": "Concept: ProjectScanner",
      "source": "demo_project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_project_scanner.py",
          "project_scanner.py"
        ]
      },
      "created_at": 1754957551.717238,
      "updated_at": 1754957552.624133
    },
    "concept_2418": {
      "id": "concept_2418",
      "type": "concept",
      "name": "languages",
      "description": "Concept: languages",
      "source": "demo_project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_project_scanner.py",
          "project_scanner.py"
        ]
      },
      "created_at": 1754957551.717609,
      "updated_at": 1754957552.557888
    },
    "concept_2419": {
      "id": "concept_2419",
      "type": "concept",
      "name": "start_time",
      "description": "Concept: start_time",
      "source": "demo_project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_project_scanner.py",
          "function_call_logger.py",
          "knowledge_ingestion_engine.py",
          "project_scanner.py",
          "test_enhanced_integration.py",
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957551.71798,
      "updated_at": 1754957552.774404
    },
    "doc_2420": {
      "id": "doc_2420",
      "type": "document",
      "name": "Demo_Restructured_Cognitive_System",
      "description": "Document: demo_restructured_cognitive_system.py",
      "source": "demo_restructured_cognitive_system.py",
      "confidence": 0.9,
      "metadata": {
        "file_size": 17237,
        "lines": 418,
        "language": "python",
        "last_modified": 1754953224.0181959
      },
      "created_at": 1754957551.723572,
      "updated_at": 1754957551.723572
    },
    "concept_2421": {
      "id": "concept_2421",
      "type": "concept",
      "name": "domains",
      "description": "Concept: domains",
      "source": "demo_restructured_cognitive_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_restructured_cognitive_system.py"
        ]
      },
      "created_at": 1754957551.723965,
      "updated_at": 1754957551.723965
    },
    "concept_2422": {
      "id": "concept_2422",
      "type": "concept",
      "name": "tool",
      "description": "Concept: tool",
      "source": "demo_restructured_cognitive_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_restructured_cognitive_system.py",
          "test_tool_registry.py"
        ]
      },
      "created_at": 1754957551.724343,
      "updated_at": 1754957552.8019688
    },
    "concept_2423": {
      "id": "concept_2423",
      "type": "concept",
      "name": "overall_score",
      "description": "Concept: overall_score",
      "source": "demo_restructured_cognitive_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_restructured_cognitive_system.py"
        ]
      },
      "created_at": 1754957551.725596,
      "updated_at": 1754957551.725596
    },
    "concept_2424": {
      "id": "concept_2424",
      "type": "concept",
      "name": "4. LEARNING & ADAPTATION",
      "description": "Concept: 4. LEARNING & ADAPTATION",
      "source": "demo_restructured_cognitive_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_restructured_cognitive_system.py"
        ]
      },
      "created_at": 1754957551.727061,
      "updated_at": 1754957551.727061
    },
    "concept_2425": {
      "id": "concept_2425",
      "type": "concept",
      "name": "Get the tool handler",
      "description": "Concept: Get the tool handler",
      "source": "demo_restructured_cognitive_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_restructured_cognitive_system.py"
        ]
      },
      "created_at": 1754957551.727438,
      "updated_at": 1754957551.727438
    },
    "concept_2426": {
      "id": "concept_2426",
      "type": "concept",
      "name": "Learning and adaptation",
      "description": "Concept: Learning and adaptation",
      "source": "demo_restructured_cognitive_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_restructured_cognitive_system.py"
        ]
      },
      "created_at": 1754957551.727819,
      "updated_at": 1754957551.727819
    },
    "concept_2427": {
      "id": "concept_2427",
      "type": "concept",
      "name": "handler",
      "description": "Concept: handler",
      "source": "demo_restructured_cognitive_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_restructured_cognitive_system.py",
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py",
          "test_tool_registry.py"
        ]
      },
      "created_at": 1754957551.729009,
      "updated_at": 1754957552.810503
    },
    "concept_2428": {
      "id": "concept_2428",
      "type": "concept",
      "name": "name",
      "description": "Concept: name",
      "source": "demo_restructured_cognitive_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_restructured_cognitive_system.py",
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py",
          "knowledge_ingestion_engine.py",
          "main.py",
          "project_scanner.py",
          "test_tool_registry.py"
        ]
      },
      "created_at": 1754957551.7293818,
      "updated_at": 1754957552.8114529
    },
    "concept_2429": {
      "id": "concept_2429",
      "type": "concept",
      "name": "learning_data",
      "description": "Concept: learning_data",
      "source": "demo_restructured_cognitive_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_restructured_cognitive_system.py"
        ]
      },
      "created_at": 1754957551.729759,
      "updated_at": 1754957551.729759
    },
    "concept_2430": {
      "id": "concept_2430",
      "type": "concept",
      "name": "cycle_result",
      "description": "Concept: cycle_result",
      "source": "demo_restructured_cognitive_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_restructured_cognitive_system.py"
        ]
      },
      "created_at": 1754957551.7305238,
      "updated_at": 1754957551.730525
    },
    "concept_2431": {
      "id": "concept_2431",
      "type": "concept",
      "name": "Demonstrate the restructured cognitive system",
      "description": "Concept: Demonstrate the restructured cognitive system",
      "source": "demo_restructured_cognitive_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_restructured_cognitive_system.py"
        ]
      },
      "created_at": 1754957551.730925,
      "updated_at": 1754957551.730925
    },
    "concept_2432": {
      "id": "concept_2432",
      "type": "concept",
      "name": "5. OUTPUT & ACTION",
      "description": "Concept: 5. OUTPUT & ACTION",
      "source": "demo_restructured_cognitive_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_restructured_cognitive_system.py"
        ]
      },
      "created_at": 1754957551.731311,
      "updated_at": 1754957551.731311
    },
    "concept_2433": {
      "id": "concept_2433",
      "type": "concept",
      "name": "6. SELF-MONITORING",
      "description": "Concept: 6. SELF-MONITORING",
      "source": "demo_restructured_cognitive_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_restructured_cognitive_system.py"
        ]
      },
      "created_at": 1754957551.7317052,
      "updated_at": 1754957551.7317052
    },
    "concept_2434": {
      "id": "concept_2434",
      "type": "concept",
      "name": "Show consolidation benefits",
      "description": "Concept: Show consolidation benefits",
      "source": "demo_restructured_cognitive_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_restructured_cognitive_system.py"
        ]
      },
      "created_at": 1754957551.732098,
      "updated_at": 1754957551.732098
    },
    "concept_2435": {
      "id": "concept_2435",
      "type": "concept",
      "name": "1. PERCEPTION & INPUT",
      "description": "Concept: 1. PERCEPTION & INPUT",
      "source": "demo_restructured_cognitive_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_restructured_cognitive_system.py"
        ]
      },
      "created_at": 1754957551.733751,
      "updated_at": 1754957551.733751
    },
    "concept_2436": {
      "id": "concept_2436",
      "type": "concept",
      "name": "thinking_result",
      "description": "Concept: thinking_result",
      "source": "demo_restructured_cognitive_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_restructured_cognitive_system.py"
        ]
      },
      "created_at": 1754957551.734581,
      "updated_at": 1754957551.734581
    },
    "concept_2437": {
      "id": "concept_2437",
      "type": "concept",
      "name": "focus_area",
      "description": "Concept: focus_area",
      "source": "demo_restructured_cognitive_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_restructured_cognitive_system.py"
        ]
      },
      "created_at": 1754957551.734966,
      "updated_at": 1754957551.734966
    },
    "concept_2438": {
      "id": "concept_2438",
      "type": "concept",
      "name": "monitoring_data",
      "description": "Concept: monitoring_data",
      "source": "demo_restructured_cognitive_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_restructured_cognitive_system.py"
        ]
      },
      "created_at": 1754957551.7353652,
      "updated_at": 1754957551.7353652
    },
    "concept_2439": {
      "id": "concept_2439",
      "type": "concept",
      "name": "monitor_result",
      "description": "Concept: monitor_result",
      "source": "demo_restructured_cognitive_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_restructured_cognitive_system.py"
        ]
      },
      "created_at": 1754957551.7357628,
      "updated_at": 1754957551.7357628
    },
    "concept_2440": {
      "id": "concept_2440",
      "type": "concept",
      "name": "Auto-process message",
      "description": "Concept: Auto-process message",
      "source": "demo_restructured_cognitive_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_restructured_cognitive_system.py"
        ]
      },
      "created_at": 1754957551.736601,
      "updated_at": 1754957551.736601
    },
    "concept_2441": {
      "id": "concept_2441",
      "type": "concept",
      "name": "domains_to_test",
      "description": "Concept: domains_to_test",
      "source": "demo_restructured_cognitive_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_restructured_cognitive_system.py"
        ]
      },
      "created_at": 1754957551.7369769,
      "updated_at": 1754957551.7369769
    },
    "concept_2442": {
      "id": "concept_2442",
      "type": "concept",
      "name": "tool_count",
      "description": "Concept: tool_count",
      "source": "demo_restructured_cognitive_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_restructured_cognitive_system.py",
          "main.py"
        ]
      },
      "created_at": 1754957551.737375,
      "updated_at": 1754957552.351101
    },
    "concept_2443": {
      "id": "concept_2443",
      "type": "concept",
      "name": "monitoring_type",
      "description": "Concept: monitoring_type",
      "source": "demo_restructured_cognitive_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_restructured_cognitive_system.py"
        ]
      },
      "created_at": 1754957551.7377589,
      "updated_at": 1754957551.7377589
    },
    "concept_2444": {
      "id": "concept_2444",
      "type": "concept",
      "name": "Get all available tools",
      "description": "Concept: Get all available tools",
      "source": "demo_restructured_cognitive_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_restructured_cognitive_system.py"
        ]
      },
      "created_at": 1754957551.738146,
      "updated_at": 1754957551.738146
    },
    "concept_2445": {
      "id": "concept_2445",
      "type": "concept",
      "name": "process_result",
      "description": "Concept: process_result",
      "source": "demo_restructured_cognitive_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_restructured_cognitive_system.py"
        ]
      },
      "created_at": 1754957551.739551,
      "updated_at": 1754957551.739551
    },
    "concept_2446": {
      "id": "concept_2446",
      "type": "concept",
      "name": "results",
      "description": "Concept: results",
      "source": "demo_restructured_cognitive_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_restructured_cognitive_system.py",
          "knowledge_ingestion_engine.py",
          "main.py",
          "test_enhanced_integration.py",
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957551.740028,
      "updated_at": 1754957552.757183
    },
    "concept_2447": {
      "id": "concept_2447",
      "type": "concept",
      "name": "learned",
      "description": "Concept: learned",
      "source": "demo_restructured_cognitive_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_restructured_cognitive_system.py"
        ]
      },
      "created_at": 1754957551.741459,
      "updated_at": 1754957551.741459
    },
    "concept_2448": {
      "id": "concept_2448",
      "type": "concept",
      "name": "Demonstrate natural cognitive workflow",
      "description": "Concept: Demonstrate natural cognitive workflow",
      "source": "demo_restructured_cognitive_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_restructured_cognitive_system.py"
        ]
      },
      "created_at": 1754957551.7422981,
      "updated_at": 1754957551.7422981
    },
    "concept_2449": {
      "id": "concept_2449",
      "type": "concept",
      "name": "quality_score",
      "description": "Concept: quality_score",
      "source": "demo_restructured_cognitive_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_restructured_cognitive_system.py"
        ]
      },
      "created_at": 1754957551.742699,
      "updated_at": 1754957551.742699
    },
    "concept_2450": {
      "id": "concept_2450",
      "type": "concept",
      "name": "tools",
      "description": "Concept: tools",
      "source": "demo_restructured_cognitive_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_restructured_cognitive_system.py",
          "test_docker_functionality.py",
          "test_enhanced_docker.py"
        ]
      },
      "created_at": 1754957551.7430882,
      "updated_at": 1754957552.6773708
    },
    "concept_2451": {
      "id": "concept_2451",
      "type": "concept",
      "name": "Initialize the plugin",
      "description": "Concept: Initialize the plugin",
      "source": "demo_restructured_cognitive_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_restructured_cognitive_system.py"
        ]
      },
      "created_at": 1754957551.744249,
      "updated_at": 1754957551.744249
    },
    "concept_2452": {
      "id": "concept_2452",
      "type": "concept",
      "name": "demonstrate_individual_domains",
      "description": "Concept: demonstrate_individual_domains",
      "source": "demo_restructured_cognitive_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_restructured_cognitive_system.py"
        ]
      },
      "created_at": 1754957551.7453802,
      "updated_at": 1754957551.7453802
    },
    "concept_2453": {
      "id": "concept_2453",
      "type": "concept",
      "name": "2. MEMORY & STORAGE",
      "description": "Concept: 2. MEMORY & STORAGE",
      "source": "demo_restructured_cognitive_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_restructured_cognitive_system.py"
        ]
      },
      "created_at": 1754957551.746473,
      "updated_at": 1754957551.746473
    },
    "concept_2454": {
      "id": "concept_2454",
      "type": "concept",
      "name": "Test the tool (basic functionality check)",
      "description": "Concept: Test the tool (basic functionality check)",
      "source": "demo_restructured_cognitive_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_restructured_cognitive_system.py"
        ]
      },
      "created_at": 1754957551.746874,
      "updated_at": 1754957551.7468748
    },
    "concept_2455": {
      "id": "concept_2455",
      "type": "concept",
      "name": "3. PROCESSING & THINKING",
      "description": "Concept: 3. PROCESSING & THINKING",
      "source": "demo_restructured_cognitive_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_restructured_cognitive_system.py"
        ]
      },
      "created_at": 1754957551.747642,
      "updated_at": 1754957551.747642
    },
    "concept_2456": {
      "id": "concept_2456",
      "type": "concept",
      "name": "interaction",
      "description": "Concept: interaction",
      "source": "demo_restructured_cognitive_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_restructured_cognitive_system.py"
        ]
      },
      "created_at": 1754957551.748389,
      "updated_at": 1754957551.748389
    },
    "concept_2457": {
      "id": "concept_2457",
      "type": "concept",
      "name": "demonstrate_restructured_cognitive_system",
      "description": "Concept: demonstrate_restructured_cognitive_system",
      "source": "demo_restructured_cognitive_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_restructured_cognitive_system.py"
        ]
      },
      "created_at": 1754957551.748842,
      "updated_at": 1754957551.748842
    },
    "concept_2458": {
      "id": "concept_2458",
      "type": "concept",
      "name": "Import the restructured cognitive brain plugin",
      "description": "Concept: Import the restructured cognitive brain plugin",
      "source": "demo_restructured_cognitive_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_restructured_cognitive_system.py"
        ]
      },
      "created_at": 1754957551.749634,
      "updated_at": 1754957551.749634
    },
    "concept_2459": {
      "id": "concept_2459",
      "type": "concept",
      "name": "Test each domain individually",
      "description": "Concept: Test each domain individually",
      "source": "demo_restructured_cognitive_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_restructured_cognitive_system.py"
        ]
      },
      "created_at": 1754957551.750031,
      "updated_at": 1754957551.750031
    },
    "concept_2460": {
      "id": "concept_2460",
      "type": "concept",
      "name": "orchestration_data",
      "description": "Concept: orchestration_data",
      "source": "demo_restructured_cognitive_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_restructured_cognitive_system.py"
        ]
      },
      "created_at": 1754957551.7510011,
      "updated_at": 1754957551.7510011
    },
    "concept_2461": {
      "id": "concept_2461",
      "type": "concept",
      "name": "patterns",
      "description": "Concept: patterns",
      "source": "demo_restructured_cognitive_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_restructured_cognitive_system.py",
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py",
          "knowledge_ingestion_engine.py",
          "project_scanner.py"
        ]
      },
      "created_at": 1754957551.751373,
      "updated_at": 1754957552.624502
    },
    "concept_2462": {
      "id": "concept_2462",
      "type": "concept",
      "name": "CognitiveBrainRestructuredPlugin",
      "description": "Concept: CognitiveBrainRestructuredPlugin",
      "source": "demo_restructured_cognitive_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_restructured_cognitive_system.py"
        ]
      },
      "created_at": 1754957551.75216,
      "updated_at": 1754957551.75216
    },
    "concept_2463": {
      "id": "concept_2463",
      "type": "concept",
      "name": "metrics",
      "description": "Concept: metrics",
      "source": "demo_restructured_cognitive_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_restructured_cognitive_system.py"
        ]
      },
      "created_at": 1754957551.752908,
      "updated_at": 1754957551.752908
    },
    "concept_2464": {
      "id": "concept_2464",
      "type": "concept",
      "name": "Execute enhanced workflow",
      "description": "Concept: Execute enhanced workflow",
      "source": "demo_restructured_cognitive_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_restructured_cognitive_system.py"
        ]
      },
      "created_at": 1754957551.754112,
      "updated_at": 1754957551.754112
    },
    "concept_2465": {
      "id": "concept_2465",
      "type": "concept",
      "name": "description",
      "description": "Concept: description",
      "source": "demo_restructured_cognitive_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_restructured_cognitive_system.py",
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py",
          "knowledge_ingestion_engine.py",
          "main.py",
          "test_tool_registry.py"
        ]
      },
      "created_at": 1754957551.7548459,
      "updated_at": 1754957552.80401
    },
    "concept_2466": {
      "id": "concept_2466",
      "type": "concept",
      "name": "analysis_data",
      "description": "Concept: analysis_data",
      "source": "demo_restructured_cognitive_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_restructured_cognitive_system.py"
        ]
      },
      "created_at": 1754957551.755224,
      "updated_at": 1754957551.755224
    },
    "concept_2467": {
      "id": "concept_2467",
      "type": "concept",
      "name": "target",
      "description": "Concept: target",
      "source": "demo_restructured_cognitive_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_restructured_cognitive_system.py"
        ]
      },
      "created_at": 1754957551.755596,
      "updated_at": 1754957551.755596
    },
    "concept_2468": {
      "id": "concept_2468",
      "type": "concept",
      "name": "store_result",
      "description": "Concept: store_result",
      "source": "demo_restructured_cognitive_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_restructured_cognitive_system.py"
        ]
      },
      "created_at": 1754957551.756851,
      "updated_at": 1754957551.756851
    },
    "concept_2469": {
      "id": "concept_2469",
      "type": "concept",
      "name": "Display tools by domain",
      "description": "Concept: Display tools by domain",
      "source": "demo_restructured_cognitive_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_restructured_cognitive_system.py"
        ]
      },
      "created_at": 1754957551.757261,
      "updated_at": 1754957551.757261
    },
    "concept_2470": {
      "id": "concept_2470",
      "type": "concept",
      "name": "context_result",
      "description": "Concept: context_result",
      "source": "demo_restructured_cognitive_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_restructured_cognitive_system.py",
          "main.py",
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957551.7580469,
      "updated_at": 1754957552.785048
    },
    "concept_2471": {
      "id": "concept_2471",
      "type": "concept",
      "name": "Group tools by cognitive domain",
      "description": "Concept: Group tools by cognitive domain",
      "source": "demo_restructured_cognitive_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_restructured_cognitive_system.py"
        ]
      },
      "created_at": 1754957551.7584572,
      "updated_at": 1754957551.7584572
    },
    "concept_2472": {
      "id": "concept_2472",
      "type": "concept",
      "name": "success_rate",
      "description": "Concept: success_rate",
      "source": "demo_restructured_cognitive_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_restructured_cognitive_system.py"
        ]
      },
      "created_at": 1754957551.7588968,
      "updated_at": 1754957551.7588968
    },
    "concept_2473": {
      "id": "concept_2473",
      "type": "concept",
      "name": "Demonstrate individual cognitive domains",
      "description": "Concept: Demonstrate individual cognitive domains",
      "source": "demo_restructured_cognitive_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_restructured_cognitive_system.py"
        ]
      },
      "created_at": 1754957551.7594721,
      "updated_at": 1754957551.7594721
    },
    "concept_2474": {
      "id": "concept_2474",
      "type": "concept",
      "name": "Memory operations",
      "description": "Concept: Memory operations",
      "source": "demo_restructured_cognitive_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_restructured_cognitive_system.py"
        ]
      },
      "created_at": 1754957551.759927,
      "updated_at": 1754957551.759927
    },
    "concept_2475": {
      "id": "concept_2475",
      "type": "concept",
      "name": "Run individual domain demonstration",
      "description": "Concept: Run individual domain demonstration",
      "source": "demo_restructured_cognitive_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_restructured_cognitive_system.py"
        ]
      },
      "created_at": 1754957551.76086,
      "updated_at": 1754957551.76086
    },
    "concept_2476": {
      "id": "concept_2476",
      "type": "concept",
      "name": "thought",
      "description": "Concept: thought",
      "source": "demo_restructured_cognitive_system.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "demo_restructured_cognitive_system.py"
        ]
      },
      "created_at": 1754957551.761251,
      "updated_at": 1754957551.761251
    },
    "doc_2477": {
      "id": "doc_2477",
      "type": "document",
      "name": "Demo_Results_1754957207",
      "description": "Document: demo_results_1754957207.json",
      "source": "demo_results_1754957207.json",
      "confidence": 0.9,
      "metadata": {
        "file_size": 446,
        "lines": 24,
        "language": "unknown",
        "last_modified": 1754957207.229708
      },
      "created_at": 1754957551.761594,
      "updated_at": 1754957551.761594
    },
    "doc_2478": {
      "id": "doc_2478",
      "type": "document",
      "name": "Docker-Compose",
      "description": "Document: docker-compose.yml",
      "source": "docker-compose.yml",
      "confidence": 0.9,
      "metadata": {
        "file_size": 2586,
        "lines": 111,
        "language": "unknown",
        "last_modified": 1754954281.7573183
      },
      "created_at": 1754957551.76223,
      "updated_at": 1754957551.76223
    },
    "doc_2479": {
      "id": "doc_2479",
      "type": "document",
      "name": "Enhanced_Brain_Tools",
      "description": "Document: enhanced_brain_tools.py",
      "source": "enhanced_brain_tools.py",
      "confidence": 0.9,
      "metadata": {
        "file_size": 21257,
        "lines": 433,
        "language": "python",
        "last_modified": 1754950731.648055
      },
      "created_at": 1754957551.7690282,
      "updated_at": 1754957551.7690282
    },
    "concept_2480": {
      "id": "concept_2480",
      "type": "concept",
      "name": "Enhanced reflection with context analysis",
      "description": "Concept: Enhanced reflection with context analysis",
      "source": "enhanced_brain_tools.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.76985,
      "updated_at": 1754957551.826688
    },
    "concept_2481": {
      "id": "concept_2481",
      "type": "concept",
      "name": "\ud83d\udd0d ANALYSIS & UNDERSTANDING TOOLS",
      "description": "Concept: \ud83d\udd0d ANALYSIS & UNDERSTANDING TOOLS",
      "source": "enhanced_brain_tools.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.771212,
      "updated_at": 1754957551.8295062
    },
    "concept_2482": {
      "id": "concept_2482",
      "type": "concept",
      "name": "\ud83d\ude80 CURSOR-SPECIFIC TOOLS",
      "description": "Concept: \ud83d\ude80 CURSOR-SPECIFIC TOOLS",
      "source": "enhanced_brain_tools.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.773855,
      "updated_at": 1754957551.834402
    },
    "concept_2483": {
      "id": "concept_2483",
      "type": "concept",
      "name": "\ud83c\udf1f CONTEXT ANALYSIS TOOLS",
      "description": "Concept: \ud83c\udf1f CONTEXT ANALYSIS TOOLS",
      "source": "enhanced_brain_tools.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.778099,
      "updated_at": 1754957551.844157
    },
    "concept_2484": {
      "id": "concept_2484",
      "type": "concept",
      "name": "Perform context analysis on the reflection topic",
      "description": "Concept: Perform context analysis on the reflection topic",
      "source": "enhanced_brain_tools.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.779213,
      "updated_at": 1754957551.8469918
    },
    "concept_2485": {
      "id": "concept_2485",
      "type": "concept",
      "name": "Register enhanced cognitive tools",
      "description": "Concept: Register enhanced cognitive tools",
      "source": "enhanced_brain_tools.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.7796109,
      "updated_at": 1754957551.8482602
    },
    "concept_2486": {
      "id": "concept_2486",
      "type": "concept",
      "name": "\ud83e\udde0 COGNITIVE CORE TOOLS",
      "description": "Concept: \ud83e\udde0 COGNITIVE CORE TOOLS",
      "source": "enhanced_brain_tools.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.780174,
      "updated_at": 1754957551.849659
    },
    "concept_2487": {
      "id": "concept_2487",
      "type": "concept",
      "name": "Simple pattern matching as fallback",
      "description": "Concept: Simple pattern matching as fallback",
      "source": "enhanced_brain_tools.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.780579,
      "updated_at": 1754957551.850052
    },
    "concept_2488": {
      "id": "concept_2488",
      "type": "concept",
      "name": "Register the think_deeply tool",
      "description": "Concept: Register the think_deeply tool",
      "source": "enhanced_brain_tools.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.780973,
      "updated_at": 1754957551.850841
    },
    "concept_2489": {
      "id": "concept_2489",
      "type": "concept",
      "name": "Deep thinking with full context analysis",
      "description": "Concept: Deep thinking with full context analysis",
      "source": "enhanced_brain_tools.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.782225,
      "updated_at": 1754957551.8549151
    },
    "concept_2490": {
      "id": "concept_2490",
      "type": "concept",
      "name": "Register all enhanced brain tools with clear purposes",
      "description": "Concept: Register all enhanced brain tools with clear purposes",
      "source": "enhanced_brain_tools.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.784868,
      "updated_at": 1754957551.8624792
    },
    "concept_2491": {
      "id": "concept_2491",
      "type": "concept",
      "name": "_register_cognitive_tools",
      "description": "Concept: _register_cognitive_tools",
      "source": "enhanced_brain_tools.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.785337,
      "updated_at": 1754957551.86287
    },
    "concept_2492": {
      "id": "concept_2492",
      "type": "concept",
      "name": "Direct context analysis using ContextAnalyzer module",
      "description": "Concept: Direct context analysis using ContextAnalyzer module",
      "source": "enhanced_brain_tools.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.785821,
      "updated_at": 1754957551.863917
    },
    "concept_2493": {
      "id": "concept_2493",
      "type": "concept",
      "name": "_register_memory_tools",
      "description": "Concept: _register_memory_tools",
      "source": "enhanced_brain_tools.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.786211,
      "updated_at": 1754957551.865669
    },
    "concept_2494": {
      "id": "concept_2494",
      "type": "concept",
      "name": "_register_analysis_tools",
      "description": "Concept: _register_analysis_tools",
      "source": "enhanced_brain_tools.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.78661,
      "updated_at": 1754957551.8668559
    },
    "concept_2495": {
      "id": "concept_2495",
      "type": "concept",
      "name": "Perform deep context analysis",
      "description": "Concept: Perform deep context analysis",
      "source": "enhanced_brain_tools.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.7870588,
      "updated_at": 1754957551.8676329
    },
    "concept_2496": {
      "id": "concept_2496",
      "type": "concept",
      "name": "code_patterns",
      "description": "Concept: code_patterns",
      "source": "enhanced_brain_tools.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.788001,
      "updated_at": 1754957551.869524
    },
    "concept_2497": {
      "id": "concept_2497",
      "type": "concept",
      "name": "Use the full ContextAnalyzer functionality",
      "description": "Concept: Use the full ContextAnalyzer functionality",
      "source": "enhanced_brain_tools.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.788498,
      "updated_at": 1754957551.870741
    },
    "concept_2498": {
      "id": "concept_2498",
      "type": "concept",
      "name": "Simple code pattern analysis",
      "description": "Concept: Simple code pattern analysis",
      "source": "enhanced_brain_tools.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.789823,
      "updated_at": 1754957551.8739269
    },
    "concept_2499": {
      "id": "concept_2499",
      "type": "concept",
      "name": "Fallback context analysis when ContextAnalyzer is unavailable",
      "description": "Concept: Fallback context analysis when ContextAnalyzer is unavailable",
      "source": "enhanced_brain_tools.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.790329,
      "updated_at": 1754957551.874733
    },
    "concept_2500": {
      "id": "concept_2500",
      "type": "concept",
      "name": "registry",
      "description": "Concept: registry",
      "source": "enhanced_brain_tools.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py",
          "main.py",
          "test_tool_registry.py"
        ]
      },
      "created_at": 1754957551.790715,
      "updated_at": 1754957552.8055522
    },
    "concept_2501": {
      "id": "concept_2501",
      "type": "concept",
      "name": "_register_enhanced_tools",
      "description": "Concept: _register_enhanced_tools",
      "source": "enhanced_brain_tools.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.791459,
      "updated_at": 1754957551.8778088
    },
    "concept_2502": {
      "id": "concept_2502",
      "type": "concept",
      "name": "Analyze code for patterns and quality",
      "description": "Concept: Analyze code for patterns and quality",
      "source": "enhanced_brain_tools.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.792282,
      "updated_at": 1754957551.879349
    },
    "concept_2503": {
      "id": "concept_2503",
      "type": "concept",
      "name": "Store in memory",
      "description": "Concept: Store in memory",
      "source": "enhanced_brain_tools.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.7936509,
      "updated_at": 1754957551.882423
    },
    "concept_2504": {
      "id": "concept_2504",
      "type": "concept",
      "name": "Enhanced memory formation with context analysis",
      "description": "Concept: Enhanced memory formation with context analysis",
      "source": "enhanced_brain_tools.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.794071,
      "updated_at": 1754957551.883327
    },
    "concept_2505": {
      "id": "concept_2505",
      "type": "concept",
      "name": "Perform context analysis on code",
      "description": "Concept: Perform context analysis on code",
      "source": "enhanced_brain_tools.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.794483,
      "updated_at": 1754957551.883862
    },
    "concept_2506": {
      "id": "concept_2506",
      "type": "concept",
      "name": "Analyze code patterns",
      "description": "Concept: Analyze code patterns",
      "source": "enhanced_brain_tools.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.7948852,
      "updated_at": 1754957551.885151
    },
    "concept_2507": {
      "id": "concept_2507",
      "type": "concept",
      "name": "_register_cursor_tools",
      "description": "Concept: _register_cursor_tools",
      "source": "enhanced_brain_tools.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.796213,
      "updated_at": 1754957551.887536
    },
    "concept_2508": {
      "id": "concept_2508",
      "type": "concept",
      "name": "Enhanced brain tools with ContextAnalyzer integration",
      "description": "Concept: Enhanced brain tools with ContextAnalyzer integration",
      "source": "enhanced_brain_tools.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.797,
      "updated_at": 1754957551.889067
    },
    "concept_2509": {
      "id": "concept_2509",
      "type": "concept",
      "name": "Comprehensive context analysis",
      "description": "Concept: Comprehensive context analysis",
      "source": "enhanced_brain_tools.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.797756,
      "updated_at": 1754957551.889838
    },
    "concept_2510": {
      "id": "concept_2510",
      "type": "concept",
      "name": "Register dedicated context analysis tools",
      "description": "Concept: Register dedicated context analysis tools",
      "source": "enhanced_brain_tools.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.7982268,
      "updated_at": 1754957551.891083
    },
    "concept_2511": {
      "id": "concept_2511",
      "type": "concept",
      "name": "Code analysis with context understanding",
      "description": "Concept: Code analysis with context understanding",
      "source": "enhanced_brain_tools.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.799398,
      "updated_at": 1754957551.8934798
    },
    "concept_2512": {
      "id": "concept_2512",
      "type": "concept",
      "name": "_register_context_tools",
      "description": "Concept: _register_context_tools",
      "source": "enhanced_brain_tools.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.800502,
      "updated_at": 1754957551.895405
    },
    "concept_2513": {
      "id": "concept_2513",
      "type": "concept",
      "name": "Deep understanding with context analysis",
      "description": "Concept: Deep understanding with context analysis",
      "source": "enhanced_brain_tools.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.8009028,
      "updated_at": 1754957551.8962219
    },
    "concept_2514": {
      "id": "concept_2514",
      "type": "concept",
      "name": "Register Cursor-specific tools",
      "description": "Concept: Register Cursor-specific tools",
      "source": "enhanced_brain_tools.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.802439,
      "updated_at": 1754957551.898477
    },
    "concept_2515": {
      "id": "concept_2515",
      "type": "concept",
      "name": "Perform comprehensive context analysis",
      "description": "Concept: Perform comprehensive context analysis",
      "source": "enhanced_brain_tools.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.802923,
      "updated_at": 1754957551.8992682
    },
    "concept_2516": {
      "id": "concept_2516",
      "type": "concept",
      "name": "Register analysis and understanding tools",
      "description": "Concept: Register analysis and understanding tools",
      "source": "enhanced_brain_tools.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.8038242,
      "updated_at": 1754957551.903334
    },
    "concept_2517": {
      "id": "concept_2517",
      "type": "concept",
      "name": "Use memory-enhanced chat",
      "description": "Concept: Use memory-enhanced chat",
      "source": "enhanced_brain_tools.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.804275,
      "updated_at": 1754957551.903861
    },
    "concept_2518": {
      "id": "concept_2518",
      "type": "concept",
      "name": "Register enhanced memory tools",
      "description": "Concept: Register enhanced memory tools",
      "source": "enhanced_brain_tools.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.8050182,
      "updated_at": 1754957551.9050932
    },
    "concept_2519": {
      "id": "concept_2519",
      "type": "concept",
      "name": "Get reflection insights",
      "description": "Concept: Get reflection insights",
      "source": "enhanced_brain_tools.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.805408,
      "updated_at": 1754957551.90688
    },
    "concept_2520": {
      "id": "concept_2520",
      "type": "concept",
      "name": "\ud83e\udde0 MEMORY MANAGEMENT TOOLS",
      "description": "Concept: \ud83e\udde0 MEMORY MANAGEMENT TOOLS",
      "source": "enhanced_brain_tools.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools.py",
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.805988,
      "updated_at": 1754957551.907489
    },
    "doc_2521": {
      "id": "doc_2521",
      "type": "document",
      "name": "Enhanced_Brain_Tools_Simple",
      "description": "Document: enhanced_brain_tools_simple.py",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.9,
      "metadata": {
        "file_size": 55457,
        "lines": 1137,
        "language": "python",
        "last_modified": 1754950869.3377817
      },
      "created_at": 1754957551.824565,
      "updated_at": 1754957551.824565
    },
    "concept_2522": {
      "id": "concept_2522",
      "type": "concept",
      "name": "Register the reflect_enhanced tool",
      "description": "Concept: Register the reflect_enhanced tool",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.825112,
      "updated_at": 1754957551.825112
    },
    "concept_2523": {
      "id": "concept_2523",
      "type": "concept",
      "name": "Filter by pattern type if specified",
      "description": "Concept: Filter by pattern type if specified",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.825519,
      "updated_at": 1754957551.825519
    },
    "concept_2524": {
      "id": "concept_2524",
      "type": "concept",
      "name": "Register the detect_patterns tool",
      "description": "Concept: Register the detect_patterns tool",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.825921,
      "updated_at": 1754957551.825922
    },
    "concept_2525": {
      "id": "concept_2525",
      "type": "concept",
      "name": "Assess risks of refactoring plan",
      "description": "Concept: Assess risks of refactoring plan",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.8272939,
      "updated_at": 1754957551.8272939
    },
    "concept_2526": {
      "id": "concept_2526",
      "type": "concept",
      "name": "Limit to 2 steps for safety",
      "description": "Concept: Limit to 2 steps for safety",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.8279161,
      "updated_at": 1754957551.8279161
    },
    "concept_2527": {
      "id": "concept_2527",
      "type": "concept",
      "name": "Analyze code structure for refactoring",
      "description": "Concept: Analyze code structure for refactoring",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.828803,
      "updated_at": 1754957551.828803
    },
    "concept_2528": {
      "id": "concept_2528",
      "type": "concept",
      "name": "Perform context analysis on the query",
      "description": "Concept: Perform context analysis on the query",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.829952,
      "updated_at": 1754957551.829952
    },
    "concept_2529": {
      "id": "concept_2529",
      "type": "concept",
      "name": "Generate steps based on goal and structure",
      "description": "Concept: Generate steps based on goal and structure",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.83038,
      "updated_at": 1754957551.83038
    },
    "concept_2530": {
      "id": "concept_2530",
      "type": "concept",
      "name": "Register the debug_intelligently tool",
      "description": "Concept: Register the debug_intelligently tool",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.831167,
      "updated_at": 1754957551.831167
    },
    "concept_2531": {
      "id": "concept_2531",
      "type": "concept",
      "name": "Calculate overall complexity score",
      "description": "Concept: Calculate overall complexity score",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.8320022,
      "updated_at": 1754957551.8320022
    },
    "concept_2532": {
      "id": "concept_2532",
      "type": "concept",
      "name": "complexity_layers",
      "description": "Concept: complexity_layers",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.832787,
      "updated_at": 1754957551.832787
    },
    "concept_2533": {
      "id": "concept_2533",
      "type": "concept",
      "name": "Calculate complexity of a class",
      "description": "Concept: Calculate complexity of a class",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.8360808,
      "updated_at": 1754957551.8360808
    },
    "concept_2534": {
      "id": "concept_2534",
      "type": "concept",
      "name": "Extract different types of patterns",
      "description": "Concept: Extract different types of patterns",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.837656,
      "updated_at": 1754957551.837656
    },
    "concept_2535": {
      "id": "concept_2535",
      "type": "concept",
      "name": "Context pattern matching",
      "description": "Concept: Context pattern matching",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.838052,
      "updated_at": 1754957551.838052
    },
    "concept_2536": {
      "id": "concept_2536",
      "type": "concept",
      "name": "Perform context analysis on the refactoring goal",
      "description": "Concept: Perform context analysis on the refactoring goal",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.838807,
      "updated_at": 1754957551.838807
    },
    "concept_2537": {
      "id": "concept_2537",
      "type": "concept",
      "name": "Search memories with enhanced context",
      "description": "Concept: Search memories with enhanced context",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.839562,
      "updated_at": 1754957551.839562
    },
    "concept_2538": {
      "id": "concept_2538",
      "type": "concept",
      "name": "Calculate confidence score for detected patterns",
      "description": "Concept: Calculate confidence score for detected patterns",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.840353,
      "updated_at": 1754957551.840353
    },
    "concept_2539": {
      "id": "concept_2539",
      "type": "concept",
      "name": "Check context patterns",
      "description": "Concept: Check context patterns",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.8407629,
      "updated_at": 1754957551.8407629
    },
    "concept_2540": {
      "id": "concept_2540",
      "type": "concept",
      "name": "Add debugging hints based on error message",
      "description": "Concept: Add debugging hints based on error message",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.8411672,
      "updated_at": 1754957551.8411672
    },
    "concept_2541": {
      "id": "concept_2541",
      "type": "concept",
      "name": "Register the refactor_safely tool",
      "description": "Concept: Register the refactor_safely tool",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.841901,
      "updated_at": 1754957551.841901
    },
    "concept_2542": {
      "id": "concept_2542",
      "type": "concept",
      "name": "combined_content",
      "description": "Concept: combined_content",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.843543,
      "updated_at": 1754957551.843544
    },
    "concept_2543": {
      "id": "concept_2543",
      "type": "concept",
      "name": "End of function",
      "description": "Concept: End of function",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.8445811,
      "updated_at": 1754957551.8445811
    },
    "concept_2544": {
      "id": "concept_2544",
      "type": "concept",
      "name": "confidence_sum",
      "description": "Concept: confidence_sum",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.844992,
      "updated_at": 1754957551.844992
    },
    "concept_2545": {
      "id": "concept_2545",
      "type": "concept",
      "name": "refactoring_plan",
      "description": "Concept: refactoring_plan",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.846175,
      "updated_at": 1754957551.846175
    },
    "concept_2546": {
      "id": "concept_2546",
      "type": "concept",
      "name": "lines",
      "description": "Concept: lines",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py",
          "knowledge_ingestion_engine.py",
          "project_scanner.py"
        ]
      },
      "created_at": 1754957551.846563,
      "updated_at": 1754957552.558261
    },
    "concept_2547": {
      "id": "concept_2547",
      "type": "concept",
      "name": "enhanced_results",
      "description": "Concept: enhanced_results",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.847394,
      "updated_at": 1754957551.847394
    },
    "concept_2548": {
      "id": "concept_2548",
      "type": "concept",
      "name": "Analyze current code structure",
      "description": "Concept: Analyze current code structure",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.847799,
      "updated_at": 1754957551.847799
    },
    "concept_2549": {
      "id": "concept_2549",
      "type": "concept",
      "name": "Register the recall_intelligently tool",
      "description": "Concept: Register the recall_intelligently tool",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.848706,
      "updated_at": 1754957551.848706
    },
    "concept_2550": {
      "id": "concept_2550",
      "type": "concept",
      "name": "technical_score",
      "description": "Concept: technical_score",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.849107,
      "updated_at": 1754957551.849107
    },
    "concept_2551": {
      "id": "concept_2551",
      "type": "concept",
      "name": "Assess risks based on plan steps",
      "description": "Concept: Assess risks based on plan steps",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.8504472,
      "updated_at": 1754957551.8504472
    },
    "concept_2552": {
      "id": "concept_2552",
      "type": "concept",
      "name": "technical_indicators",
      "description": "Concept: technical_indicators",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.85123,
      "updated_at": 1754957551.85123
    },
    "concept_2553": {
      "id": "concept_2553",
      "type": "concept",
      "name": "pattern_count",
      "description": "Concept: pattern_count",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.851614,
      "updated_at": 1754957551.851614
    },
    "concept_2554": {
      "id": "concept_2554",
      "type": "concept",
      "name": "Analyze code for debugging patterns",
      "description": "Concept: Analyze code for debugging patterns",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.852015,
      "updated_at": 1754957551.852015
    },
    "concept_2555": {
      "id": "concept_2555",
      "type": "concept",
      "name": "Perform selective cleanup based on context",
      "description": "Concept: Perform selective cleanup based on context",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.8527622,
      "updated_at": 1754957551.8527622
    },
    "concept_2556": {
      "id": "concept_2556",
      "type": "concept",
      "name": "int",
      "description": "Concept: int",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py",
          "function_call_logger.py",
          "llm_client.py",
          "main.py"
        ]
      },
      "created_at": 1754957551.853628,
      "updated_at": 1754957552.3416378
    },
    "concept_2557": {
      "id": "concept_2557",
      "type": "concept",
      "name": "memory_str",
      "description": "Concept: memory_str",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.854052,
      "updated_at": 1754957551.854052
    },
    "concept_2558": {
      "id": "concept_2558",
      "type": "concept",
      "name": "bool",
      "description": "Concept: bool",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py",
          "function_call_logger.py",
          "llm_client.py",
          "main.py"
        ]
      },
      "created_at": 1754957551.854479,
      "updated_at": 1754957552.3443031
    },
    "concept_2559": {
      "id": "concept_2559",
      "type": "concept",
      "name": "Register the remember_important tool",
      "description": "Concept: Register the remember_important tool",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.85535,
      "updated_at": 1754957551.85535
    },
    "concept_2560": {
      "id": "concept_2560",
      "type": "concept",
      "name": "enhanced_memory",
      "description": "Concept: enhanced_memory",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.855767,
      "updated_at": 1754957551.855767
    },
    "concept_2561": {
      "id": "concept_2561",
      "type": "concept",
      "name": "Register the analyze_context_comprehensive tool",
      "description": "Concept: Register the analyze_context_comprehensive tool",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.856213,
      "updated_at": 1754957551.856213
    },
    "concept_2562": {
      "id": "concept_2562",
      "type": "concept",
      "name": "Register the code_analyze tool",
      "description": "Concept: Register the code_analyze tool",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.856717,
      "updated_at": 1754957551.856717
    },
    "concept_2563": {
      "id": "concept_2563",
      "type": "concept",
      "name": "complexity_assessment",
      "description": "Concept: complexity_assessment",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.8571332,
      "updated_at": 1754957551.8571332
    },
    "concept_2564": {
      "id": "concept_2564",
      "type": "concept",
      "name": "Assess emotional complexity from context analysis",
      "description": "Concept: Assess emotional complexity from context analysis",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.857548,
      "updated_at": 1754957551.857548
    },
    "concept_2565": {
      "id": "concept_2565",
      "type": "concept",
      "name": "Perform context analysis on the cleanup criteria",
      "description": "Concept: Perform context analysis on the cleanup criteria",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.8579578,
      "updated_at": 1754957551.8579578
    },
    "concept_2566": {
      "id": "concept_2566",
      "type": "concept",
      "name": "debugging_recommendations",
      "description": "Concept: debugging_recommendations",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.859403,
      "updated_at": 1754957551.859403
    },
    "concept_2567": {
      "id": "concept_2567",
      "type": "concept",
      "name": "Check for common logical issues",
      "description": "Concept: Check for common logical issues",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.8601549,
      "updated_at": 1754957551.8601549
    },
    "concept_2568": {
      "id": "concept_2568",
      "type": "concept",
      "name": "nesting_level",
      "description": "Concept: nesting_level",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.86054,
      "updated_at": 1754957551.86054
    },
    "concept_2569": {
      "id": "concept_2569",
      "type": "concept",
      "name": "Generate safe refactoring plan",
      "description": "Concept: Generate safe refactoring plan",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.8609369,
      "updated_at": 1754957551.8609369
    },
    "concept_2570": {
      "id": "concept_2570",
      "type": "concept",
      "name": "Extract complexity information",
      "description": "Concept: Extract complexity information",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.86168,
      "updated_at": 1754957551.86168
    },
    "concept_2571": {
      "id": "concept_2571",
      "type": "concept",
      "name": "safety_level",
      "description": "Concept: safety_level",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.862069,
      "updated_at": 1754957551.862069
    },
    "concept_2572": {
      "id": "concept_2572",
      "type": "concept",
      "name": "Comprehensive complexity assessment with ContextAnalyzer",
      "description": "Concept: Comprehensive complexity assessment with ContextAnalyzer",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.863436,
      "updated_at": 1754957551.863436
    },
    "concept_2573": {
      "id": "concept_2573",
      "type": "concept",
      "name": "line",
      "description": "Concept: line",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py",
          "knowledge_ingestion_engine.py",
          "project_scanner.py"
        ]
      },
      "created_at": 1754957551.864789,
      "updated_at": 1754957552.5833201
    },
    "concept_2574": {
      "id": "concept_2574",
      "type": "concept",
      "name": "Assess technical complexity of content",
      "description": "Concept: Assess technical complexity of content",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.86528,
      "updated_at": 1754957551.86528
    },
    "concept_2575": {
      "id": "concept_2575",
      "type": "concept",
      "name": "Register the understand_deeply tool",
      "description": "Concept: Register the understand_deeply tool",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.866085,
      "updated_at": 1754957551.866085
    },
    "concept_2576": {
      "id": "concept_2576",
      "type": "concept",
      "name": "risks",
      "description": "Concept: risks",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.866467,
      "updated_at": 1754957551.866467
    },
    "concept_2577": {
      "id": "concept_2577",
      "type": "concept",
      "name": "plan",
      "description": "Concept: plan",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.867239,
      "updated_at": 1754957551.867239
    },
    "concept_2578": {
      "id": "concept_2578",
      "type": "concept",
      "name": "filtered_patterns",
      "description": "Concept: filtered_patterns",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.868022,
      "updated_at": 1754957551.868022
    },
    "concept_2579": {
      "id": "concept_2579",
      "type": "concept",
      "name": "confirmation",
      "description": "Concept: confirmation",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.868756,
      "updated_at": 1754957551.868756
    },
    "concept_2580": {
      "id": "concept_2580",
      "type": "concept",
      "name": "complexity",
      "description": "Concept: complexity",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py",
          "test_enhanced_integration.py",
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957551.86914,
      "updated_at": 1754957552.758469
    },
    "concept_2581": {
      "id": "concept_2581",
      "type": "concept",
      "name": "Assess cognitive load of content",
      "description": "Concept: Assess cognitive load of content",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.869928,
      "updated_at": 1754957551.869928
    },
    "concept_2582": {
      "id": "concept_2582",
      "type": "concept",
      "name": "Register the assess_complexity tool",
      "description": "Concept: Register the assess_complexity tool",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.870338,
      "updated_at": 1754957551.870338
    },
    "concept_2583": {
      "id": "concept_2583",
      "type": "concept",
      "name": "Safe code refactoring with ContextAnalyzer integration",
      "description": "Concept: Safe code refactoring with ContextAnalyzer integration",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.871525,
      "updated_at": 1754957551.871525
    },
    "concept_2584": {
      "id": "concept_2584",
      "type": "concept",
      "name": "Generate safety recommendations for refactoring",
      "description": "Concept: Generate safety recommendations for refactoring",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.871936,
      "updated_at": 1754957551.871936
    },
    "concept_2585": {
      "id": "concept_2585",
      "type": "concept",
      "name": "Intelligent memory retrieval with context analysis",
      "description": "Concept: Intelligent memory retrieval with context analysis",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.87235,
      "updated_at": 1754957551.87235
    },
    "concept_2586": {
      "id": "concept_2586",
      "type": "concept",
      "name": "Analyze which memories match cleanup criteria",
      "description": "Concept: Analyze which memories match cleanup criteria",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.8727639,
      "updated_at": 1754957551.8727639
    },
    "concept_2587": {
      "id": "concept_2587",
      "type": "concept",
      "name": "Assess refactoring risks",
      "description": "Concept: Assess refactoring risks",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.873538,
      "updated_at": 1754957551.873538
    },
    "concept_2588": {
      "id": "concept_2588",
      "type": "concept",
      "name": "code_structure",
      "description": "Concept: code_structure",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.874315,
      "updated_at": 1754957551.874315
    },
    "concept_2589": {
      "id": "concept_2589",
      "type": "concept",
      "name": "word_count",
      "description": "Concept: word_count",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.875115,
      "updated_at": 1754957551.875115
    },
    "concept_2590": {
      "id": "concept_2590",
      "type": "concept",
      "name": "Query content matching",
      "description": "Concept: Query content matching",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.875508,
      "updated_at": 1754957551.875508
    },
    "concept_2591": {
      "id": "concept_2591",
      "type": "concept",
      "name": "Check if memory matches cleanup criteria",
      "description": "Concept: Check if memory matches cleanup criteria",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.875916,
      "updated_at": 1754957551.875916
    },
    "concept_2592": {
      "id": "concept_2592",
      "type": "concept",
      "name": "Generate debugging recommendations",
      "description": "Concept: Generate debugging recommendations",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.8763149,
      "updated_at": 1754957551.8763149
    },
    "concept_2593": {
      "id": "concept_2593",
      "type": "concept",
      "name": "experiences",
      "description": "Concept: experiences",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.876697,
      "updated_at": 1754957551.876697
    },
    "concept_2594": {
      "id": "concept_2594",
      "type": "concept",
      "name": "Generate refactoring plan",
      "description": "Concept: Generate refactoring plan",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.8785431,
      "updated_at": 1754957551.8785431
    },
    "concept_2595": {
      "id": "concept_2595",
      "type": "concept",
      "name": "Perform context analysis on the code and error",
      "description": "Concept: Perform context analysis on the code and error",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.878956,
      "updated_at": 1754957551.878956
    },
    "concept_2596": {
      "id": "concept_2596",
      "type": "concept",
      "name": "search_term",
      "description": "Concept: search_term",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.880405,
      "updated_at": 1754957551.880405
    },
    "concept_2597": {
      "id": "concept_2597",
      "type": "concept",
      "name": "Analyze code patterns for debugging",
      "description": "Concept: Analyze code patterns for debugging",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.880811,
      "updated_at": 1754957551.880811
    },
    "concept_2598": {
      "id": "concept_2598",
      "type": "concept",
      "name": "Assess contextual complexity from context analysis",
      "description": "Concept: Assess contextual complexity from context analysis",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.881224,
      "updated_at": 1754957551.881224
    },
    "concept_2599": {
      "id": "concept_2599",
      "type": "concept",
      "name": "Determine the best debugging strategy",
      "description": "Concept: Determine the best debugging strategy",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.8816488,
      "updated_at": 1754957551.8816488
    },
    "concept_2600": {
      "id": "concept_2600",
      "type": "concept",
      "name": "method_count",
      "description": "Concept: method_count",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.882038,
      "updated_at": 1754957551.882038
    },
    "concept_2601": {
      "id": "concept_2601",
      "type": "concept",
      "name": "Sort by relevance score",
      "description": "Concept: Sort by relevance score",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.882815,
      "updated_at": 1754957551.882815
    },
    "concept_2602": {
      "id": "concept_2602",
      "type": "concept",
      "name": "Add context-based recommendations",
      "description": "Concept: Add context-based recommendations",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.8843038,
      "updated_at": 1754957551.8843038
    },
    "concept_2603": {
      "id": "concept_2603",
      "type": "concept",
      "name": "layer_count",
      "description": "Concept: layer_count",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.885549,
      "updated_at": 1754957551.885549
    },
    "concept_2604": {
      "id": "concept_2604",
      "type": "concept",
      "name": "End of class",
      "description": "Concept: End of class",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.885935,
      "updated_at": 1754957551.885936
    },
    "concept_2605": {
      "id": "concept_2605",
      "type": "concept",
      "name": "emotional_context",
      "description": "Concept: emotional_context",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.8867688,
      "updated_at": 1754957551.8867688
    },
    "concept_2606": {
      "id": "concept_2606",
      "type": "concept",
      "name": "context",
      "description": "Concept: context",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py",
          "project_scanner.py"
        ]
      },
      "created_at": 1754957551.887918,
      "updated_at": 1754957552.626985
    },
    "concept_2607": {
      "id": "concept_2607",
      "type": "concept",
      "name": "criteria_lower",
      "description": "Concept: criteria_lower",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.88831,
      "updated_at": 1754957551.88831
    },
    "concept_2608": {
      "id": "concept_2608",
      "type": "concept",
      "name": "Add recommendations based on patterns",
      "description": "Concept: Add recommendations based on patterns",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.8902678,
      "updated_at": 1754957551.8902678
    },
    "concept_2609": {
      "id": "concept_2609",
      "type": "concept",
      "name": "Assess different aspects of complexity",
      "description": "Concept: Assess different aspects of complexity",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.890681,
      "updated_at": 1754957551.890681
    },
    "concept_2610": {
      "id": "concept_2610",
      "type": "concept",
      "name": "Intelligent debugging with ContextAnalyzer integration",
      "description": "Concept: Intelligent debugging with ContextAnalyzer integration",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.891498,
      "updated_at": 1754957551.891498
    },
    "concept_2611": {
      "id": "concept_2611",
      "type": "concept",
      "name": "Check for common syntax issues",
      "description": "Concept: Check for common syntax issues",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.891903,
      "updated_at": 1754957551.891903
    },
    "concept_2612": {
      "id": "concept_2612",
      "type": "concept",
      "name": "Calculate complexity of a function",
      "description": "Concept: Calculate complexity of a function",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.8923059,
      "updated_at": 1754957551.8923059
    },
    "concept_2613": {
      "id": "concept_2613",
      "type": "concept",
      "name": "Helper methods for enhanced tools",
      "description": "Concept: Helper methods for enhanced tools",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.89461,
      "updated_at": 1754957551.89461
    },
    "concept_2614": {
      "id": "concept_2614",
      "type": "concept",
      "name": "Adjust risk level based on safety level",
      "description": "Concept: Adjust risk level based on safety level",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.895016,
      "updated_at": 1754957551.895016
    },
    "concept_2615": {
      "id": "concept_2615",
      "type": "concept",
      "name": "Generate recommendations based on complexity assessment",
      "description": "Concept: Generate recommendations based on complexity assessment",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.895825,
      "updated_at": 1754957551.8958259
    },
    "concept_2616": {
      "id": "concept_2616",
      "type": "concept",
      "name": "total_patterns",
      "description": "Concept: total_patterns",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.89661,
      "updated_at": 1754957551.89661
    },
    "concept_2617": {
      "id": "concept_2617",
      "type": "concept",
      "name": "Selective memory cleanup with context analysis",
      "description": "Concept: Selective memory cleanup with context analysis",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.897376,
      "updated_at": 1754957551.897377
    },
    "concept_2618": {
      "id": "concept_2618",
      "type": "concept",
      "name": "cleanup_result",
      "description": "Concept: cleanup_result",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.898868,
      "updated_at": 1754957551.898868
    },
    "concept_2619": {
      "id": "concept_2619",
      "type": "concept",
      "name": "Enhance results with context analysis",
      "description": "Concept: Enhance results with context analysis",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.900029,
      "updated_at": 1754957551.900029
    },
    "concept_2620": {
      "id": "concept_2620",
      "type": "concept",
      "name": "Advanced pattern detection with ContextAnalyzer",
      "description": "Concept: Advanced pattern detection with ContextAnalyzer",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.90044,
      "updated_at": 1754957551.90044
    },
    "concept_2621": {
      "id": "concept_2621",
      "type": "concept",
      "name": "memories_to_clean",
      "description": "Concept: memories_to_clean",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.900835,
      "updated_at": 1754957551.900835
    },
    "concept_2622": {
      "id": "concept_2622",
      "type": "concept",
      "name": "Check if criteria appears in memory",
      "description": "Concept: Check if criteria appears in memory",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.901242,
      "updated_at": 1754957551.901242
    },
    "concept_2623": {
      "id": "concept_2623",
      "type": "concept",
      "name": "risk_assessment",
      "description": "Concept: risk_assessment",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.9016309,
      "updated_at": 1754957551.901632
    },
    "concept_2624": {
      "id": "concept_2624",
      "type": "concept",
      "name": "Register the forget_selectively tool",
      "description": "Concept: Register the forget_selectively tool",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.902039,
      "updated_at": 1754957551.902039
    },
    "concept_2625": {
      "id": "concept_2625",
      "type": "concept",
      "name": "sentence_count",
      "description": "Concept: sentence_count",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.90243,
      "updated_at": 1754957551.90243
    },
    "concept_2626": {
      "id": "concept_2626",
      "type": "concept",
      "name": "Calculate relevance score for memory retrieval",
      "description": "Concept: Calculate relevance score for memory retrieval",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.902845,
      "updated_at": 1754957551.902845
    },
    "concept_2627": {
      "id": "concept_2627",
      "type": "concept",
      "name": "debug_patterns",
      "description": "Concept: debug_patterns",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.904673,
      "updated_at": 1754957551.904673
    },
    "concept_2628": {
      "id": "concept_2628",
      "type": "concept",
      "name": "Identify refactoring opportunities",
      "description": "Concept: Identify refactoring opportunities",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.905523,
      "updated_at": 1754957551.905523
    },
    "concept_2629": {
      "id": "concept_2629",
      "type": "concept",
      "name": "Adjust plan based on safety level",
      "description": "Concept: Adjust plan based on safety level",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.9059541,
      "updated_at": 1754957551.9059541
    },
    "concept_2630": {
      "id": "concept_2630",
      "type": "concept",
      "name": "base_score",
      "description": "Concept: base_score",
      "source": "enhanced_brain_tools_simple.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "enhanced_brain_tools_simple.py"
        ]
      },
      "created_at": 1754957551.906364,
      "updated_at": 1754957551.906364
    },
    "doc_2631": {
      "id": "doc_2631",
      "type": "document",
      "name": "Enhanced_Integration_Results",
      "description": "Document: enhanced_integration_results.json",
      "source": "enhanced_integration_results.json",
      "confidence": 0.9,
      "metadata": {
        "file_size": 4343,
        "lines": 150,
        "language": "unknown",
        "last_modified": 1754951189.5385022
      },
      "created_at": 1754957551.908499,
      "updated_at": 1754957551.908499
    },
    "doc_2632": {
      "id": "doc_2632",
      "type": "document",
      "name": "Function_Call_Logger",
      "description": "Document: function_call_logger.py",
      "source": "function_call_logger.py",
      "confidence": 0.9,
      "metadata": {
        "file_size": 16648,
        "lines": 440,
        "language": "python",
        "last_modified": 1754696112.4756584
      },
      "created_at": 1754957551.913755,
      "updated_at": 1754957551.913755
    },
    "concept_2633": {
      "id": "concept_2633",
      "type": "concept",
      "name": "_global_logger",
      "description": "Concept: _global_logger",
      "source": "function_call_logger.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "function_call_logger.py"
        ]
      },
      "created_at": 1754957551.9141572,
      "updated_at": 1754957551.9141572
    },
    "concept_2634": {
      "id": "concept_2634",
      "type": "concept",
      "name": "input_data",
      "description": "Concept: input_data",
      "source": "function_call_logger.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "function_call_logger.py",
          "main.py"
        ]
      },
      "created_at": 1754957551.9145432,
      "updated_at": 1754957552.223236
    },
    "concept_2635": {
      "id": "concept_2635",
      "type": "concept",
      "name": "error_message",
      "description": "Concept: error_message",
      "source": "function_call_logger.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "function_call_logger.py"
        ]
      },
      "created_at": 1754957551.9149492,
      "updated_at": 1754957551.9149492
    },
    "concept_2636": {
      "id": "concept_2636",
      "type": "concept",
      "name": "successful_calls",
      "description": "Concept: successful_calls",
      "source": "function_call_logger.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "function_call_logger.py"
        ]
      },
      "created_at": 1754957551.9153368,
      "updated_at": 1754957551.915338
    },
    "concept_2637": {
      "id": "concept_2637",
      "type": "concept",
      "name": "inspect",
      "description": "Concept: inspect",
      "source": "function_call_logger.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "function_call_logger.py"
        ]
      },
      "created_at": 1754957551.91573,
      "updated_at": 1754957551.91573
    },
    "concept_2638": {
      "id": "concept_2638",
      "type": "concept",
      "name": "Specific decorator for memory operations",
      "description": "Concept: Specific decorator for memory operations",
      "source": "function_call_logger.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "function_call_logger.py"
        ]
      },
      "created_at": 1754957551.916214,
      "updated_at": 1754957551.916214
    },
    "concept_2639": {
      "id": "concept_2639",
      "type": "concept",
      "name": "asynccontextmanager",
      "description": "Concept: asynccontextmanager",
      "source": "function_call_logger.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "function_call_logger.py"
        ]
      },
      "created_at": 1754957551.916626,
      "updated_at": 1754957551.916626
    },
    "concept_2640": {
      "id": "concept_2640",
      "type": "concept",
      "name": "Initialize the logger with database connection",
      "description": "Concept: Initialize the logger with database connection",
      "source": "function_call_logger.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "function_call_logger.py"
        ]
      },
      "created_at": 1754957551.9178739,
      "updated_at": 1754957551.9178739
    },
    "concept_2641": {
      "id": "concept_2641",
      "type": "concept",
      "name": "timestamp",
      "description": "Concept: timestamp",
      "source": "function_call_logger.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "function_call_logger.py"
        ]
      },
      "created_at": 1754957551.9182599,
      "updated_at": 1754957551.9182599
    },
    "concept_2642": {
      "id": "concept_2642",
      "type": "concept",
      "name": "For sync functions, create a simple log entry",
      "description": "Concept: For sync functions, create a simple log entry",
      "source": "function_call_logger.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "function_call_logger.py"
        ]
      },
      "created_at": 1754957551.9186728,
      "updated_at": 1754957551.9186728
    },
    "concept_2643": {
      "id": "concept_2643",
      "type": "concept",
      "name": "Success rate",
      "description": "Concept: Success rate",
      "source": "function_call_logger.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "function_call_logger.py"
        ]
      },
      "created_at": 1754957551.91907,
      "updated_at": 1754957551.91907
    },
    "concept_2644": {
      "id": "concept_2644",
      "type": "concept",
      "name": "_session_id",
      "description": "Concept: _session_id",
      "source": "function_call_logger.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "function_call_logger.py"
        ]
      },
      "created_at": 1754957551.919798,
      "updated_at": 1754957551.919798
    },
    "concept_2645": {
      "id": "concept_2645",
      "type": "concept",
      "name": "_database",
      "description": "Concept: _database",
      "source": "function_call_logger.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "function_call_logger.py"
        ]
      },
      "created_at": 1754957551.920182,
      "updated_at": 1754957551.920182
    },
    "concept_2646": {
      "id": "concept_2646",
      "type": "concept",
      "name": "Create function_calls table for comprehensive logging",
      "description": "Concept: Create function_calls table for comprehensive logging",
      "source": "function_call_logger.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "function_call_logger.py"
        ]
      },
      "created_at": 1754957551.920973,
      "updated_at": 1754957551.920973
    },
    "concept_2647": {
      "id": "concept_2647",
      "type": "concept",
      "name": "function_type",
      "description": "Concept: function_type",
      "source": "function_call_logger.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "function_call_logger.py",
          "main.py"
        ]
      },
      "created_at": 1754957551.921705,
      "updated_at": 1754957552.335629
    },
    "concept_2648": {
      "id": "concept_2648",
      "type": "concept",
      "name": "track_function_call",
      "description": "Concept: track_function_call",
      "source": "function_call_logger.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "function_call_logger.py"
        ]
      },
      "created_at": 1754957551.922101,
      "updated_at": 1754957551.922101
    },
    "concept_2649": {
      "id": "concept_2649",
      "type": "concept",
      "name": "async_wrapper",
      "description": "Concept: async_wrapper",
      "source": "function_call_logger.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "function_call_logger.py"
        ]
      },
      "created_at": 1754957551.9224892,
      "updated_at": 1754957551.9224892
    },
    "concept_2650": {
      "id": "concept_2650",
      "type": "concept",
      "name": "function_calls",
      "description": "Concept: function_calls",
      "source": "function_call_logger.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "function_call_logger.py"
        ]
      },
      "created_at": 1754957551.923257,
      "updated_at": 1754957551.923257
    },
    "concept_2651": {
      "id": "concept_2651",
      "type": "concept",
      "name": "avg_execution_time",
      "description": "Concept: avg_execution_time",
      "source": "function_call_logger.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "function_call_logger.py"
        ]
      },
      "created_at": 1754957551.924442,
      "updated_at": 1754957551.924442
    },
    "concept_2652": {
      "id": "concept_2652",
      "type": "concept",
      "name": "Update call info",
      "description": "Concept: Update call info",
      "source": "function_call_logger.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "function_call_logger.py"
        ]
      },
      "created_at": 1754957551.92521,
      "updated_at": 1754957551.92521
    },
    "concept_2653": {
      "id": "concept_2653",
      "type": "concept",
      "name": "call_info",
      "description": "Concept: call_info",
      "source": "function_call_logger.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "function_call_logger.py"
        ]
      },
      "created_at": 1754957551.925596,
      "updated_at": 1754957551.925596
    },
    "concept_2654": {
      "id": "concept_2654",
      "type": "concept",
      "name": "Global function call logger instance",
      "description": "Concept: Global function call logger instance",
      "source": "function_call_logger.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "function_call_logger.py"
        ]
      },
      "created_at": 1754957551.926003,
      "updated_at": 1754957551.926003
    },
    "concept_2655": {
      "id": "concept_2655",
      "type": "concept",
      "name": "Get function call history",
      "description": "Concept: Get function call history",
      "source": "function_call_logger.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "function_call_logger.py"
        ]
      },
      "created_at": 1754957551.926412,
      "updated_at": 1754957551.926412
    },
    "concept_2656": {
      "id": "concept_2656",
      "type": "concept",
      "name": "function_name",
      "description": "Concept: function_name",
      "source": "function_call_logger.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "function_call_logger.py",
          "main.py"
        ]
      },
      "created_at": 1754957551.926808,
      "updated_at": 1754957552.4402409
    },
    "concept_2657": {
      "id": "concept_2657",
      "type": "concept",
      "name": "_ensure_function_calls_table",
      "description": "Concept: _ensure_function_calls_table",
      "source": "function_call_logger.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "function_call_logger.py"
        ]
      },
      "created_at": 1754957551.927561,
      "updated_at": 1754957551.927561
    },
    "concept_2658": {
      "id": "concept_2658",
      "type": "concept",
      "name": "function_breakdown",
      "description": "Concept: function_breakdown",
      "source": "function_call_logger.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "function_call_logger.py"
        ]
      },
      "created_at": 1754957551.9279559,
      "updated_at": 1754957551.9279559
    },
    "concept_2659": {
      "id": "concept_2659",
      "type": "concept",
      "name": "Average execution time",
      "description": "Concept: Average execution time",
      "source": "function_call_logger.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "function_call_logger.py"
        ]
      },
      "created_at": 1754957551.928355,
      "updated_at": 1754957551.928355
    },
    "concept_2660": {
      "id": "concept_2660",
      "type": "concept",
      "name": "Extract user message if present",
      "description": "Concept: Extract user message if present",
      "source": "function_call_logger.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "function_call_logger.py"
        ]
      },
      "created_at": 1754957551.9287639,
      "updated_at": 1754957551.9287639
    },
    "concept_2661": {
      "id": "concept_2661",
      "type": "concept",
      "name": "call_data",
      "description": "Concept: call_data",
      "source": "function_call_logger.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "function_call_logger.py"
        ]
      },
      "created_at": 1754957551.9291499,
      "updated_at": 1754957551.9291499
    },
    "concept_2662": {
      "id": "concept_2662",
      "type": "concept",
      "name": "execution_time_ms",
      "description": "Concept: execution_time_ms",
      "source": "function_call_logger.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "function_call_logger.py"
        ]
      },
      "created_at": 1754957551.929543,
      "updated_at": 1754957551.929543
    },
    "concept_2663": {
      "id": "concept_2663",
      "type": "concept",
      "name": "Create indexes for fast queries",
      "description": "Concept: Create indexes for fast queries",
      "source": "function_call_logger.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "function_call_logger.py"
        ]
      },
      "created_at": 1754957551.9299479,
      "updated_at": 1754957551.9299479
    },
    "concept_2664": {
      "id": "concept_2664",
      "type": "concept",
      "name": "Remove from call stack",
      "description": "Concept: Remove from call stack",
      "source": "function_call_logger.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "function_call_logger.py"
        ]
      },
      "created_at": 1754957551.930351,
      "updated_at": 1754957551.930351
    },
    "concept_2665": {
      "id": "concept_2665",
      "type": "concept",
      "name": "log_all_calls",
      "description": "Concept: log_all_calls",
      "source": "function_call_logger.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "function_call_logger.py"
        ]
      },
      "created_at": 1754957551.9307468,
      "updated_at": 1754957551.9307468
    },
    "concept_2666": {
      "id": "concept_2666",
      "type": "concept",
      "name": "output_data",
      "description": "Concept: output_data",
      "source": "function_call_logger.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "function_call_logger.py"
        ]
      },
      "created_at": 1754957551.9311402,
      "updated_at": 1754957551.9311402
    },
    "concept_2667": {
      "id": "concept_2667",
      "type": "concept",
      "name": "_enabled",
      "description": "Concept: _enabled",
      "source": "function_call_logger.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "function_call_logger.py"
        ]
      },
      "created_at": 1754957551.931902,
      "updated_at": 1754957551.931902
    },
    "concept_2668": {
      "id": "concept_2668",
      "type": "concept",
      "name": "contextlib",
      "description": "Concept: contextlib",
      "source": "function_call_logger.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "function_call_logger.py"
        ]
      },
      "created_at": 1754957551.932294,
      "updated_at": 1754957551.932294
    },
    "concept_2669": {
      "id": "concept_2669",
      "type": "concept",
      "name": "Get comprehensive statistics for current session",
      "description": "Concept: Get comprehensive statistics for current session",
      "source": "function_call_logger.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "function_call_logger.py"
        ]
      },
      "created_at": 1754957551.9330502,
      "updated_at": 1754957551.9330502
    },
    "concept_2670": {
      "id": "concept_2670",
      "type": "concept",
      "name": "columns",
      "description": "Concept: columns",
      "source": "function_call_logger.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "function_call_logger.py"
        ]
      },
      "created_at": 1754957551.9335759,
      "updated_at": 1754957551.933577
    },
    "concept_2671": {
      "id": "concept_2671",
      "type": "concept",
      "name": "Create function_calls table if it doesn't exist",
      "description": "Concept: Create function_calls table if it doesn't exist",
      "source": "function_call_logger.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "function_call_logger.py"
        ]
      },
      "created_at": 1754957551.934592,
      "updated_at": 1754957551.934592
    },
    "concept_2672": {
      "id": "concept_2672",
      "type": "concept",
      "name": "default",
      "description": "Concept: default",
      "source": "function_call_logger.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "function_call_logger.py",
          "knowledge_ingestion_engine.py",
          "test_enhanced_integration.py",
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957551.9350631,
      "updated_at": 1754957552.767339
    },
    "concept_2673": {
      "id": "concept_2673",
      "type": "concept",
      "name": "end_time",
      "description": "Concept: end_time",
      "source": "function_call_logger.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "function_call_logger.py"
        ]
      },
      "created_at": 1754957551.93583,
      "updated_at": 1754957551.93583
    },
    "concept_2674": {
      "id": "concept_2674",
      "type": "concept",
      "name": "Handle common types",
      "description": "Concept: Handle common types",
      "source": "function_call_logger.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "function_call_logger.py"
        ]
      },
      "created_at": 1754957551.936331,
      "updated_at": 1754957551.936331
    },
    "concept_2675": {
      "id": "concept_2675",
      "type": "concept",
      "name": "Any",
      "description": "Concept: Any",
      "source": "function_call_logger.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "function_call_logger.py"
        ]
      },
      "created_at": 1754957551.9371011,
      "updated_at": 1754957551.9371011
    },
    "concept_2676": {
      "id": "concept_2676",
      "type": "concept",
      "name": "wraps",
      "description": "Concept: wraps",
      "source": "function_call_logger.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "function_call_logger.py"
        ]
      },
      "created_at": 1754957551.937512,
      "updated_at": 1754957551.937512
    },
    "concept_2677": {
      "id": "concept_2677",
      "type": "concept",
      "name": "Generate unique session ID",
      "description": "Concept: Generate unique session ID",
      "source": "function_call_logger.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "function_call_logger.py"
        ]
      },
      "created_at": 1754957551.9379299,
      "updated_at": 1754957551.9379299
    },
    "concept_2678": {
      "id": "concept_2678",
      "type": "concept",
      "name": "Log the complete function call",
      "description": "Concept: Log the complete function call",
      "source": "function_call_logger.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "function_call_logger.py"
        ]
      },
      "created_at": 1754957551.9383419,
      "updated_at": 1754957551.9383419
    },
    "concept_2679": {
      "id": "concept_2679",
      "type": "concept",
      "name": "call_id",
      "description": "Concept: call_id",
      "source": "function_call_logger.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "function_call_logger.py"
        ]
      },
      "created_at": 1754957551.9387379,
      "updated_at": 1754957551.9387379
    },
    "concept_2680": {
      "id": "concept_2680",
      "type": "concept",
      "name": "Specific decorator for database operations",
      "description": "Concept: Specific decorator for database operations",
      "source": "function_call_logger.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "function_call_logger.py"
        ]
      },
      "created_at": 1754957551.939166,
      "updated_at": 1754957551.939166
    },
    "concept_2681": {
      "id": "concept_2681",
      "type": "concept",
      "name": "traceback",
      "description": "Concept: traceback",
      "source": "function_call_logger.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "function_call_logger.py",
          "test_docker_functionality.py",
          "test_enhanced_docker.py",
          "test_tool_registry.py"
        ]
      },
      "created_at": 1754957551.939988,
      "updated_at": 1754957552.803589
    },
    "concept_2682": {
      "id": "concept_2682",
      "type": "concept",
      "name": "Safely serialize data to JSON",
      "description": "Concept: Safely serialize data to JSON",
      "source": "function_call_logger.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "function_call_logger.py"
        ]
      },
      "created_at": 1754957551.940414,
      "updated_at": 1754957551.940414
    },
    "concept_2683": {
      "id": "concept_2683",
      "type": "concept",
      "name": "Store output data",
      "description": "Concept: Store output data",
      "source": "function_call_logger.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "function_call_logger.py"
        ]
      },
      "created_at": 1754957551.9408169,
      "updated_at": 1754957551.9408169
    },
    "concept_2684": {
      "id": "concept_2684",
      "type": "concept",
      "name": "Truncate long strings",
      "description": "Concept: Truncate long strings",
      "source": "function_call_logger.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "function_call_logger.py"
        ]
      },
      "created_at": 1754957551.941222,
      "updated_at": 1754957551.941222
    },
    "concept_2685": {
      "id": "concept_2685",
      "type": "concept",
      "name": "success",
      "description": "Concept: success",
      "source": "function_call_logger.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "function_call_logger.py",
          "test_docker_functionality.py",
          "test_enhanced_docker.py",
          "test_mcp_tools.py",
          "test_tool_registry.py"
        ]
      },
      "created_at": 1754957551.941615,
      "updated_at": 1754957552.8059368
    },
    "concept_2686": {
      "id": "concept_2686",
      "type": "concept",
      "name": "Get or create global function call logger",
      "description": "Concept: Get or create global function call logger",
      "source": "function_call_logger.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "function_call_logger.py"
        ]
      },
      "created_at": 1754957551.942038,
      "updated_at": 1754957551.942038
    },
    "concept_2687": {
      "id": "concept_2687",
      "type": "concept",
      "name": "logger_instance",
      "description": "Concept: logger_instance",
      "source": "function_call_logger.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "function_call_logger.py"
        ]
      },
      "created_at": 1754957551.942432,
      "updated_at": 1754957551.942432
    },
    "concept_2688": {
      "id": "concept_2688",
      "type": "concept",
      "name": "Add to call stack",
      "description": "Concept: Add to call stack",
      "source": "function_call_logger.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "function_call_logger.py"
        ]
      },
      "created_at": 1754957551.94319,
      "updated_at": 1754957551.94319
    },
    "concept_2689": {
      "id": "concept_2689",
      "type": "concept",
      "name": "Calculate execution time",
      "description": "Concept: Calculate execution time",
      "source": "function_call_logger.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "function_call_logger.py"
        ]
      },
      "created_at": 1754957551.943744,
      "updated_at": 1754957551.943744
    },
    "concept_2690": {
      "id": "concept_2690",
      "type": "concept",
      "name": "Total calls in session",
      "description": "Concept: Total calls in session",
      "source": "function_call_logger.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "function_call_logger.py"
        ]
      },
      "created_at": 1754957551.944201,
      "updated_at": 1754957551.944201
    },
    "concept_2691": {
      "id": "concept_2691",
      "type": "concept",
      "name": "__all__",
      "description": "Concept: __all__",
      "source": "function_call_logger.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "function_call_logger.py"
        ]
      },
      "created_at": 1754957551.944673,
      "updated_at": 1754957551.944673
    },
    "concept_2692": {
      "id": "concept_2692",
      "type": "concept",
      "name": "call",
      "description": "Concept: call",
      "source": "function_call_logger.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "function_call_logger.py"
        ]
      },
      "created_at": 1754957551.9450629,
      "updated_at": 1754957551.9450629
    },
    "concept_2693": {
      "id": "concept_2693",
      "type": "concept",
      "name": "FunctionCallLogger",
      "description": "Concept: FunctionCallLogger",
      "source": "function_call_logger.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "function_call_logger.py"
        ]
      },
      "created_at": 1754957551.945952,
      "updated_at": 1754957551.945952
    },
    "concept_2694": {
      "id": "concept_2694",
      "type": "concept",
      "name": "Specific decorator for MCP tools",
      "description": "Concept: Specific decorator for MCP tools",
      "source": "function_call_logger.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "function_call_logger.py"
        ]
      },
      "created_at": 1754957551.946372,
      "updated_at": 1754957551.9463732
    },
    "concept_2695": {
      "id": "concept_2695",
      "type": "concept",
      "name": "Return appropriate wrapper based on function type",
      "description": "Concept: Return appropriate wrapper based on function type",
      "source": "function_call_logger.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "function_call_logger.py"
        ]
      },
      "created_at": 1754957551.9468029,
      "updated_at": 1754957551.946804
    },
    "concept_2696": {
      "id": "concept_2696",
      "type": "concept",
      "name": "Search function calls by context or content",
      "description": "Concept: Search function calls by context or content",
      "source": "function_call_logger.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "function_call_logger.py"
        ]
      },
      "created_at": 1754957551.947231,
      "updated_at": 1754957551.947231
    },
    "concept_2697": {
      "id": "concept_2697",
      "type": "concept",
      "name": "Combine args and kwargs for input data",
      "description": "Concept: Combine args and kwargs for input data",
      "source": "function_call_logger.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "function_call_logger.py"
        ]
      },
      "created_at": 1754957551.947658,
      "updated_at": 1754957551.947658
    },
    "concept_2698": {
      "id": "concept_2698",
      "type": "concept",
      "name": "Function breakdown",
      "description": "Concept: Function breakdown",
      "source": "function_call_logger.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "function_call_logger.py"
        ]
      },
      "created_at": 1754957551.9480588,
      "updated_at": 1754957551.9480598
    },
    "concept_2699": {
      "id": "concept_2699",
      "type": "concept",
      "name": "sync_wrapper",
      "description": "Concept: sync_wrapper",
      "source": "function_call_logger.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "function_call_logger.py"
        ]
      },
      "created_at": 1754957551.9484742,
      "updated_at": 1754957551.9484742
    },
    "concept_2700": {
      "id": "concept_2700",
      "type": "concept",
      "name": "functools",
      "description": "Concept: functools",
      "source": "function_call_logger.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "function_call_logger.py"
        ]
      },
      "created_at": 1754957551.9488819,
      "updated_at": 1754957551.9488819
    },
    "concept_2701": {
      "id": "concept_2701",
      "type": "concept",
      "name": "total_calls",
      "description": "Concept: total_calls",
      "source": "function_call_logger.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "function_call_logger.py"
        ]
      },
      "created_at": 1754957551.949284,
      "updated_at": 1754957551.949284
    },
    "concept_2702": {
      "id": "concept_2702",
      "type": "concept",
      "name": "Specific decorator for brain functions",
      "description": "Concept: Specific decorator for brain functions",
      "source": "function_call_logger.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "function_call_logger.py"
        ]
      },
      "created_at": 1754957551.9497,
      "updated_at": 1754957551.9497
    },
    "doc_2703": {
      "id": "doc_2703",
      "type": "document",
      "name": "Healthcheck",
      "description": "Document: healthcheck.py",
      "source": "healthcheck.py",
      "confidence": 0.9,
      "metadata": {
        "file_size": 1285,
        "lines": 43,
        "language": "python",
        "last_modified": 1754944573.5385385
      },
      "created_at": 1754957551.950581,
      "updated_at": 1754957551.950581
    },
    "concept_2704": {
      "id": "concept_2704",
      "type": "concept",
      "name": "brain_interface",
      "description": "Concept: brain_interface",
      "source": "healthcheck.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "healthcheck.py",
          "main.py"
        ]
      },
      "created_at": 1754957551.950977,
      "updated_at": 1754957552.189259
    },
    "concept_2705": {
      "id": "concept_2705",
      "type": "concept",
      "name": "Check if brain memory store exists",
      "description": "Concept: Check if brain memory store exists",
      "source": "healthcheck.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "healthcheck.py"
        ]
      },
      "created_at": 1754957551.951746,
      "updated_at": 1754957551.951746
    },
    "concept_2706": {
      "id": "concept_2706",
      "type": "concept",
      "name": "check_health",
      "description": "Concept: check_health",
      "source": "healthcheck.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "healthcheck.py"
        ]
      },
      "created_at": 1754957551.952505,
      "updated_at": 1754957551.952505
    },
    "concept_2707": {
      "id": "concept_2707",
      "type": "concept",
      "name": "Check if the server is running by looking for the brain interface",
      "description": "Concept: Check if the server is running by looking for the brain interface",
      "source": "healthcheck.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "healthcheck.py"
        ]
      },
      "created_at": 1754957551.9537349,
      "updated_at": 1754957551.9537349
    },
    "concept_2708": {
      "id": "concept_2708",
      "type": "concept",
      "name": "Simple health check",
      "description": "Concept: Simple health check",
      "source": "healthcheck.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "healthcheck.py"
        ]
      },
      "created_at": 1754957551.954583,
      "updated_at": 1754957551.954583
    },
    "concept_2709": {
      "id": "concept_2709",
      "type": "concept",
      "name": "Check if the context analyzer module exists",
      "description": "Concept: Check if the context analyzer module exists",
      "source": "healthcheck.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "healthcheck.py"
        ]
      },
      "created_at": 1754957551.955028,
      "updated_at": 1754957551.955028
    },
    "doc_2710": {
      "id": "doc_2710",
      "type": "document",
      "name": "Knowledge_Ingestion_Engine",
      "description": "Document: knowledge_ingestion_engine.py",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.9,
      "metadata": {
        "file_size": 35372,
        "lines": 928,
        "language": "python",
        "last_modified": 1754957543.5314245
      },
      "created_at": 1754957551.967723,
      "updated_at": 1754957551.967723
    },
    "concept_2711": {
      "id": "concept_2711",
      "type": "concept",
      "name": "Concept extraction patterns",
      "description": "Concept: Concept extraction patterns",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957551.968245,
      "updated_at": 1754957551.968245
    },
    "concept_2712": {
      "id": "concept_2712",
      "type": "concept",
      "name": "Extract content based on section",
      "description": "Concept: Extract content based on section",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957551.9686568,
      "updated_at": 1754957551.9686568
    },
    "concept_2713": {
      "id": "concept_2713",
      "type": "concept",
      "name": "Extract links",
      "description": "Concept: Extract links",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957551.9690518,
      "updated_at": 1754957551.9690518
    },
    "concept_2714": {
      "id": "concept_2714",
      "type": "concept",
      "name": "Parse general markdown files",
      "description": "Concept: Parse general markdown files",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957551.96946,
      "updated_at": 1754957551.96946
    },
    "concept_2715": {
      "id": "concept_2715",
      "type": "concept",
      "name": "KnowledgeGraphBuilder",
      "description": "Concept: KnowledgeGraphBuilder",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957551.96986,
      "updated_at": 1754957551.96986
    },
    "concept_2716": {
      "id": "concept_2716",
      "type": "concept",
      "name": "Build concept clusters based on relationships",
      "description": "Concept: Build concept clusters based on relationships",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957551.9702861,
      "updated_at": 1754957551.9702861
    },
    "concept_2717": {
      "id": "concept_2717",
      "type": "concept",
      "name": "source_counts",
      "description": "Concept: source_counts",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957551.97068,
      "updated_at": 1754957551.97068
    },
    "concept_2718": {
      "id": "concept_2718",
      "type": "concept",
      "name": "extracted_concepts",
      "description": "Concept: extracted_concepts",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957551.971093,
      "updated_at": 1754957551.971093
    },
    "concept_2719": {
      "id": "concept_2719",
      "type": "concept",
      "name": "dataclass",
      "description": "Concept: dataclass",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py",
          "project_scanner.py"
        ]
      },
      "created_at": 1754957551.971487,
      "updated_at": 1754957552.526947
    },
    "concept_2720": {
      "id": "concept_2720",
      "type": "concept",
      "name": "base_pattern",
      "description": "Concept: base_pattern",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957551.971885,
      "updated_at": 1754957551.971885
    },
    "concept_2721": {
      "id": "concept_2721",
      "type": "concept",
      "name": "content, file_path",
      "description": "Concept: content, file_path",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957551.972283,
      "updated_at": 1754957551.972283
    },
    "concept_2722": {
      "id": "concept_2722",
      "type": "concept",
      "name": "Process each document",
      "description": "Concept: Process each document",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957551.972686,
      "updated_at": 1754957551.972686
    },
    "concept_2723": {
      "id": "concept_2723",
      "type": "concept",
      "name": "A node in the knowledge graph",
      "description": "Concept: A node in the knowledge graph",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957551.973096,
      "updated_at": 1754957551.973096
    },
    "concept_2724": {
      "id": "concept_2724",
      "type": "concept",
      "name": "Generate a human-readable summary of the knowledge graph",
      "description": "Concept: Generate a human-readable summary of the knowledge graph",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957551.9735649,
      "updated_at": 1754957551.9735649
    },
    "concept_2725": {
      "id": "concept_2725",
      "type": "concept",
      "name": "Parse API specification files (OpenAPI, etc.)",
      "description": "Concept: Parse API specification files (OpenAPI, etc.)",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957551.974008,
      "updated_at": 1754957551.974008
    },
    "concept_2726": {
      "id": "concept_2726",
      "type": "concept",
      "name": "Create relationship between document and concept",
      "description": "Concept: Create relationship between document and concept",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957551.9748092,
      "updated_at": 1754957551.9748101
    },
    "concept_2727": {
      "id": "concept_2727",
      "type": "concept",
      "name": "Create new concept node",
      "description": "Concept: Create new concept node",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957551.975571,
      "updated_at": 1754957551.975571
    },
    "concept_2728": {
      "id": "concept_2728",
      "type": "concept",
      "name": "Must be a file, not directory",
      "description": "Concept: Must be a file, not directory",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957551.975979,
      "updated_at": 1754957551.975979
    },
    "concept_2729": {
      "id": "concept_2729",
      "type": "concept",
      "name": "link_matches",
      "description": "Concept: link_matches",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957551.976372,
      "updated_at": 1754957551.976372
    },
    "concept_2730": {
      "id": "concept_2730",
      "type": "concept",
      "name": "\ud83d\udcca Graph Statistics",
      "description": "Concept: \ud83d\udcca Graph Statistics",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957551.977984,
      "updated_at": 1754957551.977984
    },
    "concept_2731": {
      "id": "concept_2731",
      "type": "concept",
      "name": "updated_at",
      "description": "Concept: updated_at",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957551.978403,
      "updated_at": 1754957551.978403
    },
    "concept_2732": {
      "id": "concept_2732",
      "type": "concept",
      "name": "Complete knowledge graph structure",
      "description": "Concept: Complete knowledge graph structure",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957551.97882,
      "updated_at": 1754957551.97882
    },
    "concept_2733": {
      "id": "concept_2733",
      "type": "concept",
      "name": "Parse generic files with basic text analysis",
      "description": "Concept: Parse generic files with basic text analysis",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957551.979245,
      "updated_at": 1754957551.979245
    },
    "concept_2734": {
      "id": "concept_2734",
      "type": "concept",
      "name": "Parse README files for project information",
      "description": "Concept: Parse README files for project information",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957551.979666,
      "updated_at": 1754957551.979666
    },
    "concept_2735": {
      "id": "concept_2735",
      "type": "concept",
      "name": "Parse Python files for docstrings and function/class definitions",
      "description": "Concept: Parse Python files for docstrings and function/class definitions",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957551.980118,
      "updated_at": 1754957551.980118
    },
    "concept_2736": {
      "id": "concept_2736",
      "type": "concept",
      "name": "definitions",
      "description": "Concept: definitions",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957551.980853,
      "updated_at": 1754957551.980853
    },
    "concept_2737": {
      "id": "concept_2737",
      "type": "concept",
      "name": "Detect sections",
      "description": "Concept: Detect sections",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957551.981601,
      "updated_at": 1754957551.981601
    },
    "concept_2738": {
      "id": "concept_2738",
      "type": "concept",
      "name": "Search for concepts in the knowledge graph",
      "description": "Concept: Search for concepts in the knowledge graph",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957551.982402,
      "updated_at": 1754957551.982402
    },
    "concept_2739": {
      "id": "concept_2739",
      "type": "concept",
      "name": "Common documentation file patterns",
      "description": "Concept: Common documentation file patterns",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957551.9828181,
      "updated_at": 1754957551.9828181
    },
    "concept_2740": {
      "id": "concept_2740",
      "type": "concept",
      "name": "_analyze_patterns",
      "description": "Concept: _analyze_patterns",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py",
          "project_scanner.py"
        ]
      },
      "created_at": 1754957551.983223,
      "updated_at": 1754957552.554057
    },
    "concept_2741": {
      "id": "concept_2741",
      "type": "concept",
      "name": "rel_id",
      "description": "Concept: rel_id",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957551.983692,
      "updated_at": 1754957551.983692
    },
    "concept_2742": {
      "id": "concept_2742",
      "type": "concept",
      "name": "Update metadata",
      "description": "Concept: Update metadata",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957551.984174,
      "updated_at": 1754957551.984174
    },
    "concept_2743": {
      "id": "concept_2743",
      "type": "concept",
      "name": "Export the knowledge graph in various formats",
      "description": "Concept: Export the knowledge graph in various formats",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957551.9846258,
      "updated_at": 1754957551.9846258
    },
    "concept_2744": {
      "id": "concept_2744",
      "type": "concept",
      "name": "Extract JSDoc comments",
      "description": "Concept: Extract JSDoc comments",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957551.985058,
      "updated_at": 1754957551.985058
    },
    "concept_2745": {
      "id": "concept_2745",
      "type": "concept",
      "name": "Get the ID of an existing concept node",
      "description": "Concept: Get the ID of an existing concept node",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957551.985512,
      "updated_at": 1754957551.985512
    },
    "concept_2746": {
      "id": "concept_2746",
      "type": "concept",
      "name": "Parse based on document type",
      "description": "Concept: Parse based on document type",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957551.985951,
      "updated_at": 1754957551.985951
    },
    "concept_2747": {
      "id": "concept_2747",
      "type": "concept",
      "name": "Skip common non-documentation files",
      "description": "Concept: Skip common non-documentation files",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957551.986384,
      "updated_at": 1754957551.986384
    },
    "concept_2748": {
      "id": "concept_2748",
      "type": "concept",
      "name": "_build_concept_clusters",
      "description": "Concept: _build_concept_clusters",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957551.987191,
      "updated_at": 1754957551.987191
    },
    "concept_2749": {
      "id": "concept_2749",
      "type": "concept",
      "name": "concept_counts",
      "description": "Concept: concept_counts",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957551.987605,
      "updated_at": 1754957551.987605
    },
    "concept_2750": {
      "id": "concept_2750",
      "type": "concept",
      "name": "Main engine for knowledge ingestion and processing",
      "description": "Concept: Main engine for knowledge ingestion and processing",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957551.988045,
      "updated_at": 1754957551.988045
    },
    "concept_2751": {
      "id": "concept_2751",
      "type": "concept",
      "name": "Detect language for appropriate pattern matching",
      "description": "Concept: Detect language for appropriate pattern matching",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957551.98887,
      "updated_at": 1754957551.98887
    },
    "concept_2752": {
      "id": "concept_2752",
      "type": "concept",
      "name": "Get existing concept node or create new one",
      "description": "Concept: Get existing concept node or create new one",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957551.9893,
      "updated_at": 1754957551.9893
    },
    "concept_2753": {
      "id": "concept_2753",
      "type": "concept",
      "name": "encoding",
      "description": "Concept: encoding",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py",
          "project_scanner.py"
        ]
      },
      "created_at": 1754957551.9896991,
      "updated_at": 1754957552.5635478
    },
    "concept_2754": {
      "id": "concept_2754",
      "type": "concept",
      "name": "section",
      "description": "Concept: section",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957551.991016,
      "updated_at": 1754957551.991016
    },
    "concept_2755": {
      "id": "concept_2755",
      "type": "concept",
      "name": "search_results",
      "description": "Concept: search_results",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py",
          "main.py"
        ]
      },
      "created_at": 1754957551.991423,
      "updated_at": 1754957552.4349499
    },
    "concept_2756": {
      "id": "concept_2756",
      "type": "concept",
      "name": "Analyze patterns",
      "description": "Concept: Analyze patterns",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py",
          "project_scanner.py"
        ]
      },
      "created_at": 1754957551.991827,
      "updated_at": 1754957552.564319
    },
    "concept_2757": {
      "id": "concept_2757",
      "type": "concept",
      "name": "knowledge_graph",
      "description": "Concept: knowledge_graph",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957551.992239,
      "updated_at": 1754957551.992239
    },
    "concept_2758": {
      "id": "concept_2758",
      "type": "concept",
      "name": "Find concepts that might be related",
      "description": "Concept: Find concepts that might be related",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957551.9926589,
      "updated_at": 1754957551.9926589
    },
    "concept_2759": {
      "id": "concept_2759",
      "type": "concept",
      "name": "Add markdown concepts for all files",
      "description": "Concept: Add markdown concepts for all files",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957551.993085,
      "updated_at": 1754957551.993085
    },
    "concept_2760": {
      "id": "concept_2760",
      "type": "concept",
      "name": "markdown_patterns",
      "description": "Concept: markdown_patterns",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957551.9939651,
      "updated_at": 1754957551.9939651
    },
    "concept_2761": {
      "id": "concept_2761",
      "type": "concept",
      "name": "processing_time",
      "description": "Concept: processing_time",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957551.9944398,
      "updated_at": 1754957551.9944398
    },
    "concept_2762": {
      "id": "concept_2762",
      "type": "concept",
      "name": "strength",
      "description": "Concept: strength",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957551.994865,
      "updated_at": 1754957551.994865
    },
    "concept_2763": {
      "id": "concept_2763",
      "type": "concept",
      "name": "target_node",
      "description": "Concept: target_node",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957551.9953651,
      "updated_at": 1754957551.9953651
    },
    "concept_2764": {
      "id": "concept_2764",
      "type": "concept",
      "name": "(.*?)",
      "description": "Concept: (.*?)",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957551.9958148,
      "updated_at": 1754957551.9958148
    },
    "concept_2765": {
      "id": "concept_2765",
      "type": "concept",
      "name": "\ud83d\udd17 Relationship Types",
      "description": "Concept: \ud83d\udd17 Relationship Types",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957551.996403,
      "updated_at": 1754957551.996403
    },
    "concept_2766": {
      "id": "concept_2766",
      "type": "concept",
      "name": "Read content if not provided",
      "description": "Concept: Read content if not provided",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957551.997188,
      "updated_at": 1754957551.997188
    },
    "concept_2767": {
      "id": "concept_2767",
      "type": "concept",
      "name": "Find documentation files",
      "description": "Concept: Find documentation files",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957551.9976032,
      "updated_at": 1754957551.9976032
    },
    "concept_2768": {
      "id": "concept_2768",
      "type": "concept",
      "name": "**Max Connections**: {graph.patterns.get('connectivity', {}).get('max_connections', 0)}",
      "description": "Concept: **Max Connections**: {graph.patterns.get('connectivity', {}).get('max_connections', 0)}",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957551.998077,
      "updated_at": 1754957551.998077
    },
    "concept_2769": {
      "id": "concept_2769",
      "type": "concept",
      "name": "Get the current knowledge graph",
      "description": "Concept: Get the current knowledge graph",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957551.9984992,
      "updated_at": 1754957551.9984992
    },
    "concept_2770": {
      "id": "concept_2770",
      "type": "concept",
      "name": "concept_patterns",
      "description": "Concept: concept_patterns",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957551.998899,
      "updated_at": 1754957551.998899
    },
    "concept_2771": {
      "id": "concept_2771",
      "type": "concept",
      "name": "Extract class definitions",
      "description": "Concept: Extract class definitions",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957551.999309,
      "updated_at": 1754957551.999309
    },
    "concept_2772": {
      "id": "concept_2772",
      "type": "concept",
      "name": "{1,6}\\s+(.+)$', content, re.MULTILINE)",
      "description": "Concept: {1,6}\\s+(.+)$', content, re.MULTILINE)",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957551.9997308,
      "updated_at": 1754957551.9997308
    },
    "concept_2773": {
      "id": "concept_2773",
      "type": "concept",
      "name": "created_at",
      "description": "Concept: created_at",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.000127,
      "updated_at": 1754957552.000127
    },
    "concept_2774": {
      "id": "concept_2774",
      "type": "concept",
      "name": "related",
      "description": "Concept: related",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.000522,
      "updated_at": 1754957552.000522
    },
    "concept_2775": {
      "id": "concept_2775",
      "type": "concept",
      "name": "Extract docstrings",
      "description": "Concept: Extract docstrings",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.0009248,
      "updated_at": 1754957552.0009248
    },
    "concept_2776": {
      "id": "concept_2776",
      "type": "concept",
      "name": "Remove duplicates and sort",
      "description": "Concept: Remove duplicates and sort",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.001334,
      "updated_at": 1754957552.001334
    },
    "concept_2777": {
      "id": "concept_2777",
      "type": "concept",
      "name": "func_matches",
      "description": "Concept: func_matches",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.001738,
      "updated_at": 1754957552.001738
    },
    "concept_2778": {
      "id": "concept_2778",
      "type": "concept",
      "name": "Relationship type analysis",
      "description": "Concept: Relationship type analysis",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.002151,
      "updated_at": 1754957552.002151
    },
    "concept_2779": {
      "id": "concept_2779",
      "type": "concept",
      "name": "**Total Relationships**: {graph.metadata['total_relationships']}",
      "description": "Concept: **Total Relationships**: {graph.metadata['total_relationships']}",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.0026,
      "updated_at": 1754957552.002601
    },
    "concept_2780": {
      "id": "concept_2780",
      "type": "concept",
      "name": "type_counts",
      "description": "Concept: type_counts",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.003,
      "updated_at": 1754957552.003
    },
    "concept_2781": {
      "id": "concept_2781",
      "type": "concept",
      "name": "Builds and maintains the knowledge graph",
      "description": "Concept: Builds and maintains the knowledge graph",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.0039139,
      "updated_at": 1754957552.0039139
    },
    "concept_2782": {
      "id": "concept_2782",
      "type": "concept",
      "name": "OpenAPI/Swagger format",
      "description": "Concept: OpenAPI/Swagger format",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.004426,
      "updated_at": 1754957552.004426
    },
    "concept_2783": {
      "id": "concept_2783",
      "type": "concept",
      "name": "Concept frequency analysis",
      "description": "Concept: Concept frequency analysis",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.004881,
      "updated_at": 1754957552.004881
    },
    "concept_2784": {
      "id": "concept_2784",
      "type": "concept",
      "name": "Processes various types of documentation and extracts knowledge",
      "description": "Concept: Processes various types of documentation and extracts knowledge",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.005373,
      "updated_at": 1754957552.005373
    },
    "concept_2785": {
      "id": "concept_2785",
      "type": "concept",
      "name": "source_id",
      "description": "Concept: source_id",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.005811,
      "updated_at": 1754957552.005811
    },
    "concept_2786": {
      "id": "concept_2786",
      "type": "concept",
      "name": "Must be readable",
      "description": "Concept: Must be readable",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.006214,
      "updated_at": 1754957552.006214
    },
    "concept_2787": {
      "id": "concept_2787",
      "type": "concept",
      "name": "confidence",
      "description": "Concept: confidence",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.006714,
      "updated_at": 1754957552.006714
    },
    "concept_2788": {
      "id": "concept_2788",
      "type": "concept",
      "name": "Export results",
      "description": "Concept: Export results",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py",
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.007145,
      "updated_at": 1754957552.5544581
    },
    "concept_2789": {
      "id": "concept_2789",
      "type": "concept",
      "name": "skip_patterns",
      "description": "Concept: skip_patterns",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py",
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.0075488,
      "updated_at": 1754957552.581429
    },
    "concept_2790": {
      "id": "concept_2790",
      "type": "concept",
      "name": "jsdoc_matches",
      "description": "Concept: jsdoc_matches",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.007952,
      "updated_at": 1754957552.007952
    },
    "concept_2791": {
      "id": "concept_2791",
      "type": "concept",
      "name": "Source analysis",
      "description": "Concept: Source analysis",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.008357,
      "updated_at": 1754957552.008357
    },
    "concept_2792": {
      "id": "concept_2792",
      "type": "concept",
      "name": "rel_type_counts",
      "description": "Concept: rel_type_counts",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.0087638,
      "updated_at": 1754957552.0087638
    },
    "concept_2793": {
      "id": "concept_2793",
      "type": "concept",
      "name": "{1,6}\\s+(.+)$',",
      "description": "Concept: {1,6}\\s+(.+)$',",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.00954,
      "updated_at": 1754957552.00954
    },
    "concept_2794": {
      "id": "concept_2794",
      "type": "concept",
      "name": "Count connections per node",
      "description": "Concept: Count connections per node",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.009953,
      "updated_at": 1754957552.009953
    },
    "concept_2795": {
      "id": "concept_2795",
      "type": "concept",
      "name": "Basic YAML parsing (can be enhanced with PyYAML)",
      "description": "Concept: Basic YAML parsing (can be enhanced with PyYAML)",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.010386,
      "updated_at": 1754957552.010386
    },
    "concept_2796": {
      "id": "concept_2796",
      "type": "concept",
      "name": "top_concepts",
      "description": "Concept: top_concepts",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.010787,
      "updated_at": 1754957552.010787
    },
    "concept_2797": {
      "id": "concept_2797",
      "type": "concept",
      "name": "class",
      "description": "Concept: class",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py",
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.011889,
      "updated_at": 1754957552.588581
    },
    "concept_2798": {
      "id": "concept_2798",
      "type": "concept",
      "name": "graph_builder",
      "description": "Concept: graph_builder",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.01229,
      "updated_at": 1754957552.01229
    },
    "concept_2799": {
      "id": "concept_2799",
      "type": "concept",
      "name": "min_connections",
      "description": "Concept: min_connections",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.012692,
      "updated_at": 1754957552.012692
    },
    "concept_2800": {
      "id": "concept_2800",
      "type": "concept",
      "name": "Create document node",
      "description": "Concept: Create document node",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.013098,
      "updated_at": 1754957552.013098
    },
    "concept_2801": {
      "id": "concept_2801",
      "type": "concept",
      "name": "Save detailed graph to file",
      "description": "Concept: Save detailed graph to file",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.013516,
      "updated_at": 1754957552.013516
    },
    "concept_2802": {
      "id": "concept_2802",
      "type": "concept",
      "name": "relationship_patterns",
      "description": "Concept: relationship_patterns",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.014074,
      "updated_at": 1754957552.014074
    },
    "concept_2803": {
      "id": "concept_2803",
      "type": "concept",
      "name": "Add concept nodes",
      "description": "Concept: Add concept nodes",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.014514,
      "updated_at": 1754957552.014514
    },
    "concept_2804": {
      "id": "concept_2804",
      "type": "concept",
      "name": "concept_freq",
      "description": "Concept: concept_freq",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.015042,
      "updated_at": 1754957552.015042
    },
    "concept_2805": {
      "id": "concept_2805",
      "type": "concept",
      "name": "'):",
      "description": "Concept: '):",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py",
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.0154681,
      "updated_at": 1754957552.5937338
    },
    "concept_2806": {
      "id": "concept_2806",
      "type": "concept",
      "name": "\ud83d\udcda Top Concepts",
      "description": "Concept: \ud83d\udcda Top Concepts",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.016007,
      "updated_at": 1754957552.016007
    },
    "concept_2807": {
      "id": "concept_2807",
      "type": "concept",
      "name": "Build the complete knowledge graph",
      "description": "Concept: Build the complete knowledge graph",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.016453,
      "updated_at": 1754957552.016453
    },
    "concept_2808": {
      "id": "concept_2808",
      "type": "concept",
      "name": "Add relationship nodes",
      "description": "Concept: Add relationship nodes",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.0168772,
      "updated_at": 1754957552.0168772
    },
    "concept_2809": {
      "id": "concept_2809",
      "type": "concept",
      "name": "Find related nodes",
      "description": "Concept: Find related nodes",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.0172899,
      "updated_at": 1754957552.0172899
    },
    "concept_2810": {
      "id": "concept_2810",
      "type": "concept",
      "name": "avg_connections",
      "description": "Concept: avg_connections",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.017705,
      "updated_at": 1754957552.017705
    },
    "concept_2811": {
      "id": "concept_2811",
      "type": "concept",
      "name": "project_path",
      "description": "Concept: project_path",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.0181062,
      "updated_at": 1754957552.0181062
    },
    "concept_2812": {
      "id": "concept_2812",
      "type": "concept",
      "name": "Add document context to the knowledge graph",
      "description": "Concept: Add document context to the knowledge graph",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.018537,
      "updated_at": 1754957552.018537
    },
    "concept_2813": {
      "id": "concept_2813",
      "type": "concept",
      "name": "Context extracted from a document",
      "description": "Concept: Context extracted from a document",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.0189598,
      "updated_at": 1754957552.0189598
    },
    "concept_2814": {
      "id": "concept_2814",
      "type": "concept",
      "name": "# \ud83d\udd0c Connectivity",
      "description": "Concept: # \ud83d\udd0c Connectivity",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.019527,
      "updated_at": 1754957552.019527
    },
    "concept_2815": {
      "id": "concept_2815",
      "type": "concept",
      "name": "errors",
      "description": "Concept: errors",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py",
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.019934,
      "updated_at": 1754957552.5960891
    },
    "concept_2816": {
      "id": "concept_2816",
      "type": "concept",
      "name": "(\\w+)?\\n(.*?)",
      "description": "Concept: (\\w+)?\\n(.*?)",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.020345,
      "updated_at": 1754957552.020345
    },
    "concept_2817": {
      "id": "concept_2817",
      "type": "concept",
      "name": "Extract imports",
      "description": "Concept: Extract imports",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.020751,
      "updated_at": 1754957552.020751
    },
    "concept_2818": {
      "id": "concept_2818",
      "type": "concept",
      "name": "'concept', 'file', 'function', 'class', 'pattern'",
      "description": "Concept: 'concept', 'file', 'function', 'class', 'pattern'",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.021187,
      "updated_at": 1754957552.021187
    },
    "concept_2819": {
      "id": "concept_2819",
      "type": "concept",
      "name": "KnowledgeIngestionEngine",
      "description": "Concept: KnowledgeIngestionEngine",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.021609,
      "updated_at": 1754957552.021609
    },
    "concept_2820": {
      "id": "concept_2820",
      "type": "concept",
      "name": "\ud83e\udde0 Node Types",
      "description": "Concept: \ud83e\udde0 Node Types",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.02213,
      "updated_at": 1754957552.02213
    },
    "concept_2821": {
      "id": "concept_2821",
      "type": "concept",
      "name": "output_file",
      "description": "Concept: output_file",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py",
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.022537,
      "updated_at": 1754957552.598183
    },
    "concept_2822": {
      "id": "concept_2822",
      "type": "concept",
      "name": "Knowledge Graph Summary",
      "description": "Concept: Knowledge Graph Summary",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.0233338,
      "updated_at": 1754957552.0233338
    },
    "concept_2823": {
      "id": "concept_2823",
      "type": "concept",
      "name": "collections",
      "description": "Concept: collections",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.023822,
      "updated_at": 1754957552.023822
    },
    "concept_2824": {
      "id": "concept_2824",
      "type": "concept",
      "name": "Extract function definitions",
      "description": "Concept: Extract function definitions",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.024744,
      "updated_at": 1754957552.024744
    },
    "concept_2825": {
      "id": "concept_2825",
      "type": "concept",
      "name": "concept_node_id",
      "description": "Concept: concept_node_id",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.025152,
      "updated_at": 1754957552.025152
    },
    "concept_2826": {
      "id": "concept_2826",
      "type": "concept",
      "name": "Extract code blocks",
      "description": "Concept: Extract code blocks",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.025559,
      "updated_at": 1754957552.025559
    },
    "concept_2827": {
      "id": "concept_2827",
      "type": "concept",
      "name": "target_id",
      "description": "Concept: target_id",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.025968,
      "updated_at": 1754957552.025968
    },
    "concept_2828": {
      "id": "concept_2828",
      "type": "concept",
      "name": "Build concept clusters",
      "description": "Concept: Build concept clusters",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.0264041,
      "updated_at": 1754957552.0264041
    },
    "concept_2829": {
      "id": "concept_2829",
      "type": "concept",
      "name": "document",
      "description": "Concept: document",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.026807,
      "updated_at": 1754957552.026807
    },
    "concept_2830": {
      "id": "concept_2830",
      "type": "concept",
      "name": "\\s*(.+)'",
      "description": "Concept: \\s*(.+)'",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.02755,
      "updated_at": 1754957552.02755
    },
    "concept_2831": {
      "id": "concept_2831",
      "type": "concept",
      "name": "Source files with comments",
      "description": "Concept: Source files with comments",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.0279732,
      "updated_at": 1754957552.0279732
    },
    "concept_2832": {
      "id": "concept_2832",
      "type": "concept",
      "name": "query_lower",
      "description": "Concept: query_lower",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.0287218,
      "updated_at": 1754957552.0287218
    },
    "concept_2833": {
      "id": "concept_2833",
      "type": "concept",
      "name": "current_section",
      "description": "Concept: current_section",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.029829,
      "updated_at": 1754957552.029829
    },
    "concept_2834": {
      "id": "concept_2834",
      "type": "concept",
      "name": "Generic JSON structure",
      "description": "Concept: Generic JSON structure",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.030247,
      "updated_at": 1754957552.030247
    },
    "concept_2835": {
      "id": "concept_2835",
      "type": "concept",
      "name": "Main function for testing the knowledge ingestion engine",
      "description": "Concept: Main function for testing the knowledge ingestion engine",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.0310888,
      "updated_at": 1754957552.0310888
    },
    "concept_2836": {
      "id": "concept_2836",
      "type": "concept",
      "name": "suffix",
      "description": "Concept: suffix",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py",
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.031494,
      "updated_at": 1754957552.6132202
    },
    "concept_2837": {
      "id": "concept_2837",
      "type": "concept",
      "name": "added_nodes",
      "description": "Concept: added_nodes",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.031908,
      "updated_at": 1754957552.031908
    },
    "concept_2838": {
      "id": "concept_2838",
      "type": "concept",
      "name": "title",
      "description": "Concept: title",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.032316,
      "updated_at": 1754957552.032316
    },
    "concept_2839": {
      "id": "concept_2839",
      "type": "concept",
      "name": "defaultdict",
      "description": "Concept: defaultdict",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.0327191,
      "updated_at": 1754957552.0327191
    },
    "concept_2840": {
      "id": "concept_2840",
      "type": "concept",
      "name": "doc_node",
      "description": "Concept: doc_node",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.033119,
      "updated_at": 1754957552.033119
    },
    "concept_2841": {
      "id": "concept_2841",
      "type": "concept",
      "name": "doc_context",
      "description": "Concept: doc_context",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.033521,
      "updated_at": 1754957552.033521
    },
    "concept_2842": {
      "id": "concept_2842",
      "type": "concept",
      "name": "**Created**: {datetime.fromtimestamp(graph.created_at).strftime('%Y-%m-%d %H:%M:%S')}",
      "description": "Concept: **Created**: {datetime.fromtimestamp(graph.created_at).strftime('%Y-%m-%d %H:%M:%S')}",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.0341382,
      "updated_at": 1754957552.0341382
    },
    "concept_2843": {
      "id": "concept_2843",
      "type": "concept",
      "name": "concept_node",
      "description": "Concept: concept_node",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.034585,
      "updated_at": 1754957552.034585
    },
    "concept_2844": {
      "id": "concept_2844",
      "type": "concept",
      "name": "Extract relationships",
      "description": "Concept: Extract relationships",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.0350459,
      "updated_at": 1754957552.0350459
    },
    "concept_2845": {
      "id": "concept_2845",
      "type": "concept",
      "name": "Build metadata",
      "description": "Concept: Build metadata",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.035489,
      "updated_at": 1754957552.035489
    },
    "concept_2846": {
      "id": "concept_2846",
      "type": "concept",
      "name": "concepts",
      "description": "Concept: concepts",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.035926,
      "updated_at": 1754957552.035926
    },
    "concept_2847": {
      "id": "concept_2847",
      "type": "concept",
      "name": "docstring_matches",
      "description": "Concept: docstring_matches",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.03635,
      "updated_at": 1754957552.03635
    },
    "concept_2848": {
      "id": "concept_2848",
      "type": "concept",
      "name": "Create a relationship between two nodes",
      "description": "Concept: Create a relationship between two nodes",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.036795,
      "updated_at": 1754957552.036795
    },
    "concept_2849": {
      "id": "concept_2849",
      "type": "concept",
      "name": "code_matches",
      "description": "Concept: code_matches",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.037339,
      "updated_at": 1754957552.037339
    },
    "concept_2850": {
      "id": "concept_2850",
      "type": "concept",
      "name": "Analyze patterns in the knowledge graph",
      "description": "Concept: Analyze patterns in the knowledge graph",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.038133,
      "updated_at": 1754957552.038133
    },
    "concept_2851": {
      "id": "concept_2851",
      "type": "concept",
      "name": "Export the knowledge graph",
      "description": "Concept: Export the knowledge graph",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.0385642,
      "updated_at": 1754957552.0385642
    },
    "concept_2852": {
      "id": "concept_2852",
      "type": "concept",
      "name": "Clean up descriptions",
      "description": "Concept: Clean up descriptions",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.038988,
      "updated_at": 1754957552.038988
    },
    "concept_2853": {
      "id": "concept_2853",
      "type": "concept",
      "name": "Add to knowledge graph",
      "description": "Concept: Add to knowledge graph",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.039785,
      "updated_at": 1754957552.039785
    },
    "concept_2854": {
      "id": "concept_2854",
      "type": "concept",
      "name": "Config files",
      "description": "Concept: Config files",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.040194,
      "updated_at": 1754957552.040194
    },
    "concept_2855": {
      "id": "concept_2855",
      "type": "concept",
      "name": "**Total Nodes**: {graph.metadata['total_nodes']}",
      "description": "Concept: **Total Nodes**: {graph.metadata['total_nodes']}",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.040728,
      "updated_at": 1754957552.040728
    },
    "concept_2856": {
      "id": "concept_2856",
      "type": "concept",
      "name": "Extract concepts from document content",
      "description": "Concept: Extract concepts from document content",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.0411782,
      "updated_at": 1754957552.0411782
    },
    "concept_2857": {
      "id": "concept_2857",
      "type": "concept",
      "name": "Detect the programming language of a file",
      "description": "Concept: Detect the programming language of a file",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py",
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.041616,
      "updated_at": 1754957552.622255
    },
    "concept_2858": {
      "id": "concept_2858",
      "type": "concept",
      "name": "Parse JavaScript files for JSDoc comments and function definitions",
      "description": "Concept: Parse JavaScript files for JSDoc comments and function definitions",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.042078,
      "updated_at": 1754957552.042078
    },
    "concept_2859": {
      "id": "concept_2859",
      "type": "concept",
      "name": "Group concepts by source",
      "description": "Concept: Group concepts by source",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.042502,
      "updated_at": 1754957552.042502
    },
    "concept_2860": {
      "id": "concept_2860",
      "type": "concept",
      "name": "A relationship between knowledge nodes",
      "description": "Concept: A relationship between knowledge nodes",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.0429308,
      "updated_at": 1754957552.0429308
    },
    "concept_2861": {
      "id": "concept_2861",
      "type": "concept",
      "name": "relationship_counter",
      "description": "Concept: relationship_counter",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.043351,
      "updated_at": 1754957552.043351
    },
    "concept_2862": {
      "id": "concept_2862",
      "type": "concept",
      "name": "Parse configuration files",
      "description": "Concept: Parse configuration files",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.043839,
      "updated_at": 1754957552.043839
    },
    "concept_2863": {
      "id": "concept_2863",
      "type": "concept",
      "name": "# \ud83e\udde0 Node Types",
      "description": "Concept: # \ud83e\udde0 Node Types",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.044508,
      "updated_at": 1754957552.044508
    },
    "concept_2864": {
      "id": "concept_2864",
      "type": "concept",
      "name": "# \ud83d\udcda Top Concepts",
      "description": "Concept: # \ud83d\udcda Top Concepts",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.045842,
      "updated_at": 1754957552.045842
    },
    "concept_2865": {
      "id": "concept_2865",
      "type": "concept",
      "name": "Recursive pattern",
      "description": "Concept: Recursive pattern",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.0462751,
      "updated_at": 1754957552.0462751
    },
    "concept_2866": {
      "id": "concept_2866",
      "type": "concept",
      "name": "Extract concepts",
      "description": "Concept: Extract concepts",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.047128,
      "updated_at": 1754957552.047128
    },
    "concept_2867": {
      "id": "concept_2867",
      "type": "concept",
      "name": "graph",
      "description": "Concept: graph",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py",
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.047552,
      "updated_at": 1754957552.6277492
    },
    "concept_2868": {
      "id": "concept_2868",
      "type": "concept",
      "name": "project_root",
      "description": "Concept: project_root",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py",
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.047963,
      "updated_at": 1754957552.628154
    },
    "concept_2869": {
      "id": "concept_2869",
      "type": "concept",
      "name": "Extract headings",
      "description": "Concept: Extract headings",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.0488782,
      "updated_at": 1754957552.0488782
    },
    "concept_2870": {
      "id": "concept_2870",
      "type": "concept",
      "name": "Analyze graph connectivity",
      "description": "Concept: Analyze graph connectivity",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.049301,
      "updated_at": 1754957552.049301
    },
    "concept_2871": {
      "id": "concept_2871",
      "type": "concept",
      "name": "relationships",
      "description": "Concept: relationships",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.049737,
      "updated_at": 1754957552.049737
    },
    "concept_2872": {
      "id": "concept_2872",
      "type": "concept",
      "name": "max_connections",
      "description": "Concept: max_connections",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.050154,
      "updated_at": 1754957552.050154
    },
    "concept_2873": {
      "id": "concept_2873",
      "type": "concept",
      "name": "', '').strip()",
      "description": "Concept: ', '').strip()",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.050569,
      "updated_at": 1754957552.050569
    },
    "concept_2874": {
      "id": "concept_2874",
      "type": "concept",
      "name": "dataclasses",
      "description": "Concept: dataclasses",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py",
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.0513332,
      "updated_at": 1754957552.635852
    },
    "concept_2875": {
      "id": "concept_2875",
      "type": "concept",
      "name": "data",
      "description": "Concept: data",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py",
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.051735,
      "updated_at": 1754957552.636251
    },
    "concept_2876": {
      "id": "concept_2876",
      "type": "concept",
      "name": "Find documentation files in the project",
      "description": "Concept: Find documentation files in the project",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.052553,
      "updated_at": 1754957552.052553
    },
    "concept_2877": {
      "id": "concept_2877",
      "type": "concept",
      "name": "class_matches",
      "description": "Concept: class_matches",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.0529642,
      "updated_at": 1754957552.0529642
    },
    "concept_2878": {
      "id": "concept_2878",
      "type": "concept",
      "name": "parser_result",
      "description": "Concept: parser_result",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.053375,
      "updated_at": 1754957552.053375
    },
    "concept_2879": {
      "id": "concept_2879",
      "type": "concept",
      "name": "doc_node_id",
      "description": "Concept: doc_node_id",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.053866,
      "updated_at": 1754957552.053866
    },
    "concept_2880": {
      "id": "concept_2880",
      "type": "concept",
      "name": "metadata",
      "description": "Concept: metadata",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py",
          "main.py"
        ]
      },
      "created_at": 1754957552.05439,
      "updated_at": 1754957552.483487
    },
    "concept_2881": {
      "id": "concept_2881",
      "type": "concept",
      "name": "connections",
      "description": "Concept: connections",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.0548239,
      "updated_at": 1754957552.0548239
    },
    "concept_2882": {
      "id": "concept_2882",
      "type": "concept",
      "name": "heading_matches",
      "description": "Concept: heading_matches",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.05526,
      "updated_at": 1754957552.05526
    },
    "concept_2883": {
      "id": "concept_2883",
      "type": "concept",
      "name": "Count nodes by type",
      "description": "Concept: Count nodes by type",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.055697,
      "updated_at": 1754957552.055697
    },
    "concept_2884": {
      "id": "concept_2884",
      "type": "concept",
      "name": "Configure logging",
      "description": "Concept: Configure logging",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py",
          "project_scanner.py",
          "test_enhanced_integration.py",
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957552.056143,
      "updated_at": 1754957552.7773042
    },
    "concept_2885": {
      "id": "concept_2885",
      "type": "concept",
      "name": "Ingest all documentation from a project",
      "description": "Concept: Ingest all documentation from a project",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.0566652,
      "updated_at": 1754957552.0566652
    },
    "concept_2886": {
      "id": "concept_2886",
      "type": "concept",
      "name": "# \ud83d\udcca Graph Statistics",
      "description": "Concept: # \ud83d\udcca Graph Statistics",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.057666,
      "updated_at": 1754957552.057666
    },
    "concept_2887": {
      "id": "concept_2887",
      "type": "concept",
      "name": "node_counter",
      "description": "Concept: node_counter",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.0580878,
      "updated_at": 1754957552.0580878
    },
    "concept_2888": {
      "id": "concept_2888",
      "type": "concept",
      "name": "doc_patterns",
      "description": "Concept: doc_patterns",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.058502,
      "updated_at": 1754957552.058502
    },
    "concept_2889": {
      "id": "concept_2889",
      "type": "concept",
      "name": "Relationship patterns",
      "description": "Concept: Relationship patterns",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.0589252,
      "updated_at": 1754957552.0589252
    },
    "concept_2890": {
      "id": "concept_2890",
      "type": "concept",
      "name": "DocumentationProcessor",
      "description": "Concept: DocumentationProcessor",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.059351,
      "updated_at": 1754957552.059351
    },
    "concept_2891": {
      "id": "concept_2891",
      "type": "concept",
      "name": "matches",
      "description": "Concept: matches",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.059778,
      "updated_at": 1754957552.059778
    },
    "concept_2892": {
      "id": "concept_2892",
      "type": "concept",
      "name": "\ud83d\udd0c Connectivity",
      "description": "Concept: \ud83d\udd0c Connectivity",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.060328,
      "updated_at": 1754957552.060328
    },
    "concept_2893": {
      "id": "concept_2893",
      "type": "concept",
      "name": "Check if concept already exists",
      "description": "Concept: Check if concept already exists",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.0607738,
      "updated_at": 1754957552.0607738
    },
    "concept_2894": {
      "id": "concept_2894",
      "type": "concept",
      "name": "# \ud83d\udd17 Relationship Types",
      "description": "Concept: # \ud83d\udd17 Relationship Types",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.061402,
      "updated_at": 1754957552.061402
    },
    "concept_2895": {
      "id": "concept_2895",
      "type": "concept",
      "name": "Read first 1KB to check readability",
      "description": "Concept: Read first 1KB to check readability",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.0618439,
      "updated_at": 1754957552.0618439
    },
    "concept_2896": {
      "id": "concept_2896",
      "type": "concept",
      "name": "Process a document and extract knowledge",
      "description": "Concept: Process a document and extract knowledge",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.062281,
      "updated_at": 1754957552.062281
    },
    "concept_2897": {
      "id": "concept_2897",
      "type": "concept",
      "name": "filtered_concepts",
      "description": "Concept: filtered_concepts",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.063051,
      "updated_at": 1754957552.063051
    },
    "concept_2898": {
      "id": "concept_2898",
      "type": "concept",
      "name": "Build final knowledge graph",
      "description": "Concept: Build final knowledge graph",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.063474,
      "updated_at": 1754957552.063474
    },
    "concept_2899": {
      "id": "concept_2899",
      "type": "concept",
      "name": "',\n                'inline_code': r'",
      "description": "Concept: ',\n                'inline_code': r'",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.063995,
      "updated_at": 1754957552.063995
    },
    "concept_2900": {
      "id": "concept_2900",
      "type": "concept",
      "name": "]+)",
      "description": "Concept: ]+)",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.06448,
      "updated_at": 1754957552.06448
    },
    "concept_2901": {
      "id": "concept_2901",
      "type": "concept",
      "name": "'readme', 'api_doc', 'code_comment', 'config'",
      "description": "Concept: 'readme', 'api_doc', 'code_comment', 'config'",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.0650501,
      "updated_at": 1754957552.0650501
    },
    "concept_2902": {
      "id": "concept_2902",
      "type": "concept",
      "name": "**Total Concepts**: {graph.metadata['total_concepts']}",
      "description": "Concept: **Total Concepts**: {graph.metadata['total_concepts']}",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.065532,
      "updated_at": 1754957552.065532
    },
    "concept_2903": {
      "id": "concept_2903",
      "type": "concept",
      "name": "language_map",
      "description": "Concept: language_map",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.065953,
      "updated_at": 1754957552.065953
    },
    "concept_2904": {
      "id": "concept_2904",
      "type": "concept",
      "name": "parsers",
      "description": "Concept: parsers",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.066367,
      "updated_at": 1754957552.066367
    },
    "concept_2905": {
      "id": "concept_2905",
      "type": "concept",
      "name": "Detect the type of document for appropriate parsing",
      "description": "Concept: Detect the type of document for appropriate parsing",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.066818,
      "updated_at": 1754957552.066818
    },
    "concept_2906": {
      "id": "concept_2906",
      "type": "concept",
      "name": "Filter out common words and short concepts",
      "description": "Concept: Filter out common words and short concepts",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.067263,
      "updated_at": 1754957552.067263
    },
    "concept_2907": {
      "id": "concept_2907",
      "type": "concept",
      "name": "**Average Connections**: {graph.patterns.get('connectivity', {}).get('average_connections', 0):.2f}",
      "description": "Concept: **Average Connections**: {graph.patterns.get('connectivity', {}).get('average_connections', 0):.2f}",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.0677629,
      "updated_at": 1754957552.0677629
    },
    "concept_2908": {
      "id": "concept_2908",
      "type": "concept",
      "name": "nodes",
      "description": "Concept: nodes",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.068185,
      "updated_at": 1754957552.068185
    },
    "concept_2909": {
      "id": "concept_2909",
      "type": "concept",
      "name": "content_type",
      "description": "Concept: content_type",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.068606,
      "updated_at": 1754957552.068606
    },
    "concept_2910": {
      "id": "concept_2910",
      "type": "concept",
      "name": "file_path",
      "description": "Concept: file_path",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py",
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.069023,
      "updated_at": 1754957552.650919
    },
    "concept_2911": {
      "id": "concept_2911",
      "type": "concept",
      "name": "Simple pattern",
      "description": "Concept: Simple pattern",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.06944,
      "updated_at": 1754957552.06944
    },
    "concept_2912": {
      "id": "concept_2912",
      "type": "concept",
      "name": "relationship",
      "description": "Concept: relationship",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.069851,
      "updated_at": 1754957552.069851
    },
    "concept_2913": {
      "id": "concept_2913",
      "type": "concept",
      "name": "Create engine and ingest knowledge",
      "description": "Concept: Create engine and ingest knowledge",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.070289,
      "updated_at": 1754957552.070289
    },
    "concept_2914": {
      "id": "concept_2914",
      "type": "concept",
      "name": "Demo search",
      "description": "Concept: Demo search",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.0707068,
      "updated_at": 1754957552.0707068
    },
    "concept_2915": {
      "id": "concept_2915",
      "type": "concept",
      "name": "relationship_type",
      "description": "Concept: relationship_type",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.071481,
      "updated_at": 1754957552.071481
    },
    "concept_2916": {
      "id": "concept_2916",
      "type": "concept",
      "name": "import_matches",
      "description": "Concept: import_matches",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.071899,
      "updated_at": 1754957552.071899
    },
    "concept_2917": {
      "id": "concept_2917",
      "type": "concept",
      "name": "doc_processor",
      "description": "Concept: doc_processor",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.07232,
      "updated_at": 1754957552.07232
    },
    "concept_2918": {
      "id": "concept_2918",
      "type": "concept",
      "name": "**Total Connections**: {graph.patterns.get('connectivity', {}).get('total_connections', 0)}",
      "description": "Concept: **Total Connections**: {graph.patterns.get('connectivity', {}).get('total_connections', 0)}",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.072814,
      "updated_at": 1754957552.072814
    },
    "concept_2919": {
      "id": "concept_2919",
      "type": "concept",
      "name": "engine",
      "description": "Concept: engine",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.0732381,
      "updated_at": 1754957552.0732381
    },
    "concept_2920": {
      "id": "concept_2920",
      "type": "concept",
      "name": "Check if a file is a documentation file",
      "description": "Concept: Check if a file is a documentation file",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.0736902,
      "updated_at": 1754957552.0736902
    },
    "concept_2921": {
      "id": "concept_2921",
      "type": "concept",
      "name": "Extract relationships between concepts",
      "description": "Concept: Extract relationships between concepts",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.074255,
      "updated_at": 1754957552.074255
    },
    "concept_2922": {
      "id": "concept_2922",
      "type": "concept",
      "name": "'implements', 'depends_on', 'similar_to', 'references'",
      "description": "Concept: 'implements', 'depends_on', 'similar_to', 'references'",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py"
        ]
      },
      "created_at": 1754957552.074749,
      "updated_at": 1754957552.074749
    },
    "concept_2923": {
      "id": "concept_2923",
      "type": "concept",
      "name": "type",
      "description": "Concept: type",
      "source": "knowledge_ingestion_engine.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "knowledge_ingestion_engine.py",
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.075166,
      "updated_at": 1754957552.656322
    },
    "doc_2924": {
      "id": "doc_2924",
      "type": "document",
      "name": "Llm_Client",
      "description": "Document: llm_client.py",
      "source": "llm_client.py",
      "confidence": 0.9,
      "metadata": {
        "file_size": 9002,
        "lines": 263,
        "language": "python",
        "last_modified": 1754693797.8676383
      },
      "created_at": 1754957552.078602,
      "updated_at": 1754957552.078602
    },
    "concept_2925": {
      "id": "concept_2925",
      "type": "concept",
      "name": "Ollama",
      "description": "Concept: Ollama",
      "source": "llm_client.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "llm_client.py",
          "main.py"
        ]
      },
      "created_at": 1754957552.079009,
      "updated_at": 1754957552.4324968
    },
    "concept_2926": {
      "id": "concept_2926",
      "type": "concept",
      "name": "system_prompt",
      "description": "Concept: system_prompt",
      "source": "llm_client.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "llm_client.py"
        ]
      },
      "created_at": 1754957552.0794199,
      "updated_at": 1754957552.0794199
    },
    "concept_2927": {
      "id": "concept_2927",
      "type": "concept",
      "name": "models_result",
      "description": "Concept: models_result",
      "source": "llm_client.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "llm_client.py",
          "main.py"
        ]
      },
      "created_at": 1754957552.07983,
      "updated_at": 1754957552.1955059
    },
    "concept_2928": {
      "id": "concept_2928",
      "type": "concept",
      "name": "Context: \"User name/identity: Johny\"",
      "description": "Concept: Context: \"User name/identity: Johny\"",
      "source": "llm_client.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "llm_client.py"
        ]
      },
      "created_at": 1754957552.0806131,
      "updated_at": 1754957552.0806131
    },
    "concept_2929": {
      "id": "concept_2929",
      "type": "concept",
      "name": "Get global LLM client instance",
      "description": "Concept: Get global LLM client instance",
      "source": "llm_client.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "llm_client.py"
        ]
      },
      "created_at": 1754957552.0810392,
      "updated_at": 1754957552.0810392
    },
    "concept_2930": {
      "id": "concept_2930",
      "type": "concept",
      "name": "Question: \"What is your name?\"",
      "description": "Concept: Question: \"What is your name?\"",
      "source": "llm_client.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "llm_client.py"
        ]
      },
      "created_at": 1754957552.081475,
      "updated_at": 1754957552.081475
    },
    "concept_2931": {
      "id": "concept_2931",
      "type": "concept",
      "name": "memory_response",
      "description": "Concept: memory_response",
      "source": "llm_client.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "llm_client.py"
        ]
      },
      "created_at": 1754957552.081894,
      "updated_at": 1754957552.081894
    },
    "concept_2932": {
      "id": "concept_2932",
      "type": "concept",
      "name": "Create a more structured prompt that the LLM can't ignore",
      "description": "Concept: Create a more structured prompt that the LLM can't ignore",
      "source": "llm_client.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "llm_client.py"
        ]
      },
      "created_at": 1754957552.082753,
      "updated_at": 1754957552.082753
    },
    "concept_2933": {
      "id": "concept_2933",
      "type": "concept",
      "name": "Global LLM client instance",
      "description": "Concept: Global LLM client instance",
      "source": "llm_client.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "llm_client.py"
        ]
      },
      "created_at": 1754957552.083176,
      "updated_at": 1754957552.083176
    },
    "concept_2934": {
      "id": "concept_2934",
      "type": "concept",
      "name": "ollama_client",
      "description": "Concept: ollama_client",
      "source": "llm_client.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "llm_client.py"
        ]
      },
      "created_at": 1754957552.0839272,
      "updated_at": 1754957552.0839272
    },
    "concept_2935": {
      "id": "concept_2935",
      "type": "concept",
      "name": "learned_something",
      "description": "Concept: learned_something",
      "source": "llm_client.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "llm_client.py",
          "main.py"
        ]
      },
      "created_at": 1754957552.084346,
      "updated_at": 1754957552.360953
    },
    "concept_2936": {
      "id": "concept_2936",
      "type": "concept",
      "name": "Build enhanced prompt that forces the LLM to use context",
      "description": "Concept: Build enhanced prompt that forces the LLM to use context",
      "source": "llm_client.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "llm_client.py"
        ]
      },
      "created_at": 1754957552.085171,
      "updated_at": 1754957552.085171
    },
    "concept_2937": {
      "id": "concept_2937",
      "type": "concept",
      "name": "_global_llm_client",
      "description": "Concept: _global_llm_client",
      "source": "llm_client.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "llm_client.py"
        ]
      },
      "created_at": 1754957552.085587,
      "updated_at": 1754957552.085587
    },
    "concept_2938": {
      "id": "concept_2938",
      "type": "concept",
      "name": "health_ok",
      "description": "Concept: health_ok",
      "source": "llm_client.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "llm_client.py"
        ]
      },
      "created_at": 1754957552.0860622,
      "updated_at": 1754957552.0860622
    },
    "concept_2939": {
      "id": "concept_2939",
      "type": "concept",
      "name": "OllamaClient",
      "description": "Concept: OllamaClient",
      "source": "llm_client.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "llm_client.py",
          "main.py"
        ]
      },
      "created_at": 1754957552.086601,
      "updated_at": 1754957552.274988
    },
    "concept_2940": {
      "id": "concept_2940",
      "type": "concept",
      "name": "max_tokens",
      "description": "Concept: max_tokens",
      "source": "llm_client.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "llm_client.py"
        ]
      },
      "created_at": 1754957552.087521,
      "updated_at": 1754957552.087521
    },
    "concept_2941": {
      "id": "concept_2941",
      "type": "concept",
      "name": "test_result",
      "description": "Concept: test_result",
      "source": "llm_client.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "llm_client.py",
          "main.py"
        ]
      },
      "created_at": 1754957552.087994,
      "updated_at": 1754957552.4164171
    },
    "concept_2942": {
      "id": "concept_2942",
      "type": "concept",
      "name": "Test basic response",
      "description": "Concept: Test basic response",
      "source": "llm_client.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "llm_client.py"
        ]
      },
      "created_at": 1754957552.088421,
      "updated_at": 1754957552.088421
    },
    "concept_2943": {
      "id": "concept_2943",
      "type": "concept",
      "name": "aiohttp",
      "description": "Concept: aiohttp",
      "source": "llm_client.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "llm_client.py"
        ]
      },
      "created_at": 1754957552.0891762,
      "updated_at": 1754957552.0891762
    },
    "concept_2944": {
      "id": "concept_2944",
      "type": "concept",
      "name": "List models",
      "description": "Concept: List models",
      "source": "llm_client.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "llm_client.py"
        ]
      },
      "created_at": 1754957552.089972,
      "updated_at": 1754957552.089972
    },
    "concept_2945": {
      "id": "concept_2945",
      "type": "concept",
      "name": "MemoryEnhancedLLM",
      "description": "Concept: MemoryEnhancedLLM",
      "source": "llm_client.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "llm_client.py"
        ]
      },
      "created_at": 1754957552.090761,
      "updated_at": 1754957552.090761
    },
    "concept_2946": {
      "id": "concept_2946",
      "type": "concept",
      "name": "llm",
      "description": "Concept: llm",
      "source": "llm_client.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "llm_client.py",
          "main.py"
        ]
      },
      "created_at": 1754957552.0911732,
      "updated_at": 1754957552.302055
    },
    "concept_2947": {
      "id": "concept_2947",
      "type": "concept",
      "name": "timeout",
      "description": "Concept: timeout",
      "source": "llm_client.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "llm_client.py",
          "test_mcp_integration.py",
          "test_mcp_tools.py"
        ]
      },
      "created_at": 1754957552.091593,
      "updated_at": 1754957552.794739
    },
    "concept_2948": {
      "id": "concept_2948",
      "type": "concept",
      "name": "temperature",
      "description": "Concept: temperature",
      "source": "llm_client.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "llm_client.py"
        ]
      },
      "created_at": 1754957552.0931818,
      "updated_at": 1754957552.0931818
    },
    "concept_2949": {
      "id": "concept_2949",
      "type": "concept",
      "name": "Test memory-enhanced response",
      "description": "Concept: Test memory-enhanced response",
      "source": "llm_client.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "llm_client.py"
        ]
      },
      "created_at": 1754957552.0936089,
      "updated_at": 1754957552.0936089
    },
    "concept_2950": {
      "id": "concept_2950",
      "type": "concept",
      "name": "Test memory-enhanced LLM",
      "description": "Concept: Test memory-enhanced LLM",
      "source": "llm_client.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "llm_client.py"
        ]
      },
      "created_at": 1754957552.094033,
      "updated_at": 1754957552.094033
    },
    "concept_2951": {
      "id": "concept_2951",
      "type": "concept",
      "name": "full_prompt",
      "description": "Concept: full_prompt",
      "source": "llm_client.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "llm_client.py"
        ]
      },
      "created_at": 1754957552.094445,
      "updated_at": 1754957552.094445
    },
    "concept_2952": {
      "id": "concept_2952",
      "type": "concept",
      "name": "messages",
      "description": "Concept: messages",
      "source": "llm_client.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "llm_client.py"
        ]
      },
      "created_at": 1754957552.0948539,
      "updated_at": 1754957552.0948539
    },
    "concept_2953": {
      "id": "concept_2953",
      "type": "concept",
      "name": "base_url",
      "description": "Concept: base_url",
      "source": "llm_client.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "llm_client.py"
        ]
      },
      "created_at": 1754957552.095619,
      "updated_at": 1754957552.095619
    },
    "concept_2954": {
      "id": "concept_2954",
      "type": "concept",
      "name": "Test the LLM integration",
      "description": "Concept: Test the LLM integration",
      "source": "llm_client.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "llm_client.py"
        ]
      },
      "created_at": 1754957552.096111,
      "updated_at": 1754957552.096111
    },
    "concept_2955": {
      "id": "concept_2955",
      "type": "concept",
      "name": "prompt",
      "description": "Concept: prompt",
      "source": "llm_client.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "llm_client.py"
        ]
      },
      "created_at": 1754957552.0966358,
      "updated_at": 1754957552.096637
    },
    "concept_2956": {
      "id": "concept_2956",
      "type": "concept",
      "name": "Test connection",
      "description": "Concept: Test connection",
      "source": "llm_client.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "llm_client.py"
        ]
      },
      "created_at": 1754957552.097066,
      "updated_at": 1754957552.097066
    },
    "concept_2957": {
      "id": "concept_2957",
      "type": "concept",
      "name": "Generate response",
      "description": "Concept: Generate response",
      "source": "llm_client.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "llm_client.py"
        ]
      },
      "created_at": 1754957552.0978408,
      "updated_at": 1754957552.0978408
    },
    "concept_2958": {
      "id": "concept_2958",
      "type": "concept",
      "name": "__aexit__",
      "description": "Concept: __aexit__",
      "source": "llm_client.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "llm_client.py"
        ]
      },
      "created_at": 1754957552.0983691,
      "updated_at": 1754957552.0983691
    },
    "concept_2959": {
      "id": "concept_2959",
      "type": "concept",
      "name": "Create system prompt for memory-enhanced conversations",
      "description": "Concept: Create system prompt for memory-enhanced conversations",
      "source": "llm_client.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "llm_client.py"
        ]
      },
      "created_at": 1754957552.098884,
      "updated_at": 1754957552.098884
    },
    "concept_2960": {
      "id": "concept_2960",
      "type": "concept",
      "name": "Construct messages",
      "description": "Concept: Construct messages",
      "source": "llm_client.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "llm_client.py"
        ]
      },
      "created_at": 1754957552.09933,
      "updated_at": 1754957552.09933
    },
    "concept_2961": {
      "id": "concept_2961",
      "type": "concept",
      "name": "total",
      "description": "Concept: total",
      "source": "llm_client.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "llm_client.py"
        ]
      },
      "created_at": 1754957552.0997381,
      "updated_at": 1754957552.0997381
    },
    "concept_2962": {
      "id": "concept_2962",
      "type": "concept",
      "name": "session",
      "description": "Concept: session",
      "source": "llm_client.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "llm_client.py"
        ]
      },
      "created_at": 1754957552.100152,
      "updated_at": 1754957552.100152
    },
    "concept_2963": {
      "id": "concept_2963",
      "type": "concept",
      "name": "float",
      "description": "Concept: float",
      "source": "llm_client.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "llm_client.py"
        ]
      },
      "created_at": 1754957552.100567,
      "updated_at": 1754957552.100567
    },
    "concept_2964": {
      "id": "concept_2964",
      "type": "concept",
      "name": "payload",
      "description": "Concept: payload",
      "source": "llm_client.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "llm_client.py"
        ]
      },
      "created_at": 1754957552.1010718,
      "updated_at": 1754957552.1010718
    },
    "concept_2965": {
      "id": "concept_2965",
      "type": "concept",
      "name": "Convert to seconds",
      "description": "Concept: Convert to seconds",
      "source": "llm_client.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "llm_client.py"
        ]
      },
      "created_at": 1754957552.101845,
      "updated_at": 1754957552.101845
    },
    "concept_2966": {
      "id": "concept_2966",
      "type": "concept",
      "name": "Fallback response",
      "description": "Concept: Fallback response",
      "source": "llm_client.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "llm_client.py"
        ]
      },
      "created_at": 1754957552.102263,
      "updated_at": 1754957552.102263
    },
    "concept_2967": {
      "id": "concept_2967",
      "type": "concept",
      "name": "Response: \"My name is Johny!\"",
      "description": "Concept: Response: \"My name is Johny!\"",
      "source": "llm_client.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "llm_client.py"
        ]
      },
      "created_at": 1754957552.1026921,
      "updated_at": 1754957552.1026921
    },
    "concept_2968": {
      "id": "concept_2968",
      "type": "concept",
      "name": "error_text",
      "description": "Concept: error_text",
      "source": "llm_client.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "llm_client.py"
        ]
      },
      "created_at": 1754957552.103104,
      "updated_at": 1754957552.103104
    },
    "concept_2969": {
      "id": "concept_2969",
      "type": "concept",
      "name": "Test LLM connection with a simple prompt",
      "description": "Concept: Test LLM connection with a simple prompt",
      "source": "llm_client.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "llm_client.py"
        ]
      },
      "created_at": 1754957552.1035452,
      "updated_at": 1754957552.1035452
    },
    "concept_2970": {
      "id": "concept_2970",
      "type": "concept",
      "name": "model",
      "description": "Concept: model",
      "source": "llm_client.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "llm_client.py"
        ]
      },
      "created_at": 1754957552.1039538,
      "updated_at": 1754957552.1039538
    },
    "concept_2971": {
      "id": "concept_2971",
      "type": "concept",
      "name": "__aenter__",
      "description": "Concept: __aenter__",
      "source": "llm_client.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "llm_client.py"
        ]
      },
      "created_at": 1754957552.104369,
      "updated_at": 1754957552.104369
    },
    "concept_2972": {
      "id": "concept_2972",
      "type": "concept",
      "name": "test_llm_integration",
      "description": "Concept: test_llm_integration",
      "source": "llm_client.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "llm_client.py"
        ]
      },
      "created_at": 1754957552.104795,
      "updated_at": 1754957552.104795
    },
    "doc_2973": {
      "id": "doc_2973",
      "type": "document",
      "name": "Main",
      "description": "Document: main.py",
      "source": "main.py",
      "confidence": 0.9,
      "metadata": {
        "file_size": 59661,
        "lines": 1591,
        "language": "python",
        "last_modified": 1754956137.1335616
      },
      "created_at": 1754957552.128992,
      "updated_at": 1754957552.128992
    },
    "concept_2974": {
      "id": "concept_2974",
      "type": "concept",
      "name": "memory_instructions.append(f\"Context: {context_summary}\")",
      "description": "Concept: memory_instructions.append(f\"Context: {context_summary}\")",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.129639,
      "updated_at": 1754957552.129639
    },
    "concept_2975": {
      "id": "concept_2975",
      "type": "concept",
      "name": "conversation_data = {",
      "description": "Concept: conversation_data = {",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.130094,
      "updated_at": 1754957552.130094
    },
    "concept_2976": {
      "id": "concept_2976",
      "type": "concept",
      "name": "Store error result",
      "description": "Concept: Store error result",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.130531,
      "updated_at": 1754957552.130531
    },
    "concept_2977": {
      "id": "concept_2977",
      "type": "concept",
      "name": "async def analyze_tool_performance(tool_name: str = \"all\", timeframe: str = \"session\") -> dict:",
      "description": "Concept: async def analyze_tool_performance(tool_name: str = \"all\", timeframe: str = \"session\") -> dict:",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.131028,
      "updated_at": 1754957552.131028
    },
    "concept_2978": {
      "id": "concept_2978",
      "type": "concept",
      "name": "\"success\": False,",
      "description": "Concept: \"success\": False,",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.131586,
      "updated_at": 1754957552.131586
    },
    "concept_2979": {
      "id": "concept_2979",
      "type": "concept",
      "name": "# Process through brain system",
      "description": "Concept: # Process through brain system",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.1320949,
      "updated_at": 1754957552.1320949
    },
    "concept_2980": {
      "id": "concept_2980",
      "type": "concept",
      "name": "\"assistant_name\": next((name for name in user_info.get(\"name\", []) if name.lower() in [\"johny\", \"jonathan\"]), \"Memory Assistant\"),",
      "description": "Concept: \"assistant_name\": next((name for name in user_info.get(\"name\", []) if name.lower() in [\"johny\", \"jonathan\"]), \"Memory Assistant\"),",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.1326468,
      "updated_at": 1754957552.1326468
    },
    "concept_2981": {
      "id": "concept_2981",
      "type": "concept",
      "name": "except:",
      "description": "Concept: except:",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.133062,
      "updated_at": 1754957552.133062
    },
    "concept_2982": {
      "id": "concept_2982",
      "type": "concept",
      "name": "\"memory_working\": all(r.get(\"memory_used\") for r in results[1:])  # Should have memory from 2nd message onward",
      "description": "Concept: \"memory_working\": all(r.get(\"memory_used\") for r in results[1:])  # Should have memory from 2nd message onward",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.133605,
      "updated_at": 1754957552.133605
    },
    "concept_2983": {
      "id": "concept_2983",
      "type": "concept",
      "name": "brain_state",
      "description": "Concept: brain_state",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.1340292,
      "updated_at": 1754957552.1340292
    },
    "concept_2984": {
      "id": "concept_2984",
      "type": "concept",
      "name": "We have exactly 6 consolidated tools",
      "description": "Concept: We have exactly 6 consolidated tools",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.134814,
      "updated_at": 1754957552.134814
    },
    "concept_2985": {
      "id": "concept_2985",
      "type": "concept",
      "name": "Initialize new tool registry",
      "description": "Concept: Initialize new tool registry",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.135251,
      "updated_at": 1754957552.135251
    },
    "concept_2986": {
      "id": "concept_2986",
      "type": "concept",
      "name": "This would call the actual auto_process_message function",
      "description": "Concept: This would call the actual auto_process_message function",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.135707,
      "updated_at": 1754957552.135707
    },
    "concept_2987": {
      "id": "concept_2987",
      "type": "concept",
      "name": "This would call the actual initialize_chat_session function",
      "description": "Concept: This would call the actual initialize_chat_session function",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.136245,
      "updated_at": 1754957552.136245
    },
    "concept_2988": {
      "id": "concept_2988",
      "type": "concept",
      "name": "\"output\": result.get(\"ai_response\", \"\"),",
      "description": "Concept: \"output\": result.get(\"ai_response\", \"\"),",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.1368058,
      "updated_at": 1754957552.136807
    },
    "concept_2989": {
      "id": "concept_2989",
      "type": "concept",
      "name": "This would call the actual enhanced_workflow_execution function",
      "description": "Concept: This would call the actual enhanced_workflow_execution function",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.13769,
      "updated_at": 1754957552.13769
    },
    "concept_2990": {
      "id": "concept_2990",
      "type": "concept",
      "name": "if not mcp_client:",
      "description": "Concept: if not mcp_client:",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.1381261,
      "updated_at": 1754957552.1381261
    },
    "concept_2991": {
      "id": "concept_2991",
      "type": "concept",
      "name": "\"context\": f\"Assistant ready (memory system: {str(e)})\",",
      "description": "Concept: \"context\": f\"Assistant ready (memory system: {str(e)})\",",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.138597,
      "updated_at": 1754957552.138598
    },
    "concept_2992": {
      "id": "concept_2992",
      "type": "concept",
      "name": "plugin._setup()",
      "description": "Concept: plugin._setup()",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.139372,
      "updated_at": 1754957552.139372
    },
    "concept_2993": {
      "id": "concept_2993",
      "type": "concept",
      "name": "brain",
      "description": "Concept: brain",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.139862,
      "updated_at": 1754957552.139862
    },
    "concept_2994": {
      "id": "concept_2994",
      "type": "concept",
      "name": "# Function call logging stats",
      "description": "Concept: # Function call logging stats",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.140374,
      "updated_at": 1754957552.140374
    },
    "concept_2995": {
      "id": "concept_2995",
      "type": "concept",
      "name": "\"test_response\": test_result[\"response\"],",
      "description": "Concept: \"test_response\": test_result[\"response\"],",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.141233,
      "updated_at": 1754957552.141233
    },
    "concept_2996": {
      "id": "concept_2996",
      "type": "concept",
      "name": "This would call the actual cursor_auto_inject_context function",
      "description": "Concept: This would call the actual cursor_auto_inject_context function",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.14171,
      "updated_at": 1754957552.14171
    },
    "concept_2997": {
      "id": "concept_2997",
      "type": "concept",
      "name": "\"phase\": \"tool_orchestration\",",
      "description": "Concept: \"phase\": \"tool_orchestration\",",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.142154,
      "updated_at": 1754957552.142154
    },
    "concept_2998": {
      "id": "concept_2998",
      "type": "concept",
      "name": "async def get_function_call_history(limit: int = 50, function_name: str = None) -> dict:",
      "description": "Concept: async def get_function_call_history(limit: int = 50, function_name: str = None) -> dict:",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.142656,
      "updated_at": 1754957552.142656
    },
    "concept_2999": {
      "id": "concept_2999",
      "type": "concept",
      "name": "llm = await get_llm_client()",
      "description": "Concept: llm = await get_llm_client()",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.143094,
      "updated_at": 1754957552.143094
    },
    "concept_3000": {
      "id": "concept_3000",
      "type": "concept",
      "name": "PluginManager",
      "description": "Concept: PluginManager",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.143521,
      "updated_at": 1754957552.143521
    },
    "concept_3001": {
      "id": "concept_3001",
      "type": "concept",
      "name": "logger.info(f\"\ud83d\udce6 Processing {len(user_messages)} messages in batch\")",
      "description": "Concept: logger.info(f\"\ud83d\udce6 Processing {len(user_messages)} messages in batch\")",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.144613,
      "updated_at": 1754957552.144613
    },
    "concept_3002": {
      "id": "concept_3002",
      "type": "concept",
      "name": "if memory_result.get(\"success\"):",
      "description": "Concept: if memory_result.get(\"success\"):",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.1450639,
      "updated_at": 1754957552.1450639
    },
    "concept_3003": {
      "id": "concept_3003",
      "type": "concept",
      "name": "result = await plugin._batch_workflow_processing_handler(user_messages, workflow_mode)",
      "description": "Concept: result = await plugin._batch_workflow_processing_handler(user_messages, workflow_mode)",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.145576,
      "updated_at": 1754957552.145576
    },
    "concept_3004": {
      "id": "concept_3004",
      "type": "concept",
      "name": "count",
      "description": "Concept: count",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.145998,
      "updated_at": 1754957552.145998
    },
    "concept_3005": {
      "id": "concept_3005",
      "type": "concept",
      "name": "Patch JSON operations for backward compatibility",
      "description": "Concept: Patch JSON operations for backward compatibility",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.146625,
      "updated_at": 1754957552.146625
    },
    "concept_3006": {
      "id": "concept_3006",
      "type": "concept",
      "name": "This would call the actual learn_from function",
      "description": "Concept: This would call the actual learn_from function",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.147135,
      "updated_at": 1754957552.147135
    },
    "concept_3007": {
      "id": "concept_3007",
      "type": "concept",
      "name": "\"Hi there! My name is Johny and I love working on AI projects.\",",
      "description": "Concept: \"Hi there! My name is Johny and I love working on AI projects.\",",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.147637,
      "updated_at": 1754957552.147637
    },
    "concept_3008": {
      "id": "concept_3008",
      "type": "concept",
      "name": "\ud83c\udfd7\ufe0f Build Comprehensive Context",
      "description": "Concept: \ud83c\udfd7\ufe0f Build Comprehensive Context",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.148886,
      "updated_at": 1754957552.148886
    },
    "concept_3009": {
      "id": "concept_3009",
      "type": "concept",
      "name": "llm_client",
      "description": "Concept: llm_client",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.1494389,
      "updated_at": 1754957552.1494389
    },
    "concept_3010": {
      "id": "concept_3010",
      "type": "concept",
      "name": "\"content_analyzed\": content[:100] + \"...\" if len(content) > 100 else content,",
      "description": "Concept: \"content_analyzed\": content[:100] + \"...\" if len(content) > 100 else content,",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.149948,
      "updated_at": 1754957552.149948
    },
    "concept_3011": {
      "id": "concept_3011",
      "type": "concept",
      "name": "This would call the actual dream function",
      "description": "Concept: This would call the actual dream function",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.1504052,
      "updated_at": 1754957552.1504052
    },
    "concept_3012": {
      "id": "concept_3012",
      "type": "concept",
      "name": "count = cursor.fetchone()[0]",
      "description": "Concept: count = cursor.fetchone()[0]",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.150848,
      "updated_at": 1754957552.150848
    },
    "concept_3013": {
      "id": "concept_3013",
      "type": "concept",
      "name": "\"server_name\": \"Memory Context Manager with AI Memory\",",
      "description": "Concept: \"server_name\": \"Memory Context Manager with AI Memory\",",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.151319,
      "updated_at": 1754957552.151319
    },
    "concept_3014": {
      "id": "concept_3014",
      "type": "concept",
      "name": "enhanced_brain_tools = EnhancedBrainTools(mcp_client, tool_registry)",
      "description": "Concept: enhanced_brain_tools = EnhancedBrainTools(mcp_client, tool_registry)",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.1518028,
      "updated_at": 1754957552.1518028
    },
    "concept_3015": {
      "id": "concept_3015",
      "type": "concept",
      "name": "async def enhanced_context_retrieval(user_message: str, include_history: bool = True, include_preferences: bool = True) -> dict:",
      "description": "Concept: async def enhanced_context_retrieval(user_message: str, include_history: bool = True, include_preferences: bool = True) -> dict:",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.152361,
      "updated_at": 1754957552.152361
    },
    "concept_3016": {
      "id": "concept_3016",
      "type": "concept",
      "name": "# Look for context analyzer in modules",
      "description": "Concept: # Look for context analyzer in modules",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.152807,
      "updated_at": 1754957552.152807
    },
    "concept_3017": {
      "id": "concept_3017",
      "type": "concept",
      "name": "# STEP 4: Generate AI response with memory context",
      "description": "Concept: # STEP 4: Generate AI response with memory context",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.153271,
      "updated_at": 1754957552.153271
    },
    "concept_3018": {
      "id": "concept_3018",
      "type": "concept",
      "name": "===== DOMAIN 6: SELF-MONITORING =====",
      "description": "Concept: ===== DOMAIN 6: SELF-MONITORING =====",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.1537158,
      "updated_at": 1754957552.1537158
    },
    "concept_3019": {
      "id": "concept_3019",
      "type": "concept",
      "name": "memory_data = db.get_memory_store()",
      "description": "Concept: memory_data = db.get_memory_store()",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.154159,
      "updated_at": 1754957552.154159
    },
    "concept_3020": {
      "id": "concept_3020",
      "type": "concept",
      "name": "\"version\": metadata.version,",
      "description": "Concept: \"version\": metadata.version,",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.1546009,
      "updated_at": 1754957552.1546009
    },
    "concept_3021": {
      "id": "concept_3021",
      "type": "concept",
      "name": "Generate response using real LLM",
      "description": "Concept: Generate response using real LLM",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.155045,
      "updated_at": 1754957552.155045
    },
    "concept_3022": {
      "id": "concept_3022",
      "type": "concept",
      "name": "\"memory_context_used\": \"\",",
      "description": "Concept: \"memory_context_used\": \"\",",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.155481,
      "updated_at": 1754957552.155481
    },
    "concept_3023": {
      "id": "concept_3023",
      "type": "concept",
      "name": "if assessment_criteria is None:",
      "description": "Concept: if assessment_criteria is None:",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.156808,
      "updated_at": 1754957552.156808
    },
    "concept_3024": {
      "id": "concept_3024",
      "type": "concept",
      "name": "# Execute Phase 2",
      "description": "Concept: # Execute Phase 2",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.157254,
      "updated_at": 1754957552.157254
    },
    "concept_3025": {
      "id": "concept_3025",
      "type": "concept",
      "name": "logger.info(f\"\ud83c\udfe5 Performing workflow health check: {check_level}\")",
      "description": "Concept: logger.info(f\"\ud83c\udfe5 Performing workflow health check: {check_level}\")",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.158345,
      "updated_at": 1754957552.158345
    },
    "concept_3026": {
      "id": "concept_3026",
      "type": "concept",
      "name": "Process multiple messages through the enhanced workflow efficiently.",
      "description": "Concept: Process multiple messages through the enhanced workflow efficiently.",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.158844,
      "updated_at": 1754957552.158844
    },
    "concept_3027": {
      "id": "concept_3027",
      "type": "concept",
      "name": "user_messages: List of user messages to process",
      "description": "Concept: user_messages: List of user messages to process",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.1593118,
      "updated_at": 1754957552.1593118
    },
    "concept_3028": {
      "id": "concept_3028",
      "type": "concept",
      "name": "# Recent activity",
      "description": "Concept: # Recent activity",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.159745,
      "updated_at": 1754957552.159745
    },
    "concept_3029": {
      "id": "concept_3029",
      "type": "concept",
      "name": "test_messages",
      "description": "Concept: test_messages",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.160165,
      "updated_at": 1754957552.160165
    },
    "concept_3030": {
      "id": "concept_3030",
      "type": "concept",
      "name": "\ud83c\udfaf Get comprehensive context for Cursor conversations",
      "description": "Concept: \ud83c\udfaf Get comprehensive context for Cursor conversations",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.1611269,
      "updated_at": 1754957552.1611269
    },
    "concept_3031": {
      "id": "concept_3031",
      "type": "concept",
      "name": "# Execute workflow health check",
      "description": "Concept: # Execute workflow health check",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.161567,
      "updated_at": 1754957552.161567
    },
    "concept_3032": {
      "id": "concept_3032",
      "type": "concept",
      "name": "\"memory_enabled\": True,",
      "description": "Concept: \"memory_enabled\": True,",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.162006,
      "updated_at": 1754957552.162006
    },
    "concept_3033": {
      "id": "concept_3033",
      "type": "concept",
      "name": "Extract user's name from memory context",
      "description": "Concept: Extract user's name from memory context",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.1624541,
      "updated_at": 1754957552.1624541
    },
    "concept_3034": {
      "id": "concept_3034",
      "type": "concept",
      "name": "\"context_available\": False,",
      "description": "Concept: \"context_available\": False,",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.162888,
      "updated_at": 1754957552.162888
    },
    "concept_3035": {
      "id": "concept_3035",
      "type": "concept",
      "name": "\"resources_available\": len(plugin_manager.registry.resources),",
      "description": "Concept: \"resources_available\": len(plugin_manager.registry.resources),",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.163357,
      "updated_at": 1754957552.163357
    },
    "concept_3036": {
      "id": "concept_3036",
      "type": "concept",
      "name": "memory_context,",
      "description": "Concept: memory_context,",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.1637802,
      "updated_at": 1754957552.1637802
    },
    "concept_3037": {
      "id": "concept_3037",
      "type": "concept",
      "name": "logger.error(f\"\u274c Enhanced workflow execution failed: {str(e)}\")",
      "description": "Concept: logger.error(f\"\u274c Enhanced workflow execution failed: {str(e)}\")",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.164782,
      "updated_at": 1754957552.164782
    },
    "concept_3038": {
      "id": "concept_3038",
      "type": "concept",
      "name": "logger.info(\"\ud83c\udfaf Phase 2: Tool Orchestration\")",
      "description": "Concept: logger.info(\"\ud83c\udfaf Phase 2: Tool Orchestration\")",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.1656902,
      "updated_at": 1754957552.1656902
    },
    "concept_3039": {
      "id": "concept_3039",
      "type": "concept",
      "name": "\"learned\": learning_result.get(\"important_info_found\", []) if learning_result.get(\"success\") else [],",
      "description": "Concept: \"learned\": learning_result.get(\"important_info_found\", []) if learning_result.get(\"success\") else [],",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.166239,
      "updated_at": 1754957552.166239
    },
    "concept_3040": {
      "id": "concept_3040",
      "type": "concept",
      "name": "\ud83d\ude80 Execute Complete Enhanced Workflow",
      "description": "Concept: \ud83d\ude80 Execute Complete Enhanced Workflow",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.1671839,
      "updated_at": 1754957552.1671839
    },
    "concept_3041": {
      "id": "concept_3041",
      "type": "concept",
      "name": "This would call the actual refactor_safely function",
      "description": "Concept: This would call the actual refactor_safely function",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.1676722,
      "updated_at": 1754957552.1676722
    },
    "concept_3042": {
      "id": "concept_3042",
      "type": "concept",
      "name": "\"system_status\": \"fully_operational\",",
      "description": "Concept: \"system_status\": \"fully_operational\",",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.1685429,
      "updated_at": 1754957552.1685429
    },
    "concept_3043": {
      "id": "concept_3043",
      "type": "concept",
      "name": "response",
      "description": "Concept: response",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.168994,
      "updated_at": 1754957552.168994
    },
    "concept_3044": {
      "id": "concept_3044",
      "type": "concept",
      "name": "result = await plugin._continuous_learning_handler(interaction_data, learning_focus)",
      "description": "Concept: result = await plugin._continuous_learning_handler(interaction_data, learning_focus)",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.1698508,
      "updated_at": 1754957552.1698508
    },
    "concept_3045": {
      "id": "concept_3045",
      "type": "concept",
      "name": "This would call the actual get_user_context function",
      "description": "Concept: This would call the actual get_user_context function",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.170431,
      "updated_at": 1754957552.170432
    },
    "concept_3046": {
      "id": "concept_3046",
      "type": "concept",
      "name": "Create internal MCP client",
      "description": "Concept: Create internal MCP client",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.1709208,
      "updated_at": 1754957552.1709208
    },
    "concept_3047": {
      "id": "concept_3047",
      "type": "concept",
      "name": "async def orchestrate_tools(context_data: dict, target_goal: str = \"enhanced_response\") -> dict:",
      "description": "Concept: async def orchestrate_tools(context_data: dict, target_goal: str = \"enhanced_response\") -> dict:",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.1714282,
      "updated_at": 1754957552.1714282
    },
    "concept_3048": {
      "id": "concept_3048",
      "type": "concept",
      "name": "Initialize server with clean brain interface",
      "description": "Concept: Initialize server with clean brain interface",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.171888,
      "updated_at": 1754957552.171888
    },
    "concept_3049": {
      "id": "concept_3049",
      "type": "concept",
      "name": "logger.info(f\"\ufffd\ufffd Processing message with memory: {user_message[:50]}...\")",
      "description": "Concept: logger.info(f\"\ufffd\ufffd Processing message with memory: {user_message[:50]}...\")",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.173358,
      "updated_at": 1754957552.173358
    },
    "concept_3050": {
      "id": "concept_3050",
      "type": "concept",
      "name": "\"How are you doing today?\"",
      "description": "Concept: \"How are you doing today?\"",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.173802,
      "updated_at": 1754957552.173802
    },
    "concept_3051": {
      "id": "concept_3051",
      "type": "concept",
      "name": "\"logging_enabled\": function_logger._enabled",
      "description": "Concept: \"logging_enabled\": function_logger._enabled",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.174253,
      "updated_at": 1754957552.174253
    },
    "concept_3052": {
      "id": "concept_3052",
      "type": "concept",
      "name": "logger.error(f\"\u274c Tool orchestration failed: {str(e)}\")",
      "description": "Concept: logger.error(f\"\u274c Tool orchestration failed: {str(e)}\")",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.17519,
      "updated_at": 1754957552.17519
    },
    "concept_3053": {
      "id": "concept_3053",
      "type": "concept",
      "name": "logger.error(f\"\u274c Workflow health check failed: {str(e)}\")",
      "description": "Concept: logger.error(f\"\u274c Workflow health check failed: {str(e)}\")",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.1761448,
      "updated_at": 1754957552.1761448
    },
    "concept_3054": {
      "id": "concept_3054",
      "type": "concept",
      "name": "async def analyze_context_deeply(content: str, analysis_type: str = \"comprehensive\") -> dict:",
      "description": "Concept: async def analyze_context_deeply(content: str, analysis_type: str = \"comprehensive\") -> dict:",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.1768389,
      "updated_at": 1754957552.1768389
    },
    "concept_3055": {
      "id": "concept_3055",
      "type": "concept",
      "name": "memory_instructions = []",
      "description": "Concept: memory_instructions = []",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.177343,
      "updated_at": 1754957552.177343
    },
    "concept_3056": {
      "id": "concept_3056",
      "type": "concept",
      "name": "logger.info(f\"\ud83d\udd27 Optimizing workflow: {optimization_focus}\")",
      "description": "Concept: logger.info(f\"\ud83d\udd27 Optimizing workflow: {optimization_focus}\")",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.178454,
      "updated_at": 1754957552.178454
    },
    "concept_3057": {
      "id": "concept_3057",
      "type": "concept",
      "name": "Optimization results with recommendations",
      "description": "Concept: Optimization results with recommendations",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.178936,
      "updated_at": 1754957552.178936
    },
    "concept_3058": {
      "id": "concept_3058",
      "type": "concept",
      "name": "Import LLM client",
      "description": "Concept: Import LLM client",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.1793761,
      "updated_at": 1754957552.1793761
    },
    "concept_3059": {
      "id": "concept_3059",
      "type": "concept",
      "name": "cursor_context",
      "description": "Concept: cursor_context",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.179816,
      "updated_at": 1754957552.179816
    },
    "concept_3060": {
      "id": "concept_3060",
      "type": "concept",
      "name": "\"search_results\": search_results,",
      "description": "Concept: \"search_results\": search_results,",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.1803699,
      "updated_at": 1754957552.1803699
    },
    "concept_3061": {
      "id": "concept_3061",
      "type": "concept",
      "name": "Performance analysis with metrics and recommendations",
      "description": "Concept: Performance analysis with metrics and recommendations",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.180861,
      "updated_at": 1754957552.180861
    },
    "concept_3062": {
      "id": "concept_3062",
      "type": "concept",
      "name": "This would call the actual reflect_enhanced function",
      "description": "Concept: This would call the actual reflect_enhanced function",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.181341,
      "updated_at": 1754957552.181341
    },
    "concept_3063": {
      "id": "concept_3063",
      "type": "concept",
      "name": "cursor = conn.execute(f\"SELECT COUNT(*) FROM {table}\")",
      "description": "Concept: cursor = conn.execute(f\"SELECT COUNT(*) FROM {table}\")",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.181947,
      "updated_at": 1754957552.181947
    },
    "concept_3064": {
      "id": "concept_3064",
      "type": "concept",
      "name": "user_message=user_message",
      "description": "Concept: user_message=user_message",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.182753,
      "updated_at": 1754957552.182753
    },
    "concept_3065": {
      "id": "concept_3065",
      "type": "concept",
      "name": "Create server",
      "description": "Concept: Create server",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.183184,
      "updated_at": 1754957552.183184
    },
    "concept_3066": {
      "id": "concept_3066",
      "type": "concept",
      "name": "Performance analysis with insights",
      "description": "Concept: Performance analysis with insights",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.183635,
      "updated_at": 1754957552.183635
    },
    "concept_3067": {
      "id": "concept_3067",
      "type": "concept",
      "name": "# Check if brain interface is available",
      "description": "Concept: # Check if brain interface is available",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.184088,
      "updated_at": 1754957552.184088
    },
    "concept_3068": {
      "id": "concept_3068",
      "type": "concept",
      "name": "search_results = function_logger.search_calls_by_context(search_term, limit)",
      "description": "Concept: search_results = function_logger.search_calls_by_context(search_term, limit)",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.1845849,
      "updated_at": 1754957552.1845849
    },
    "concept_3069": {
      "id": "concept_3069",
      "type": "concept",
      "name": "Identifies bottlenecks and implements automatic improvements.",
      "description": "Concept: Identifies bottlenecks and implements automatic improvements.",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.18506,
      "updated_at": 1754957552.18506
    },
    "concept_3070": {
      "id": "concept_3070",
      "type": "concept",
      "name": "optimization opportunities and usage trends.",
      "description": "Concept: optimization opportunities and usage trends.",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.185529,
      "updated_at": 1754957552.185529
    },
    "concept_3071": {
      "id": "concept_3071",
      "type": "concept",
      "name": "ai_response",
      "description": "Concept: ai_response",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.185954,
      "updated_at": 1754957552.185954
    },
    "concept_3072": {
      "id": "concept_3072",
      "type": "concept",
      "name": "context_parts = []",
      "description": "Concept: context_parts = []",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.186909,
      "updated_at": 1754957552.186909
    },
    "concept_3073": {
      "id": "concept_3073",
      "type": "concept",
      "name": "# Fallback: try to get basic analysis",
      "description": "Concept: # Fallback: try to get basic analysis",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.187404,
      "updated_at": 1754957552.187404
    },
    "concept_3074": {
      "id": "concept_3074",
      "type": "concept",
      "name": "Memory client for internal tool calls",
      "description": "Concept: Memory client for internal tool calls",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.187853,
      "updated_at": 1754957552.187853
    },
    "concept_3075": {
      "id": "concept_3075",
      "type": "concept",
      "name": "\"session_id\": function_logger._session_id,",
      "description": "Concept: \"session_id\": function_logger._session_id,",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.18832,
      "updated_at": 1754957552.18832
    },
    "concept_3076": {
      "id": "concept_3076",
      "type": "concept",
      "name": "logger.error(f\"Memory-enhanced chat error: {str(e)}\")",
      "description": "Concept: logger.error(f\"Memory-enhanced chat error: {str(e)}\")",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.188854,
      "updated_at": 1754957552.188854
    },
    "concept_3077": {
      "id": "concept_3077",
      "type": "concept",
      "name": "from llm_client import get_llm_client",
      "description": "Concept: from llm_client import get_llm_client",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.189708,
      "updated_at": 1754957552.189708
    },
    "concept_3078": {
      "id": "concept_3078",
      "type": "concept",
      "name": "Automatically executes all three phases of context enhancement in sequence:",
      "description": "Concept: Automatically executes all three phases of context enhancement in sequence:",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.1902158,
      "updated_at": 1754957552.1902158
    },
    "concept_3079": {
      "id": "concept_3079",
      "type": "concept",
      "name": "return {\"context\": \"Basic assistant without memory access\"}",
      "description": "Concept: return {\"context\": \"Basic assistant without memory access\"}",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.190785,
      "updated_at": 1754957552.190785
    },
    "concept_3080": {
      "id": "concept_3080",
      "type": "concept",
      "name": "Initialize plugin manager",
      "description": "Concept: Initialize plugin manager",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.191228,
      "updated_at": 1754957552.191228
    },
    "concept_3081": {
      "id": "concept_3081",
      "type": "concept",
      "name": "Extracts learning patterns, identifies improvements, and",
      "description": "Concept: Extracts learning patterns, identifies improvements, and",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.191699,
      "updated_at": 1754957552.191699
    },
    "concept_3082": {
      "id": "concept_3082",
      "type": "concept",
      "name": "\"learned\": learning_result.get(\"important_info_found\", []) if learning_result.get(\"success\") else []",
      "description": "Concept: \"learned\": learning_result.get(\"important_info_found\", []) if learning_result.get(\"success\") else []",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.192241,
      "updated_at": 1754957552.192241
    },
    "concept_3083": {
      "id": "concept_3083",
      "type": "concept",
      "name": "# Store conversation in database",
      "description": "Concept: # Store conversation in database",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.1926851,
      "updated_at": 1754957552.1926851
    },
    "concept_3084": {
      "id": "concept_3084",
      "type": "concept",
      "name": "\ud83d\udcc8 Get comprehensive session statistics and performance metrics",
      "description": "Concept: \ud83d\udcc8 Get comprehensive session statistics and performance metrics",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.193747,
      "updated_at": 1754957552.193747
    },
    "concept_3085": {
      "id": "concept_3085",
      "type": "concept",
      "name": "\"What's my name again?\",",
      "description": "Concept: \"What's my name again?\",",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.194188,
      "updated_at": 1754957552.194188
    },
    "concept_3086": {
      "id": "concept_3086",
      "type": "concept",
      "name": "timeframe: Timeframe for analysis",
      "description": "Concept: timeframe: Timeframe for analysis",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.194648,
      "updated_at": 1754957552.194648
    },
    "concept_3087": {
      "id": "concept_3087",
      "type": "concept",
      "name": "\"ready_for_conversation\": True",
      "description": "Concept: \"ready_for_conversation\": True",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.195094,
      "updated_at": 1754957552.195094
    },
    "concept_3088": {
      "id": "concept_3088",
      "type": "concept",
      "name": "logger.error(f\"\u274c Comprehensive context building failed: {str(e)}\")",
      "description": "Concept: logger.error(f\"\u274c Comprehensive context building failed: {str(e)}\")",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.196703,
      "updated_at": 1754957552.196703
    },
    "concept_3089": {
      "id": "concept_3089",
      "type": "concept",
      "name": "result = await plugin._assess_context_quality_handler(context_data, assessment_criteria)",
      "description": "Concept: result = await plugin._assess_context_quality_handler(context_data, assessment_criteria)",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.197338,
      "updated_at": 1754957552.197338
    },
    "concept_3090": {
      "id": "concept_3090",
      "type": "concept",
      "name": "Detailed context analysis with insights and recommendations",
      "description": "Concept: Detailed context analysis with insights and recommendations",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.197835,
      "updated_at": 1754957552.197835
    },
    "concept_3091": {
      "id": "concept_3091",
      "type": "concept",
      "name": "name_pattern",
      "description": "Concept: name_pattern",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.198393,
      "updated_at": 1754957552.198393
    },
    "concept_3092": {
      "id": "concept_3092",
      "type": "concept",
      "name": "except Exception as e:",
      "description": "Concept: except Exception as e:",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.198876,
      "updated_at": 1754957552.198876
    },
    "concept_3093": {
      "id": "concept_3093",
      "type": "concept",
      "name": "context_result = await mcp_client.call_tool(",
      "description": "Concept: context_result = await mcp_client.call_tool(",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.199342,
      "updated_at": 1754957552.199342
    },
    "concept_3094": {
      "id": "concept_3094",
      "type": "concept",
      "name": "user_info",
      "description": "Concept: user_info",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.1997702,
      "updated_at": 1754957552.1997702
    },
    "concept_3095": {
      "id": "concept_3095",
      "type": "concept",
      "name": "Enhanced Context Integration Tools - Phase 1, 2, and 3 Implementation",
      "description": "Concept: Enhanced Context Integration Tools - Phase 1, 2, and 3 Implementation",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.200265,
      "updated_at": 1754957552.200265
    },
    "concept_3096": {
      "id": "concept_3096",
      "type": "concept",
      "name": "logger.info(\"\ud83d\udd0d Phase 1: Enhanced Context Retrieval\")",
      "description": "Concept: logger.info(\"\ud83d\udd0d Phase 1: Enhanced Context Retrieval\")",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.2012641,
      "updated_at": 1754957552.2012641
    },
    "concept_3097": {
      "id": "concept_3097",
      "type": "concept",
      "name": "# Execute workflow optimization",
      "description": "Concept: # Execute workflow optimization",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.20172,
      "updated_at": 1754957552.20172
    },
    "concept_3098": {
      "id": "concept_3098",
      "type": "concept",
      "name": "logger.error(f\"\u274c Workflow performance analysis failed: {str(e)}\")",
      "description": "Concept: logger.error(f\"\u274c Workflow performance analysis failed: {str(e)}\")",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.202754,
      "updated_at": 1754957552.202754
    },
    "concept_3099": {
      "id": "concept_3099",
      "type": "concept",
      "name": "Selects appropriate tools, creates execution plans, and coordinates",
      "description": "Concept: Selects appropriate tools, creates execution plans, and coordinates",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.203624,
      "updated_at": 1754957552.203624
    },
    "concept_3100": {
      "id": "concept_3100",
      "type": "concept",
      "name": "\"error\": str(e)",
      "description": "Concept: \"error\": str(e)",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.2040582,
      "updated_at": 1754957552.2040582
    },
    "concept_3101": {
      "id": "concept_3101",
      "type": "concept",
      "name": "- Phase 2: Tool Orchestration",
      "description": "Concept: - Phase 2: Tool Orchestration",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.2045062,
      "updated_at": 1754957552.2045062
    },
    "concept_3102": {
      "id": "concept_3102",
      "type": "concept",
      "name": "\"consciousness_level\": \"Aware and responsive\",",
      "description": "Concept: \"consciousness_level\": \"Aware and responsive\",",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.204969,
      "updated_at": 1754957552.204969
    },
    "concept_3103": {
      "id": "concept_3103",
      "type": "concept",
      "name": "logger.error(f\"\u274c Tool performance analysis failed: {str(e)}\")",
      "description": "Concept: logger.error(f\"\u274c Tool performance analysis failed: {str(e)}\")",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.2059789,
      "updated_at": 1754957552.2059789
    },
    "concept_3104": {
      "id": "concept_3104",
      "type": "concept",
      "name": "\"ai_response\": ai_response,",
      "description": "Concept: \"ai_response\": ai_response,",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.206555,
      "updated_at": 1754957552.206555
    },
    "concept_3105": {
      "id": "concept_3105",
      "type": "concept",
      "name": "\"remember\": \"\ud83e\udde0 Remember important information\",",
      "description": "Concept: \"remember\": \"\ud83e\udde0 Remember important information\",",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.20752,
      "updated_at": 1754957552.20752
    },
    "concept_3106": {
      "id": "concept_3106",
      "type": "concept",
      "name": "Returns just the AI response string",
      "description": "Concept: Returns just the AI response string",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.207977,
      "updated_at": 1754957552.207977
    },
    "concept_3107": {
      "id": "concept_3107",
      "type": "concept",
      "name": "check_level: Health check level (basic, comprehensive, deep)",
      "description": "Concept: check_level: Health check level (basic, comprehensive, deep)",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.208461,
      "updated_at": 1754957552.208461
    },
    "concept_3108": {
      "id": "concept_3108",
      "type": "concept",
      "name": "\"context_available\": True,",
      "description": "Concept: \"context_available\": True,",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.20891,
      "updated_at": 1754957552.20891
    },
    "concept_3109": {
      "id": "concept_3109",
      "type": "concept",
      "name": "plugin_info[plugin_name] = {",
      "description": "Concept: plugin_info[plugin_name] = {",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.209358,
      "updated_at": 1754957552.209358
    },
    "concept_3110": {
      "id": "concept_3110",
      "type": "concept",
      "name": "logger.error(f\"Conversation tracking error: {str(e)}\")",
      "description": "Concept: logger.error(f\"Conversation tracking error: {str(e)}\")",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.209839,
      "updated_at": 1754957552.209839
    },
    "concept_3111": {
      "id": "concept_3111",
      "type": "concept",
      "name": "# Plugin system status",
      "description": "Concept: # Plugin system status",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.210282,
      "updated_at": 1754957552.210282
    },
    "concept_3112": {
      "id": "concept_3112",
      "type": "concept",
      "name": "async def optimize_workflow(optimization_focus: str = \"performance\", target_metrics: list = None) -> dict:",
      "description": "Concept: async def optimize_workflow(optimization_focus: str = \"performance\", target_metrics: list = None) -> dict:",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.2108319,
      "updated_at": 1754957552.2108319
    },
    "concept_3113": {
      "id": "concept_3113",
      "type": "concept",
      "name": "match",
      "description": "Concept: match",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.2112582,
      "updated_at": 1754957552.2112582
    },
    "concept_3114": {
      "id": "concept_3114",
      "type": "concept",
      "name": "\"logging_status\": \"active\" if function_logger._enabled else \"disabled\"",
      "description": "Concept: \"logging_status\": \"active\" if function_logger._enabled else \"disabled\"",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.21176,
      "updated_at": 1754957552.21176
    },
    "concept_3115": {
      "id": "concept_3115",
      "type": "concept",
      "name": "context_results = {}",
      "description": "Concept: context_results = {}",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.212204,
      "updated_at": 1754957552.212204
    },
    "concept_3116": {
      "id": "concept_3116",
      "type": "concept",
      "name": "\ud83d\udcca Analyze Tool Performance",
      "description": "Concept: \ud83d\udcca Analyze Tool Performance",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.212896,
      "updated_at": 1754957552.212896
    },
    "concept_3117": {
      "id": "concept_3117",
      "type": "concept",
      "name": "from database import get_brain_db",
      "description": "Concept: from database import get_brain_db",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.213355,
      "updated_at": 1754957552.213355
    },
    "concept_3118": {
      "id": "concept_3118",
      "type": "concept",
      "name": "Store successful result",
      "description": "Concept: Store successful result",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.2137978,
      "updated_at": 1754957552.2137978
    },
    "concept_3119": {
      "id": "concept_3119",
      "type": "concept",
      "name": "important_info = []",
      "description": "Concept: important_info = []",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.214237,
      "updated_at": 1754957552.214237
    },
    "concept_3120": {
      "id": "concept_3120",
      "type": "concept",
      "name": "Executes all three phases to build comprehensive context:",
      "description": "Concept: Executes all three phases to build comprehensive context:",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.214723,
      "updated_at": 1754957552.214723
    },
    "concept_3121": {
      "id": "concept_3121",
      "type": "concept",
      "name": "tool usage for optimal context enhancement.",
      "description": "Concept: tool usage for optimal context enhancement.",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.215203,
      "updated_at": 1754957552.215203
    },
    "concept_3122": {
      "id": "concept_3122",
      "type": "concept",
      "name": "debug_mode",
      "description": "Concept: debug_mode",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.215641,
      "updated_at": 1754957552.215641
    },
    "concept_3123": {
      "id": "concept_3123",
      "type": "concept",
      "name": "if context_summary:",
      "description": "Concept: if context_summary:",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.21608,
      "updated_at": 1754957552.21608
    },
    "concept_3124": {
      "id": "concept_3124",
      "type": "concept",
      "name": "return {",
      "description": "Concept: return {",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.2166011,
      "updated_at": 1754957552.2166011
    },
    "concept_3125": {
      "id": "concept_3125",
      "type": "concept",
      "name": "\"cross_referencing_enabled\": True,",
      "description": "Concept: \"cross_referencing_enabled\": True,",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.2171679,
      "updated_at": 1754957552.2171679
    },
    "concept_3126": {
      "id": "concept_3126",
      "type": "concept",
      "name": "Shows all function calls with inputs, outputs, execution time, and context",
      "description": "Concept: Shows all function calls with inputs, outputs, execution time, and context",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.2176929,
      "updated_at": 1754957552.2176929
    },
    "concept_3127": {
      "id": "concept_3127",
      "type": "concept",
      "name": "async def get_comprehensive_system_status() -> dict:",
      "description": "Concept: async def get_comprehensive_system_status() -> dict:",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.2182,
      "updated_at": 1754957552.2182
    },
    "concept_3128": {
      "id": "concept_3128",
      "type": "concept",
      "name": "logger.info(\"\ud83c\udfaf Assessing context quality\")",
      "description": "Concept: logger.info(\"\ud83c\udfaf Assessing context quality\")",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.2190762,
      "updated_at": 1754957552.2190762
    },
    "concept_3129": {
      "id": "concept_3129",
      "type": "concept",
      "name": "if user_info.get(\"preferences\"):",
      "description": "Concept: if user_info.get(\"preferences\"):",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.219552,
      "updated_at": 1754957552.219552
    },
    "concept_3130": {
      "id": "concept_3130",
      "type": "concept",
      "name": "content: The text content to analyze",
      "description": "Concept: content: The text content to analyze",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.220036,
      "updated_at": 1754957552.220036
    },
    "concept_3131": {
      "id": "concept_3131",
      "type": "concept",
      "name": "\"available_functions\": brain_functions,",
      "description": "Concept: \"available_functions\": brain_functions,",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.220992,
      "updated_at": 1754957552.220992
    },
    "concept_3132": {
      "id": "concept_3132",
      "type": "concept",
      "name": "This is where your AI agent gets memory-enhanced responses!",
      "description": "Concept: This is where your AI agent gets memory-enhanced responses!",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.22148,
      "updated_at": 1754957552.22148
    },
    "concept_3133": {
      "id": "concept_3133",
      "type": "concept",
      "name": "\"conversation_tracking\": True,",
      "description": "Concept: \"conversation_tracking\": True,",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.221946,
      "updated_at": 1754957552.221946
    },
    "concept_3134": {
      "id": "concept_3134",
      "type": "concept",
      "name": "\"database_path\": db.db_path",
      "description": "Concept: \"database_path\": db.db_path",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.222396,
      "updated_at": 1754957552.222396
    },
    "concept_3135": {
      "id": "concept_3135",
      "type": "concept",
      "name": "test_messages = [",
      "description": "Concept: test_messages = [",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.22284,
      "updated_at": 1754957552.22284
    },
    "concept_3136": {
      "id": "concept_3136",
      "type": "concept",
      "name": "\"comprehensive_logging\": {",
      "description": "Concept: \"comprehensive_logging\": {",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.223695,
      "updated_at": 1754957552.223695
    },
    "concept_3137": {
      "id": "concept_3137",
      "type": "concept",
      "name": "workflow_mode: Workflow mode (standard, aggressive, conservative)",
      "description": "Concept: workflow_mode: Workflow mode (standard, aggressive, conservative)",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.224191,
      "updated_at": 1754957552.224191
    },
    "concept_3138": {
      "id": "concept_3138",
      "type": "concept",
      "name": "This would call the actual analyze_context_deeply function",
      "description": "Concept: This would call the actual analyze_context_deeply function",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.2246752,
      "updated_at": 1754957552.2246752
    },
    "concept_3139": {
      "id": "concept_3139",
      "type": "concept",
      "name": "\"author\": metadata.author,",
      "description": "Concept: \"author\": metadata.author,",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.2251232,
      "updated_at": 1754957552.2251232
    },
    "concept_3140": {
      "id": "concept_3140",
      "type": "concept",
      "name": "tool_count = len(plugin_manager.registry.tools)",
      "description": "Concept: tool_count = len(plugin_manager.registry.tools)",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.2255921,
      "updated_at": 1754957552.2255921
    },
    "concept_3141": {
      "id": "concept_3141",
      "type": "concept",
      "name": "context_parts.append(f\"Preferences: {', '.join(user_info['preferences'][:2])}\")",
      "description": "Concept: context_parts.append(f\"Preferences: {', '.join(user_info['preferences'][:2])}\")",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.226103,
      "updated_at": 1754957552.226103
    },
    "concept_3142": {
      "id": "concept_3142",
      "type": "concept",
      "name": "\"data_storage_comprehensive\": {",
      "description": "Concept: \"data_storage_comprehensive\": {",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.2266738,
      "updated_at": 1754957552.2266738
    },
    "concept_3143": {
      "id": "concept_3143",
      "type": "concept",
      "name": "\"platform\": \"cursor\",",
      "description": "Concept: \"platform\": \"cursor\",",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.227198,
      "updated_at": 1754957552.227198
    },
    "concept_3144": {
      "id": "concept_3144",
      "type": "concept",
      "name": "\"plugins_loaded\": plugin_count,",
      "description": "Concept: \"plugins_loaded\": plugin_count,",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.227693,
      "updated_at": 1754957552.227693
    },
    "concept_3145": {
      "id": "concept_3145",
      "type": "concept",
      "name": "\ud83e\udde0 Analyze content with enhanced contextual understanding",
      "description": "Concept: \ud83e\udde0 Analyze content with enhanced contextual understanding",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.2288792,
      "updated_at": 1754957552.2288792
    },
    "concept_3146": {
      "id": "concept_3146",
      "type": "concept",
      "name": "Test the memory system with sample conversations",
      "description": "Concept: Test the memory system with sample conversations",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.2294452,
      "updated_at": 1754957552.2294452
    },
    "concept_3147": {
      "id": "concept_3147",
      "type": "concept",
      "name": "# Execute tool performance analysis",
      "description": "Concept: # Execute tool performance analysis",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.229911,
      "updated_at": 1754957552.229911
    },
    "concept_3148": {
      "id": "concept_3148",
      "type": "concept",
      "name": "context_data: Context data to assess",
      "description": "Concept: context_data: Context data to assess",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.230387,
      "updated_at": 1754957552.230387
    },
    "concept_3149": {
      "id": "concept_3149",
      "type": "concept",
      "name": "\"memory_processing\": {",
      "description": "Concept: \"memory_processing\": {",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.2308521,
      "updated_at": 1754957552.2308521
    },
    "concept_3150": {
      "id": "concept_3150",
      "type": "concept",
      "name": "- Phase 3: Continuous Learning Preparation",
      "description": "Concept: - Phase 3: Continuous Learning Preparation",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.231329,
      "updated_at": 1754957552.231329
    },
    "concept_3151": {
      "id": "concept_3151",
      "type": "concept",
      "name": "call_history = function_logger.get_call_history(limit=limit, function_name=function_name)",
      "description": "Concept: call_history = function_logger.get_call_history(limit=limit, function_name=function_name)",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.2318661,
      "updated_at": 1754957552.2318661
    },
    "concept_3152": {
      "id": "concept_3152",
      "type": "concept",
      "name": "for plugin_name, plugin in plugin_manager.registry.plugins.items():",
      "description": "Concept: for plugin_name, plugin in plugin_manager.registry.plugins.items():",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.2327309,
      "updated_at": 1754957552.2327309
    },
    "concept_3153": {
      "id": "concept_3153",
      "type": "concept",
      "name": "bool(important_info)",
      "description": "Concept: bool(important_info)",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.233176,
      "updated_at": 1754957552.233176
    },
    "concept_3154": {
      "id": "concept_3154",
      "type": "concept",
      "name": "===== DOMAIN 5: OUTPUT & ACTION =====",
      "description": "Concept: ===== DOMAIN 5: OUTPUT & ACTION =====",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.233637,
      "updated_at": 1754957552.233637
    },
    "concept_3155": {
      "id": "concept_3155",
      "type": "concept",
      "name": "\"context_score\": 0.5,",
      "description": "Concept: \"context_score\": 0.5,",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.234092,
      "updated_at": 1754957552.234092
    },
    "concept_3156": {
      "id": "concept_3156",
      "type": "concept",
      "name": "result = await plugin._analyze_workflow_performance_handler(timeframe, include_recommendations)",
      "description": "Concept: result = await plugin._analyze_workflow_performance_handler(timeframe, include_recommendations)",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.234623,
      "updated_at": 1754957552.234624
    },
    "concept_3157": {
      "id": "concept_3157",
      "type": "concept",
      "name": "logger.error(f\"\u274c Continuous learning failed: {str(e)}\")",
      "description": "Concept: logger.error(f\"\u274c Continuous learning failed: {str(e)}\")",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.235622,
      "updated_at": 1754957552.235622
    },
    "concept_3158": {
      "id": "concept_3158",
      "type": "concept",
      "name": "function_logger = get_function_logger()",
      "description": "Concept: function_logger = get_function_logger()",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.236094,
      "updated_at": 1754957552.236094
    },
    "concept_3159": {
      "id": "concept_3159",
      "type": "concept",
      "name": "\"get_user_context\",",
      "description": "Concept: \"get_user_context\",",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.2366168,
      "updated_at": 1754957552.2366168
    },
    "concept_3160": {
      "id": "concept_3160",
      "type": "concept",
      "name": "table_counts = {}",
      "description": "Concept: table_counts = {}",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.2371972,
      "updated_at": 1754957552.2371972
    },
    "concept_3161": {
      "id": "concept_3161",
      "type": "concept",
      "name": "total_data_points += count",
      "description": "Concept: total_data_points += count",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.2376919,
      "updated_at": 1754957552.2376919
    },
    "concept_3162": {
      "id": "concept_3162",
      "type": "concept",
      "name": "context_results",
      "description": "Concept: context_results",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.2381618,
      "updated_at": 1754957552.2381618
    },
    "concept_3163": {
      "id": "concept_3163",
      "type": "concept",
      "name": "===== DOMAIN 4: LEARNING & ADAPTATION =====",
      "description": "Concept: ===== DOMAIN 4: LEARNING & ADAPTATION =====",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.238668,
      "updated_at": 1754957552.238668
    },
    "concept_3164": {
      "id": "concept_3164",
      "type": "concept",
      "name": "\"model\": test_result[\"model\"],",
      "description": "Concept: \"model\": test_result[\"model\"],",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.239151,
      "updated_at": 1754957552.239151
    },
    "concept_3165": {
      "id": "concept_3165",
      "type": "concept",
      "name": "context_results = {",
      "description": "Concept: context_results = {",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.239608,
      "updated_at": 1754957552.239608
    },
    "concept_3166": {
      "id": "concept_3166",
      "type": "concept",
      "name": "Initialize clean brain interface (replaces technical tools)",
      "description": "Concept: Initialize clean brain interface (replaces technical tools)",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.2402308,
      "updated_at": 1754957552.2402308
    },
    "concept_3167": {
      "id": "concept_3167",
      "type": "concept",
      "name": "async def cursor_auto_inject_context() -> dict:",
      "description": "Concept: async def cursor_auto_inject_context() -> dict:",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.240724,
      "updated_at": 1754957552.240724
    },
    "concept_3168": {
      "id": "concept_3168",
      "type": "concept",
      "name": "analysis_type: Type of analysis (comprehensive, subtlety, depth, goals, complexity)",
      "description": "Concept: analysis_type: Type of analysis (comprehensive, subtlety, depth, goals, complexity)",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.24124,
      "updated_at": 1754957552.24124
    },
    "concept_3169": {
      "id": "concept_3169",
      "type": "concept",
      "name": "\"assistant_response\": assistant_response,",
      "description": "Concept: \"assistant_response\": assistant_response,",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.2417128,
      "updated_at": 1754957552.2417128
    },
    "concept_3170": {
      "id": "concept_3170",
      "type": "concept",
      "name": "Initialize database system first",
      "description": "Concept: Initialize database system first",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.242176,
      "updated_at": 1754957552.242176
    },
    "concept_3171": {
      "id": "concept_3171",
      "type": "concept",
      "name": "consolidates memories for future context enhancement.",
      "description": "Concept: consolidates memories for future context enhancement.",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.24303,
      "updated_at": 1754957552.24303
    },
    "concept_3172": {
      "id": "concept_3172",
      "type": "concept",
      "name": "This would call the actual context_quality_assessment function",
      "description": "Concept: This would call the actual context_quality_assessment function",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.2435231,
      "updated_at": 1754957552.2435231
    },
    "concept_3173": {
      "id": "concept_3173",
      "type": "concept",
      "name": "context_parts",
      "description": "Concept: context_parts",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.2439628,
      "updated_at": 1754957552.2439628
    },
    "concept_3174": {
      "id": "concept_3174",
      "type": "concept",
      "name": "result = brain.process_input(input_data)",
      "description": "Concept: result = brain.process_input(input_data)",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.24443,
      "updated_at": 1754957552.24443
    },
    "concept_3175": {
      "id": "concept_3175",
      "type": "concept",
      "name": "\"logging_enabled\": function_logger._enabled,",
      "description": "Concept: \"logging_enabled\": function_logger._enabled,",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.2449028,
      "updated_at": 1754957552.2449028
    },
    "concept_3176": {
      "id": "concept_3176",
      "type": "concept",
      "name": "Always register resources and prompts",
      "description": "Concept: Always register resources and prompts",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.245373,
      "updated_at": 1754957552.245373
    },
    "concept_3177": {
      "id": "concept_3177",
      "type": "concept",
      "name": "This would call the actual think_deeply function",
      "description": "Concept: This would call the actual think_deeply function",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.2458491,
      "updated_at": 1754957552.2458491
    },
    "concept_3178": {
      "id": "concept_3178",
      "type": "concept",
      "name": "call_history",
      "description": "Concept: call_history",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.246287,
      "updated_at": 1754957552.246287
    },
    "concept_3179": {
      "id": "concept_3179",
      "type": "concept",
      "name": "ai_response = await generate_memory_enhanced_response(",
      "description": "Concept: ai_response = await generate_memory_enhanced_response(",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.2472918,
      "updated_at": 1754957552.2472918
    },
    "concept_3180": {
      "id": "concept_3180",
      "type": "concept",
      "name": "\ud83c\udfaf Get comprehensive system status including all logging and memory systems",
      "description": "Concept: \ud83c\udfaf Get comprehensive system status including all logging and memory systems",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.2486029,
      "updated_at": 1754957552.2486029
    },
    "concept_3181": {
      "id": "concept_3181",
      "type": "concept",
      "name": "logger.error(f\"Cursor context error: {str(e)}\")",
      "description": "Concept: logger.error(f\"Cursor context error: {str(e)}\")",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.249141,
      "updated_at": 1754957552.249141
    },
    "concept_3182": {
      "id": "concept_3182",
      "type": "concept",
      "name": "logger.info(f\"\ud83d\udcca Analyzing tool performance: {tool_name}\")",
      "description": "Concept: logger.info(f\"\ud83d\udcca Analyzing tool performance: {tool_name}\")",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.2501929,
      "updated_at": 1754957552.2501929
    },
    "concept_3183": {
      "id": "concept_3183",
      "type": "concept",
      "name": "Implements intelligent tool orchestration based on context analysis.",
      "description": "Concept: Implements intelligent tool orchestration based on context analysis.",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.25073,
      "updated_at": 1754957552.25073
    },
    "concept_3184": {
      "id": "concept_3184",
      "type": "concept",
      "name": "\ud83d\udd0d COMPREHENSIVE FUNCTION CALL LOGGING TOOLS",
      "description": "Concept: \ud83d\udd0d COMPREHENSIVE FUNCTION CALL LOGGING TOOLS",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.251677,
      "updated_at": 1754957552.251677
    },
    "concept_3185": {
      "id": "concept_3185",
      "type": "concept",
      "name": "AI Chat with Automatic Memory - OPTION A INTEGRATION",
      "description": "Concept: AI Chat with Automatic Memory - OPTION A INTEGRATION",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.2521641,
      "updated_at": 1754957552.2521641
    },
    "concept_3186": {
      "id": "concept_3186",
      "type": "concept",
      "name": "Assesses the quality and completeness of current context",
      "description": "Concept: Assesses the quality and completeness of current context",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.252651,
      "updated_at": 1754957552.252651
    },
    "concept_3187": {
      "id": "concept_3187",
      "type": "concept",
      "name": "# Memory system status",
      "description": "Concept: # Memory system status",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.253103,
      "updated_at": 1754957552.253103
    },
    "concept_3188": {
      "id": "concept_3188",
      "type": "concept",
      "name": "test_result = await llm.test_connection()",
      "description": "Concept: test_result = await llm.test_connection()",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.253574,
      "updated_at": 1754957552.253574
    },
    "concept_3189": {
      "id": "concept_3189",
      "type": "concept",
      "name": "include_recommendations: Include improvement recommendations",
      "description": "Concept: include_recommendations: Include improvement recommendations",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.2540731,
      "updated_at": 1754957552.2540731
    },
    "concept_3190": {
      "id": "concept_3190",
      "type": "concept",
      "name": "with sqlite3.connect(db.db_path) as conn:",
      "description": "Concept: with sqlite3.connect(db.db_path) as conn:",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.2545438,
      "updated_at": 1754957552.2545438
    },
    "concept_3191": {
      "id": "concept_3191",
      "type": "concept",
      "name": "\"system_status\": \"error\"",
      "description": "Concept: \"system_status\": \"error\"",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.255007,
      "updated_at": 1754957552.255007
    },
    "concept_3192": {
      "id": "concept_3192",
      "type": "concept",
      "name": "\"think\": \"\ud83d\udcad Think and respond with memory and context\",",
      "description": "Concept: \"think\": \"\ud83d\udcad Think and respond with memory and context\",",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.256045,
      "updated_at": 1754957552.256045
    },
    "concept_3193": {
      "id": "concept_3193",
      "type": "concept",
      "name": "\"important_info_stored\": [],",
      "description": "Concept: \"important_info_stored\": [],",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.256521,
      "updated_at": 1754957552.256521
    },
    "concept_3194": {
      "id": "concept_3194",
      "type": "concept",
      "name": "memory_instructions",
      "description": "Concept: memory_instructions",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.25707,
      "updated_at": 1754957552.25707
    },
    "concept_3195": {
      "id": "concept_3195",
      "type": "concept",
      "name": "global mcp_client",
      "description": "Concept: global mcp_client",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.257694,
      "updated_at": 1754957552.257694
    },
    "concept_3196": {
      "id": "concept_3196",
      "type": "concept",
      "name": "get_tool_registry",
      "description": "Concept: get_tool_registry",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.258158,
      "updated_at": 1754957552.258158
    },
    "concept_3197": {
      "id": "concept_3197",
      "type": "concept",
      "name": "return result",
      "description": "Concept: return result",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.258615,
      "updated_at": 1754957552.258615
    },
    "concept_3198": {
      "id": "concept_3198",
      "type": "concept",
      "name": "result = await ai_chat_with_memory(message)",
      "description": "Concept: result = await ai_chat_with_memory(message)",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.259094,
      "updated_at": 1754957552.259094
    },
    "concept_3199": {
      "id": "concept_3199",
      "type": "concept",
      "name": "result = await plugin._execute_enhanced_workflow_handler(",
      "description": "Concept: result = await plugin._execute_enhanced_workflow_handler(",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.259586,
      "updated_at": 1754957552.259586
    },
    "concept_3200": {
      "id": "concept_3200",
      "type": "concept",
      "name": "Brain status and info tools",
      "description": "Concept: Brain status and info tools",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.260085,
      "updated_at": 1754957552.260085
    },
    "concept_3201": {
      "id": "concept_3201",
      "type": "concept",
      "name": "Provides detailed metrics and actionable recommendations.",
      "description": "Concept: Provides detailed metrics and actionable recommendations.",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.260603,
      "updated_at": 1754957552.260603
    },
    "concept_3202": {
      "id": "concept_3202",
      "type": "concept",
      "name": "if cursor_context.get(\"ready_for_conversation\"):",
      "description": "Concept: if cursor_context.get(\"ready_for_conversation\"):",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.261108,
      "updated_at": 1754957552.261108
    },
    "concept_3203": {
      "id": "concept_3203",
      "type": "concept",
      "name": "context_results = result[\"context_analyzer\"]",
      "description": "Concept: context_results = result[\"context_analyzer\"]",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.261593,
      "updated_at": 1754957552.261593
    },
    "concept_3204": {
      "id": "concept_3204",
      "type": "concept",
      "name": "# Get recent conversation history",
      "description": "Concept: # Get recent conversation history",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.2621639,
      "updated_at": 1754957552.2621639
    },
    "concept_3205": {
      "id": "concept_3205",
      "type": "concept",
      "name": "\"input\": message,",
      "description": "Concept: \"input\": message,",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.262666,
      "updated_at": 1754957552.262666
    },
    "concept_3206": {
      "id": "concept_3206",
      "type": "concept",
      "name": "logger.error(f\"\u274c Batch workflow processing failed: {str(e)}\")",
      "description": "Concept: logger.error(f\"\u274c Batch workflow processing failed: {str(e)}\")",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.2637131,
      "updated_at": 1754957552.2637131
    },
    "concept_3207": {
      "id": "concept_3207",
      "type": "concept",
      "name": "function_call_logger",
      "description": "Concept: function_call_logger",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.264197,
      "updated_at": 1754957552.264197
    },
    "concept_3208": {
      "id": "concept_3208",
      "type": "concept",
      "name": "- Phase 3: Continuous Learning",
      "description": "Concept: - Phase 3: Continuous Learning",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.2651892,
      "updated_at": 1754957552.2651892
    },
    "concept_3209": {
      "id": "concept_3209",
      "type": "concept",
      "name": "This would call the actual continuous_learning_cycle function",
      "description": "Concept: This would call the actual continuous_learning_cycle function",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.265787,
      "updated_at": 1754957552.265787
    },
    "concept_3210": {
      "id": "concept_3210",
      "type": "concept",
      "name": "\"success\": True,",
      "description": "Concept: \"success\": True,",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.266708,
      "updated_at": 1754957552.266708
    },
    "concept_3211": {
      "id": "concept_3211",
      "type": "concept",
      "name": "Start MCP server with stdio (works for both Docker and CLI)",
      "description": "Concept: Start MCP server with stdio (works for both Docker and CLI)",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.267227,
      "updated_at": 1754957552.267227
    },
    "concept_3212": {
      "id": "concept_3212",
      "type": "concept",
      "name": "\ud83e\udde0 Show available brain functions and cognitive capabilities",
      "description": "Concept: \ud83e\udde0 Show available brain functions and cognitive capabilities",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.268342,
      "updated_at": 1754957552.268342
    },
    "concept_3213": {
      "id": "concept_3213",
      "type": "concept",
      "name": "\"learned\": result.get(\"important_info_stored\", [])",
      "description": "Concept: \"learned\": result.get(\"important_info_stored\", [])",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.268847,
      "updated_at": 1754957552.268847
    },
    "concept_3214": {
      "id": "concept_3214",
      "type": "concept",
      "name": "\"memory_stats\": \"\ud83d\udcca Check memory database statistics and health\"",
      "description": "Concept: \"memory_stats\": \"\ud83d\udcca Check memory database statistics and health\"",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.2700028,
      "updated_at": 1754957552.2700028
    },
    "concept_3215": {
      "id": "concept_3215",
      "type": "concept",
      "name": "Fallback to simple response if LLM fails",
      "description": "Concept: Fallback to simple response if LLM fails",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.270527,
      "updated_at": 1754957552.270527
    },
    "concept_3216": {
      "id": "concept_3216",
      "type": "concept",
      "name": "from llm_client import OllamaClient",
      "description": "Concept: from llm_client import OllamaClient",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.271137,
      "updated_at": 1754957552.271137
    },
    "concept_3217": {
      "id": "concept_3217",
      "type": "concept",
      "name": "\"test_completed\": True,",
      "description": "Concept: \"test_completed\": True,",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.271608,
      "updated_at": 1754957552.271608
    },
    "concept_3218": {
      "id": "concept_3218",
      "type": "concept",
      "name": "# Calculate total data points",
      "description": "Concept: # Calculate total data points",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.272079,
      "updated_at": 1754957552.272079
    },
    "concept_3219": {
      "id": "concept_3219",
      "type": "concept",
      "name": "\"function_calls_logged\": session_stats.get(\"total_calls\", 0),",
      "description": "Concept: \"function_calls_logged\": session_stats.get(\"total_calls\", 0),",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.272631,
      "updated_at": 1754957552.2726321
    },
    "concept_3220": {
      "id": "concept_3220",
      "type": "concept",
      "name": "\"error\": f\"Memory processing failed: {str(e)}\"",
      "description": "Concept: \"error\": f\"Memory processing failed: {str(e)}\"",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.273225,
      "updated_at": 1754957552.273225
    },
    "concept_3221": {
      "id": "concept_3221",
      "type": "concept",
      "name": "import sqlite3",
      "description": "Concept: import sqlite3",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.273987,
      "updated_at": 1754957552.273987
    },
    "concept_3222": {
      "id": "concept_3222",
      "type": "concept",
      "name": "new",
      "description": "Concept: new",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.274556,
      "updated_at": 1754957552.274556
    },
    "concept_3223": {
      "id": "concept_3223",
      "type": "concept",
      "name": "interactions",
      "description": "Concept: interactions",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.275444,
      "updated_at": 1754957552.275444
    },
    "concept_3224": {
      "id": "concept_3224",
      "type": "concept",
      "name": "context_data: Context data from Phase 1",
      "description": "Concept: context_data: Context data from Phase 1",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.275931,
      "updated_at": 1754957552.275931
    },
    "concept_3225": {
      "id": "concept_3225",
      "type": "concept",
      "name": "# Execute Phase 1",
      "description": "Concept: # Execute Phase 1",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.276386,
      "updated_at": 1754957552.276386
    },
    "concept_3226": {
      "id": "concept_3226",
      "type": "concept",
      "name": "return {\"success\": False, \"error\": str(e)}",
      "description": "Concept: return {\"success\": False, \"error\": str(e)}",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.276886,
      "updated_at": 1754957552.276886
    },
    "concept_3227": {
      "id": "concept_3227",
      "type": "concept",
      "name": "plugin = EnhancedWorkflowOrchestratorPlugin()",
      "description": "Concept: plugin = EnhancedWorkflowOrchestratorPlugin()",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.277744,
      "updated_at": 1754957552.277744
    },
    "concept_3228": {
      "id": "concept_3228",
      "type": "concept",
      "name": "This reduces tool count from 48 to 12 while preserving 100% functionality",
      "description": "Concept: This reduces tool count from 48 to 12 while preserving 100% functionality",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.278271,
      "updated_at": 1754957552.278271
    },
    "concept_3229": {
      "id": "concept_3229",
      "type": "concept",
      "name": "plugin_info",
      "description": "Concept: plugin_info",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.278768,
      "updated_at": 1754957552.278768
    },
    "concept_3230": {
      "id": "concept_3230",
      "type": "concept",
      "name": "async def build_comprehensive_context(user_message: str, context_depth: str = \"comprehensive\") -> dict:",
      "description": "Concept: async def build_comprehensive_context(user_message: str, context_depth: str = \"comprehensive\") -> dict:",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.279466,
      "updated_at": 1754957552.279467
    },
    "concept_3231": {
      "id": "concept_3231",
      "type": "concept",
      "name": "# Import and initialize enhanced context integration",
      "description": "Concept: # Import and initialize enhanced context integration",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.279978,
      "updated_at": 1754957552.279979
    },
    "concept_3232": {
      "id": "concept_3232",
      "type": "concept",
      "name": "\"conversation_stored\": True,",
      "description": "Concept: \"conversation_stored\": True,",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.280498,
      "updated_at": 1754957552.280498
    },
    "concept_3233": {
      "id": "concept_3233",
      "type": "concept",
      "name": "Register plugin tools for debugging",
      "description": "Concept: Register plugin tools for debugging",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.280998,
      "updated_at": 1754957552.280998
    },
    "concept_3234": {
      "id": "concept_3234",
      "type": "concept",
      "name": "memory_result = await mcp_client.call_tool(",
      "description": "Concept: memory_result = await mcp_client.call_tool(",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.281703,
      "updated_at": 1754957552.281703
    },
    "concept_3235": {
      "id": "concept_3235",
      "type": "concept",
      "name": "if user_info.get(\"name\"):",
      "description": "Concept: if user_info.get(\"name\"):",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.2823832,
      "updated_at": 1754957552.2823832
    },
    "concept_3236": {
      "id": "concept_3236",
      "type": "concept",
      "name": "\"error\": test_result.get(\"error\")",
      "description": "Concept: \"error\": test_result.get(\"error\")",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.28293,
      "updated_at": 1754957552.28293
    },
    "concept_3237": {
      "id": "concept_3237",
      "type": "concept",
      "name": "\"conversation_count\": len(recent_conversations),",
      "description": "Concept: \"conversation_count\": len(recent_conversations),",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.2834408,
      "updated_at": 1754957552.2834408
    },
    "concept_3238": {
      "id": "concept_3238",
      "type": "concept",
      "name": "\"should_inject\": True",
      "description": "Concept: \"should_inject\": True",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.2839098,
      "updated_at": 1754957552.2839098
    },
    "concept_3239": {
      "id": "concept_3239",
      "type": "concept",
      "name": "\"description\": metadata.description,",
      "description": "Concept: \"description\": metadata.description,",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.284415,
      "updated_at": 1754957552.284415
    },
    "concept_3240": {
      "id": "concept_3240",
      "type": "concept",
      "name": "This would call the actual generate_memory_enhanced_response function",
      "description": "Concept: This would call the actual generate_memory_enhanced_response function",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.284966,
      "updated_at": 1754957552.284966
    },
    "concept_3241": {
      "id": "concept_3241",
      "type": "concept",
      "name": "\"cross_references_available\": True",
      "description": "Concept: \"cross_references_available\": True",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.285456,
      "updated_at": 1754957552.285456
    },
    "concept_3242": {
      "id": "concept_3242",
      "type": "concept",
      "name": "if \"context_analyzer\" in result:",
      "description": "Concept: if \"context_analyzer\" in result:",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.2859788,
      "updated_at": 1754957552.2859788
    },
    "concept_3243": {
      "id": "concept_3243",
      "type": "concept",
      "name": "context_summary",
      "description": "Concept: context_summary",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.28646,
      "updated_at": 1754957552.28646
    },
    "concept_3244": {
      "id": "concept_3244",
      "type": "concept",
      "name": "plugin_manager",
      "description": "Concept: plugin_manager",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.287372,
      "updated_at": 1754957552.287373
    },
    "concept_3245": {
      "id": "concept_3245",
      "type": "concept",
      "name": "conversations",
      "description": "Concept: conversations",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.287921,
      "updated_at": 1754957552.287921
    },
    "concept_3246": {
      "id": "concept_3246",
      "type": "concept",
      "name": "\"memory_used\": result.get(\"memory_context_used\", \"\"),",
      "description": "Concept: \"memory_used\": result.get(\"memory_context_used\", \"\"),",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.2884579,
      "updated_at": 1754957552.2884579
    },
    "concept_3247": {
      "id": "concept_3247",
      "type": "concept",
      "name": "include_history: Include conversation history",
      "description": "Concept: include_history: Include conversation history",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.289014,
      "updated_at": 1754957552.289014
    },
    "concept_3248": {
      "id": "concept_3248",
      "type": "concept",
      "name": "table_counts[table] = count",
      "description": "Concept: table_counts[table] = count",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.2894988,
      "updated_at": 1754957552.2894988
    },
    "concept_3249": {
      "id": "concept_3249",
      "type": "concept",
      "name": "memory_instructions.append(f\"Just learned: {', '.join(important_info)}\")",
      "description": "Concept: memory_instructions.append(f\"Just learned: {', '.join(important_info)}\")",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.290312,
      "updated_at": 1754957552.290312
    },
    "concept_3250": {
      "id": "concept_3250",
      "type": "concept",
      "name": "Provides relevant context automatically when Cursor starts new conversations",
      "description": "Concept: Provides relevant context automatically when Cursor starts new conversations",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.2909172,
      "updated_at": 1754957552.2909179
    },
    "concept_3251": {
      "id": "concept_3251",
      "type": "concept",
      "name": "tool_def",
      "description": "Concept: tool_def",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.291439,
      "updated_at": 1754957552.291439
    },
    "concept_3252": {
      "id": "concept_3252",
      "type": "concept",
      "name": "Get server status and statistics",
      "description": "Concept: Get server status and statistics",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.291946,
      "updated_at": 1754957552.291946
    },
    "concept_3253": {
      "id": "concept_3253",
      "type": "concept",
      "name": "\ud83e\udde0 OPTION A INTEGRATION - ADD THESE NEW MEMORY-ENHANCED TOOLS:",
      "description": "Concept: \ud83e\udde0 OPTION A INTEGRATION - ADD THESE NEW MEMORY-ENHANCED TOOLS:",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.29307,
      "updated_at": 1754957552.293071
    },
    "concept_3254": {
      "id": "concept_3254",
      "type": "concept",
      "name": "\"total_functions\": len(brain_functions),",
      "description": "Concept: \"total_functions\": len(brain_functions),",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.2935748,
      "updated_at": 1754957552.2935748
    },
    "concept_3255": {
      "id": "concept_3255",
      "type": "concept",
      "name": "\"\"\"Get server status and statistics\"\"\"",
      "description": "Concept: \"\"\"Get server status and statistics\"\"\"",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.2940989,
      "updated_at": 1754957552.2940989
    },
    "concept_3256": {
      "id": "concept_3256",
      "type": "concept",
      "name": "Learning results with patterns and improvements",
      "description": "Concept: Learning results with patterns and improvements",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.294602,
      "updated_at": 1754957552.294602
    },
    "concept_3257": {
      "id": "concept_3257",
      "type": "concept",
      "name": "\"inject_message\": \"Starting fresh conversation\",",
      "description": "Concept: \"inject_message\": \"Starting fresh conversation\",",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.295111,
      "updated_at": 1754957552.295111
    },
    "concept_3258": {
      "id": "concept_3258",
      "type": "concept",
      "name": "\"table_breakdown\": table_counts,",
      "description": "Concept: \"table_breakdown\": table_counts,",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.295638,
      "updated_at": 1754957552.295638
    },
    "concept_3259": {
      "id": "concept_3259",
      "type": "concept",
      "name": "include_history,",
      "description": "Concept: include_history,",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.296096,
      "updated_at": 1754957552.296096
    },
    "concept_3260": {
      "id": "concept_3260",
      "type": "concept",
      "name": "This would call the actual understand_deeply function",
      "description": "Concept: This would call the actual understand_deeply function",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.29659,
      "updated_at": 1754957552.29659
    },
    "concept_3261": {
      "id": "concept_3261",
      "type": "concept",
      "name": "\"tools_available\": len(plugin_manager.registry.tools) + 4,  # +4 for core + memory tools",
      "description": "Concept: \"tools_available\": len(plugin_manager.registry.tools) + 4,  # +4 for core + memory tools",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.297136,
      "updated_at": 1754957552.297136
    },
    "concept_3262": {
      "id": "concept_3262",
      "type": "concept",
      "name": "include_learning: Include learning phase",
      "description": "Concept: include_learning: Include learning phase",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.297884,
      "updated_at": 1754957552.297884
    },
    "concept_3263": {
      "id": "concept_3263",
      "type": "concept",
      "name": "include_preferences: Include user preferences",
      "description": "Concept: include_preferences: Include user preferences",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.2984588,
      "updated_at": 1754957552.2984588
    },
    "concept_3264": {
      "id": "concept_3264",
      "type": "concept",
      "name": "Store not found error",
      "description": "Concept: Store not found error",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.2989252,
      "updated_at": 1754957552.2989252
    },
    "concept_3265": {
      "id": "concept_3265",
      "type": "concept",
      "name": "\"llm_connection\": False,",
      "description": "Concept: \"llm_connection\": False,",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.299408,
      "updated_at": 1754957552.299409
    },
    "concept_3266": {
      "id": "concept_3266",
      "type": "concept",
      "name": "\"type\": f\"context_{analysis_type}_analysis\" if analysis_type != \"comprehensive\" else \"context_analysis\",",
      "description": "Concept: \"type\": f\"context_{analysis_type}_analysis\" if analysis_type != \"comprehensive\" else \"context_analysis\",",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.299993,
      "updated_at": 1754957552.299993
    },
    "concept_3267": {
      "id": "concept_3267",
      "type": "concept",
      "name": "\"\"\"\ud83e\udde0 Show available brain functions and cognitive capabilities\"\"\"",
      "description": "Concept: \"\"\"\ud83e\udde0 Show available brain functions and cognitive capabilities\"\"\"",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.301165,
      "updated_at": 1754957552.301165
    },
    "concept_3268": {
      "id": "concept_3268",
      "type": "concept",
      "name": "- Phase 1: Enhanced Context Retrieval",
      "description": "Concept: - Phase 1: Enhanced Context Retrieval",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.3016472,
      "updated_at": 1754957552.3016472
    },
    "concept_3269": {
      "id": "concept_3269",
      "type": "concept",
      "name": "async def workflow_health_check(check_level: str = \"comprehensive\") -> dict:",
      "description": "Concept: async def workflow_health_check(check_level: str = \"comprehensive\") -> dict:",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.302575,
      "updated_at": 1754957552.302575
    },
    "concept_3270": {
      "id": "concept_3270",
      "type": "concept",
      "name": "Uses the new ContextAnalyzer module to detect subtle patterns,",
      "description": "Concept: Uses the new ContextAnalyzer module to detect subtle patterns,",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.303093,
      "updated_at": 1754957552.303093
    },
    "concept_3271": {
      "id": "concept_3271",
      "type": "concept",
      "name": "\ud83d\udd27 Optimize Workflow",
      "description": "Concept: \ud83d\udd27 Optimize Workflow",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.304123,
      "updated_at": 1754957552.304123
    },
    "concept_3272": {
      "id": "concept_3272",
      "type": "concept",
      "name": "\"total_calls\": len(call_history),",
      "description": "Concept: \"total_calls\": len(call_history),",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.304617,
      "updated_at": 1754957552.304617
    },
    "concept_3273": {
      "id": "concept_3273",
      "type": "concept",
      "name": "\"assistant_identity\": cursor_context.get(\"assistant_name\", \"Johny\"),",
      "description": "Concept: \"assistant_identity\": cursor_context.get(\"assistant_name\", \"Johny\"),",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.305152,
      "updated_at": 1754957552.305152
    },
    "concept_3274": {
      "id": "concept_3274",
      "type": "concept",
      "name": "Optimizes workflow based on performance metrics and usage patterns.",
      "description": "Concept: Optimizes workflow based on performance metrics and usage patterns.",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.305734,
      "updated_at": 1754957552.305734
    },
    "concept_3275": {
      "id": "concept_3275",
      "type": "concept",
      "name": "learning_result = await mcp_client.call_tool(\"auto_process_message\", user_message=user_message)",
      "description": "Concept: learning_result = await mcp_client.call_tool(\"auto_process_message\", user_message=user_message)",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.3062751,
      "updated_at": 1754957552.3062751
    },
    "concept_3276": {
      "id": "concept_3276",
      "type": "concept",
      "name": "\"tools\": [tool.name for tool in plugin.get_tools()],",
      "description": "Concept: \"tools\": [tool.name for tool in plugin.get_tools()],",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.307436,
      "updated_at": 1754957552.307436
    },
    "concept_3277": {
      "id": "concept_3277",
      "type": "concept",
      "name": "result = await plugin._build_comprehensive_context_handler(user_message, context_depth)",
      "description": "Concept: result = await plugin._build_comprehensive_context_handler(user_message, context_depth)",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.307976,
      "updated_at": 1754957552.307976
    },
    "concept_3278": {
      "id": "concept_3278",
      "type": "concept",
      "name": "logger.error(f\"\u274c Context quality assessment failed: {str(e)}\")",
      "description": "Concept: logger.error(f\"\u274c Context quality assessment failed: {str(e)}\")",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.309036,
      "updated_at": 1754957552.309036
    },
    "concept_3279": {
      "id": "concept_3279",
      "type": "concept",
      "name": "This would call the actual code_analyze function",
      "description": "Concept: This would call the actual code_analyze function",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.309531,
      "updated_at": 1754957552.309531
    },
    "concept_3280": {
      "id": "concept_3280",
      "type": "concept",
      "name": "input_data = {",
      "description": "Concept: input_data = {",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.310029,
      "updated_at": 1754957552.310029
    },
    "concept_3281": {
      "id": "concept_3281",
      "type": "concept",
      "name": "def list_plugins() -> dict:",
      "description": "Concept: def list_plugins() -> dict:",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.3105202,
      "updated_at": 1754957552.3105202
    },
    "concept_3282": {
      "id": "concept_3282",
      "type": "concept",
      "name": "db = get_brain_db()",
      "description": "Concept: db = get_brain_db()",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.310981,
      "updated_at": 1754957552.310981
    },
    "concept_3283": {
      "id": "concept_3283",
      "type": "concept",
      "name": "result = await plugin._analyze_tool_performance_handler(tool_name, timeframe)",
      "description": "Concept: result = await plugin._analyze_tool_performance_handler(tool_name, timeframe)",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.311504,
      "updated_at": 1754957552.311504
    },
    "concept_3284": {
      "id": "concept_3284",
      "type": "concept",
      "name": "assessment_criteria = [\"completeness\", \"relevance\", \"freshness\"]",
      "description": "Concept: assessment_criteria = [\"completeness\", \"relevance\", \"freshness\"]",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.312077,
      "updated_at": 1754957552.312077
    },
    "concept_3285": {
      "id": "concept_3285",
      "type": "concept",
      "name": "\"\"\"",
      "description": "Concept: \"\"\"",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.312552,
      "updated_at": 1754957552.312552
    },
    "concept_3286": {
      "id": "concept_3286",
      "type": "concept",
      "name": "plugin_count = len(plugin_manager.registry.plugins)",
      "description": "Concept: plugin_count = len(plugin_manager.registry.plugins)",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.313066,
      "updated_at": 1754957552.313066
    },
    "concept_3287": {
      "id": "concept_3287",
      "type": "concept",
      "name": "This would call the actual track_cursor_conversation function",
      "description": "Concept: This would call the actual track_cursor_conversation function",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.313633,
      "updated_at": 1754957552.313633
    },
    "concept_3288": {
      "id": "concept_3288",
      "type": "concept",
      "name": "results.append({",
      "description": "Concept: results.append({",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.31411,
      "updated_at": 1754957552.31411
    },
    "concept_3289": {
      "id": "concept_3289",
      "type": "concept",
      "name": "context_results = module_result",
      "description": "Concept: context_results = module_result",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.314785,
      "updated_at": 1754957552.314785
    },
    "concept_3290": {
      "id": "concept_3290",
      "type": "concept",
      "name": "async def list_available_models() -> dict:",
      "description": "Concept: async def list_available_models() -> dict:",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.3154109,
      "updated_at": 1754957552.3154109
    },
    "concept_3291": {
      "id": "concept_3291",
      "type": "concept",
      "name": "function",
      "description": "Concept: function",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.3159869,
      "updated_at": 1754957552.3159869
    },
    "concept_3292": {
      "id": "concept_3292",
      "type": "concept",
      "name": "===== DOMAIN 1: PERCEPTION & INPUT =====",
      "description": "Concept: ===== DOMAIN 1: PERCEPTION & INPUT =====",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.3165598,
      "updated_at": 1754957552.3165598
    },
    "concept_3293": {
      "id": "concept_3293",
      "type": "concept",
      "name": "\"memory_updated\": learning_result.get(\"success\", False)",
      "description": "Concept: \"memory_updated\": learning_result.get(\"success\", False)",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.317055,
      "updated_at": 1754957552.317055
    },
    "concept_3294": {
      "id": "concept_3294",
      "type": "concept",
      "name": "# Extract context analysis results",
      "description": "Concept: # Extract context analysis results",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.317539,
      "updated_at": 1754957552.317539
    },
    "concept_3295": {
      "id": "concept_3295",
      "type": "concept",
      "name": "\"test_response\": \"\",",
      "description": "Concept: \"test_response\": \"\",",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.3180008,
      "updated_at": 1754957552.3180008
    },
    "concept_3296": {
      "id": "concept_3296",
      "type": "concept",
      "name": "log_mcp_tool",
      "description": "Concept: log_mcp_tool",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.3184588,
      "updated_at": 1754957552.3184588
    },
    "concept_3297": {
      "id": "concept_3297",
      "type": "concept",
      "name": "\"error\": \"MCP client not initialized\",",
      "description": "Concept: \"error\": \"MCP client not initialized\",",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.3189461,
      "updated_at": 1754957552.3189461
    },
    "concept_3298": {
      "id": "concept_3298",
      "type": "concept",
      "name": "\ud83d\udeab DISABLED: Enhanced brain tools to prevent tool duplication",
      "description": "Concept: \ud83d\udeab DISABLED: Enhanced brain tools to prevent tool duplication",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.3201149,
      "updated_at": 1754957552.3201149
    },
    "concept_3299": {
      "id": "concept_3299",
      "type": "concept",
      "name": "return plugin_info",
      "description": "Concept: return plugin_info",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.32065,
      "updated_at": 1754957552.320651
    },
    "concept_3300": {
      "id": "concept_3300",
      "type": "concept",
      "name": "context_result = await mcp_client.call_tool(\"get_user_context\", query=\"assistant identity user preferences conversation\")",
      "description": "Concept: context_result = await mcp_client.call_tool(\"get_user_context\", query=\"assistant identity user preferences conversation\")",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.3213189,
      "updated_at": 1754957552.3213189
    },
    "concept_3301": {
      "id": "concept_3301",
      "type": "concept",
      "name": "Analyzes tool performance and usage patterns to identify",
      "description": "Concept: Analyzes tool performance and usage patterns to identify",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.321837,
      "updated_at": 1754957552.321837
    },
    "concept_3302": {
      "id": "concept_3302",
      "type": "concept",
      "name": "memory",
      "description": "Concept: memory",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.322311,
      "updated_at": 1754957552.322311
    },
    "concept_3303": {
      "id": "concept_3303",
      "type": "concept",
      "name": "db.add_context_history(conversation_data)",
      "description": "Concept: db.add_context_history(conversation_data)",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.3227992,
      "updated_at": 1754957552.3227992
    },
    "concept_3304": {
      "id": "concept_3304",
      "type": "concept",
      "name": "important_info = memory_result.get(\"important_info_found\", [])",
      "description": "Concept: important_info = memory_result.get(\"important_info_found\", [])",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.3234408,
      "updated_at": 1754957552.3234408
    },
    "concept_3305": {
      "id": "concept_3305",
      "type": "concept",
      "name": "\"learning_capability\": \"Continuous from interactions\",",
      "description": "Concept: \"learning_capability\": \"Continuous from interactions\",",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.323971,
      "updated_at": 1754957552.323972
    },
    "concept_3306": {
      "id": "concept_3306",
      "type": "concept",
      "name": "\"usage_example\": \"Use 'think' for conversations, 'remember' to store info, 'recall' to search memories\"",
      "description": "Concept: \"usage_example\": \"Use 'think' for conversations, 'remember' to store info, 'recall' to search memories\"",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.324529,
      "updated_at": 1754957552.324529
    },
    "concept_3307": {
      "id": "concept_3307",
      "type": "concept",
      "name": "from enhanced_brain_tools_simple import EnhancedBrainTools",
      "description": "Concept: from enhanced_brain_tools_simple import EnhancedBrainTools",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.325035,
      "updated_at": 1754957552.325035
    },
    "concept_3308": {
      "id": "concept_3308",
      "type": "concept",
      "name": "for module_name, module_result in result[\"modules\"].items():",
      "description": "Concept: for module_name, module_result in result[\"modules\"].items():",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.3260648,
      "updated_at": 1754957552.3260648
    },
    "concept_3309": {
      "id": "concept_3309",
      "type": "concept",
      "name": "This would call the actual get_cursor_context function",
      "description": "Concept: This would call the actual get_cursor_context function",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.326609,
      "updated_at": 1754957552.326609
    },
    "concept_3310": {
      "id": "concept_3310",
      "type": "concept",
      "name": "models_result = await ollama.list_models()",
      "description": "Concept: models_result = await ollama.list_models()",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.3271098,
      "updated_at": 1754957552.3271098
    },
    "concept_3311": {
      "id": "concept_3311",
      "type": "concept",
      "name": "# Process the user message for learning",
      "description": "Concept: # Process the user message for learning",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.327649,
      "updated_at": 1754957552.327649
    },
    "concept_3312": {
      "id": "concept_3312",
      "type": "concept",
      "name": "\"analysis_type\": analysis_type,",
      "description": "Concept: \"analysis_type\": analysis_type,",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.3281438,
      "updated_at": 1754957552.3281438
    },
    "concept_3313": {
      "id": "concept_3313",
      "type": "concept",
      "name": "We'll manually register only the tools we need",
      "description": "Concept: We'll manually register only the tools we need",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.328701,
      "updated_at": 1754957552.328701
    },
    "concept_3314": {
      "id": "concept_3314",
      "type": "concept",
      "name": "cursor_context = await get_cursor_context()",
      "description": "Concept: cursor_context = await get_cursor_context()",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.329204,
      "updated_at": 1754957552.329204
    },
    "concept_3315": {
      "id": "concept_3315",
      "type": "concept",
      "name": "user_message: User's message for context enhancement",
      "description": "Concept: user_message: User's message for context enhancement",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.329706,
      "updated_at": 1754957552.329706
    },
    "concept_3316": {
      "id": "concept_3316",
      "type": "concept",
      "name": "\ud83d\udd0d Search function calls by content, context, or parameters",
      "description": "Concept: \ud83d\udd0d Search function calls by content, context, or parameters",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.330838,
      "updated_at": 1754957552.330838
    },
    "concept_3317": {
      "id": "concept_3317",
      "type": "concept",
      "name": "This would call the actual consciousness_check function",
      "description": "Concept: This would call the actual consciousness_check function",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.331348,
      "updated_at": 1754957552.331348
    },
    "concept_3318": {
      "id": "concept_3318",
      "type": "concept",
      "name": "tool_info",
      "description": "Concept: tool_info",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py",
          "test_tool_registry.py",
          "tool_registry.py"
        ]
      },
      "created_at": 1754957552.331936,
      "updated_at": 1754957552.8273559
    },
    "concept_3319": {
      "id": "concept_3319",
      "type": "concept",
      "name": "context_depth: Context depth (basic, enhanced, comprehensive)",
      "description": "Concept: context_depth: Context depth (basic, enhanced, comprehensive)",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.332455,
      "updated_at": 1754957552.332455
    },
    "concept_3320": {
      "id": "concept_3320",
      "type": "concept",
      "name": "# Count all tables",
      "description": "Concept: # Count all tables",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.332918,
      "updated_at": 1754957552.332918
    },
    "concept_3321": {
      "id": "concept_3321",
      "type": "concept",
      "name": "plugin_count",
      "description": "Concept: plugin_count",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.333392,
      "updated_at": 1754957552.333392
    },
    "concept_3322": {
      "id": "concept_3322",
      "type": "concept",
      "name": "Args:",
      "description": "Concept: Args:",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.333844,
      "updated_at": 1754957552.333844
    },
    "concept_3323": {
      "id": "concept_3323",
      "type": "concept",
      "name": "List all loaded plugins and their information",
      "description": "Concept: List all loaded plugins and their information",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.334688,
      "updated_at": 1754957552.334688
    },
    "concept_3324": {
      "id": "concept_3324",
      "type": "concept",
      "name": "Get tool information from new registry",
      "description": "Concept: Get tool information from new registry",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.335176,
      "updated_at": 1754957552.335176
    },
    "concept_3325": {
      "id": "concept_3325",
      "type": "concept",
      "name": "workflow_mode: Workflow mode for batch processing",
      "description": "Concept: workflow_mode: Workflow mode for batch processing",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.336159,
      "updated_at": 1754957552.336159
    },
    "concept_3326": {
      "id": "concept_3326",
      "type": "concept",
      "name": "@log_mcp_tool",
      "description": "Concept: @log_mcp_tool",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.33662,
      "updated_at": 1754957552.33662
    },
    "concept_3327": {
      "id": "concept_3327",
      "type": "concept",
      "name": "\"test_results\": results,",
      "description": "Concept: \"test_results\": results,",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.337111,
      "updated_at": 1754957552.337111
    },
    "concept_3328": {
      "id": "concept_3328",
      "type": "concept",
      "name": "\ud83d\udcca Analyze Workflow Performance",
      "description": "Concept: \ud83d\udcca Analyze Workflow Performance",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.3378801,
      "updated_at": 1754957552.3378801
    },
    "concept_3329": {
      "id": "concept_3329",
      "type": "concept",
      "name": "\"should_inject\": False",
      "description": "Concept: \"should_inject\": False",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.338353,
      "updated_at": 1754957552.338353
    },
    "concept_3330": {
      "id": "concept_3330",
      "type": "concept",
      "name": "# Execute complete workflow",
      "description": "Concept: # Execute complete workflow",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.338836,
      "updated_at": 1754957552.338836
    },
    "concept_3331": {
      "id": "concept_3331",
      "type": "concept",
      "name": "async def batch_workflow_processing(user_messages: list, workflow_mode: str = \"standard\") -> dict:",
      "description": "Concept: async def batch_workflow_processing(user_messages: list, workflow_mode: str = \"standard\") -> dict:",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.339388,
      "updated_at": 1754957552.339388
    },
    "concept_3332": {
      "id": "concept_3332",
      "type": "concept",
      "name": "\"conversations_stored\": len(conversations),",
      "description": "Concept: \"conversations_stored\": len(conversations),",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.340724,
      "updated_at": 1754957552.340724
    },
    "concept_3333": {
      "id": "concept_3333",
      "type": "concept",
      "name": "assessment_criteria: Criteria for assessment",
      "description": "Concept: assessment_criteria: Criteria for assessment",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.341254,
      "updated_at": 1754957552.341254
    },
    "concept_3334": {
      "id": "concept_3334",
      "type": "concept",
      "name": "table_counts",
      "description": "Concept: table_counts",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.342138,
      "updated_at": 1754957552.342138
    },
    "concept_3335": {
      "id": "concept_3335",
      "type": "concept",
      "name": "This would call the actual tool_performance_analysis function",
      "description": "Concept: This would call the actual tool_performance_analysis function",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.3427022,
      "updated_at": 1754957552.3427022
    },
    "concept_3336": {
      "id": "concept_3336",
      "type": "concept",
      "name": "\"recall\": \"\ud83d\udd0d Recall memories and past experiences\",",
      "description": "Concept: \"recall\": \"\ud83d\udd0d Recall memories and past experiences\",",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.343897,
      "updated_at": 1754957552.343897
    },
    "concept_3337": {
      "id": "concept_3337",
      "type": "concept",
      "name": "context_parts.append(f\"Recent conversations: {len(recent_conversations)} in memory\")",
      "description": "Concept: context_parts.append(f\"Recent conversations: {len(recent_conversations)} in memory\")",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.3448389,
      "updated_at": 1754957552.3448389
    },
    "concept_3338": {
      "id": "concept_3338",
      "type": "concept",
      "name": "\"context_analysis\": context_results,",
      "description": "Concept: \"context_analysis\": context_results,",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.3453271,
      "updated_at": 1754957552.3453271
    },
    "concept_3339": {
      "id": "concept_3339",
      "type": "concept",
      "name": "result = await plugin._optimize_workflow_handler(optimization_focus, target_metrics)",
      "description": "Concept: result = await plugin._optimize_workflow_handler(optimization_focus, target_metrics)",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.345943,
      "updated_at": 1754957552.345943
    },
    "concept_3340": {
      "id": "concept_3340",
      "type": "concept",
      "name": "if recent_conversations:",
      "description": "Concept: if recent_conversations:",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.346452,
      "updated_at": 1754957552.346452
    },
    "concept_3341": {
      "id": "concept_3341",
      "type": "concept",
      "name": "\"total_memories\": len(memory_data.get(\"memory_store\", {})),",
      "description": "Concept: \"total_memories\": len(memory_data.get(\"memory_store\", {})),",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.3469791,
      "updated_at": 1754957552.3469791
    },
    "concept_3342": {
      "id": "concept_3342",
      "type": "concept",
      "name": "\ud83d\udcdd Track Cursor conversation for learning and context",
      "description": "Concept: \ud83d\udcdd Track Cursor conversation for learning and context",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.3480651,
      "updated_at": 1754957552.3480651
    },
    "concept_3343": {
      "id": "concept_3343",
      "type": "concept",
      "name": "Simple MCP client for internal tool calls with comprehensive logging",
      "description": "Concept: Simple MCP client for internal tool calls with comprehensive logging",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.3491871,
      "updated_at": 1754957552.3491871
    },
    "concept_3344": {
      "id": "concept_3344",
      "type": "concept",
      "name": "Get function logger",
      "description": "Concept: Get function logger",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.349665,
      "updated_at": 1754957552.349665
    },
    "concept_3345": {
      "id": "concept_3345",
      "type": "concept",
      "name": "# Execute Phase 3",
      "description": "Concept: # Execute Phase 3",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.3501482,
      "updated_at": 1754957552.3501482
    },
    "concept_3346": {
      "id": "concept_3346",
      "type": "concept",
      "name": "async def assess_context_quality(context_data: dict, assessment_criteria: list = None) -> dict:",
      "description": "Concept: async def assess_context_quality(context_data: dict, assessment_criteria: list = None) -> dict:",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.3507268,
      "updated_at": 1754957552.3507268
    },
    "concept_3347": {
      "id": "concept_3347",
      "type": "concept",
      "name": "This would call the actual batch_workflow_processing function",
      "description": "Concept: This would call the actual batch_workflow_processing function",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.351624,
      "updated_at": 1754957552.351624
    },
    "concept_3348": {
      "id": "concept_3348",
      "type": "concept",
      "name": "This would call the actual workflow_health_check function",
      "description": "Concept: This would call the actual workflow_health_check function",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.35214,
      "updated_at": 1754957552.35214
    },
    "concept_3349": {
      "id": "concept_3349",
      "type": "concept",
      "name": "Complete workflow results with performance metrics",
      "description": "Concept: Complete workflow results with performance metrics",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.352643,
      "updated_at": 1754957552.352643
    },
    "concept_3350": {
      "id": "concept_3350",
      "type": "concept",
      "name": "logger.error(f\"\u274c Workflow optimization failed: {str(e)}\")",
      "description": "Concept: logger.error(f\"\u274c Workflow optimization failed: {str(e)}\")",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.353694,
      "updated_at": 1754957552.353694
    },
    "concept_3351": {
      "id": "concept_3351",
      "type": "concept",
      "name": "This would call the actual debug_intelligently function",
      "description": "Concept: This would call the actual debug_intelligently function",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.3542469,
      "updated_at": 1754957552.3542469
    },
    "concept_3352": {
      "id": "concept_3352",
      "type": "concept",
      "name": "\"plugins_loaded\": len(plugin_manager.registry.plugins),",
      "description": "Concept: \"plugins_loaded\": len(plugin_manager.registry.plugins),",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.3547678,
      "updated_at": 1754957552.354769
    },
    "concept_3353": {
      "id": "concept_3353",
      "type": "concept",
      "name": "\"mcp_configured\": True,",
      "description": "Concept: \"mcp_configured\": True,",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.355247,
      "updated_at": 1754957552.3552482
    },
    "concept_3354": {
      "id": "concept_3354",
      "type": "concept",
      "name": "Enhanced Workflow Orchestrator Tools - Complete Workflow Automation",
      "description": "Concept: Enhanced Workflow Orchestrator Tools - Complete Workflow Automation",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.355784,
      "updated_at": 1754957552.355784
    },
    "concept_3355": {
      "id": "concept_3355",
      "type": "concept",
      "name": "\"session_id\": function_logger._session_id",
      "description": "Concept: \"session_id\": function_logger._session_id",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.3564632,
      "updated_at": 1754957552.3564632
    },
    "concept_3356": {
      "id": "concept_3356",
      "type": "concept",
      "name": "This would call the actual recall_intelligently function",
      "description": "Concept: This would call the actual recall_intelligently function",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.35708,
      "updated_at": 1754957552.35708
    },
    "concept_3357": {
      "id": "concept_3357",
      "type": "concept",
      "name": "Look for other common names",
      "description": "Concept: Look for other common names",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.357567,
      "updated_at": 1754957552.357567
    },
    "concept_3358": {
      "id": "concept_3358",
      "type": "concept",
      "name": "THINKING",
      "description": "Concept: THINKING",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.3580449,
      "updated_at": 1754957552.3580449
    },
    "concept_3359": {
      "id": "concept_3359",
      "type": "concept",
      "name": "brain_state = brain.get_brain_state()",
      "description": "Concept: brain_state = brain.get_brain_state()",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.358541,
      "updated_at": 1754957552.358541
    },
    "concept_3360": {
      "id": "concept_3360",
      "type": "concept",
      "name": "# Import and initialize enhanced workflow orchestrator",
      "description": "Concept: # Import and initialize enhanced workflow orchestrator",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.35906,
      "updated_at": 1754957552.35906
    },
    "concept_3361": {
      "id": "concept_3361",
      "type": "concept",
      "name": "\"content\": content,",
      "description": "Concept: \"content\": content,",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.359533,
      "updated_at": 1754957552.359533
    },
    "concept_3362": {
      "id": "concept_3362",
      "type": "concept",
      "name": "else:",
      "description": "Concept: else:",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.3599958,
      "updated_at": 1754957552.3599958
    },
    "concept_3363": {
      "id": "concept_3363",
      "type": "concept",
      "name": "result = await plugin._workflow_health_check_handler(check_level)",
      "description": "Concept: result = await plugin._workflow_health_check_handler(check_level)",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.3605251,
      "updated_at": 1754957552.3605251
    },
    "concept_3364": {
      "id": "concept_3364",
      "type": "concept",
      "name": "async def ai_chat_with_memory(user_message: str, ai_model_name: str = \"assistant\") -> dict:",
      "description": "Concept: async def ai_chat_with_memory(user_message: str, ai_model_name: str = \"assistant\") -> dict:",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.361512,
      "updated_at": 1754957552.361512
    },
    "concept_3365": {
      "id": "concept_3365",
      "type": "concept",
      "name": "\"auto_context_injection\": True",
      "description": "Concept: \"auto_context_injection\": True",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.361994,
      "updated_at": 1754957552.361994
    },
    "concept_3366": {
      "id": "concept_3366",
      "type": "concept",
      "name": "# Get user context",
      "description": "Concept: # Get user context",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.3624609,
      "updated_at": 1754957552.3624609
    },
    "concept_3367": {
      "id": "concept_3367",
      "type": "concept",
      "name": "This would call the actual assess_complexity function",
      "description": "Concept: This would call the actual assess_complexity function",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.362966,
      "updated_at": 1754957552.362966
    },
    "concept_3368": {
      "id": "concept_3368",
      "type": "concept",
      "name": "\"brain_type\": \"Human-Inspired Cognitive System\",",
      "description": "Concept: \"brain_type\": \"Human-Inspired Cognitive System\",",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.363466,
      "updated_at": 1754957552.363466
    },
    "concept_3369": {
      "id": "concept_3369",
      "type": "concept",
      "name": "session_stats",
      "description": "Concept: session_stats",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.3639271,
      "updated_at": 1754957552.3639271
    },
    "concept_3370": {
      "id": "concept_3370",
      "type": "concept",
      "name": "tool_name: Specific tool to analyze (default: all)",
      "description": "Concept: tool_name: Specific tool to analyze (default: all)",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.364429,
      "updated_at": 1754957552.364429
    },
    "concept_3371": {
      "id": "concept_3371",
      "type": "concept",
      "name": "brain_db",
      "description": "Concept: brain_db",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.364921,
      "updated_at": 1754957552.364921
    },
    "concept_3372": {
      "id": "concept_3372",
      "type": "concept",
      "name": "Count actual MCP tools (our 6 consolidated tools)",
      "description": "Concept: Count actual MCP tools (our 6 consolidated tools)",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.365539,
      "updated_at": 1754957552.36554
    },
    "concept_3373": {
      "id": "concept_3373",
      "type": "concept",
      "name": "async def get_cursor_context() -> dict:",
      "description": "Concept: async def get_cursor_context() -> dict:",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.366551,
      "updated_at": 1754957552.366551
    },
    "concept_3374": {
      "id": "concept_3374",
      "type": "concept",
      "name": "plugin = EnhancedContextIntegrationPlugin()",
      "description": "Concept: plugin = EnhancedContextIntegrationPlugin()",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.3670669,
      "updated_at": 1754957552.3670669
    },
    "concept_3375": {
      "id": "concept_3375",
      "type": "concept",
      "name": "\"\"\"List all loaded plugins and their information\"\"\"",
      "description": "Concept: \"\"\"List all loaded plugins and their information\"\"\"",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.368412,
      "updated_at": 1754957552.368412
    },
    "concept_3376": {
      "id": "concept_3376",
      "type": "concept",
      "name": "async def track_cursor_conversation(user_message: str, assistant_response: str = \"\", conversation_type: str = \"coding\") -> dict:",
      "description": "Concept: async def track_cursor_conversation(user_message: str, assistant_response: str = \"\", conversation_type: str = \"coding\") -> dict:",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.36905,
      "updated_at": 1754957552.36905
    },
    "concept_3377": {
      "id": "concept_3377",
      "type": "concept",
      "name": "\"phase\": \"continuous_learning\",",
      "description": "Concept: \"phase\": \"continuous_learning\",",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.3695412,
      "updated_at": 1754957552.3695412
    },
    "concept_3378": {
      "id": "concept_3378",
      "type": "concept",
      "name": "Implements comprehensive context retrieval with pre-response memory search,",
      "description": "Concept: Implements comprehensive context retrieval with pre-response memory search,",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.3700962,
      "updated_at": 1754957552.3700962
    },
    "concept_3379": {
      "id": "concept_3379",
      "type": "concept",
      "name": "List available LLM models from Ollama",
      "description": "Concept: List available LLM models from Ollama",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.3706188,
      "updated_at": 1754957552.3706188
    },
    "concept_3380": {
      "id": "concept_3380",
      "type": "concept",
      "name": "async def quick_memory_chat(message: str) -> str:",
      "description": "Concept: async def quick_memory_chat(message: str) -> str:",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.371134,
      "updated_at": 1754957552.371134
    },
    "concept_3381": {
      "id": "concept_3381",
      "type": "concept",
      "name": "This would call the actual workflow_performance_analysis function",
      "description": "Concept: This would call the actual workflow_performance_analysis function",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.37167,
      "updated_at": 1754957552.37167
    },
    "concept_3382": {
      "id": "concept_3382",
      "type": "concept",
      "name": "try:",
      "description": "Concept: try:",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.372124,
      "updated_at": 1754957552.372124
    },
    "concept_3383": {
      "id": "concept_3383",
      "type": "concept",
      "name": "context_lower",
      "description": "Concept: context_lower",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.37259,
      "updated_at": 1754957552.37259
    },
    "concept_3384": {
      "id": "concept_3384",
      "type": "concept",
      "name": "\"brain_state\": brain_state,",
      "description": "Concept: \"brain_state\": brain_state,",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.3730931,
      "updated_at": 1754957552.3730931
    },
    "concept_3385": {
      "id": "concept_3385",
      "type": "concept",
      "name": "\"reflect\": \"\ud83e\udd14 Engage in self-reflection and metacognition\",",
      "description": "Concept: \"reflect\": \"\ud83e\udd14 Engage in self-reflection and metacognition\",",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.3742442,
      "updated_at": 1754957552.3742442
    },
    "concept_3386": {
      "id": "concept_3386",
      "type": "concept",
      "name": "\"memory_result\": memory_result.get(\"success\", False),",
      "description": "Concept: \"memory_result\": memory_result.get(\"success\", False),",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.374757,
      "updated_at": 1754957552.374757
    },
    "concept_3387": {
      "id": "concept_3387",
      "type": "concept",
      "name": "if not context_results:",
      "description": "Concept: if not context_results:",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.375254,
      "updated_at": 1754957552.375254
    },
    "concept_3388": {
      "id": "concept_3388",
      "type": "concept",
      "name": "This would call the actual remember_important function",
      "description": "Concept: This would call the actual remember_important function",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.376226,
      "updated_at": 1754957552.376226
    },
    "concept_3389": {
      "id": "concept_3389",
      "type": "concept",
      "name": "\"ai_response\": f\"I'd be happy to help with: {user_message}\",",
      "description": "Concept: \"ai_response\": f\"I'd be happy to help with: {user_message}\",",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.3769119,
      "updated_at": 1754957552.3769119
    },
    "concept_3390": {
      "id": "concept_3390",
      "type": "concept",
      "name": "\"insights\": [\"Basic context analysis available\"],",
      "description": "Concept: \"insights\": [\"Basic context analysis available\"],",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.377492,
      "updated_at": 1754957552.377492
    },
    "concept_3391": {
      "id": "concept_3391",
      "type": "concept",
      "name": "async def continuous_learning_cycle(interaction_data: dict, learning_focus: str = \"context_patterns\") -> dict:",
      "description": "Concept: async def continuous_learning_cycle(interaction_data: dict, learning_focus: str = \"context_patterns\") -> dict:",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.378158,
      "updated_at": 1754957552.378158
    },
    "concept_3392": {
      "id": "concept_3392",
      "type": "concept",
      "name": "\"session_success_rate\": session_stats.get(\"success_rate\", 0),",
      "description": "Concept: \"session_success_rate\": session_stats.get(\"success_rate\", 0),",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.378722,
      "updated_at": 1754957552.378722
    },
    "concept_3393": {
      "id": "concept_3393",
      "type": "concept",
      "name": "\"error\": str(e),",
      "description": "Concept: \"error\": str(e),",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.3793101,
      "updated_at": 1754957552.3793101
    },
    "concept_3394": {
      "id": "concept_3394",
      "type": "concept",
      "name": "\"tools_available\": tool_count,",
      "description": "Concept: \"tools_available\": tool_count,",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.380204,
      "updated_at": 1754957552.380204
    },
    "concept_3395": {
      "id": "concept_3395",
      "type": "concept",
      "name": "tool_registry",
      "description": "Concept: tool_registry",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py",
          "test_tool_registry.py",
          "tool_registry.py"
        ]
      },
      "created_at": 1754957552.380673,
      "updated_at": 1754957552.818976
    },
    "concept_3396": {
      "id": "concept_3396",
      "type": "concept",
      "name": "conversations = db.get_conversation_history(limit=5)",
      "description": "Concept: conversations = db.get_conversation_history(limit=5)",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.381566,
      "updated_at": 1754957552.381566
    },
    "concept_3397": {
      "id": "concept_3397",
      "type": "concept",
      "name": "MCPClient",
      "description": "Concept: MCPClient",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.3820312,
      "updated_at": 1754957552.3820312
    },
    "concept_3398": {
      "id": "concept_3398",
      "type": "concept",
      "name": "Call the tool handler",
      "description": "Concept: Call the tool handler",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.382863,
      "updated_at": 1754957552.382863
    },
    "concept_3399": {
      "id": "concept_3399",
      "type": "concept",
      "name": "\"auto_process_message\",",
      "description": "Concept: \"auto_process_message\",",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.383349,
      "updated_at": 1754957552.383349
    },
    "concept_3400": {
      "id": "concept_3400",
      "type": "concept",
      "name": "Test connection to the Ollama LLM service",
      "description": "Concept: Test connection to the Ollama LLM service",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.383848,
      "updated_at": 1754957552.383848
    },
    "concept_3401": {
      "id": "concept_3401",
      "type": "concept",
      "name": "async def analyze_workflow_performance(timeframe: str = \"session\", include_recommendations: bool = True) -> dict:",
      "description": "Concept: async def analyze_workflow_performance(timeframe: str = \"session\", include_recommendations: bool = True) -> dict:",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.3844638,
      "updated_at": 1754957552.3844638
    },
    "concept_3402": {
      "id": "concept_3402",
      "type": "concept",
      "name": "\"learn_from\": \"\ud83d\udcda Learn from new experiences and information\",",
      "description": "Concept: \"learn_from\": \"\ud83d\udcda Learn from new experiences and information\",",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.385657,
      "updated_at": 1754957552.385657
    },
    "concept_3403": {
      "id": "concept_3403",
      "type": "concept",
      "name": "logger.info(f\"\ud83c\udfd7\ufe0f Building {context_depth} context\")",
      "description": "Concept: logger.info(f\"\ud83c\udfd7\ufe0f Building {context_depth} context\")",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.387211,
      "updated_at": 1754957552.387211
    },
    "concept_3404": {
      "id": "concept_3404",
      "type": "concept",
      "name": "# STEP 1: Process user message and get memory context",
      "description": "Concept: # STEP 1: Process user message and get memory context",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.388174,
      "updated_at": 1754957552.388174
    },
    "concept_3405": {
      "id": "concept_3405",
      "type": "concept",
      "name": "This would call the actual orchestrate_tools function",
      "description": "Concept: This would call the actual orchestrate_tools function",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.3890839,
      "updated_at": 1754957552.3890839
    },
    "concept_3406": {
      "id": "concept_3406",
      "type": "concept",
      "name": "for table in tables:",
      "description": "Concept: for table in tables:",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.389566,
      "updated_at": 1754957552.389566
    },
    "concept_3407": {
      "id": "concept_3407",
      "type": "concept",
      "name": "\"user_id\": \"current_user\",",
      "description": "Concept: \"user_id\": \"current_user\",",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.3901818,
      "updated_at": 1754957552.3901818
    },
    "concept_3408": {
      "id": "concept_3408",
      "type": "concept",
      "name": "Performs comprehensive health check of the enhanced workflow system.",
      "description": "Concept: Performs comprehensive health check of the enhanced workflow system.",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.39074,
      "updated_at": 1754957552.39074
    },
    "concept_3409": {
      "id": "concept_3409",
      "type": "concept",
      "name": "This would call the actual ai_chat_with_memory function",
      "description": "Concept: This would call the actual ai_chat_with_memory function",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.391278,
      "updated_at": 1754957552.391278
    },
    "concept_3410": {
      "id": "concept_3410",
      "type": "concept",
      "name": "return result.get(\"ai_response\", \"I'd be happy to help!\")",
      "description": "Concept: return result.get(\"ai_response\", \"I'd be happy to help!\")",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.3921762,
      "updated_at": 1754957552.3921762
    },
    "concept_3411": {
      "id": "concept_3411",
      "type": "concept",
      "name": "total_data_points",
      "description": "Concept: total_data_points",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.39282,
      "updated_at": 1754957552.39282
    },
    "concept_3412": {
      "id": "concept_3412",
      "type": "concept",
      "name": "Clear any existing plugins to start fresh",
      "description": "Concept: Clear any existing plugins to start fresh",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.39336,
      "updated_at": 1754957552.39336
    },
    "concept_3413": {
      "id": "concept_3413",
      "type": "concept",
      "name": "\"total_data_points\": total_data_points,",
      "description": "Concept: \"total_data_points\": total_data_points,",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.393867,
      "updated_at": 1754957552.393867
    },
    "concept_3414": {
      "id": "concept_3414",
      "type": "concept",
      "name": "elif \"modules\" in result:",
      "description": "Concept: elif \"modules\" in result:",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.394351,
      "updated_at": 1754957552.394351
    },
    "concept_3415": {
      "id": "concept_3415",
      "type": "concept",
      "name": "if \"context_analyzer\" in module_name.lower():",
      "description": "Concept: if \"context_analyzer\" in module_name.lower():",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.39486,
      "updated_at": 1754957552.39486
    },
    "concept_3416": {
      "id": "concept_3416",
      "type": "concept",
      "name": "return {\"success\": False, \"error\": \"Memory system not available\"}",
      "description": "Concept: return {\"success\": False, \"error\": \"Memory system not available\"}",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.395392,
      "updated_at": 1754957552.395392
    },
    "concept_3417": {
      "id": "concept_3417",
      "type": "concept",
      "name": "context_summary = context_result.get(\"context_summary\", \"\")",
      "description": "Concept: context_summary = context_result.get(\"context_summary\", \"\")",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.395914,
      "updated_at": 1754957552.395914
    },
    "concept_3418": {
      "id": "concept_3418",
      "type": "concept",
      "name": "2nd",
      "description": "Concept: 2nd",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.39651,
      "updated_at": 1754957552.39651
    },
    "concept_3419": {
      "id": "concept_3419",
      "type": "concept",
      "name": "our",
      "description": "Concept: our",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.3970718,
      "updated_at": 1754957552.3970718
    },
    "concept_3420": {
      "id": "concept_3420",
      "type": "concept",
      "name": "\"context_result\": context_result.get(\"success\", False)",
      "description": "Concept: \"context_result\": context_result.get(\"success\", False)",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.3976479,
      "updated_at": 1754957552.3976479
    },
    "concept_3421": {
      "id": "concept_3421",
      "type": "concept",
      "name": "\ud83d\udcca Get comprehensive function call history with full traceability",
      "description": "Concept: \ud83d\udcca Get comprehensive function call history with full traceability",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.398952,
      "updated_at": 1754957552.398952
    },
    "concept_3422": {
      "id": "concept_3422",
      "type": "concept",
      "name": "\"automatic_storage_active\": True",
      "description": "Concept: \"automatic_storage_active\": True",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.3994508,
      "updated_at": 1754957552.3994508
    },
    "concept_3423": {
      "id": "concept_3423",
      "type": "concept",
      "name": "\"prompts\": [prompt.name for prompt in plugin.get_prompts()],",
      "description": "Concept: \"prompts\": [prompt.name for prompt in plugin.get_prompts()],",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.3999841,
      "updated_at": 1754957552.3999841
    },
    "concept_3424": {
      "id": "concept_3424",
      "type": "concept",
      "name": "Core server management tools",
      "description": "Concept: Core server management tools",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.400474,
      "updated_at": 1754957552.400474
    },
    "concept_3425": {
      "id": "concept_3425",
      "type": "concept",
      "name": "\"prompts_available\": len(plugin_manager.registry.prompts),",
      "description": "Concept: \"prompts_available\": len(plugin_manager.registry.prompts),",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.4010198,
      "updated_at": 1754957552.4010198
    },
    "concept_3426": {
      "id": "concept_3426",
      "type": "concept",
      "name": "# Assistant identity",
      "description": "Concept: # Assistant identity",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.401519,
      "updated_at": 1754957552.401519
    },
    "concept_3427": {
      "id": "concept_3427",
      "type": "concept",
      "name": "\"llm_connection\": test_result[\"connection_working\"],",
      "description": "Concept: \"llm_connection\": test_result[\"connection_working\"],",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.402037,
      "updated_at": 1754957552.402037
    },
    "concept_3428": {
      "id": "concept_3428",
      "type": "concept",
      "name": "logger.info(f\"\ud83e\udde0 Performing deep context analysis: {analysis_type}\")",
      "description": "Concept: logger.info(f\"\ud83e\udde0 Performing deep context analysis: {analysis_type}\")",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.4033139,
      "updated_at": 1754957552.4033139
    },
    "concept_3429": {
      "id": "concept_3429",
      "type": "concept",
      "name": "\"memory_context_used\": memory_context,",
      "description": "Concept: \"memory_context_used\": memory_context,",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.403836,
      "updated_at": 1754957552.403836
    },
    "concept_3430": {
      "id": "concept_3430",
      "type": "concept",
      "name": "error_result",
      "description": "Concept: error_result",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.404315,
      "updated_at": 1754957552.404315
    },
    "concept_3431": {
      "id": "concept_3431",
      "type": "concept",
      "name": "Global MCP client instance",
      "description": "Concept: Global MCP client instance",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.404809,
      "updated_at": 1754957552.404809
    },
    "concept_3432": {
      "id": "concept_3432",
      "type": "concept",
      "name": "from plugins.enhanced_workflow_orchestrator import EnhancedWorkflowOrchestratorPlugin",
      "description": "Concept: from plugins.enhanced_workflow_orchestrator import EnhancedWorkflowOrchestratorPlugin",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.405371,
      "updated_at": 1754957552.405371
    },
    "concept_3433": {
      "id": "concept_3433",
      "type": "concept",
      "name": "\"model\": \"unknown\"",
      "description": "Concept: \"model\": \"unknown\"",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.405856,
      "updated_at": 1754957552.405856
    },
    "concept_3434": {
      "id": "concept_3434",
      "type": "concept",
      "name": "\ud83d\ude80 Auto-inject context for new Cursor conversations",
      "description": "Concept: \ud83d\ude80 Auto-inject context for new Cursor conversations",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.407088,
      "updated_at": 1754957552.407088
    },
    "concept_3435": {
      "id": "concept_3435",
      "type": "concept",
      "name": "for message in test_messages:",
      "description": "Concept: for message in test_messages:",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.407634,
      "updated_at": 1754957552.407634
    },
    "concept_3436": {
      "id": "concept_3436",
      "type": "concept",
      "name": "enhanced_brain_tools_simple",
      "description": "Concept: enhanced_brain_tools_simple",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.408138,
      "updated_at": 1754957552.408138
    },
    "concept_3437": {
      "id": "concept_3437",
      "type": "concept",
      "name": "\"total_results\": len(search_results),",
      "description": "Concept: \"total_results\": len(search_results),",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.4086552,
      "updated_at": 1754957552.4086552
    },
    "concept_3438": {
      "id": "concept_3438",
      "type": "concept",
      "name": "interaction_data: Data from the interaction",
      "description": "Concept: interaction_data: Data from the interaction",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.409177,
      "updated_at": 1754957552.409177
    },
    "concept_3439": {
      "id": "concept_3439",
      "type": "concept",
      "name": "Add src to path",
      "description": "Concept: Add src to path",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.409696,
      "updated_at": 1754957552.409696
    },
    "concept_3440": {
      "id": "concept_3440",
      "type": "concept",
      "name": "\"brain_functions\": 8  # From brain_info",
      "description": "Concept: \"brain_functions\": 8  # From brain_info",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.410227,
      "updated_at": 1754957552.410227
    },
    "concept_3441": {
      "id": "concept_3441",
      "type": "concept",
      "name": "Provides assistant identity, user info, and conversation history",
      "description": "Concept: Provides assistant identity, user info, and conversation history",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.4107678,
      "updated_at": 1754957552.4107678
    },
    "concept_3442": {
      "id": "concept_3442",
      "type": "concept",
      "name": "result = await plugin._enhanced_context_retrieval_handler(",
      "description": "Concept: result = await plugin._enhanced_context_retrieval_handler(",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.411319,
      "updated_at": 1754957552.411319
    },
    "concept_3443": {
      "id": "concept_3443",
      "type": "concept",
      "name": "This would call the actual forget_selectively function",
      "description": "Concept: This would call the actual forget_selectively function",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.411838,
      "updated_at": 1754957552.411838
    },
    "concept_3444": {
      "id": "concept_3444",
      "type": "concept",
      "name": "Batch processing results with performance metrics",
      "description": "Concept: Batch processing results with performance metrics",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.4124281,
      "updated_at": 1754957552.4124281
    },
    "concept_3445": {
      "id": "concept_3445",
      "type": "concept",
      "name": "Comprehensive context with overall quality score",
      "description": "Concept: Comprehensive context with overall quality score",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.412939,
      "updated_at": 1754957552.412939
    },
    "concept_3446": {
      "id": "concept_3446",
      "type": "concept",
      "name": "\"inject_message\": f\"Context: {cursor_context['context']}\",",
      "description": "Concept: \"inject_message\": f\"Context: {cursor_context['context']}\",",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.413465,
      "updated_at": 1754957552.413465
    },
    "concept_3447": {
      "id": "concept_3447",
      "type": "concept",
      "name": "Health check results with status and recommendations",
      "description": "Concept: Health check results with status and recommendations",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.414071,
      "updated_at": 1754957552.414071
    },
    "concept_3448": {
      "id": "concept_3448",
      "type": "concept",
      "name": "logger.info(f\"\ud83d\ude80 Executing Enhanced Workflow: {workflow_mode} mode\")",
      "description": "Concept: logger.info(f\"\ud83d\ude80 Executing Enhanced Workflow: {workflow_mode} mode\")",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.415379,
      "updated_at": 1754957552.415379
    },
    "concept_3449": {
      "id": "concept_3449",
      "type": "concept",
      "name": "# Execute context quality assessment",
      "description": "Concept: # Execute context quality assessment",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.415895,
      "updated_at": 1754957552.415895
    },
    "concept_3450": {
      "id": "concept_3450",
      "type": "concept",
      "name": "async with OllamaClient() as ollama:",
      "description": "Concept: async with OllamaClient() as ollama:",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.4171379,
      "updated_at": 1754957552.4171379
    },
    "concept_3451": {
      "id": "concept_3451",
      "type": "concept",
      "name": "DISABLE ALL PLUGIN LOADING - We only want the restructured cognitive system",
      "description": "Concept: DISABLE ALL PLUGIN LOADING - We only want the restructured cognitive system",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.417758,
      "updated_at": 1754957552.417758
    },
    "concept_3452": {
      "id": "concept_3452",
      "type": "concept",
      "name": "\"timestamp\": datetime.now().isoformat()",
      "description": "Concept: \"timestamp\": datetime.now().isoformat()",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.4183319,
      "updated_at": 1754957552.4183319
    },
    "concept_3453": {
      "id": "concept_3453",
      "type": "concept",
      "name": "brain_functions = {",
      "description": "Concept: brain_functions = {",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.418834,
      "updated_at": 1754957552.418834
    },
    "concept_3454": {
      "id": "concept_3454",
      "type": "concept",
      "name": "important_info",
      "description": "Concept: important_info",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.4193778,
      "updated_at": 1754957552.4193778
    },
    "concept_3455": {
      "id": "concept_3455",
      "type": "concept",
      "name": "logger.info(f\"\ud83d\udcca Analyzing workflow performance: {timeframe}\")",
      "description": "Concept: logger.info(f\"\ud83d\udcca Analyzing workflow performance: {timeframe}\")",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.420567,
      "updated_at": 1754957552.420567
    },
    "concept_3456": {
      "id": "concept_3456",
      "type": "concept",
      "name": "\"important_info_stored\": important_info,",
      "description": "Concept: \"important_info_stored\": important_info,",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.4210932,
      "updated_at": 1754957552.4210932
    },
    "concept_3457": {
      "id": "concept_3457",
      "type": "concept",
      "name": "Complete overview of all data storage and cross-referencing capabilities",
      "description": "Concept: Complete overview of all data storage and cross-referencing capabilities",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.421663,
      "updated_at": 1754957552.421663
    },
    "concept_3458": {
      "id": "concept_3458",
      "type": "concept",
      "name": "This would call the actual enhanced_context_workflow function",
      "description": "Concept: This would call the actual enhanced_context_workflow function",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.422336,
      "updated_at": 1754957552.422336
    },
    "concept_3459": {
      "id": "concept_3459",
      "type": "concept",
      "name": "query=\"user name preferences important facts\"",
      "description": "Concept: query=\"user name preferences important facts\"",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.422859,
      "updated_at": 1754957552.422859
    },
    "concept_3460": {
      "id": "concept_3460",
      "type": "concept",
      "name": "get_llm_client",
      "description": "Concept: get_llm_client",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.423359,
      "updated_at": 1754957552.423359
    },
    "concept_3461": {
      "id": "concept_3461",
      "type": "concept",
      "name": "\"dream\": \"\ud83d\udca4 Background processing and memory consolidation\",",
      "description": "Concept: \"dream\": \"\ud83d\udca4 Background processing and memory consolidation\",",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.424536,
      "updated_at": 1754957552.424536
    },
    "concept_3462": {
      "id": "concept_3462",
      "type": "concept",
      "name": "Analyzes workflow performance and identifies improvement opportunities.",
      "description": "Concept: Analyzes workflow performance and identifies improvement opportunities.",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.425086,
      "updated_at": 1754957552.425086
    },
    "concept_3463": {
      "id": "concept_3463",
      "type": "concept",
      "name": "\"error\": \"Brain interface not available\",",
      "description": "Concept: \"error\": \"Brain interface not available\",",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.425979,
      "updated_at": 1754957552.425979
    },
    "concept_3464": {
      "id": "concept_3464",
      "type": "concept",
      "name": "Identifies issues and provides maintenance recommendations.",
      "description": "Concept: Identifies issues and provides maintenance recommendations.",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.426686,
      "updated_at": 1754957552.426686
    },
    "concept_3465": {
      "id": "concept_3465",
      "type": "concept",
      "name": "\"preferences\": user_info.get(\"preferences\", []),",
      "description": "Concept: \"preferences\": user_info.get(\"preferences\", []),",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.427263,
      "updated_at": 1754957552.427263
    },
    "concept_3466": {
      "id": "concept_3466",
      "type": "concept",
      "name": "Shows function call breakdown, success rates, and execution times",
      "description": "Concept: Shows function call breakdown, success rates, and execution times",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.427844,
      "updated_at": 1754957552.427844
    },
    "concept_3467": {
      "id": "concept_3467",
      "type": "concept",
      "name": "\"memory_system\": {",
      "description": "Concept: \"memory_system\": {",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.4283788,
      "updated_at": 1754957552.4283788
    },
    "concept_3468": {
      "id": "concept_3468",
      "type": "concept",
      "name": "\"call_history\": []",
      "description": "Concept: \"call_history\": []",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.4289112,
      "updated_at": 1754957552.4289112
    },
    "concept_3469": {
      "id": "concept_3469",
      "type": "concept",
      "name": "\ud83e\udde0 CONSOLIDATED TOOL REGISTRATION - All individual tools consolidated into cognitive domains",
      "description": "Concept: \ud83e\udde0 CONSOLIDATED TOOL REGISTRATION - All individual tools consolidated into cognitive domains",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.430388,
      "updated_at": 1754957552.430388
    },
    "concept_3470": {
      "id": "concept_3470",
      "type": "concept",
      "name": "\"plugin_directories\": plugin_manager.plugin_dirs,",
      "description": "Concept: \"plugin_directories\": plugin_manager.plugin_dirs,",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.430926,
      "updated_at": 1754957552.430926
    },
    "concept_3471": {
      "id": "concept_3471",
      "type": "concept",
      "name": "\"session_statistics\": session_stats,",
      "description": "Concept: \"session_statistics\": session_stats,",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.431498,
      "updated_at": 1754957552.431498
    },
    "concept_3472": {
      "id": "concept_3472",
      "type": "concept",
      "name": "memory_data",
      "description": "Concept: memory_data",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.432064,
      "updated_at": 1754957552.432064
    },
    "concept_3473": {
      "id": "concept_3473",
      "type": "concept",
      "name": "for seamless Cursor integration",
      "description": "Concept: for seamless Cursor integration",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.433023,
      "updated_at": 1754957552.433023
    },
    "concept_3474": {
      "id": "concept_3474",
      "type": "concept",
      "name": "# Execute batch workflow processing",
      "description": "Concept: # Execute batch workflow processing",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.433534,
      "updated_at": 1754957552.4335349
    },
    "concept_3475": {
      "id": "concept_3475",
      "type": "concept",
      "name": "context_summary = \"\"",
      "description": "Concept: context_summary = \"\"",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.434043,
      "updated_at": 1754957552.434043
    },
    "concept_3476": {
      "id": "concept_3476",
      "type": "concept",
      "name": "Get LLM client",
      "description": "Concept: Get LLM client",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.434527,
      "updated_at": 1754957552.434527
    },
    "concept_3477": {
      "id": "concept_3477",
      "type": "concept",
      "name": "def server_status() -> dict:",
      "description": "Concept: def server_status() -> dict:",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.435461,
      "updated_at": 1754957552.435461
    },
    "concept_3478": {
      "id": "concept_3478",
      "type": "concept",
      "name": "initialize_server",
      "description": "Concept: initialize_server",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.436393,
      "updated_at": 1754957552.436393
    },
    "concept_3479": {
      "id": "concept_3479",
      "type": "concept",
      "name": "if not brain:",
      "description": "Concept: if not brain:",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.43704,
      "updated_at": 1754957552.43704
    },
    "concept_3480": {
      "id": "concept_3480",
      "type": "concept",
      "name": "Tool orchestration results with execution plan",
      "description": "Concept: Tool orchestration results with execution plan",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.437702,
      "updated_at": 1754957552.437702
    },
    "concept_3481": {
      "id": "concept_3481",
      "type": "concept",
      "name": "async def test_memory_system() -> dict:",
      "description": "Concept: async def test_memory_system() -> dict:",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.4382222,
      "updated_at": 1754957552.4382222
    },
    "concept_3482": {
      "id": "concept_3482",
      "type": "concept",
      "name": "\"resources\": [resource.name for resource in plugin.get_resources()],",
      "description": "Concept: \"resources\": [resource.name for resource in plugin.get_resources()],",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.438776,
      "updated_at": 1754957552.438776
    },
    "concept_3483": {
      "id": "concept_3483",
      "type": "concept",
      "name": "This would call the actual detect_patterns function",
      "description": "Concept: This would call the actual detect_patterns function",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.4393039,
      "updated_at": 1754957552.4393039
    },
    "concept_3484": {
      "id": "concept_3484",
      "type": "concept",
      "name": "memory_context = \" | \".join(memory_instructions)",
      "description": "Concept: memory_context = \" | \".join(memory_instructions)",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.439834,
      "updated_at": 1754957552.439834
    },
    "concept_3485": {
      "id": "concept_3485",
      "type": "concept",
      "name": "def brain_info() -> dict:",
      "description": "Concept: def brain_info() -> dict:",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.44074,
      "updated_at": 1754957552.44074
    },
    "concept_3486": {
      "id": "concept_3486",
      "type": "concept",
      "name": "This would call the actual enhanced_context_retrieval function",
      "description": "Concept: This would call the actual enhanced_context_retrieval function",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.44128,
      "updated_at": 1754957552.44128
    },
    "concept_3487": {
      "id": "concept_3487",
      "type": "concept",
      "name": "Extract user message for context",
      "description": "Concept: Extract user message for context",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.441817,
      "updated_at": 1754957552.441817
    },
    "concept_3488": {
      "id": "concept_3488",
      "type": "concept",
      "name": "optimization_focus: Focus area for optimization",
      "description": "Concept: optimization_focus: Focus area for optimization",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.442351,
      "updated_at": 1754957552.442351
    },
    "concept_3489": {
      "id": "concept_3489",
      "type": "concept",
      "name": "tables = ['memory_store', 'conversation_memories', 'context_history', 'function_calls', 'memory_chunks']",
      "description": "Concept: tables = ['memory_store', 'conversation_memories', 'context_history', 'function_calls', 'memory_chunks']",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.442975,
      "updated_at": 1754957552.442975
    },
    "concept_3490": {
      "id": "concept_3490",
      "type": "concept",
      "name": "\"context\": \" | \".join(context_parts) if context_parts else \"Fresh conversation - no prior context\",",
      "description": "Concept: \"context\": \" | \".join(context_parts) if context_parts else \"Fresh conversation - no prior context\",",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.443564,
      "updated_at": 1754957552.443564
    },
    "concept_3491": {
      "id": "concept_3491",
      "type": "concept",
      "name": "\"user_message\": user_message,",
      "description": "Concept: \"user_message\": user_message,",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.444065,
      "updated_at": 1754957552.444065
    },
    "concept_3492": {
      "id": "concept_3492",
      "type": "concept",
      "name": "Look for \"call me\" or \"name is\" patterns",
      "description": "Concept: Look for \"call me\" or \"name is\" patterns",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.444576,
      "updated_at": 1754957552.444576
    },
    "concept_3493": {
      "id": "concept_3493",
      "type": "concept",
      "name": "async def test_llm_connection() -> dict:",
      "description": "Concept: async def test_llm_connection() -> dict:",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.445083,
      "updated_at": 1754957552.445083
    },
    "concept_3494": {
      "id": "concept_3494",
      "type": "concept",
      "name": "# Get brain state for context",
      "description": "Concept: # Get brain state for context",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.44559,
      "updated_at": 1754957552.44559
    },
    "concept_3495": {
      "id": "concept_3495",
      "type": "concept",
      "name": "return models_result",
      "description": "Concept: return models_result",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.446074,
      "updated_at": 1754957552.446074
    },
    "concept_3496": {
      "id": "concept_3496",
      "type": "concept",
      "name": "results = []",
      "description": "Concept: results = []",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.446578,
      "updated_at": 1754957552.446578
    },
    "concept_3497": {
      "id": "concept_3497",
      "type": "concept",
      "name": "\"consciousness_check\": \"\ud83e\uddd8 Check current state of consciousness\",",
      "description": "Concept: \"consciousness_check\": \"\ud83e\uddd8 Check current state of consciousness\",",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.447885,
      "updated_at": 1754957552.447885
    },
    "concept_3498": {
      "id": "concept_3498",
      "type": "concept",
      "name": "\"call_history\": call_history,",
      "description": "Concept: \"call_history\": call_history,",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.4485319,
      "updated_at": 1754957552.4485319
    },
    "concept_3499": {
      "id": "concept_3499",
      "type": "concept",
      "name": "Cross-references all stored data for comprehensive search",
      "description": "Concept: Cross-references all stored data for comprehensive search",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.449106,
      "updated_at": 1754957552.449106
    },
    "concept_3500": {
      "id": "concept_3500",
      "type": "concept",
      "name": "if context_result.get(\"success\"):",
      "description": "Concept: if context_result.get(\"success\"):",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.449623,
      "updated_at": 1754957552.449623
    },
    "concept_3501": {
      "id": "concept_3501",
      "type": "concept",
      "name": "tables",
      "description": "Concept: tables",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.450115,
      "updated_at": 1754957552.450115
    },
    "concept_3502": {
      "id": "concept_3502",
      "type": "concept",
      "name": "\ud83d\udd27 CONSOLIDATED TOOLS REGISTERED WITH MCP SERVER",
      "description": "Concept: \ud83d\udd27 CONSOLIDATED TOOLS REGISTERED WITH MCP SERVER",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.4512131,
      "updated_at": 1754957552.4512131
    },
    "concept_3503": {
      "id": "concept_3503",
      "type": "concept",
      "name": "This would call the actual workflow_optimization function",
      "description": "Concept: This would call the actual workflow_optimization function",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.451765,
      "updated_at": 1754957552.451766
    },
    "concept_3504": {
      "id": "concept_3504",
      "type": "concept",
      "name": "\"response\": f\"I'd help with: {user_message}\"",
      "description": "Concept: \"response\": f\"I'd help with: {user_message}\"",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.452288,
      "updated_at": 1754957552.452288
    },
    "concept_3505": {
      "id": "concept_3505",
      "type": "concept",
      "name": "async def get_session_statistics() -> dict:",
      "description": "Concept: async def get_session_statistics() -> dict:",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.452802,
      "updated_at": 1754957552.452802
    },
    "concept_3506": {
      "id": "concept_3506",
      "type": "concept",
      "name": "Optimized for handling multiple requests in sequence.",
      "description": "Concept: Optimized for handling multiple requests in sequence.",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.453341,
      "updated_at": 1754957552.453341
    },
    "concept_3507": {
      "id": "concept_3507",
      "type": "concept",
      "name": "if important_info:",
      "description": "Concept: if important_info:",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.453831,
      "updated_at": 1754957552.453831
    },
    "concept_3508": {
      "id": "concept_3508",
      "type": "concept",
      "name": "plugin_info = {}",
      "description": "Concept: plugin_info = {}",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.4543371,
      "updated_at": 1754957552.4543371
    },
    "concept_3509": {
      "id": "concept_3509",
      "type": "concept",
      "name": "async def execute_enhanced_workflow(user_message: str, workflow_mode: str = \"standard\", include_learning: bool = True) -> dict:",
      "description": "Concept: async def execute_enhanced_workflow(user_message: str, workflow_mode: str = \"standard\", include_learning: bool = True) -> dict:",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.454991,
      "updated_at": 1754957552.454991
    },
    "concept_3510": {
      "id": "concept_3510",
      "type": "concept",
      "name": "# STEP 2: Extract context for AI response",
      "description": "Concept: # STEP 2: Extract context for AI response",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.455507,
      "updated_at": 1754957552.455507
    },
    "concept_3511": {
      "id": "concept_3511",
      "type": "concept",
      "name": "recent_conversations = db.get_conversation_history(limit=3)",
      "description": "Concept: recent_conversations = db.get_conversation_history(limit=3)",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.456043,
      "updated_at": 1754957552.456044
    },
    "concept_3512": {
      "id": "concept_3512",
      "type": "concept",
      "name": "function_logger",
      "description": "Concept: function_logger",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.456537,
      "updated_at": 1754957552.456537
    },
    "concept_3513": {
      "id": "concept_3513",
      "type": "concept",
      "name": "\"phase\": \"enhanced_context_retrieval\",",
      "description": "Concept: \"phase\": \"enhanced_context_retrieval\",",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.457062,
      "updated_at": 1754957552.457062
    },
    "concept_3514": {
      "id": "concept_3514",
      "type": "concept",
      "name": "enhanced_brain_tools",
      "description": "Concept: enhanced_brain_tools",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.457551,
      "updated_at": 1754957552.457551
    },
    "concept_3515": {
      "id": "concept_3515",
      "type": "concept",
      "name": "session_stats = function_logger.get_session_stats()",
      "description": "Concept: session_stats = function_logger.get_session_stats()",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.458206,
      "updated_at": 1754957552.458206
    },
    "concept_3516": {
      "id": "concept_3516",
      "type": "concept",
      "name": "\"search_term\": search_term,",
      "description": "Concept: \"search_term\": search_term,",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.458752,
      "updated_at": 1754957552.458752
    },
    "concept_3517": {
      "id": "concept_3517",
      "type": "concept",
      "name": "conversation history analysis, and user preference integration.",
      "description": "Concept: conversation history analysis, and user preference integration.",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.459695,
      "updated_at": 1754957552.459695
    },
    "concept_3518": {
      "id": "concept_3518",
      "type": "concept",
      "name": "metadata = plugin.metadata",
      "description": "Concept: metadata = plugin.metadata",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.460244,
      "updated_at": 1754957552.460244
    },
    "concept_3519": {
      "id": "concept_3519",
      "type": "concept",
      "name": "implicit goals, and nuanced situations in user requests.",
      "description": "Concept: implicit goals, and nuanced situations in user requests.",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.460803,
      "updated_at": 1754957552.460803
    },
    "concept_3520": {
      "id": "concept_3520",
      "type": "concept",
      "name": "\ud83d\udce6 Batch Workflow Processing",
      "description": "Concept: \ud83d\udce6 Batch Workflow Processing",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.461609,
      "updated_at": 1754957552.461609
    },
    "concept_3521": {
      "id": "concept_3521",
      "type": "concept",
      "name": "Initialize function call logger FIRST",
      "description": "Concept: Initialize function call logger FIRST",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.462197,
      "updated_at": 1754957552.462197
    },
    "concept_3522": {
      "id": "concept_3522",
      "type": "concept",
      "name": "context_parts.append(f\"Assistant Identity: {context_summary}\")",
      "description": "Concept: context_parts.append(f\"Assistant Identity: {context_summary}\")",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.462792,
      "updated_at": 1754957552.462792
    },
    "concept_3523": {
      "id": "concept_3523",
      "type": "concept",
      "name": "user_message: User's message",
      "description": "Concept: user_message: User's message",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.4633238,
      "updated_at": 1754957552.4633238
    },
    "concept_3524": {
      "id": "concept_3524",
      "type": "concept",
      "name": "Quality assessment with scores and suggestions",
      "description": "Concept: Quality assessment with scores and suggestions",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.463868,
      "updated_at": 1754957552.463868
    },
    "concept_3525": {
      "id": "concept_3525",
      "type": "concept",
      "name": "===== DOMAIN 3: PROCESSING & THINKING =====",
      "description": "Concept: ===== DOMAIN 3: PROCESSING & THINKING =====",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.464544,
      "updated_at": 1754957552.464544
    },
    "concept_3526": {
      "id": "concept_3526",
      "type": "concept",
      "name": "workflow_mode,",
      "description": "Concept: workflow_mode,",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.465133,
      "updated_at": 1754957552.465133
    },
    "concept_3527": {
      "id": "concept_3527",
      "type": "concept",
      "name": "\"recommendations\": [\"Enable full context analyzer for detailed insights\"]",
      "description": "Concept: \"recommendations\": [\"Enable full context analyzer for detailed insights\"]",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.465727,
      "updated_at": 1754957552.465727
    },
    "concept_3528": {
      "id": "concept_3528",
      "type": "concept",
      "name": "# Execute workflow performance analysis",
      "description": "Concept: # Execute workflow performance analysis",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.466243,
      "updated_at": 1754957552.466243
    },
    "concept_3529": {
      "id": "concept_3529",
      "type": "concept",
      "name": "mcp_client",
      "description": "Concept: mcp_client",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.466721,
      "updated_at": 1754957552.466721
    },
    "concept_3530": {
      "id": "concept_3530",
      "type": "concept",
      "name": "logger.info(\"\ud83d\udcda Phase 3: Continuous Learning\")",
      "description": "Concept: logger.info(\"\ud83d\udcda Phase 3: Continuous Learning\")",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.467794,
      "updated_at": 1754957552.467794
    },
    "concept_3531": {
      "id": "concept_3531",
      "type": "concept",
      "name": "user_message,",
      "description": "Concept: user_message,",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.468807,
      "updated_at": 1754957552.468807
    },
    "concept_3532": {
      "id": "concept_3532",
      "type": "concept",
      "name": "logger.error(f\"Error in deep context analysis: {str(e)}\")",
      "description": "Concept: logger.error(f\"Error in deep context analysis: {str(e)}\")",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.46944,
      "updated_at": 1754957552.46944
    },
    "concept_3533": {
      "id": "concept_3533",
      "type": "concept",
      "name": "\"search_results\": []",
      "description": "Concept: \"search_results\": []",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.4699452,
      "updated_at": 1754957552.4699452
    },
    "concept_3534": {
      "id": "concept_3534",
      "type": "concept",
      "name": "This would call the actual memory_stats function",
      "description": "Concept: This would call the actual memory_stats function",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.470473,
      "updated_at": 1754957552.470473
    },
    "concept_3535": {
      "id": "concept_3535",
      "type": "concept",
      "name": "user_info = context_result.get(\"user_info\", {}) if context_result.get(\"success\") else {}",
      "description": "Concept: user_info = context_result.get(\"user_info\", {}) if context_result.get(\"success\") else {}",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.471044,
      "updated_at": 1754957552.471044
    },
    "concept_3536": {
      "id": "concept_3536",
      "type": "concept",
      "name": "\ud83c\udfaf Assess Context Quality",
      "description": "Concept: \ud83c\udfaf Assess Context Quality",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.471801,
      "updated_at": 1754957552.471801
    },
    "concept_3537": {
      "id": "concept_3537",
      "type": "concept",
      "name": "MONITORING",
      "description": "Concept: MONITORING",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.472279,
      "updated_at": 1754957552.472279
    },
    "concept_3538": {
      "id": "concept_3538",
      "type": "concept",
      "name": "# Prepare input for context analysis",
      "description": "Concept: # Prepare input for context analysis",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.47279,
      "updated_at": 1754957552.47279
    },
    "concept_3539": {
      "id": "concept_3539",
      "type": "concept",
      "name": "Automatically learns from Cursor conversations and updates memory",
      "description": "Concept: Automatically learns from Cursor conversations and updates memory",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.4733398,
      "updated_at": 1754957552.4733398
    },
    "concept_3540": {
      "id": "concept_3540",
      "type": "concept",
      "name": "get_function_logger",
      "description": "Concept: get_function_logger",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.4738402,
      "updated_at": 1754957552.4738402
    },
    "concept_3541": {
      "id": "concept_3541",
      "type": "concept",
      "name": "list",
      "description": "Concept: list",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.47432,
      "updated_at": 1754957552.47432
    },
    "concept_3542": {
      "id": "concept_3542",
      "type": "concept",
      "name": "from plugins.enhanced_context_integration import EnhancedContextIntegrationPlugin",
      "description": "Concept: from plugins.enhanced_context_integration import EnhancedContextIntegrationPlugin",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.474887,
      "updated_at": 1754957552.474887
    },
    "concept_3543": {
      "id": "concept_3543",
      "type": "concept",
      "name": "\"user_names\": user_info.get(\"name\", []),",
      "description": "Concept: \"user_names\": user_info.get(\"name\", []),",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.475405,
      "updated_at": 1754957552.475405
    },
    "concept_3544": {
      "id": "concept_3544",
      "type": "concept",
      "name": "Only register essential debugging tools in debug mode",
      "description": "Concept: Only register essential debugging tools in debug mode",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.4759371,
      "updated_at": 1754957552.4759371
    },
    "concept_3545": {
      "id": "concept_3545",
      "type": "concept",
      "name": "Call a tool by name with parameters and automatically log everything",
      "description": "Concept: Call a tool by name with parameters and automatically log everything",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.476844,
      "updated_at": 1754957552.476844
    },
    "concept_3546": {
      "id": "concept_3546",
      "type": "concept",
      "name": "target_goal: What we're trying to achieve",
      "description": "Concept: target_goal: What we're trying to achieve",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.477359,
      "updated_at": 1754957552.477359
    },
    "concept_3547": {
      "id": "concept_3547",
      "type": "concept",
      "name": "Returns:",
      "description": "Concept: Returns:",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.478385,
      "updated_at": 1754957552.478385
    },
    "concept_3548": {
      "id": "concept_3548",
      "type": "concept",
      "name": "result = await plugin._orchestrate_tools_handler(context_data, target_goal)",
      "description": "Concept: result = await plugin._orchestrate_tools_handler(context_data, target_goal)",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.4790862,
      "updated_at": 1754957552.4790862
    },
    "concept_3549": {
      "id": "concept_3549",
      "type": "concept",
      "name": "table_counts[table] = 0",
      "description": "Concept: table_counts[table] = 0",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.479632,
      "updated_at": 1754957552.479632
    },
    "concept_3550": {
      "id": "concept_3550",
      "type": "concept",
      "name": "Enhanced context data with quality metrics",
      "description": "Concept: Enhanced context data with quality metrics",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.48015,
      "updated_at": 1754957552.48015
    },
    "concept_3551": {
      "id": "concept_3551",
      "type": "concept",
      "name": "target_metrics: Target metrics to improve",
      "description": "Concept: target_metrics: Target metrics to improve",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.4806771,
      "updated_at": 1754957552.4806771
    },
    "concept_3552": {
      "id": "concept_3552",
      "type": "concept",
      "name": "\"assistant_name\": \"Johny\",",
      "description": "Concept: \"assistant_name\": \"Johny\",",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.481558,
      "updated_at": 1754957552.481558
    },
    "concept_3553": {
      "id": "concept_3553",
      "type": "concept",
      "name": "conversation_data",
      "description": "Concept: conversation_data",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.482052,
      "updated_at": 1754957552.482052
    },
    "concept_3554": {
      "id": "concept_3554",
      "type": "concept",
      "name": "\"memory_system\": \"Persistent with emotional weighting\",",
      "description": "Concept: \"memory_system\": \"Persistent with emotional weighting\",",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.4825852,
      "updated_at": 1754957552.4825852
    },
    "concept_3555": {
      "id": "concept_3555",
      "type": "concept",
      "name": "actual_mcp_tools",
      "description": "Concept: actual_mcp_tools",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.483079,
      "updated_at": 1754957552.483079
    },
    "concept_3556": {
      "id": "concept_3556",
      "type": "concept",
      "name": "# STEP 3: Create enhanced AI prompt with memory context",
      "description": "Concept: # STEP 3: Create enhanced AI prompt with memory context",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.4840178,
      "updated_at": 1754957552.4840178
    },
    "concept_3557": {
      "id": "concept_3557",
      "type": "concept",
      "name": "# Fallback response without memory",
      "description": "Concept: # Fallback response without memory",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.484534,
      "updated_at": 1754957552.484534
    },
    "concept_3558": {
      "id": "concept_3558",
      "type": "concept",
      "name": "\"function_filter\": function_name,",
      "description": "Concept: \"function_filter\": function_name,",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.4850519,
      "updated_at": 1754957552.4850519
    },
    "concept_3559": {
      "id": "concept_3559",
      "type": "concept",
      "name": "functionality",
      "description": "Concept: functionality",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.485536,
      "updated_at": 1754957552.485536
    },
    "concept_3560": {
      "id": "concept_3560",
      "type": "concept",
      "name": "\"plugin_system\": {",
      "description": "Concept: \"plugin_system\": {",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.486028,
      "updated_at": 1754957552.486028
    },
    "concept_3561": {
      "id": "concept_3561",
      "type": "concept",
      "name": "logger.error(f\"\u274c Enhanced context retrieval failed: {str(e)}\")",
      "description": "Concept: logger.error(f\"\u274c Enhanced context retrieval failed: {str(e)}\")",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.487193,
      "updated_at": 1754957552.487193
    },
    "concept_3562": {
      "id": "concept_3562",
      "type": "concept",
      "name": "\ud83c\udfe5 Workflow Health Check",
      "description": "Concept: \ud83c\udfe5 Workflow Health Check",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.488055,
      "updated_at": 1754957552.488055
    },
    "concept_3563": {
      "id": "concept_3563",
      "type": "concept",
      "name": "\"cursor_integration\": {",
      "description": "Concept: \"cursor_integration\": {",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.489086,
      "updated_at": 1754957552.489086
    },
    "concept_3564": {
      "id": "concept_3564",
      "type": "concept",
      "name": "Phase",
      "description": "Concept: Phase",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.489592,
      "updated_at": 1754957552.489592
    },
    "concept_3565": {
      "id": "concept_3565",
      "type": "concept",
      "name": "INPUT",
      "description": "Concept: INPUT",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.4902232,
      "updated_at": 1754957552.4902232
    },
    "concept_3566": {
      "id": "concept_3566",
      "type": "concept",
      "name": "\"session_statistics\": {}",
      "description": "Concept: \"session_statistics\": {}",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.490748,
      "updated_at": 1754957552.490748
    },
    "concept_3567": {
      "id": "concept_3567",
      "type": "concept",
      "name": "Quick memory-enabled chat - simplified version",
      "description": "Concept: Quick memory-enabled chat - simplified version",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.491633,
      "updated_at": 1754957552.491633
    },
    "concept_3568": {
      "id": "concept_3568",
      "type": "concept",
      "name": "using multiple criteria and generates improvement suggestions.",
      "description": "Concept: using multiple criteria and generates improvement suggestions.",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.49219,
      "updated_at": 1754957552.49219
    },
    "concept_3569": {
      "id": "concept_3569",
      "type": "concept",
      "name": "async def search_function_calls(search_term: str, limit: int = 20) -> dict:",
      "description": "Concept: async def search_function_calls(search_term: str, limit: int = 20) -> dict:",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.492758,
      "updated_at": 1754957552.492758
    },
    "concept_3570": {
      "id": "concept_3570",
      "type": "concept",
      "name": "break",
      "description": "Concept: break",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.493244,
      "updated_at": 1754957552.493244
    },
    "concept_3571": {
      "id": "concept_3571",
      "type": "concept",
      "name": "learning_focus: What to focus on learning",
      "description": "Concept: learning_focus: What to focus on learning",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.493771,
      "updated_at": 1754957552.493771
    },
    "concept_3572": {
      "id": "concept_3572",
      "type": "concept",
      "name": "brain_functions",
      "description": "Concept: brain_functions",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.4942589,
      "updated_at": 1754957552.4942589
    },
    "concept_3573": {
      "id": "concept_3573",
      "type": "concept",
      "name": "# Execute comprehensive context building",
      "description": "Concept: # Execute comprehensive context building",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.4951282,
      "updated_at": 1754957552.4951282
    },
    "concept_3574": {
      "id": "concept_3574",
      "type": "concept",
      "name": "ADAPTATION",
      "description": "Concept: ADAPTATION",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.49561,
      "updated_at": 1754957552.49561
    },
    "concept_3575": {
      "id": "concept_3575",
      "type": "concept",
      "name": "total_data_points = 0",
      "description": "Concept: total_data_points = 0",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.496108,
      "updated_at": 1754957552.496108
    },
    "concept_3576": {
      "id": "concept_3576",
      "type": "concept",
      "name": "Implements continuous learning and context improvement.",
      "description": "Concept: Implements continuous learning and context improvement.",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.496642,
      "updated_at": 1754957552.496642
    },
    "concept_3577": {
      "id": "concept_3577",
      "type": "concept",
      "name": "===== DOMAIN 2: MEMORY & STORAGE =====",
      "description": "Concept: ===== DOMAIN 2: MEMORY & STORAGE =====",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.497159,
      "updated_at": 1754957552.497159
    },
    "concept_3578": {
      "id": "concept_3578",
      "type": "concept",
      "name": "\"type\": conversation_type,",
      "description": "Concept: \"type\": conversation_type,",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.497663,
      "updated_at": 1754957552.497663
    },
    "concept_3579": {
      "id": "concept_3579",
      "type": "concept",
      "name": "# User information",
      "description": "Concept: # User information",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.498337,
      "updated_at": 1754957552.498337
    },
    "concept_3580": {
      "id": "concept_3580",
      "type": "concept",
      "name": "user_message: User's message for context analysis",
      "description": "Concept: user_message: User's message for context analysis",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.498941,
      "updated_at": 1754957552.498941
    },
    "concept_3581": {
      "id": "concept_3581",
      "type": "concept",
      "name": "context_parts.append(f\"User: {', '.join(user_info['name'][:2])}\")",
      "description": "Concept: context_parts.append(f\"User: {', '.join(user_info['name'][:2])}\")",
      "source": "main.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "main.py"
        ]
      },
      "created_at": 1754957552.49953,
      "updated_at": 1754957552.49953
    },
    "doc_3582": {
      "id": "doc_3582",
      "type": "document",
      "name": "Mcp-Server-Config-Shareable",
      "description": "Document: mcp-server-config-shareable.json",
      "source": "mcp-server-config-shareable.json",
      "confidence": 0.9,
      "metadata": {
        "file_size": 363,
        "lines": 20,
        "language": "unknown",
        "last_modified": 1754937937.3891716
      },
      "created_at": 1754957552.499845,
      "updated_at": 1754957552.499845
    },
    "doc_3583": {
      "id": "doc_3583",
      "type": "document",
      "name": "Mcp_Integration_Results",
      "description": "Document: mcp_integration_results.json",
      "source": "mcp_integration_results.json",
      "confidence": 0.9,
      "metadata": {
        "file_size": 7336,
        "lines": 188,
        "language": "unknown",
        "last_modified": 1754951231.583564
      },
      "created_at": 1754957552.501091,
      "updated_at": 1754957552.501091
    },
    "doc_3584": {
      "id": "doc_3584",
      "type": "document",
      "name": "Project_Index_1754957141",
      "description": "Document: project_index_1754957141.json",
      "source": "project_index_1754957141.json",
      "confidence": 0.9,
      "metadata": {
        "file_size": 0,
        "lines": 1,
        "language": "unknown",
        "last_modified": 1754957141.1717808
      },
      "created_at": 1754957552.501198,
      "updated_at": 1754957552.501198
    },
    "doc_3585": {
      "id": "doc_3585",
      "type": "document",
      "name": "Project_Index_1754957155",
      "description": "Document: project_index_1754957155.json",
      "source": "project_index_1754957155.json",
      "confidence": 0.9,
      "metadata": {
        "file_size": 48542,
        "lines": 1682,
        "language": "unknown",
        "last_modified": 1754957155.704116
      },
      "created_at": 1754957552.509879,
      "updated_at": 1754957552.509879
    },
    "doc_3586": {
      "id": "doc_3586",
      "type": "document",
      "name": "Project_Scanner",
      "description": "Document: project_scanner.py",
      "source": "project_scanner.py",
      "confidence": 0.9,
      "metadata": {
        "file_size": 41846,
        "lines": 1052,
        "language": "python",
        "last_modified": 1754957255.960201
      },
      "created_at": 1754957552.523374,
      "updated_at": 1754957552.523374
    },
    "concept_3587": {
      "id": "concept_3587",
      "type": "concept",
      "name": "Show first 5",
      "description": "Concept: Show first 5",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.524003,
      "updated_at": 1754957552.524003
    },
    "concept_3588": {
      "id": "concept_3588",
      "type": "concept",
      "name": "imports",
      "description": "Concept: imports",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.524639,
      "updated_at": 1754957552.524639
    },
    "concept_3589": {
      "id": "concept_3589",
      "type": "concept",
      "name": "Record scan history for tracking and analysis",
      "description": "Concept: Record scan history for tracking and analysis",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.5252,
      "updated_at": 1754957552.5252
    },
    "concept_3590": {
      "id": "concept_3590",
      "type": "concept",
      "name": "package_manager",
      "description": "Concept: package_manager",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.5256882,
      "updated_at": 1754957552.5256882
    },
    "concept_3591": {
      "id": "concept_3591",
      "type": "concept",
      "name": "Check for common file types",
      "description": "Concept: Check for common file types",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.5265548,
      "updated_at": 1754957552.5265548
    },
    "concept_3592": {
      "id": "concept_3592",
      "type": "concept",
      "name": "file_type_counts",
      "description": "Concept: file_type_counts",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.527435,
      "updated_at": 1754957552.527435
    },
    "concept_3593": {
      "id": "concept_3593",
      "type": "concept",
      "name": "Calculate a hash of the file content for change detection",
      "description": "Concept: Calculate a hash of the file content for change detection",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.5279732,
      "updated_at": 1754957552.5279732
    },
    "concept_3594": {
      "id": "concept_3594",
      "type": "concept",
      "name": "Parse dependencies",
      "description": "Concept: Parse dependencies",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.528469,
      "updated_at": 1754957552.528469
    },
    "concept_3595": {
      "id": "concept_3595",
      "type": "concept",
      "name": "File was deleted",
      "description": "Concept: File was deleted",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.52896,
      "updated_at": 1754957552.52896
    },
    "concept_3596": {
      "id": "concept_3596",
      "type": "concept",
      "name": "history",
      "description": "Concept: history",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.529794,
      "updated_at": 1754957552.529794
    },
    "concept_3597": {
      "id": "concept_3597",
      "type": "concept",
      "name": "Save detailed index to file",
      "description": "Concept: Save detailed index to file",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.530786,
      "updated_at": 1754957552.530786
    },
    "concept_3598": {
      "id": "concept_3598",
      "type": "concept",
      "name": "full_path",
      "description": "Concept: full_path",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.53131,
      "updated_at": 1754957552.53131
    },
    "concept_3599": {
      "id": "concept_3599",
      "type": "concept",
      "name": "purpose_counts",
      "description": "Concept: purpose_counts",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.531827,
      "updated_at": 1754957552.531827
    },
    "concept_3600": {
      "id": "concept_3600",
      "type": "concept",
      "name": "by_source",
      "description": "Concept: by_source",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.532359,
      "updated_at": 1754957552.532359
    },
    "concept_3601": {
      "id": "concept_3601",
      "type": "concept",
      "name": "**Root**: {index.project_root}",
      "description": "Concept: **Root**: {index.project_root}",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.532914,
      "updated_at": 1754957552.532914
    },
    "concept_3602": {
      "id": "concept_3602",
      "type": "concept",
      "name": "Update directory language and framework sets",
      "description": "Concept: Update directory language and framework sets",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.533439,
      "updated_at": 1754957552.533439
    },
    "concept_3603": {
      "id": "concept_3603",
      "type": "concept",
      "name": "_parse_dependency_file",
      "description": "Concept: _parse_dependency_file",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.533937,
      "updated_at": 1754957552.533937
    },
    "concept_3604": {
      "id": "concept_3604",
      "type": "concept",
      "name": "size",
      "description": "Concept: size",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.534411,
      "updated_at": 1754957552.534411
    },
    "concept_3605": {
      "id": "concept_3605",
      "type": "concept",
      "name": "# \ud83d\udde3\ufe0f Languages",
      "description": "Concept: # \ud83d\udde3\ufe0f Languages",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.535071,
      "updated_at": 1754957552.535071
    },
    "concept_3606": {
      "id": "concept_3606",
      "type": "concept",
      "name": "subdir_count",
      "description": "Concept: subdir_count",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.5359108,
      "updated_at": 1754957552.5359108
    },
    "concept_3607": {
      "id": "concept_3607",
      "type": "concept",
      "name": "index",
      "description": "Concept: index",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.5363882,
      "updated_at": 1754957552.5363882
    },
    "concept_3608": {
      "id": "concept_3608",
      "type": "concept",
      "name": "Test coverage",
      "description": "Concept: Test coverage",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.537239,
      "updated_at": 1754957552.537239
    },
    "concept_3609": {
      "id": "concept_3609",
      "type": "concept",
      "name": "Parse requirement line (basic implementation)",
      "description": "Concept: Parse requirement line (basic implementation)",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.537767,
      "updated_at": 1754957552.537767
    },
    "concept_3610": {
      "id": "concept_3610",
      "type": "concept",
      "name": "Parse go.mod file",
      "description": "Concept: Parse go.mod file",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.538256,
      "updated_at": 1754957552.538256
    },
    "concept_3611": {
      "id": "concept_3611",
      "type": "concept",
      "name": "Add purpose attribute",
      "description": "Concept: Add purpose attribute",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.539108,
      "updated_at": 1754957552.5391092
    },
    "concept_3612": {
      "id": "concept_3612",
      "type": "concept",
      "name": "Detect the development environment and tools",
      "description": "Concept: Detect the development environment and tools",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.5396411,
      "updated_at": 1754957552.5396411
    },
    "concept_3613": {
      "id": "concept_3613",
      "type": "concept",
      "name": "Recursively convert sets to lists for JSON serialization",
      "description": "Concept: Recursively convert sets to lists for JSON serialization",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.540236,
      "updated_at": 1754957552.540236
    },
    "concept_3614": {
      "id": "concept_3614",
      "type": "concept",
      "name": "total_size",
      "description": "Concept: total_size",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.5412421,
      "updated_at": 1754957552.5412421
    },
    "concept_3615": {
      "id": "concept_3615",
      "type": "concept",
      "name": "\ud83d\udde3\ufe0f Languages",
      "description": "Concept: \ud83d\udde3\ufe0f Languages",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.542603,
      "updated_at": 1754957552.542603
    },
    "concept_3616": {
      "id": "concept_3616",
      "type": "concept",
      "name": "_parse_go_dependencies",
      "description": "Concept: _parse_go_dependencies",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.543108,
      "updated_at": 1754957552.543108
    },
    "concept_3617": {
      "id": "concept_3617",
      "type": "concept",
      "name": "Determine if a file should be skipped during scanning",
      "description": "Concept: Determine if a file should be skipped during scanning",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.543634,
      "updated_at": 1754957552.543634
    },
    "concept_3618": {
      "id": "concept_3618",
      "type": "concept",
      "name": "Extract imports from a file (basic implementation)",
      "description": "Concept: Extract imports from a file (basic implementation)",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.5441558,
      "updated_at": 1754957552.5441558
    },
    "concept_3619": {
      "id": "concept_3619",
      "type": "concept",
      "name": "Java compiled",
      "description": "Concept: Java compiled",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.54464,
      "updated_at": 1754957552.54464
    },
    "concept_3620": {
      "id": "concept_3620",
      "type": "concept",
      "name": "total_directories",
      "description": "Concept: total_directories",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.545129,
      "updated_at": 1754957552.54513
    },
    "concept_3621": {
      "id": "concept_3621",
      "type": "concept",
      "name": "framework_counts",
      "description": "Concept: framework_counts",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.54562,
      "updated_at": 1754957552.54562
    },
    "concept_3622": {
      "id": "concept_3622",
      "type": "concept",
      "name": "build",
      "description": "Concept: build",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.5460951,
      "updated_at": 1754957552.5460951
    },
    "concept_3623": {
      "id": "concept_3623",
      "type": "concept",
      "name": "Detect the purpose of a file or directory",
      "description": "Concept: Detect the purpose of a file or directory",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.546609,
      "updated_at": 1754957552.546609
    },
    "concept_3624": {
      "id": "concept_3624",
      "type": "concept",
      "name": "scan_record",
      "description": "Concept: scan_record",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.5470898,
      "updated_at": 1754957552.5470898
    },
    "concept_3625": {
      "id": "concept_3625",
      "type": "concept",
      "name": "Main function for testing the project scanner",
      "description": "Concept: Main function for testing the project scanner",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.5476081,
      "updated_at": 1754957552.5476081
    },
    "concept_3626": {
      "id": "concept_3626",
      "type": "concept",
      "name": "dir_info",
      "description": "Concept: dir_info",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.548085,
      "updated_at": 1754957552.548085
    },
    "concept_3627": {
      "id": "concept_3627",
      "type": "concept",
      "name": "Entity",
      "description": "Concept: Entity",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.5485692,
      "updated_at": 1754957552.5485702
    },
    "concept_3628": {
      "id": "concept_3628",
      "type": "concept",
      "name": "Export the project index in various formats",
      "description": "Concept: Export the project index in various formats",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.549097,
      "updated_at": 1754957552.549098
    },
    "concept_3629": {
      "id": "concept_3629",
      "type": "concept",
      "name": "Python cache",
      "description": "Concept: Python cache",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.549589,
      "updated_at": 1754957552.549589
    },
    "concept_3630": {
      "id": "concept_3630",
      "type": "concept",
      "name": "**Total Directories**: {index.total_directories}",
      "description": "Concept: **Total Directories**: {index.total_directories}",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.550115,
      "updated_at": 1754957552.550115
    },
    "concept_3631": {
      "id": "concept_3631",
      "type": "concept",
      "name": "**Dependencies**: {len(index.dependencies)}",
      "description": "Concept: **Dependencies**: {len(index.dependencies)}",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.551219,
      "updated_at": 1754957552.551219
    },
    "concept_3632": {
      "id": "concept_3632",
      "type": "concept",
      "name": "Complete project index",
      "description": "Concept: Complete project index",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.5518148,
      "updated_at": 1754957552.551816
    },
    "concept_3633": {
      "id": "concept_3633",
      "type": "concept",
      "name": "Detect databases",
      "description": "Concept: Detect databases",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.552784,
      "updated_at": 1754957552.552784
    },
    "concept_3634": {
      "id": "concept_3634",
      "type": "concept",
      "name": "Information about a directory",
      "description": "Concept: Information about a directory",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.553652,
      "updated_at": 1754957552.553652
    },
    "concept_3635": {
      "id": "concept_3635",
      "type": "concept",
      "name": "deps_match",
      "description": "Concept: deps_match",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.55528,
      "updated_at": 1754957552.55528
    },
    "concept_3636": {
      "id": "concept_3636",
      "type": "concept",
      "name": "Detect dependencies",
      "description": "Concept: Detect dependencies",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.5561101,
      "updated_at": 1754957552.5561101
    },
    "concept_3637": {
      "id": "concept_3637",
      "type": "concept",
      "name": "Build project context and metadata",
      "description": "Concept: Build project context and metadata",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.556633,
      "updated_at": 1754957552.556633
    },
    "concept_3638": {
      "id": "concept_3638",
      "type": "concept",
      "name": "dependency_files",
      "description": "Concept: dependency_files",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.5575218,
      "updated_at": 1754957552.5575218
    },
    "concept_3639": {
      "id": "concept_3639",
      "type": "concept",
      "name": "stack",
      "description": "Concept: stack",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.5587358,
      "updated_at": 1754957552.5587358
    },
    "concept_3640": {
      "id": "concept_3640",
      "type": "concept",
      "name": "Format framework summary for display",
      "description": "Concept: Format framework summary for display",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.559247,
      "updated_at": 1754957552.559247
    },
    "concept_3641": {
      "id": "concept_3641",
      "type": "concept",
      "name": "Keep only last 10 scans",
      "description": "Concept: Keep only last 10 scans",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.560107,
      "updated_at": 1754957552.560107
    },
    "concept_3642": {
      "id": "concept_3642",
      "type": "concept",
      "name": "SpringBootApplication",
      "description": "Concept: SpringBootApplication",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.560668,
      "updated_at": 1754957552.560668
    },
    "concept_3643": {
      "id": "concept_3643",
      "type": "concept",
      "name": "Process and index a directory",
      "description": "Concept: Process and index a directory",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.561385,
      "updated_at": 1754957552.561385
    },
    "concept_3644": {
      "id": "concept_3644",
      "type": "concept",
      "name": "Skip common directories that don't need indexing",
      "description": "Concept: Skip common directories that don't need indexing",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.562003,
      "updated_at": 1754957552.562003
    },
    "concept_3645": {
      "id": "concept_3645",
      "type": "concept",
      "name": "IDE files",
      "description": "Concept: IDE files",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.5626209,
      "updated_at": 1754957552.5626209
    },
    "concept_3646": {
      "id": "concept_3646",
      "type": "concept",
      "name": "Count files and subdirectories",
      "description": "Concept: Count files and subdirectories",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.563155,
      "updated_at": 1754957552.563155
    },
    "concept_3647": {
      "id": "concept_3647",
      "type": "concept",
      "name": "Convert sets to lists for JSON serialization",
      "description": "Concept: Convert sets to lists for JSON serialization",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.564857,
      "updated_at": 1754957552.564857
    },
    "concept_3648": {
      "id": "concept_3648",
      "type": "concept",
      "name": "Backup files",
      "description": "Concept: Backup files",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.565377,
      "updated_at": 1754957552.565377
    },
    "concept_3649": {
      "id": "concept_3649",
      "type": "concept",
      "name": "Scan file system",
      "description": "Concept: Scan file system",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.5662131,
      "updated_at": 1754957552.5662131
    },
    "concept_3650": {
      "id": "concept_3650",
      "type": "concept",
      "name": "\ud83d\udcca Statistics",
      "description": "Concept: \ud83d\udcca Statistics",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.566856,
      "updated_at": 1754957552.566856
    },
    "concept_3651": {
      "id": "concept_3651",
      "type": "concept",
      "name": "depth",
      "description": "Concept: depth",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.5673401,
      "updated_at": 1754957552.5673401
    },
    "concept_3652": {
      "id": "concept_3652",
      "type": "concept",
      "name": "Comprehensive project scanning and indexing",
      "description": "Concept: Comprehensive project scanning and indexing",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.568213,
      "updated_at": 1754957552.568213
    },
    "concept_3653": {
      "id": "concept_3653",
      "type": "concept",
      "name": "Parse Cargo.toml file",
      "description": "Concept: Parse Cargo.toml file",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.5687108,
      "updated_at": 1754957552.5687108
    },
    "concept_3654": {
      "id": "concept_3654",
      "type": "concept",
      "name": "Comprehensive project scanning and indexing system",
      "description": "Concept: Comprehensive project scanning and indexing system",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.5692391,
      "updated_at": 1754957552.5692391
    },
    "concept_3655": {
      "id": "concept_3655",
      "type": "concept",
      "name": "Categorize directories",
      "description": "Concept: Categorize directories",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.5697489,
      "updated_at": 1754957552.5697489
    },
    "concept_3656": {
      "id": "concept_3656",
      "type": "concept",
      "name": "**Scan Time**: {datetime.fromtimestamp(index.scan_time).strftime('%Y-%m-%d %H:%M:%S')}",
      "description": "Concept: **Scan Time**: {datetime.fromtimestamp(index.scan_time).strftime('%Y-%m-%d %H:%M:%S')}",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.570327,
      "updated_at": 1754957552.570327
    },
    "concept_3657": {
      "id": "concept_3657",
      "type": "concept",
      "name": "'package', 'module', 'framework'",
      "description": "Concept: 'package', 'module', 'framework'",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.570946,
      "updated_at": 1754957552.570946
    },
    "concept_3658": {
      "id": "concept_3658",
      "type": "concept",
      "name": "files",
      "description": "Concept: files",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.5715241,
      "updated_at": 1754957552.5715241
    },
    "concept_3659": {
      "id": "concept_3659",
      "type": "concept",
      "name": "file_metadata",
      "description": "Concept: file_metadata",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.572066,
      "updated_at": 1754957552.572066
    },
    "concept_3660": {
      "id": "concept_3660",
      "type": "concept",
      "name": "_process_file",
      "description": "Concept: _process_file",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.572593,
      "updated_at": 1754957552.572593
    },
    "concept_3661": {
      "id": "concept_3661",
      "type": "concept",
      "name": "file_hash",
      "description": "Concept: file_hash",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.573174,
      "updated_at": 1754957552.573174
    },
    "concept_3662": {
      "id": "concept_3662",
      "type": "concept",
      "name": "env",
      "description": "Concept: env",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.573781,
      "updated_at": 1754957552.573781
    },
    "concept_3663": {
      "id": "concept_3663",
      "type": "concept",
      "name": "index_data",
      "description": "Concept: index_data",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.57474,
      "updated_at": 1754957552.57474
    },
    "concept_3664": {
      "id": "concept_3664",
      "type": "concept",
      "name": "Detect the type of a file",
      "description": "Concept: Detect the type of a file",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.575639,
      "updated_at": 1754957552.575639
    },
    "concept_3665": {
      "id": "concept_3665",
      "type": "concept",
      "name": "Parse pip requirements.txt or pyproject.toml file",
      "description": "Concept: Parse pip requirements.txt or pyproject.toml file",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.5761821,
      "updated_at": 1754957552.5761821
    },
    "concept_3666": {
      "id": "concept_3666",
      "type": "concept",
      "name": "Calculate max depth",
      "description": "Concept: Calculate max depth",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.57669,
      "updated_at": 1754957552.57669
    },
    "concept_3667": {
      "id": "concept_3667",
      "type": "concept",
      "name": "_parse_pip_dependencies",
      "description": "Concept: _parse_pip_dependencies",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.577232,
      "updated_at": 1754957552.577232
    },
    "concept_3668": {
      "id": "concept_3668",
      "type": "concept",
      "name": "Identify the technology stack being used",
      "description": "Concept: Identify the technology stack being used",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.577755,
      "updated_at": 1754957552.577756
    },
    "concept_3669": {
      "id": "concept_3669",
      "type": "concept",
      "name": "Extract dependencies and imports (basic implementation)",
      "description": "Concept: Extract dependencies and imports (basic implementation)",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.578296,
      "updated_at": 1754957552.578296
    },
    "concept_3670": {
      "id": "concept_3670",
      "type": "concept",
      "name": "version",
      "description": "Concept: version",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.578778,
      "updated_at": 1754957552.578778
    },
    "concept_3671": {
      "id": "concept_3671",
      "type": "concept",
      "name": "hash",
      "description": "Concept: hash",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.579263,
      "updated_at": 1754957552.579263
    },
    "concept_3672": {
      "id": "concept_3672",
      "type": "concept",
      "name": "git_dir",
      "description": "Concept: git_dir",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.579743,
      "updated_at": 1754957552.579743
    },
    "concept_3673": {
      "id": "concept_3673",
      "type": "concept",
      "name": "Table",
      "description": "Concept: Table",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.580222,
      "updated_at": 1754957552.580222
    },
    "concept_3674": {
      "id": "concept_3674",
      "type": "concept",
      "name": "Extract dependencies from a file (basic implementation)",
      "description": "Concept: Extract dependencies from a file (basic implementation)",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.580843,
      "updated_at": 1754957552.580843
    },
    "concept_3675": {
      "id": "concept_3675",
      "type": "concept",
      "name": "Parse npm package.json file",
      "description": "Concept: Parse npm package.json file",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.582082,
      "updated_at": 1754957552.582082
    },
    "concept_3676": {
      "id": "concept_3676",
      "type": "concept",
      "name": "_detect_dependencies",
      "description": "Concept: _detect_dependencies",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.582582,
      "updated_at": 1754957552.582582
    },
    "concept_3677": {
      "id": "concept_3677",
      "type": "concept",
      "name": "Detect project dependencies from package manager files",
      "description": "Concept: Detect project dependencies from package manager files",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.583851,
      "updated_at": 1754957552.583851
    },
    "concept_3678": {
      "id": "concept_3678",
      "type": "concept",
      "name": "Process files",
      "description": "Concept: Process files",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.584337,
      "updated_at": 1754957552.584337
    },
    "concept_3679": {
      "id": "concept_3679",
      "type": "concept",
      "name": "Initialize purpose to None",
      "description": "Concept: Initialize purpose to None",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.584838,
      "updated_at": 1754957552.584838
    },
    "concept_3680": {
      "id": "concept_3680",
      "type": "concept",
      "name": "Framework distribution",
      "description": "Concept: Framework distribution",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.585338,
      "updated_at": 1754957552.585338
    },
    "concept_3681": {
      "id": "concept_3681",
      "type": "concept",
      "name": "This is a basic implementation - can be enhanced later",
      "description": "Concept: This is a basic implementation - can be enhanced later",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.585869,
      "updated_at": 1754957552.585869
    },
    "concept_3682": {
      "id": "concept_3682",
      "type": "concept",
      "name": "Purpose distribution",
      "description": "Concept: Purpose distribution",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.5863628,
      "updated_at": 1754957552.5863638
    },
    "concept_3683": {
      "id": "concept_3683",
      "type": "concept",
      "name": "relative_root",
      "description": "Concept: relative_root",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.5868511,
      "updated_at": 1754957552.5868511
    },
    "concept_3684": {
      "id": "concept_3684",
      "type": "concept",
      "name": "Detect purpose",
      "description": "Concept: Detect purpose",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.587683,
      "updated_at": 1754957552.587683
    },
    "concept_3685": {
      "id": "concept_3685",
      "type": "concept",
      "name": "Create and return project index",
      "description": "Concept: Create and return project index",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.588189,
      "updated_at": 1754957552.588189
    },
    "concept_3686": {
      "id": "concept_3686",
      "type": "concept",
      "name": "gitignore",
      "description": "Concept: gitignore",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.589065,
      "updated_at": 1754957552.589065
    },
    "concept_3687": {
      "id": "concept_3687",
      "type": "concept",
      "name": "Detect version control system and configuration",
      "description": "Concept: Detect version control system and configuration",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.589587,
      "updated_at": 1754957552.589587
    },
    "concept_3688": {
      "id": "concept_3688",
      "type": "concept",
      "name": "Detect build files",
      "description": "Concept: Detect build files",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.590118,
      "updated_at": 1754957552.590118
    },
    "concept_3689": {
      "id": "concept_3689",
      "type": "concept",
      "name": "Project Index Summary",
      "description": "Concept: Project Index Summary",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.590681,
      "updated_at": 1754957552.590681
    },
    "concept_3690": {
      "id": "concept_3690",
      "type": "concept",
      "name": "OS files",
      "description": "Concept: OS files",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.591176,
      "updated_at": 1754957552.591176
    },
    "concept_3691": {
      "id": "concept_3691",
      "type": "concept",
      "name": "# \ud83d\udcca Statistics",
      "description": "Concept: # \ud83d\udcca Statistics",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.5918348,
      "updated_at": 1754957552.5918348
    },
    "concept_3692": {
      "id": "concept_3692",
      "type": "concept",
      "name": "_scan_file_system",
      "description": "Concept: _scan_file_system",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.5923278,
      "updated_at": 1754957552.5923278
    },
    "concept_3693": {
      "id": "concept_3693",
      "type": "concept",
      "name": "Build context",
      "description": "Concept: Build context",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.592816,
      "updated_at": 1754957552.592816
    },
    "concept_3694": {
      "id": "concept_3694",
      "type": "concept",
      "name": "Extract exports from a file (basic implementation)",
      "description": "Concept: Extract exports from a file (basic implementation)",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.593344,
      "updated_at": 1754957552.593344
    },
    "concept_3695": {
      "id": "concept_3695",
      "type": "concept",
      "name": "path_str",
      "description": "Concept: path_str",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.5942159,
      "updated_at": 1754957552.5942159
    },
    "concept_3696": {
      "id": "concept_3696",
      "type": "concept",
      "name": "language_patterns",
      "description": "Concept: language_patterns",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.594709,
      "updated_at": 1754957552.594709
    },
    "concept_3697": {
      "id": "concept_3697",
      "type": "concept",
      "name": "_record_scan_history",
      "description": "Concept: _record_scan_history",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.595205,
      "updated_at": 1754957552.595205
    },
    "concept_3698": {
      "id": "concept_3698",
      "type": "concept",
      "name": "Python compiled",
      "description": "Concept: Python compiled",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.5956962,
      "updated_at": 1754957552.5956962
    },
    "concept_3699": {
      "id": "concept_3699",
      "type": "concept",
      "name": "Information about project dependencies",
      "description": "Concept: Information about project dependencies",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.596606,
      "updated_at": 1754957552.596606
    },
    "concept_3700": {
      "id": "concept_3700",
      "type": "concept",
      "name": "max_depth",
      "description": "Concept: max_depth",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.59709,
      "updated_at": 1754957552.59709
    },
    "concept_3701": {
      "id": "concept_3701",
      "type": "concept",
      "name": "Group by source",
      "description": "Concept: Group by source",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.59758,
      "updated_at": 1754957552.59758
    },
    "concept_3702": {
      "id": "concept_3702",
      "type": "concept",
      "name": "context_index",
      "description": "Concept: context_index",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.598689,
      "updated_at": 1754957552.598689
    },
    "concept_3703": {
      "id": "concept_3703",
      "type": "concept",
      "name": "Generate a human-readable summary of the project",
      "description": "Concept: Generate a human-readable summary of the project",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.599581,
      "updated_at": 1754957552.599581
    },
    "concept_3704": {
      "id": "concept_3704",
      "type": "concept",
      "name": "\ud83c\udfd7\ufe0f Frameworks",
      "description": "Concept: \ud83c\udfd7\ufe0f Frameworks",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.600238,
      "updated_at": 1754957552.600238
    },
    "concept_3705": {
      "id": "concept_3705",
      "type": "concept",
      "name": "Detect the framework being used",
      "description": "Concept: Detect the framework being used",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.600853,
      "updated_at": 1754957552.600853
    },
    "concept_3706": {
      "id": "concept_3706",
      "type": "concept",
      "name": "parent_dir",
      "description": "Concept: parent_dir",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.601525,
      "updated_at": 1754957552.601525
    },
    "concept_3707": {
      "id": "concept_3707",
      "type": "concept",
      "name": "stat",
      "description": "Concept: stat",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.602056,
      "updated_at": 1754957552.602056
    },
    "concept_3708": {
      "id": "concept_3708",
      "type": "concept",
      "name": "Lock files",
      "description": "Concept: Lock files",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.6029708,
      "updated_at": 1754957552.6029708
    },
    "concept_3709": {
      "id": "concept_3709",
      "type": "concept",
      "name": "# \ud83d\udce6 Dependencies",
      "description": "Concept: # \ud83d\udce6 Dependencies",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.603783,
      "updated_at": 1754957552.603783
    },
    "concept_3710": {
      "id": "concept_3710",
      "type": "concept",
      "name": "dep_info",
      "description": "Concept: dep_info",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.604347,
      "updated_at": 1754957552.604347
    },
    "concept_3711": {
      "id": "concept_3711",
      "type": "concept",
      "name": "Create scanner and scan project",
      "description": "Concept: Create scanner and scan project",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.6048598,
      "updated_at": 1754957552.6048598
    },
    "concept_3712": {
      "id": "concept_3712",
      "type": "concept",
      "name": "Detect the build system and tools",
      "description": "Concept: Detect the build system and tools",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.605372,
      "updated_at": 1754957552.605372
    },
    "concept_3713": {
      "id": "concept_3713",
      "type": "concept",
      "name": "modified_time",
      "description": "Concept: modified_time",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.6058629,
      "updated_at": 1754957552.6058629
    },
    "concept_3714": {
      "id": "concept_3714",
      "type": "concept",
      "name": "relative_path",
      "description": "Concept: relative_path",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.6063511,
      "updated_at": 1754957552.6063511
    },
    "concept_3715": {
      "id": "concept_3715",
      "type": "concept",
      "name": "_convert_sets_to_lists",
      "description": "Concept: _convert_sets_to_lists",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.607235,
      "updated_at": 1754957552.607235
    },
    "concept_3716": {
      "id": "concept_3716",
      "type": "concept",
      "name": "vcs",
      "description": "Concept: vcs",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.6080499,
      "updated_at": 1754957552.6080499
    },
    "concept_3717": {
      "id": "concept_3717",
      "type": "concept",
      "name": "root_path",
      "description": "Concept: root_path",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.608535,
      "updated_at": 1754957552.608535
    },
    "concept_3718": {
      "id": "concept_3718",
      "type": "concept",
      "name": "Detect changes in the project since last scan",
      "description": "Concept: Detect changes in the project since last scan",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.609061,
      "updated_at": 1754957552.609061
    },
    "concept_3719": {
      "id": "concept_3719",
      "type": "concept",
      "name": "pattern_index",
      "description": "Concept: pattern_index",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.6098828,
      "updated_at": 1754957552.6098828
    },
    "concept_3720": {
      "id": "concept_3720",
      "type": "concept",
      "name": "Detect testing frameworks",
      "description": "Concept: Detect testing frameworks",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.610388,
      "updated_at": 1754957552.610388
    },
    "concept_3721": {
      "id": "concept_3721",
      "type": "concept",
      "name": "history_index",
      "description": "Concept: history_index",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.610995,
      "updated_at": 1754957552.610995
    },
    "concept_3722": {
      "id": "concept_3722",
      "type": "concept",
      "name": "File type distribution",
      "description": "Concept: File type distribution",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.6116328,
      "updated_at": 1754957552.6116328
    },
    "concept_3723": {
      "id": "concept_3723",
      "type": "concept",
      "name": "Process and index a file",
      "description": "Concept: Process and index a file",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.6122618,
      "updated_at": 1754957552.6122618
    },
    "concept_3724": {
      "id": "concept_3724",
      "type": "concept",
      "name": "Check if file has changed",
      "description": "Concept: Check if file has changed",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.612824,
      "updated_at": 1754957552.612824
    },
    "concept_3725": {
      "id": "concept_3725",
      "type": "concept",
      "name": "_process_directory",
      "description": "Concept: _process_directory",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.613716,
      "updated_at": 1754957552.613716
    },
    "concept_3726": {
      "id": "concept_3726",
      "type": "concept",
      "name": "Check for special files first",
      "description": "Concept: Check for special files first",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.614239,
      "updated_at": 1754957552.614239
    },
    "concept_3727": {
      "id": "concept_3727",
      "type": "concept",
      "name": "Detect build tools",
      "description": "Concept: Detect build tools",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.614739,
      "updated_at": 1754957552.614739
    },
    "concept_3728": {
      "id": "concept_3728",
      "type": "concept",
      "name": "'package.json', 'requirements.txt', etc.",
      "description": "Concept: 'package.json', 'requirements.txt', etc.",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.6152909,
      "updated_at": 1754957552.6152909
    },
    "concept_3729": {
      "id": "concept_3729",
      "type": "concept",
      "name": "\ud83d\udcc1 Project Overview",
      "description": "Concept: \ud83d\udcc1 Project Overview",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.6160052,
      "updated_at": 1754957552.6160052
    },
    "concept_3730": {
      "id": "concept_3730",
      "type": "concept",
      "name": "Version control",
      "description": "Concept: Version control",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.6165,
      "updated_at": 1754957552.6165
    },
    "concept_3731": {
      "id": "concept_3731",
      "type": "concept",
      "name": "Format language summary for display",
      "description": "Concept: Format language summary for display",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.617016,
      "updated_at": 1754957552.617016
    },
    "concept_3732": {
      "id": "concept_3732",
      "type": "concept",
      "name": "Detect IDE and editor files",
      "description": "Concept: Detect IDE and editor files",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.617524,
      "updated_at": 1754957552.617524
    },
    "concept_3733": {
      "id": "concept_3733",
      "type": "concept",
      "name": "\ud83d\udce6 Dependencies",
      "description": "Concept: \ud83d\udce6 Dependencies",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.618195,
      "updated_at": 1754957552.618195
    },
    "concept_3734": {
      "id": "concept_3734",
      "type": "concept",
      "name": "Parse require line",
      "description": "Concept: Parse require line",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.618701,
      "updated_at": 1754957552.618701
    },
    "concept_3735": {
      "id": "concept_3735",
      "type": "concept",
      "name": "Vim swap files",
      "description": "Concept: Vim swap files",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.6192,
      "updated_at": 1754957552.6192
    },
    "concept_3736": {
      "id": "concept_3736",
      "type": "concept",
      "name": "Build a dependency graph showing relationships",
      "description": "Concept: Build a dependency graph showing relationships",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.62018,
      "updated_at": 1754957552.62018
    },
    "concept_3737": {
      "id": "concept_3737",
      "type": "concept",
      "name": "Get the current project index",
      "description": "Concept: Get the current project index",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.620695,
      "updated_at": 1754957552.620695
    },
    "concept_3738": {
      "id": "concept_3738",
      "type": "concept",
      "name": "Clear previous index",
      "description": "Concept: Clear previous index",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.621783,
      "updated_at": 1754957552.621783
    },
    "concept_3739": {
      "id": "concept_3739",
      "type": "concept",
      "name": "\ud83c\udfaf Project Structure",
      "description": "Concept: \ud83c\udfaf Project Structure",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.6230688,
      "updated_at": 1754957552.6230688
    },
    "concept_3740": {
      "id": "concept_3740",
      "type": "concept",
      "name": "Simple regex-based parsing for now",
      "description": "Concept: Simple regex-based parsing for now",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.623741,
      "updated_at": 1754957552.623741
    },
    "concept_3741": {
      "id": "concept_3741",
      "type": "concept",
      "name": "Test",
      "description": "Concept: Test",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.625354,
      "updated_at": 1754957552.625354
    },
    "concept_3742": {
      "id": "concept_3742",
      "type": "concept",
      "name": "Compiled libraries",
      "description": "Concept: Compiled libraries",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.6258528,
      "updated_at": 1754957552.6258528
    },
    "concept_3743": {
      "id": "concept_3743",
      "type": "concept",
      "name": "# \ud83c\udfaf Project Structure",
      "description": "Concept: # \ud83c\udfaf Project Structure",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.626601,
      "updated_at": 1754957552.626601
    },
    "concept_3744": {
      "id": "concept_3744",
      "type": "concept",
      "name": "Metadata for a single file",
      "description": "Concept: Metadata for a single file",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.629023,
      "updated_at": 1754957552.629023
    },
    "concept_3745": {
      "id": "concept_3745",
      "type": "concept",
      "name": "Determine if a directory should be skipped during scanning",
      "description": "Concept: Determine if a directory should be skipped during scanning",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.629567,
      "updated_at": 1754957552.629567
    },
    "concept_3746": {
      "id": "concept_3746",
      "type": "concept",
      "name": "Create file metadata",
      "description": "Concept: Create file metadata",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.630068,
      "updated_at": 1754957552.630068
    },
    "concept_3747": {
      "id": "concept_3747",
      "type": "concept",
      "name": "angular",
      "description": "Concept: angular",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.63056,
      "updated_at": 1754957552.63056
    },
    "concept_3748": {
      "id": "concept_3748",
      "type": "concept",
      "name": "_parse_cargo_dependencies",
      "description": "Concept: _parse_cargo_dependencies",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.6312141,
      "updated_at": 1754957552.6312141
    },
    "concept_3749": {
      "id": "concept_3749",
      "type": "concept",
      "name": "# \ud83d\udcc1 Project Overview",
      "description": "Concept: # \ud83d\udcc1 Project Overview",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.6321511,
      "updated_at": 1754957552.6321511
    },
    "concept_3750": {
      "id": "concept_3750",
      "type": "concept",
      "name": "purpose_patterns",
      "description": "Concept: purpose_patterns",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.63287,
      "updated_at": 1754957552.63287
    },
    "concept_3751": {
      "id": "concept_3751",
      "type": "concept",
      "name": "Project metadata",
      "description": "Concept: Project metadata",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.633368,
      "updated_at": 1754957552.633368
    },
    "concept_3752": {
      "id": "concept_3752",
      "type": "concept",
      "name": "Check for .gitignore",
      "description": "Concept: Check for .gitignore",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.633873,
      "updated_at": 1754957552.633873
    },
    "concept_3753": {
      "id": "concept_3753",
      "type": "concept",
      "name": "# \ud83c\udfd7\ufe0f Frameworks",
      "description": "Concept: # \ud83c\udfd7\ufe0f Frameworks",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.634568,
      "updated_at": 1754957552.634568
    },
    "concept_3754": {
      "id": "concept_3754",
      "type": "concept",
      "name": "Detect file type and language",
      "description": "Concept: Detect file type and language",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.6350951,
      "updated_at": 1754957552.6350951
    },
    "concept_3755": {
      "id": "concept_3755",
      "type": "concept",
      "name": "Analyze the overall project structure",
      "description": "Concept: Analyze the overall project structure",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.6367779,
      "updated_at": 1754957552.6367779
    },
    "concept_3756": {
      "id": "concept_3756",
      "type": "concept",
      "name": "exports",
      "description": "Concept: exports",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.637685,
      "updated_at": 1754957552.637686
    },
    "concept_3757": {
      "id": "concept_3757",
      "type": "concept",
      "name": "Add more package managers as needed",
      "description": "Concept: Add more package managers as needed",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.638207,
      "updated_at": 1754957552.638207
    },
    "concept_3758": {
      "id": "concept_3758",
      "type": "concept",
      "name": "file_count",
      "description": "Concept: file_count",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.638699,
      "updated_at": 1754957552.638699
    },
    "concept_3759": {
      "id": "concept_3759",
      "type": "concept",
      "name": "Add dependency nodes",
      "description": "Concept: Add dependency nodes",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.639393,
      "updated_at": 1754957552.639393
    },
    "concept_3760": {
      "id": "concept_3760",
      "type": "concept",
      "name": "Calculate file hash for change detection",
      "description": "Concept: Calculate file hash for change detection",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.640318,
      "updated_at": 1754957552.640318
    },
    "concept_3761": {
      "id": "concept_3761",
      "type": "concept",
      "name": "Framework detection patterns",
      "description": "Concept: Framework detection patterns",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.640919,
      "updated_at": 1754957552.640919
    },
    "concept_3762": {
      "id": "concept_3762",
      "type": "concept",
      "name": "Analyze code patterns and project structure",
      "description": "Concept: Analyze code patterns and project structure",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.6417432,
      "updated_at": 1754957552.641744
    },
    "concept_3763": {
      "id": "concept_3763",
      "type": "concept",
      "name": "Purpose detection patterns",
      "description": "Concept: Purpose detection patterns",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.6423721,
      "updated_at": 1754957552.6423721
    },
    "concept_3764": {
      "id": "concept_3764",
      "type": "concept",
      "name": "Parse a dependency file and extract dependency information",
      "description": "Concept: Parse a dependency file and extract dependency information",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.643002,
      "updated_at": 1754957552.643002
    },
    "concept_3765": {
      "id": "concept_3765",
      "type": "concept",
      "name": "Record scan history",
      "description": "Concept: Record scan history",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.643591,
      "updated_at": 1754957552.643591
    },
    "concept_3766": {
      "id": "concept_3766",
      "type": "concept",
      "name": "dependencies",
      "description": "Concept: dependencies",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.644186,
      "updated_at": 1754957552.644186
    },
    "concept_3767": {
      "id": "concept_3767",
      "type": "concept",
      "name": "**Name**: {index.context.get('project_name', 'Unknown')}",
      "description": "Concept: **Name**: {index.context.get('project_name', 'Unknown')}",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.6447308,
      "updated_at": 1754957552.6447308
    },
    "concept_3768": {
      "id": "concept_3768",
      "type": "concept",
      "name": "_parse_npm_dependencies",
      "description": "Concept: _parse_npm_dependencies",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.645244,
      "updated_at": 1754957552.645244
    },
    "concept_3769": {
      "id": "concept_3769",
      "type": "concept",
      "name": "hasher",
      "description": "Concept: hasher",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.645731,
      "updated_at": 1754957552.645731
    },
    "concept_3770": {
      "id": "concept_3770",
      "type": "concept",
      "name": "Check for Git",
      "description": "Concept: Check for Git",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.646227,
      "updated_at": 1754957552.646227
    },
    "concept_3771": {
      "id": "concept_3771",
      "type": "concept",
      "name": "framework_patterns",
      "description": "Concept: framework_patterns",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.647074,
      "updated_at": 1754957552.647074
    },
    "concept_3772": {
      "id": "concept_3772",
      "type": "concept",
      "name": "total_files",
      "description": "Concept: total_files",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.647567,
      "updated_at": 1754957552.647567
    },
    "concept_3773": {
      "id": "concept_3773",
      "type": "concept",
      "name": "Node.js",
      "description": "Concept: Node.js",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.6480582,
      "updated_at": 1754957552.6480582
    },
    "concept_3774": {
      "id": "concept_3774",
      "type": "concept",
      "name": "language_counts",
      "description": "Concept: language_counts",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.648963,
      "updated_at": 1754957552.648963
    },
    "concept_3775": {
      "id": "concept_3775",
      "type": "concept",
      "name": "Language distribution",
      "description": "Concept: Language distribution",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.649477,
      "updated_at": 1754957552.649477
    },
    "concept_3776": {
      "id": "concept_3776",
      "type": "concept",
      "name": "package",
      "description": "Concept: package",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.649966,
      "updated_at": 1754957552.649966
    },
    "concept_3777": {
      "id": "concept_3777",
      "type": "concept",
      "name": "scan_time",
      "description": "Concept: scan_time",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.650458,
      "updated_at": 1754957552.650458
    },
    "concept_3778": {
      "id": "concept_3778",
      "type": "concept",
      "name": "Scan the file system and build file and directory indexes",
      "description": "Concept: Scan the file system and build file and directory indexes",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.651683,
      "updated_at": 1754957552.651683
    },
    "concept_3779": {
      "id": "concept_3779",
      "type": "concept",
      "name": "Build outputs",
      "description": "Concept: Build outputs",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.652283,
      "updated_at": 1754957552.652283
    },
    "concept_3780": {
      "id": "concept_3780",
      "type": "concept",
      "name": "Basic TOML parsing (can be enhanced with proper TOML library)",
      "description": "Concept: Basic TOML parsing (can be enhanced with proper TOML library)",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.6529868,
      "updated_at": 1754957552.6529868
    },
    "concept_3781": {
      "id": "concept_3781",
      "type": "concept",
      "name": "**Total Files**: {index.total_files}",
      "description": "Concept: **Total Files**: {index.total_files}",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.653528,
      "updated_at": 1754957552.653528
    },
    "concept_3782": {
      "id": "concept_3782",
      "type": "concept",
      "name": "_build_context",
      "description": "Concept: _build_context",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.654026,
      "updated_at": 1754957552.654026
    },
    "concept_3783": {
      "id": "concept_3783",
      "type": "concept",
      "name": "Add file nodes",
      "description": "Concept: Add file nodes",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.654525,
      "updated_at": 1754957552.654525
    },
    "concept_3784": {
      "id": "concept_3784",
      "type": "concept",
      "name": "Language and framework detection patterns",
      "description": "Concept: Language and framework detection patterns",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.655398,
      "updated_at": 1754957552.655398
    },
    "concept_3785": {
      "id": "concept_3785",
      "type": "concept",
      "name": "Basic TOML parsing for dependencies",
      "description": "Concept: Basic TOML parsing for dependencies",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.65592,
      "updated_at": 1754957552.65592
    },
    "concept_3786": {
      "id": "concept_3786",
      "type": "concept",
      "name": "deps_content",
      "description": "Concept: deps_content",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.6568441,
      "updated_at": 1754957552.6568441
    },
    "concept_3787": {
      "id": "concept_3787",
      "type": "concept",
      "name": "framework",
      "description": "Concept: framework",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.657363,
      "updated_at": 1754957552.657363
    },
    "concept_3788": {
      "id": "concept_3788",
      "type": "concept",
      "name": "**Total Size**: {index.total_size:,} bytes",
      "description": "Concept: **Total Size**: {index.total_size:,} bytes",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.6578932,
      "updated_at": 1754957552.6578932
    },
    "concept_3789": {
      "id": "concept_3789",
      "type": "concept",
      "name": "current_hash",
      "description": "Concept: current_hash",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.658389,
      "updated_at": 1754957552.658389
    },
    "concept_3790": {
      "id": "concept_3790",
      "type": "concept",
      "name": "Process directories",
      "description": "Concept: Process directories",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.658893,
      "updated_at": 1754957552.658893
    },
    "concept_3791": {
      "id": "concept_3791",
      "type": "concept",
      "name": "Format project structure summary for display",
      "description": "Concept: Format project structure summary for display",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.659425,
      "updated_at": 1754957552.659425
    },
    "concept_3792": {
      "id": "concept_3792",
      "type": "concept",
      "name": "Format dependency summary for display",
      "description": "Concept: Format dependency summary for display",
      "source": "project_scanner.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "project_scanner.py"
        ]
      },
      "created_at": 1754957552.659955,
      "updated_at": 1754957552.659955
    },
    "doc_3793": {
      "id": "doc_3793",
      "type": "document",
      "name": "Pyproject",
      "description": "Document: pyproject.toml",
      "source": "pyproject.toml",
      "confidence": 0.9,
      "metadata": {
        "file_size": 402,
        "lines": 17,
        "language": "unknown",
        "last_modified": 1754954281.558999
      },
      "created_at": 1754957552.6602151,
      "updated_at": 1754957552.6602151
    },
    "doc_3794": {
      "id": "doc_3794",
      "type": "document",
      "name": "Test_Context_Analyzer",
      "description": "Document: test_context_analyzer.py",
      "source": "test_context_analyzer.py",
      "confidence": 0.9,
      "metadata": {
        "file_size": 1,
        "lines": 1,
        "language": "python",
        "last_modified": 1754942606.291237
      },
      "created_at": 1754957552.660306,
      "updated_at": 1754957552.660306
    },
    "doc_3795": {
      "id": "doc_3795",
      "type": "document",
      "name": "Test_Docker_Functionality",
      "description": "Document: test_docker_functionality.py",
      "source": "test_docker_functionality.py",
      "confidence": 0.9,
      "metadata": {
        "file_size": 5699,
        "lines": 125,
        "language": "python",
        "last_modified": 1754944158.6733491
      },
      "created_at": 1754957552.662266,
      "updated_at": 1754957552.662266
    },
    "concept_3796": {
      "id": "concept_3796",
      "type": "concept",
      "name": "Look for our enhanced tools",
      "description": "Concept: Look for our enhanced tools",
      "source": "test_docker_functionality.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_docker_functionality.py",
          "test_enhanced_docker.py"
        ]
      },
      "created_at": 1754957552.663681,
      "updated_at": 1754957552.6778839
    },
    "concept_3797": {
      "id": "concept_3797",
      "type": "concept",
      "name": "result_data",
      "description": "Concept: result_data",
      "source": "test_docker_functionality.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_docker_functionality.py",
          "test_enhanced_docker.py"
        ]
      },
      "created_at": 1754957552.66457,
      "updated_at": 1754957552.678774
    },
    "concept_3798": {
      "id": "concept_3798",
      "type": "concept",
      "name": "stdio_client",
      "description": "Concept: stdio_client",
      "source": "test_docker_functionality.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_docker_functionality.py",
          "test_enhanced_docker.py"
        ]
      },
      "created_at": 1754957552.666208,
      "updated_at": 1754957552.682857
    },
    "concept_3799": {
      "id": "concept_3799",
      "type": "concept",
      "name": "enhanced_tools",
      "description": "Concept: enhanced_tools",
      "source": "test_docker_functionality.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_docker_functionality.py",
          "test_enhanced_docker.py",
          "test_mcp_tools.py"
        ]
      },
      "created_at": 1754957552.6670709,
      "updated_at": 1754957552.7952409
    },
    "concept_3800": {
      "id": "concept_3800",
      "type": "concept",
      "name": "test_enhanced_functionality",
      "description": "Concept: test_enhanced_functionality",
      "source": "test_docker_functionality.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_docker_functionality.py",
          "test_enhanced_docker.py"
        ]
      },
      "created_at": 1754957552.667933,
      "updated_at": 1754957552.685649
    },
    "concept_3801": {
      "id": "concept_3801",
      "type": "concept",
      "name": "Test enhanced brain tools",
      "description": "Concept: Test enhanced brain tools",
      "source": "test_docker_functionality.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_docker_functionality.py"
        ]
      },
      "created_at": 1754957552.668791,
      "updated_at": 1754957552.668791
    },
    "concept_3802": {
      "id": "concept_3802",
      "type": "concept",
      "name": "Test think tool",
      "description": "Concept: Test think tool",
      "source": "test_docker_functionality.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_docker_functionality.py"
        ]
      },
      "created_at": 1754957552.66929,
      "updated_at": 1754957552.66929
    },
    "concept_3803": {
      "id": "concept_3803",
      "type": "concept",
      "name": "Test the analyze_context_deeply tool if available",
      "description": "Concept: Test the analyze_context_deeply tool if available",
      "source": "test_docker_functionality.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_docker_functionality.py"
        ]
      },
      "created_at": 1754957552.669826,
      "updated_at": 1754957552.669826
    },
    "concept_3804": {
      "id": "concept_3804",
      "type": "concept",
      "name": "context_tools",
      "description": "Concept: context_tools",
      "source": "test_docker_functionality.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_docker_functionality.py"
        ]
      },
      "created_at": 1754957552.6707578,
      "updated_at": 1754957552.6707578
    },
    "concept_3805": {
      "id": "concept_3805",
      "type": "concept",
      "name": "Parse the result",
      "description": "Concept: Parse the result",
      "source": "test_docker_functionality.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_docker_functionality.py",
          "test_enhanced_docker.py"
        ]
      },
      "created_at": 1754957552.671414,
      "updated_at": 1754957552.687017
    },
    "concept_3806": {
      "id": "concept_3806",
      "type": "concept",
      "name": "ClientSession",
      "description": "Concept: ClientSession",
      "source": "test_docker_functionality.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_docker_functionality.py",
          "test_enhanced_docker.py"
        ]
      },
      "created_at": 1754957552.671998,
      "updated_at": 1754957552.687517
    },
    "concept_3807": {
      "id": "concept_3807",
      "type": "concept",
      "name": "Test the enhanced functionality in the Docker container",
      "description": "Concept: Test the enhanced functionality in the Docker container",
      "source": "test_docker_functionality.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_docker_functionality.py",
          "test_enhanced_docker.py"
        ]
      },
      "created_at": 1754957552.672585,
      "updated_at": 1754957552.688583
    },
    "concept_3808": {
      "id": "concept_3808",
      "type": "concept",
      "name": "Connect to the MCP server",
      "description": "Concept: Connect to the MCP server",
      "source": "test_docker_functionality.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_docker_functionality.py",
          "test_enhanced_docker.py"
        ]
      },
      "created_at": 1754957552.673249,
      "updated_at": 1754957552.689623
    },
    "concept_3809": {
      "id": "concept_3809",
      "type": "concept",
      "name": "test_content",
      "description": "Concept: test_content",
      "source": "test_docker_functionality.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_docker_functionality.py"
        ]
      },
      "created_at": 1754957552.6738088,
      "updated_at": 1754957552.6738088
    },
    "concept_3810": {
      "id": "concept_3810",
      "type": "concept",
      "name": "arguments",
      "description": "Concept: arguments",
      "source": "test_docker_functionality.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_docker_functionality.py",
          "test_enhanced_docker.py"
        ]
      },
      "created_at": 1754957552.6744,
      "updated_at": 1754957552.690136
    },
    "doc_3811": {
      "id": "doc_3811",
      "type": "document",
      "name": "Test_Enhanced_Docker",
      "description": "Document: test_enhanced_docker.py",
      "source": "test_enhanced_docker.py",
      "confidence": 0.9,
      "metadata": {
        "file_size": 6693,
        "lines": 141,
        "language": "python",
        "last_modified": 1754944408.777872
      },
      "created_at": 1754957552.676512,
      "updated_at": 1754957552.676512
    },
    "concept_3812": {
      "id": "concept_3812",
      "type": "concept",
      "name": "test_info",
      "description": "Concept: test_info",
      "source": "test_enhanced_docker.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_enhanced_docker.py"
        ]
      },
      "created_at": 1754957552.679609,
      "updated_at": 1754957552.679609
    },
    "concept_3813": {
      "id": "concept_3813",
      "type": "concept",
      "name": "Test the enhanced think tool",
      "description": "Concept: Test the enhanced think tool",
      "source": "test_enhanced_docker.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_enhanced_docker.py"
        ]
      },
      "created_at": 1754957552.6801238,
      "updated_at": 1754957552.6801238
    },
    "concept_3814": {
      "id": "concept_3814",
      "type": "concept",
      "name": "insights",
      "description": "Concept: insights",
      "source": "test_enhanced_docker.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_enhanced_docker.py"
        ]
      },
      "created_at": 1754957552.68063,
      "updated_at": 1754957552.68063
    },
    "concept_3815": {
      "id": "concept_3815",
      "type": "concept",
      "name": "Show some insights",
      "description": "Concept: Show some insights",
      "source": "test_enhanced_docker.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_enhanced_docker.py"
        ]
      },
      "created_at": 1754957552.681791,
      "updated_at": 1754957552.681791
    },
    "concept_3816": {
      "id": "concept_3816",
      "type": "concept",
      "name": "brain_tools",
      "description": "Concept: brain_tools",
      "source": "test_enhanced_docker.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_enhanced_docker.py"
        ]
      },
      "created_at": 1754957552.6837919,
      "updated_at": 1754957552.6837919
    },
    "concept_3817": {
      "id": "concept_3817",
      "type": "concept",
      "name": "test_message",
      "description": "Concept: test_message",
      "source": "test_enhanced_docker.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_enhanced_docker.py"
        ]
      },
      "created_at": 1754957552.684792,
      "updated_at": 1754957552.684792
    },
    "concept_3818": {
      "id": "concept_3818",
      "type": "concept",
      "name": "context_enh",
      "description": "Concept: context_enh",
      "source": "test_enhanced_docker.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_enhanced_docker.py"
        ]
      },
      "created_at": 1754957552.6864982,
      "updated_at": 1754957552.6864982
    },
    "concept_3819": {
      "id": "concept_3819",
      "type": "concept",
      "name": "Check for enhanced features",
      "description": "Concept: Check for enhanced features",
      "source": "test_enhanced_docker.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_enhanced_docker.py"
        ]
      },
      "created_at": 1754957552.6880362,
      "updated_at": 1754957552.6880362
    },
    "concept_3820": {
      "id": "concept_3820",
      "type": "concept",
      "name": "Test the enhanced remember tool",
      "description": "Concept: Test the enhanced remember tool",
      "source": "test_enhanced_docker.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_enhanced_docker.py"
        ]
      },
      "created_at": 1754957552.68911,
      "updated_at": 1754957552.68911
    },
    "doc_3821": {
      "id": "doc_3821",
      "type": "document",
      "name": "Test_Enhanced_Integration",
      "description": "Document: test_enhanced_integration.py",
      "source": "test_enhanced_integration.py",
      "confidence": 0.9,
      "metadata": {
        "file_size": 15261,
        "lines": 411,
        "language": "python",
        "last_modified": 1754951271.3810215
      },
      "created_at": 1754957552.6952572,
      "updated_at": 1754957552.6952572
    },
    "concept_3822": {
      "id": "concept_3822",
      "type": "concept",
      "name": "Test the detect_patterns tool",
      "description": "Concept: Test the detect_patterns tool",
      "source": "test_enhanced_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_enhanced_integration.py"
        ]
      },
      "created_at": 1754957552.695795,
      "updated_at": 1754957552.695795
    },
    "concept_3823": {
      "id": "concept_3823",
      "type": "concept",
      "name": "Test the recall_intelligently tool",
      "description": "Concept: Test the recall_intelligently tool",
      "source": "test_enhanced_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_enhanced_integration.py"
        ]
      },
      "created_at": 1754957552.696668,
      "updated_at": 1754957552.696668
    },
    "concept_3824": {
      "id": "concept_3824",
      "type": "concept",
      "name": "Test the code_analyze tool",
      "description": "Concept: Test the code_analyze tool",
      "source": "test_enhanced_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_enhanced_integration.py"
        ]
      },
      "created_at": 1754957552.697206,
      "updated_at": 1754957552.697206
    },
    "concept_3825": {
      "id": "concept_3825",
      "type": "concept",
      "name": "Test the understand_deeply tool",
      "description": "Concept: Test the understand_deeply tool",
      "source": "test_enhanced_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_enhanced_integration.py"
        ]
      },
      "created_at": 1754957552.6977348,
      "updated_at": 1754957552.6977348
    },
    "concept_3826": {
      "id": "concept_3826",
      "type": "concept",
      "name": "calculate_complexity",
      "description": "Concept: calculate_complexity",
      "source": "test_enhanced_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_enhanced_integration.py",
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957552.698255,
      "updated_at": 1754957552.760538
    },
    "concept_3827": {
      "id": "concept_3827",
      "type": "concept",
      "name": "Calculate test summary",
      "description": "Concept: Calculate test summary",
      "source": "test_enhanced_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_enhanced_integration.py",
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957552.699182,
      "updated_at": 1754957552.736078
    },
    "concept_3828": {
      "id": "concept_3828",
      "type": "concept",
      "name": "This would normally call the MCP tool",
      "description": "Concept: This would normally call the MCP tool",
      "source": "test_enhanced_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_enhanced_integration.py"
        ]
      },
      "created_at": 1754957552.699732,
      "updated_at": 1754957552.699732
    },
    "concept_3829": {
      "id": "concept_3829",
      "type": "concept",
      "name": "total_tools",
      "description": "Concept: total_tools",
      "source": "test_enhanced_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_enhanced_integration.py",
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957552.7002282,
      "updated_at": 1754957552.7371168
    },
    "concept_3830": {
      "id": "concept_3830",
      "type": "concept",
      "name": "Test enhanced memory management tools",
      "description": "Concept: Test enhanced memory management tools",
      "source": "test_enhanced_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_enhanced_integration.py"
        ]
      },
      "created_at": 1754957552.70121,
      "updated_at": 1754957552.70121
    },
    "concept_3831": {
      "id": "concept_3831",
      "type": "concept",
      "name": "tester",
      "description": "Concept: tester",
      "source": "test_enhanced_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_enhanced_integration.py",
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957552.701876,
      "updated_at": 1754957552.778861
    },
    "concept_3832": {
      "id": "concept_3832",
      "type": "concept",
      "name": "report",
      "description": "Concept: report",
      "source": "test_enhanced_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_enhanced_integration.py",
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957552.7024388,
      "updated_at": 1754957552.7631931
    },
    "concept_3833": {
      "id": "concept_3833",
      "type": "concept",
      "name": "Main test execution",
      "description": "Concept: Main test execution",
      "source": "test_enhanced_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_enhanced_integration.py"
        ]
      },
      "created_at": 1754957552.703021,
      "updated_at": 1754957552.703022
    },
    "concept_3834": {
      "id": "concept_3834",
      "type": "concept",
      "name": "Test the analyze_context_comprehensive tool",
      "description": "Concept: Test the analyze_context_comprehensive tool",
      "source": "test_enhanced_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_enhanced_integration.py"
        ]
      },
      "created_at": 1754957552.7037,
      "updated_at": 1754957552.7037
    },
    "concept_3835": {
      "id": "concept_3835",
      "type": "concept",
      "name": "Test the reflect_enhanced tool",
      "description": "Concept: Test the reflect_enhanced tool",
      "source": "test_enhanced_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_enhanced_integration.py"
        ]
      },
      "created_at": 1754957552.704248,
      "updated_at": 1754957552.704248
    },
    "concept_3836": {
      "id": "concept_3836",
      "type": "concept",
      "name": "successful_tools",
      "description": "Concept: successful_tools",
      "source": "test_enhanced_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_enhanced_integration.py",
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957552.704751,
      "updated_at": 1754957552.779907
    },
    "concept_3837": {
      "id": "concept_3837",
      "type": "concept",
      "name": "Test cognitive enhancement tools",
      "description": "Concept: Test cognitive enhancement tools",
      "source": "test_enhanced_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_enhanced_integration.py",
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957552.705966,
      "updated_at": 1754957552.738542
    },
    "concept_3838": {
      "id": "concept_3838",
      "type": "concept",
      "name": "Test the refactor_safely tool",
      "description": "Concept: Test the refactor_safely tool",
      "source": "test_enhanced_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_enhanced_integration.py"
        ]
      },
      "created_at": 1754957552.70649,
      "updated_at": 1754957552.70649
    },
    "concept_3839": {
      "id": "concept_3839",
      "type": "concept",
      "name": "Generate a comprehensive integration report",
      "description": "Concept: Generate a comprehensive integration report",
      "source": "test_enhanced_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_enhanced_integration.py"
        ]
      },
      "created_at": 1754957552.707079,
      "updated_at": 1754957552.707079
    },
    "concept_3840": {
      "id": "concept_3840",
      "type": "concept",
      "name": "cache",
      "description": "Concept: cache",
      "source": "test_enhanced_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_enhanced_integration.py",
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957552.707634,
      "updated_at": 1754957552.7486598
    },
    "concept_3841": {
      "id": "concept_3841",
      "type": "concept",
      "name": "Test the think_deeply tool",
      "description": "Concept: Test the think_deeply tool",
      "source": "test_enhanced_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_enhanced_integration.py"
        ]
      },
      "created_at": 1754957552.70816,
      "updated_at": 1754957552.70816
    },
    "concept_3842": {
      "id": "concept_3842",
      "type": "concept",
      "name": "# \ud83d\ude80 NEXT STEPS\")",
      "description": "Concept: # \ud83d\ude80 NEXT STEPS\")",
      "source": "test_enhanced_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_enhanced_integration.py",
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957552.709206,
      "updated_at": 1754957552.781174
    },
    "concept_3843": {
      "id": "concept_3843",
      "type": "concept",
      "name": "test_summary",
      "description": "Concept: test_summary",
      "source": "test_enhanced_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_enhanced_integration.py",
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957552.709707,
      "updated_at": 1754957552.781711
    },
    "concept_3844": {
      "id": "concept_3844",
      "type": "concept",
      "name": "Individual tool test methods",
      "description": "Concept: Individual tool test methods",
      "source": "test_enhanced_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_enhanced_integration.py"
        ]
      },
      "created_at": 1754957552.710586,
      "updated_at": 1754957552.710586
    },
    "concept_3845": {
      "id": "concept_3845",
      "type": "concept",
      "name": "Test the assess_complexity tool",
      "description": "Concept: Test the assess_complexity tool",
      "source": "test_enhanced_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_enhanced_integration.py"
        ]
      },
      "created_at": 1754957552.7111082,
      "updated_at": 1754957552.7111082
    },
    "concept_3846": {
      "id": "concept_3846",
      "type": "concept",
      "name": "test_results",
      "description": "Concept: test_results",
      "source": "test_enhanced_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_enhanced_integration.py",
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957552.712227,
      "updated_at": 1754957552.7397592
    },
    "concept_3847": {
      "id": "concept_3847",
      "type": "concept",
      "name": "Test the forget_selectively tool",
      "description": "Concept: Test the forget_selectively tool",
      "source": "test_enhanced_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_enhanced_integration.py"
        ]
      },
      "created_at": 1754957552.713272,
      "updated_at": 1754957552.713272
    },
    "concept_3848": {
      "id": "concept_3848",
      "type": "concept",
      "name": "process",
      "description": "Concept: process",
      "source": "test_enhanced_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_enhanced_integration.py",
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957552.7137668,
      "updated_at": 1754957552.752567
    },
    "concept_3849": {
      "id": "concept_3849",
      "type": "concept",
      "name": "\ud83e\udde0 Enhanced Tool Integration Report\")",
      "description": "Concept: \ud83e\udde0 Enhanced Tool Integration Report\")",
      "source": "test_enhanced_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_enhanced_integration.py"
        ]
      },
      "created_at": 1754957552.715445,
      "updated_at": 1754957552.715445
    },
    "concept_3850": {
      "id": "concept_3850",
      "type": "concept",
      "name": "Test the remember_important tool",
      "description": "Concept: Test the remember_important tool",
      "source": "test_enhanced_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_enhanced_integration.py"
        ]
      },
      "created_at": 1754957552.716376,
      "updated_at": 1754957552.716376
    },
    "concept_3851": {
      "id": "concept_3851",
      "type": "concept",
      "name": "For now, simulate the expected behavior",
      "description": "Concept: For now, simulate the expected behavior",
      "source": "test_enhanced_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_enhanced_integration.py"
        ]
      },
      "created_at": 1754957552.716907,
      "updated_at": 1754957552.716907
    },
    "concept_3852": {
      "id": "concept_3852",
      "type": "concept",
      "name": "Run all enhanced tool tests",
      "description": "Concept: Run all enhanced tool tests",
      "source": "test_enhanced_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_enhanced_integration.py"
        ]
      },
      "created_at": 1754957552.7174258,
      "updated_at": 1754957552.7174258
    },
    "concept_3853": {
      "id": "concept_3853",
      "type": "concept",
      "name": "EnhancedToolTester",
      "description": "Concept: EnhancedToolTester",
      "source": "test_enhanced_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_enhanced_integration.py"
        ]
      },
      "created_at": 1754957552.717938,
      "updated_at": 1754957552.717938
    },
    "concept_3854": {
      "id": "concept_3854",
      "type": "concept",
      "name": "complex_request",
      "description": "Concept: complex_request",
      "source": "test_enhanced_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_enhanced_integration.py",
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957552.7184482,
      "updated_at": 1754957552.7678561
    },
    "concept_3855": {
      "id": "concept_3855",
      "type": "concept",
      "name": "Test all tool categories",
      "description": "Concept: Test all tool categories",
      "source": "test_enhanced_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_enhanced_integration.py"
        ]
      },
      "created_at": 1754957552.719323,
      "updated_at": 1754957552.719323
    },
    "concept_3856": {
      "id": "concept_3856",
      "type": "concept",
      "name": "Test dedicated context analysis tools",
      "description": "Concept: Test dedicated context analysis tools",
      "source": "test_enhanced_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_enhanced_integration.py",
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957552.719852,
      "updated_at": 1754957552.768387
    },
    "concept_3857": {
      "id": "concept_3857",
      "type": "concept",
      "name": "Calculate complexity of data structure",
      "description": "Concept: Calculate complexity of data structure",
      "source": "test_enhanced_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_enhanced_integration.py",
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957552.720386,
      "updated_at": 1754957552.754067
    },
    "concept_3858": {
      "id": "concept_3858",
      "type": "concept",
      "name": "# \ud83c\udfaf INTEGRATION STATUS\")",
      "description": "Concept: # \ud83c\udfaf INTEGRATION STATUS\")",
      "source": "test_enhanced_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_enhanced_integration.py"
        ]
      },
      "created_at": 1754957552.721181,
      "updated_at": 1754957552.721181
    },
    "concept_3859": {
      "id": "concept_3859",
      "type": "concept",
      "name": "sample_code",
      "description": "Concept: sample_code",
      "source": "test_enhanced_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_enhanced_integration.py",
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957552.7222981,
      "updated_at": 1754957552.7427049
    },
    "concept_3860": {
      "id": "concept_3860",
      "type": "concept",
      "name": "Run all tests",
      "description": "Concept: Run all tests",
      "source": "test_enhanced_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_enhanced_integration.py"
        ]
      },
      "created_at": 1754957552.723239,
      "updated_at": 1754957552.723239
    },
    "concept_3861": {
      "id": "concept_3861",
      "type": "concept",
      "name": "Test Cursor-specific tools",
      "description": "Concept: Test Cursor-specific tools",
      "source": "test_enhanced_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_enhanced_integration.py",
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957552.723847,
      "updated_at": 1754957552.756816
    },
    "concept_3862": {
      "id": "concept_3862",
      "type": "concept",
      "name": "DataProcessor",
      "description": "Concept: DataProcessor",
      "source": "test_enhanced_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_enhanced_integration.py",
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957552.724352,
      "updated_at": 1754957552.744071
    },
    "concept_3863": {
      "id": "concept_3863",
      "type": "concept",
      "name": "Test the debug_intelligently tool",
      "description": "Concept: Test the debug_intelligently tool",
      "source": "test_enhanced_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_enhanced_integration.py"
        ]
      },
      "created_at": 1754957552.724882,
      "updated_at": 1754957552.724882
    },
    "concept_3864": {
      "id": "concept_3864",
      "type": "concept",
      "name": "Generate and display report",
      "description": "Concept: Generate and display report",
      "source": "test_enhanced_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_enhanced_integration.py",
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957552.726208,
      "updated_at": 1754957552.744937
    },
    "concept_3865": {
      "id": "concept_3865",
      "type": "concept",
      "name": "Test all enhanced tools and their integration",
      "description": "Concept: Test all enhanced tools and their integration",
      "source": "test_enhanced_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_enhanced_integration.py"
        ]
      },
      "created_at": 1754957552.726746,
      "updated_at": 1754957552.726746
    },
    "concept_3866": {
      "id": "concept_3866",
      "type": "concept",
      "name": "Save results to file",
      "description": "Concept: Save results to file",
      "source": "test_enhanced_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_enhanced_integration.py",
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957552.7272599,
      "updated_at": 1754957552.788417
    },
    "concept_3867": {
      "id": "concept_3867",
      "type": "concept",
      "name": "Test analysis and understanding tools",
      "description": "Concept: Test analysis and understanding tools",
      "source": "test_enhanced_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_enhanced_integration.py",
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957552.72779,
      "updated_at": 1754957552.745499
    },
    "concept_3868": {
      "id": "concept_3868",
      "type": "concept",
      "name": "# {category.upper()} TOOLS\")",
      "description": "Concept: # {category.upper()} TOOLS\")",
      "source": "test_enhanced_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_enhanced_integration.py",
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957552.728687,
      "updated_at": 1754957552.758992
    },
    "doc_3869": {
      "id": "doc_3869",
      "type": "document",
      "name": "Test_Mcp_Integration",
      "description": "Document: test_mcp_integration.py",
      "source": "test_mcp_integration.py",
      "confidence": 0.9,
      "metadata": {
        "file_size": 13114,
        "lines": 359,
        "language": "python",
        "last_modified": 1754951271.3825786
      },
      "created_at": 1754957552.733388,
      "updated_at": 1754957552.733388
    },
    "concept_3870": {
      "id": "concept_3870",
      "type": "concept",
      "name": "mcp_process",
      "description": "Concept: mcp_process",
      "source": "test_mcp_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957552.733909,
      "updated_at": 1754957552.733909
    },
    "concept_3871": {
      "id": "concept_3871",
      "type": "concept",
      "name": "refactor_result",
      "description": "Concept: refactor_result",
      "source": "test_mcp_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957552.734422,
      "updated_at": 1754957552.734422
    },
    "concept_3872": {
      "id": "concept_3872",
      "type": "concept",
      "name": "Main MCP integration test execution",
      "description": "Concept: Main MCP integration test execution",
      "source": "test_mcp_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957552.7349792,
      "updated_at": 1754957552.7349792
    },
    "concept_3873": {
      "id": "concept_3873",
      "type": "concept",
      "name": "think_result",
      "description": "Concept: think_result",
      "source": "test_mcp_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957552.735492,
      "updated_at": 1754957552.735492
    },
    "concept_3874": {
      "id": "concept_3874",
      "type": "concept",
      "name": "_test_context_tools",
      "description": "Concept: _test_context_tools",
      "source": "test_mcp_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957552.736607,
      "updated_at": 1754957552.736607
    },
    "concept_3875": {
      "id": "concept_3875",
      "type": "concept",
      "name": "Test all enhanced tools",
      "description": "Concept: Test all enhanced tools",
      "source": "test_mcp_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957552.73765,
      "updated_at": 1754957552.73765
    },
    "concept_3876": {
      "id": "concept_3876",
      "type": "concept",
      "name": "_test_cognitive_tools",
      "description": "Concept: _test_cognitive_tools",
      "source": "test_mcp_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957552.740281,
      "updated_at": 1754957552.740281
    },
    "concept_3877": {
      "id": "concept_3877",
      "type": "concept",
      "name": "Run MCP integration tests",
      "description": "Concept: Run MCP integration tests",
      "source": "test_mcp_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957552.740917,
      "updated_at": 1754957552.740917
    },
    "concept_3878": {
      "id": "concept_3878",
      "type": "concept",
      "name": "patterns_result",
      "description": "Concept: patterns_result",
      "source": "test_mcp_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957552.742104,
      "updated_at": 1754957552.742104
    },
    "concept_3879": {
      "id": "concept_3879",
      "type": "concept",
      "name": "Clean up",
      "description": "Concept: Clean up",
      "source": "test_mcp_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957552.743566,
      "updated_at": 1754957552.743566
    },
    "concept_3880": {
      "id": "concept_3880",
      "type": "concept",
      "name": "Test analyze_context_comprehensive",
      "description": "Concept: Test analyze_context_comprehensive",
      "source": "test_mcp_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957552.746736,
      "updated_at": 1754957552.746736
    },
    "concept_3881": {
      "id": "concept_3881",
      "type": "concept",
      "name": "Test think_deeply",
      "description": "Concept: Test think_deeply",
      "source": "test_mcp_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957552.7472498,
      "updated_at": 1754957552.7472498
    },
    "concept_3882": {
      "id": "concept_3882",
      "type": "concept",
      "name": "For now, simulate MCP tool calls",
      "description": "Concept: For now, simulate MCP tool calls",
      "source": "test_mcp_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957552.748134,
      "updated_at": 1754957552.748134
    },
    "concept_3883": {
      "id": "concept_3883",
      "type": "concept",
      "name": "Test recall_intelligently",
      "description": "Concept: Test recall_intelligently",
      "source": "test_mcp_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957552.7507951,
      "updated_at": 1754957552.750796
    },
    "concept_3884": {
      "id": "concept_3884",
      "type": "concept",
      "name": "Test understand_deeply",
      "description": "Concept: Test understand_deeply",
      "source": "test_mcp_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957552.751481,
      "updated_at": 1754957552.751481
    },
    "concept_3885": {
      "id": "concept_3885",
      "type": "concept",
      "name": "Test remember_important",
      "description": "Concept: Test remember_important",
      "source": "test_mcp_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957552.7535172,
      "updated_at": 1754957552.7535172
    },
    "concept_3886": {
      "id": "concept_3886",
      "type": "concept",
      "name": "MCPIntegrationTester",
      "description": "Concept: MCPIntegrationTester",
      "source": "test_mcp_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957552.75459,
      "updated_at": 1754957552.75459
    },
    "concept_3887": {
      "id": "concept_3887",
      "type": "concept",
      "name": "complexity_result",
      "description": "Concept: complexity_result",
      "source": "test_mcp_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957552.755133,
      "updated_at": 1754957552.755133
    },
    "concept_3888": {
      "id": "concept_3888",
      "type": "concept",
      "name": "In a real implementation, this would use the MCP client library",
      "description": "Concept: In a real implementation, this would use the MCP client library",
      "source": "test_mcp_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957552.755729,
      "updated_at": 1754957552.755729
    },
    "concept_3889": {
      "id": "concept_3889",
      "type": "concept",
      "name": "Test forget_selectively",
      "description": "Concept: Test forget_selectively",
      "source": "test_mcp_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957552.756277,
      "updated_at": 1754957552.756277
    },
    "concept_3890": {
      "id": "concept_3890",
      "type": "concept",
      "name": "\ud83d\ude80 MCP Integration Test Report\")",
      "description": "Concept: \ud83d\ude80 MCP Integration Test Report\")",
      "source": "test_mcp_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957552.758084,
      "updated_at": 1754957552.758084
    },
    "concept_3891": {
      "id": "concept_3891",
      "type": "concept",
      "name": "understand_result",
      "description": "Concept: understand_result",
      "source": "test_mcp_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957552.75951,
      "updated_at": 1754957552.75951
    },
    "concept_3892": {
      "id": "concept_3892",
      "type": "concept",
      "name": "Test code_analyze",
      "description": "Concept: Test code_analyze",
      "source": "test_mcp_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957552.760024,
      "updated_at": 1754957552.760024
    },
    "concept_3893": {
      "id": "concept_3893",
      "type": "concept",
      "name": "Test all enhanced tools through MCP",
      "description": "Concept: Test all enhanced tools through MCP",
      "source": "test_mcp_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957552.7610722,
      "updated_at": 1754957552.7610722
    },
    "concept_3894": {
      "id": "concept_3894",
      "type": "concept",
      "name": "Test enhanced memory tools",
      "description": "Concept: Test enhanced memory tools",
      "source": "test_mcp_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957552.761596,
      "updated_at": 1754957552.761596
    },
    "concept_3895": {
      "id": "concept_3895",
      "type": "concept",
      "name": "Simulate tool execution",
      "description": "Concept: Simulate tool execution",
      "source": "test_mcp_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957552.762141,
      "updated_at": 1754957552.762141
    },
    "concept_3896": {
      "id": "concept_3896",
      "type": "concept",
      "name": "remember_result",
      "description": "Concept: remember_result",
      "source": "test_mcp_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957552.76269,
      "updated_at": 1754957552.76269
    },
    "concept_3897": {
      "id": "concept_3897",
      "type": "concept",
      "name": "Generate MCP integration report",
      "description": "Concept: Generate MCP integration report",
      "source": "test_mcp_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957552.763724,
      "updated_at": 1754957552.763724
    },
    "concept_3898": {
      "id": "concept_3898",
      "type": "concept",
      "name": "Run all MCP integration tests",
      "description": "Concept: Run all MCP integration tests",
      "source": "test_mcp_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957552.764261,
      "updated_at": 1754957552.764261
    },
    "concept_3899": {
      "id": "concept_3899",
      "type": "concept",
      "name": "stdout",
      "description": "Concept: stdout",
      "source": "test_mcp_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957552.765167,
      "updated_at": 1754957552.765167
    },
    "concept_3900": {
      "id": "concept_3900",
      "type": "concept",
      "name": "Return simulated successful result",
      "description": "Concept: Return simulated successful result",
      "source": "test_mcp_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957552.765732,
      "updated_at": 1754957552.765732
    },
    "concept_3901": {
      "id": "concept_3901",
      "type": "concept",
      "name": "stderr",
      "description": "Concept: stderr",
      "source": "test_mcp_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957552.766593,
      "updated_at": 1754957552.766593
    },
    "concept_3902": {
      "id": "concept_3902",
      "type": "concept",
      "name": "Test assess_complexity",
      "description": "Concept: Test assess_complexity",
      "source": "test_mcp_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957552.768909,
      "updated_at": 1754957552.768909
    },
    "concept_3903": {
      "id": "concept_3903",
      "type": "concept",
      "name": "Check if server is running",
      "description": "Concept: Check if server is running",
      "source": "test_mcp_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_mcp_integration.py",
          "test_mcp_tools.py"
        ]
      },
      "created_at": 1754957552.769433,
      "updated_at": 1754957552.798063
    },
    "concept_3904": {
      "id": "concept_3904",
      "type": "concept",
      "name": "subprocess",
      "description": "Concept: subprocess",
      "source": "test_mcp_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_mcp_integration.py",
          "test_mcp_tools.py"
        ]
      },
      "created_at": 1754957552.7703092,
      "updated_at": 1754957552.798605
    },
    "concept_3905": {
      "id": "concept_3905",
      "type": "concept",
      "name": "Wait for server to start",
      "description": "Concept: Wait for server to start",
      "source": "test_mcp_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957552.7708318,
      "updated_at": 1754957552.7708318
    },
    "concept_3906": {
      "id": "concept_3906",
      "type": "concept",
      "name": "_test_cursor_tools",
      "description": "Concept: _test_cursor_tools",
      "source": "test_mcp_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957552.77145,
      "updated_at": 1754957552.77145
    },
    "concept_3907": {
      "id": "concept_3907",
      "type": "concept",
      "name": "Test debug_intelligently",
      "description": "Concept: Test debug_intelligently",
      "source": "test_mcp_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957552.7719822,
      "updated_at": 1754957552.7719822
    },
    "concept_3908": {
      "id": "concept_3908",
      "type": "concept",
      "name": "Test each category of tools",
      "description": "Concept: Test each category of tools",
      "source": "test_mcp_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957552.772643,
      "updated_at": 1754957552.772644
    },
    "concept_3909": {
      "id": "concept_3909",
      "type": "concept",
      "name": "Test a specific MCP tool",
      "description": "Concept: Test a specific MCP tool",
      "source": "test_mcp_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957552.773428,
      "updated_at": 1754957552.773428
    },
    "concept_3910": {
      "id": "concept_3910",
      "type": "concept",
      "name": "cleanup",
      "description": "Concept: cleanup",
      "source": "test_mcp_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957552.7740202,
      "updated_at": 1754957552.7740202
    },
    "concept_3911": {
      "id": "concept_3911",
      "type": "concept",
      "name": "Test enhanced tools through MCP protocol",
      "description": "Concept: Test enhanced tools through MCP protocol",
      "source": "test_mcp_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957552.7753012,
      "updated_at": 1754957552.7753012
    },
    "concept_3912": {
      "id": "concept_3912",
      "type": "concept",
      "name": "Test refactor_safely",
      "description": "Concept: Test refactor_safely",
      "source": "test_mcp_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957552.775831,
      "updated_at": 1754957552.775831
    },
    "concept_3913": {
      "id": "concept_3913",
      "type": "concept",
      "name": "code_result",
      "description": "Concept: code_result",
      "source": "test_mcp_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957552.7763479,
      "updated_at": 1754957552.7763479
    },
    "concept_3914": {
      "id": "concept_3914",
      "type": "concept",
      "name": "Start the MCP server for testing",
      "description": "Concept: Start the MCP server for testing",
      "source": "test_mcp_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957552.776891,
      "updated_at": 1754957552.776891
    },
    "concept_3915": {
      "id": "concept_3915",
      "type": "concept",
      "name": "Start the MCP server in the background",
      "description": "Concept: Start the MCP server in the background",
      "source": "test_mcp_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957552.777843,
      "updated_at": 1754957552.777843
    },
    "concept_3916": {
      "id": "concept_3916",
      "type": "concept",
      "name": "forget_result",
      "description": "Concept: forget_result",
      "source": "test_mcp_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957552.778359,
      "updated_at": 1754957552.778359
    },
    "concept_3917": {
      "id": "concept_3917",
      "type": "concept",
      "name": "Test detect_patterns",
      "description": "Concept: Test detect_patterns",
      "source": "test_mcp_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957552.779381,
      "updated_at": 1754957552.779382
    },
    "concept_3918": {
      "id": "concept_3918",
      "type": "concept",
      "name": "reflect_result",
      "description": "Concept: reflect_result",
      "source": "test_mcp_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957552.78043,
      "updated_at": 1754957552.78043
    },
    "concept_3919": {
      "id": "concept_3919",
      "type": "concept",
      "name": "_test_memory_tools",
      "description": "Concept: _test_memory_tools",
      "source": "test_mcp_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957552.782233,
      "updated_at": 1754957552.782233
    },
    "concept_3920": {
      "id": "concept_3920",
      "type": "concept",
      "name": "debug_result",
      "description": "Concept: debug_result",
      "source": "test_mcp_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957552.7829802,
      "updated_at": 1754957552.7829802
    },
    "concept_3921": {
      "id": "concept_3921",
      "type": "concept",
      "name": "Clean up MCP server process",
      "description": "Concept: Clean up MCP server process",
      "source": "test_mcp_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957552.784008,
      "updated_at": 1754957552.784008
    },
    "concept_3922": {
      "id": "concept_3922",
      "type": "concept",
      "name": "_test_analysis_tools",
      "description": "Concept: _test_analysis_tools",
      "source": "test_mcp_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957552.784582,
      "updated_at": 1754957552.784582
    },
    "concept_3923": {
      "id": "concept_3923",
      "type": "concept",
      "name": "# \ud83c\udfaf MCP INTEGRATION STATUS\")",
      "description": "Concept: # \ud83c\udfaf MCP INTEGRATION STATUS\")",
      "source": "test_mcp_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957552.7860658,
      "updated_at": 1754957552.7860658
    },
    "concept_3924": {
      "id": "concept_3924",
      "type": "concept",
      "name": "recall_result",
      "description": "Concept: recall_result",
      "source": "test_mcp_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957552.7866518,
      "updated_at": 1754957552.7866518
    },
    "concept_3925": {
      "id": "concept_3925",
      "type": "concept",
      "name": "Would be \"real\" in production",
      "description": "Concept: Would be \"real\" in production",
      "source": "test_mcp_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957552.787339,
      "updated_at": 1754957552.787339
    },
    "concept_3926": {
      "id": "concept_3926",
      "type": "concept",
      "name": "Test reflect_enhanced",
      "description": "Concept: Test reflect_enhanced",
      "source": "test_mcp_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957552.7879,
      "updated_at": 1754957552.7879
    },
    "concept_3927": {
      "id": "concept_3927",
      "type": "concept",
      "name": "Simulate async operation",
      "description": "Concept: Simulate async operation",
      "source": "test_mcp_integration.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_mcp_integration.py"
        ]
      },
      "created_at": 1754957552.788945,
      "updated_at": 1754957552.788945
    },
    "doc_3928": {
      "id": "doc_3928",
      "type": "document",
      "name": "Test_Mcp_Tools",
      "description": "Document: test_mcp_tools.py",
      "source": "test_mcp_tools.py",
      "confidence": 0.9,
      "metadata": {
        "file_size": 3158,
        "lines": 95,
        "language": "python",
        "last_modified": 1754951799.8371353
      },
      "created_at": 1754957552.790158,
      "updated_at": 1754957552.790158
    },
    "concept_3929": {
      "id": "concept_3929",
      "type": "concept",
      "name": "Check for specific enhanced tools",
      "description": "Concept: Check for specific enhanced tools",
      "source": "test_mcp_tools.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_mcp_tools.py"
        ]
      },
      "created_at": 1754957552.7913878,
      "updated_at": 1754957552.7913878
    },
    "concept_3930": {
      "id": "concept_3930",
      "type": "concept",
      "name": "capture_output",
      "description": "Concept: capture_output",
      "source": "test_mcp_tools.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_mcp_tools.py"
        ]
      },
      "created_at": 1754957552.7919009,
      "updated_at": 1754957552.7919009
    },
    "concept_3931": {
      "id": "concept_3931",
      "type": "concept",
      "name": "logs_result",
      "description": "Concept: logs_result",
      "source": "test_mcp_tools.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_mcp_tools.py"
        ]
      },
      "created_at": 1754957552.792431,
      "updated_at": 1754957552.792432
    },
    "concept_3932": {
      "id": "concept_3932",
      "type": "concept",
      "name": "Test if MCP server is responding",
      "description": "Concept: Test if MCP server is responding",
      "source": "test_mcp_tools.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_mcp_tools.py"
        ]
      },
      "created_at": 1754957552.793565,
      "updated_at": 1754957552.793565
    },
    "concept_3933": {
      "id": "concept_3933",
      "type": "concept",
      "name": "found_tools",
      "description": "Concept: found_tools",
      "source": "test_mcp_tools.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_mcp_tools.py"
        ]
      },
      "created_at": 1754957552.796118,
      "updated_at": 1754957552.796118
    },
    "concept_3934": {
      "id": "concept_3934",
      "type": "concept",
      "name": "Check server logs for enhanced tools",
      "description": "Concept: Check server logs for enhanced tools",
      "source": "test_mcp_tools.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_mcp_tools.py"
        ]
      },
      "created_at": 1754957552.7970188,
      "updated_at": 1754957552.7970188
    },
    "concept_3935": {
      "id": "concept_3935",
      "type": "concept",
      "name": "Main test function",
      "description": "Concept: Main test function",
      "source": "test_mcp_tools.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_mcp_tools.py"
        ]
      },
      "created_at": 1754957552.797537,
      "updated_at": 1754957552.797537
    },
    "concept_3936": {
      "id": "concept_3936",
      "type": "concept",
      "name": "test_mcp_server",
      "description": "Concept: test_mcp_server",
      "source": "test_mcp_tools.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_mcp_tools.py"
        ]
      },
      "created_at": 1754957552.79915,
      "updated_at": 1754957552.79915
    },
    "doc_3937": {
      "id": "doc_3937",
      "type": "document",
      "name": "Test_Tool_Registry",
      "description": "Document: test_tool_registry.py",
      "source": "test_tool_registry.py",
      "confidence": 0.9,
      "metadata": {
        "file_size": 2597,
        "lines": 89,
        "language": "python",
        "last_modified": 1754950603.288351
      },
      "created_at": 1754957552.800255,
      "updated_at": 1754957552.800255
    },
    "concept_3938": {
      "id": "concept_3938",
      "type": "concept",
      "name": "test_handler",
      "description": "Concept: test_handler",
      "source": "test_tool_registry.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_tool_registry.py"
        ]
      },
      "created_at": 1754957552.800779,
      "updated_at": 1754957552.800779
    },
    "concept_3939": {
      "id": "concept_3939",
      "type": "concept",
      "name": "success2",
      "description": "Concept: success2",
      "source": "test_tool_registry.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_tool_registry.py"
        ]
      },
      "created_at": 1754957552.80251,
      "updated_at": 1754957552.80251
    },
    "concept_3940": {
      "id": "concept_3940",
      "type": "concept",
      "name": "Test duplicate registration",
      "description": "Concept: Test duplicate registration",
      "source": "test_tool_registry.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_tool_registry.py"
        ]
      },
      "created_at": 1754957552.804648,
      "updated_at": 1754957552.8046489
    },
    "concept_3941": {
      "id": "concept_3941",
      "type": "concept",
      "name": "decorator",
      "description": "Concept: decorator",
      "source": "test_tool_registry.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_tool_registry.py"
        ]
      },
      "created_at": 1754957552.805181,
      "updated_at": 1754957552.805181
    },
    "concept_3942": {
      "id": "concept_3942",
      "type": "concept",
      "name": "Test creating registry",
      "description": "Concept: Test creating registry",
      "source": "test_tool_registry.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_tool_registry.py"
        ]
      },
      "created_at": 1754957552.8068779,
      "updated_at": 1754957552.8068779
    },
    "concept_3943": {
      "id": "concept_3943",
      "type": "concept",
      "name": "Test creating a mock MCP server",
      "description": "Concept: Test creating a mock MCP server",
      "source": "test_tool_registry.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_tool_registry.py"
        ]
      },
      "created_at": 1754957552.808498,
      "updated_at": 1754957552.808498
    },
    "concept_3944": {
      "id": "concept_3944",
      "type": "concept",
      "name": "Test tool registration",
      "description": "Concept: Test tool registration",
      "source": "test_tool_registry.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_tool_registry.py"
        ]
      },
      "created_at": 1754957552.809504,
      "updated_at": 1754957552.809504
    },
    "concept_3945": {
      "id": "concept_3945",
      "type": "concept",
      "name": "Test tool info",
      "description": "Concept: Test tool info",
      "source": "test_tool_registry.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_tool_registry.py"
        ]
      },
      "created_at": 1754957552.810091,
      "updated_at": 1754957552.810091
    },
    "concept_3946": {
      "id": "concept_3946",
      "type": "concept",
      "name": "mock_mcp",
      "description": "Concept: mock_mcp",
      "source": "test_tool_registry.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_tool_registry.py"
        ]
      },
      "created_at": 1754957552.811976,
      "updated_at": 1754957552.811976
    },
    "concept_3947": {
      "id": "concept_3947",
      "type": "concept",
      "name": "ToolRegistry",
      "description": "Concept: ToolRegistry",
      "source": "test_tool_registry.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_tool_registry.py",
          "tool_registry.py"
        ]
      },
      "created_at": 1754957552.812493,
      "updated_at": 1754957552.8284101
    },
    "concept_3948": {
      "id": "concept_3948",
      "type": "concept",
      "name": "Test the tool registry system",
      "description": "Concept: Test the tool registry system",
      "source": "test_tool_registry.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_tool_registry.py"
        ]
      },
      "created_at": 1754957552.8131819,
      "updated_at": 1754957552.8131819
    },
    "concept_3949": {
      "id": "concept_3949",
      "type": "concept",
      "name": "Add current directory to path",
      "description": "Concept: Add current directory to path",
      "source": "test_tool_registry.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_tool_registry.py"
        ]
      },
      "created_at": 1754957552.8137999,
      "updated_at": 1754957552.8137999
    },
    "concept_3950": {
      "id": "concept_3950",
      "type": "concept",
      "name": "test_tools",
      "description": "Concept: test_tools",
      "source": "test_tool_registry.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_tool_registry.py"
        ]
      },
      "created_at": 1754957552.814328,
      "updated_at": 1754957552.814328
    },
    "concept_3951": {
      "id": "concept_3951",
      "type": "concept",
      "name": "Same name",
      "description": "Concept: Same name",
      "source": "test_tool_registry.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_tool_registry.py"
        ]
      },
      "created_at": 1754957552.814959,
      "updated_at": 1754957552.8149602
    },
    "concept_3952": {
      "id": "concept_3952",
      "type": "concept",
      "name": "Test category listing",
      "description": "Concept: Test category listing",
      "source": "test_tool_registry.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_tool_registry.py"
        ]
      },
      "created_at": 1754957552.815679,
      "updated_at": 1754957552.815679
    },
    "concept_3953": {
      "id": "concept_3953",
      "type": "concept",
      "name": "MockMCPServer",
      "description": "Concept: MockMCPServer",
      "source": "test_tool_registry.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_tool_registry.py"
        ]
      },
      "created_at": 1754957552.816308,
      "updated_at": 1754957552.816308
    },
    "concept_3954": {
      "id": "concept_3954",
      "type": "concept",
      "name": "test_tool_registry",
      "description": "Concept: test_tool_registry",
      "source": "test_tool_registry.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_tool_registry.py"
        ]
      },
      "created_at": 1754957552.816869,
      "updated_at": 1754957552.816869
    },
    "concept_3955": {
      "id": "concept_3955",
      "type": "concept",
      "name": "Test importing the tool registry",
      "description": "Concept: Test importing the tool registry",
      "source": "test_tool_registry.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "test_tool_registry.py"
        ]
      },
      "created_at": 1754957552.817415,
      "updated_at": 1754957552.817415
    },
    "doc_3956": {
      "id": "doc_3956",
      "type": "document",
      "name": "Tool_Registry",
      "description": "Document: tool_registry.py",
      "source": "tool_registry.py",
      "confidence": 0.9,
      "metadata": {
        "file_size": 2927,
        "lines": 90,
        "language": "python",
        "last_modified": 1754951799.7282484
      },
      "created_at": 1754957552.818512,
      "updated_at": 1754957552.818512
    },
    "concept_3957": {
      "id": "concept_3957",
      "type": "concept",
      "name": "tool_decorator",
      "description": "Concept: tool_decorator",
      "source": "tool_registry.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "tool_registry.py"
        ]
      },
      "created_at": 1754957552.819498,
      "updated_at": 1754957552.819498
    },
    "concept_3958": {
      "id": "concept_3958",
      "type": "concept",
      "name": "tool_categories",
      "description": "Concept: tool_categories",
      "source": "tool_registry.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "tool_registry.py"
        ]
      },
      "created_at": 1754957552.820023,
      "updated_at": 1754957552.820023
    },
    "concept_3959": {
      "id": "concept_3959",
      "type": "concept",
      "name": "Clean tool registry that prevents conflicts and organizes tools logically",
      "description": "Concept: Clean tool registry that prevents conflicts and organizes tools logically",
      "source": "tool_registry.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "tool_registry.py"
        ]
      },
      "created_at": 1754957552.820629,
      "updated_at": 1754957552.820629
    },
    "concept_3960": {
      "id": "concept_3960",
      "type": "concept",
      "name": "List tools in a specific category",
      "description": "Concept: List tools in a specific category",
      "source": "tool_registry.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "tool_registry.py"
        ]
      },
      "created_at": 1754957552.821182,
      "updated_at": 1754957552.821182
    },
    "concept_3961": {
      "id": "concept_3961",
      "type": "concept",
      "name": "register_tool",
      "description": "Concept: register_tool",
      "source": "tool_registry.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "tool_registry.py"
        ]
      },
      "created_at": 1754957552.821697,
      "updated_at": 1754957552.821697
    },
    "concept_3962": {
      "id": "concept_3962",
      "type": "concept",
      "name": "Store tool info",
      "description": "Concept: Store tool info",
      "source": "tool_registry.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "tool_registry.py"
        ]
      },
      "created_at": 1754957552.8225641,
      "updated_at": 1754957552.8225641
    },
    "concept_3963": {
      "id": "concept_3963",
      "type": "concept",
      "name": "registered_tools",
      "description": "Concept: registered_tools",
      "source": "tool_registry.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "tool_registry.py"
        ]
      },
      "created_at": 1754957552.823852,
      "updated_at": 1754957552.823852
    },
    "concept_3964": {
      "id": "concept_3964",
      "type": "concept",
      "name": "decorated_handler",
      "description": "Concept: decorated_handler",
      "source": "tool_registry.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "tool_registry.py"
        ]
      },
      "created_at": 1754957552.824414,
      "updated_at": 1754957552.824414
    },
    "concept_3965": {
      "id": "concept_3965",
      "type": "concept",
      "name": "Get or create the global tool registry",
      "description": "Concept: Get or create the global tool registry",
      "source": "tool_registry.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "tool_registry.py"
        ]
      },
      "created_at": 1754957552.825343,
      "updated_at": 1754957552.825343
    },
    "concept_3966": {
      "id": "concept_3966",
      "type": "concept",
      "name": "Register with MCP server",
      "description": "Concept: Register with MCP server",
      "source": "tool_registry.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "tool_registry.py"
        ]
      },
      "created_at": 1754957552.826568,
      "updated_at": 1754957552.826568
    },
    "concept_3967": {
      "id": "concept_3967",
      "type": "concept",
      "name": "Get description of a specific tool",
      "description": "Concept: Get description of a specific tool",
      "source": "tool_registry.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "tool_registry.py"
        ]
      },
      "created_at": 1754957552.827896,
      "updated_at": 1754957552.827896
    },
    "concept_3968": {
      "id": "concept_3968",
      "type": "concept",
      "name": "Global tool registry instance",
      "description": "Concept: Global tool registry instance",
      "source": "tool_registry.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "tool_registry.py"
        ]
      },
      "created_at": 1754957552.8293939,
      "updated_at": 1754957552.8293939
    },
    "concept_3969": {
      "id": "concept_3969",
      "type": "concept",
      "name": "Get comprehensive tool information",
      "description": "Concept: Get comprehensive tool information",
      "source": "tool_registry.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "tool_registry.py"
        ]
      },
      "created_at": 1754957552.829946,
      "updated_at": 1754957552.829946
    },
    "concept_3970": {
      "id": "concept_3970",
      "type": "concept",
      "name": "Add to category",
      "description": "Concept: Add to category",
      "source": "tool_registry.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "tool_registry.py"
        ]
      },
      "created_at": 1754957552.8304682,
      "updated_at": 1754957552.8304682
    },
    "concept_3971": {
      "id": "concept_3971",
      "type": "concept",
      "name": "Get all registered tools with their handlers and info",
      "description": "Concept: Get all registered tools with their handlers and info",
      "source": "tool_registry.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "tool_registry.py"
        ]
      },
      "created_at": 1754957552.831038,
      "updated_at": 1754957552.831038
    },
    "concept_3972": {
      "id": "concept_3972",
      "type": "concept",
      "name": "Register a tool with conflict prevention",
      "description": "Concept: Register a tool with conflict prevention",
      "source": "tool_registry.py",
      "confidence": 0.8,
      "metadata": {
        "sources": [
          "tool_registry.py"
        ]
      },
      "created_at": 1754957552.8316119,
      "updated_at": 1754957552.8316119
    }
  },
  "relationships": {
    "rel_0": {
      "id": "rel_0",
      "source_id": "doc_0",
      "target_id": "concept_1",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8294022
    },
    "rel_1": {
      "id": "rel_1",
      "source_id": "doc_0",
      "target_id": "concept_2",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.829411
    },
    "rel_2": {
      "id": "rel_2",
      "source_id": "doc_0",
      "target_id": "concept_3",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.829414
    },
    "rel_3": {
      "id": "rel_3",
      "source_id": "doc_0",
      "target_id": "concept_4",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.829416
    },
    "rel_4": {
      "id": "rel_4",
      "source_id": "doc_0",
      "target_id": "concept_5",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.829419
    },
    "rel_5": {
      "id": "rel_5",
      "source_id": "doc_0",
      "target_id": "concept_6",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.829431
    },
    "rel_6": {
      "id": "rel_6",
      "source_id": "doc_0",
      "target_id": "concept_7",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.829437
    },
    "rel_7": {
      "id": "rel_7",
      "source_id": "doc_0",
      "target_id": "concept_8",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.829442
    },
    "rel_8": {
      "id": "rel_8",
      "source_id": "doc_0",
      "target_id": "concept_9",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8294458
    },
    "rel_9": {
      "id": "rel_9",
      "source_id": "doc_0",
      "target_id": "concept_10",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.829451
    },
    "rel_10": {
      "id": "rel_10",
      "source_id": "doc_0",
      "target_id": "concept_11",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8294559
    },
    "rel_11": {
      "id": "rel_11",
      "source_id": "doc_0",
      "target_id": "concept_12",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.829461
    },
    "rel_12": {
      "id": "rel_12",
      "source_id": "doc_0",
      "target_id": "concept_13",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.829466
    },
    "rel_13": {
      "id": "rel_13",
      "source_id": "doc_0",
      "target_id": "concept_14",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8294709
    },
    "rel_14": {
      "id": "rel_14",
      "source_id": "doc_0",
      "target_id": "concept_15",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.829476
    },
    "rel_15": {
      "id": "rel_15",
      "source_id": "doc_0",
      "target_id": "concept_16",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.829482
    },
    "rel_16": {
      "id": "rel_16",
      "source_id": "doc_0",
      "target_id": "concept_17",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.829487
    },
    "rel_17": {
      "id": "rel_17",
      "source_id": "doc_0",
      "target_id": "concept_18",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8294919
    },
    "rel_18": {
      "id": "rel_18",
      "source_id": "doc_0",
      "target_id": "concept_19",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.829498
    },
    "rel_19": {
      "id": "rel_19",
      "source_id": "doc_0",
      "target_id": "concept_20",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.829508
    },
    "rel_20": {
      "id": "rel_20",
      "source_id": "doc_0",
      "target_id": "concept_21",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8295722
    },
    "rel_21": {
      "id": "rel_21",
      "source_id": "doc_0",
      "target_id": "concept_22",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.829584
    },
    "rel_22": {
      "id": "rel_22",
      "source_id": "doc_0",
      "target_id": "concept_23",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8295932
    },
    "rel_23": {
      "id": "rel_23",
      "source_id": "doc_0",
      "target_id": "concept_24",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.829605
    },
    "rel_24": {
      "id": "rel_24",
      "source_id": "doc_0",
      "target_id": "concept_25",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8296142
    },
    "rel_25": {
      "id": "rel_25",
      "source_id": "doc_0",
      "target_id": "concept_26",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8296242
    },
    "rel_26": {
      "id": "rel_26",
      "source_id": "doc_0",
      "target_id": "concept_27",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.829633
    },
    "rel_27": {
      "id": "rel_27",
      "source_id": "doc_0",
      "target_id": "concept_28",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.829643
    },
    "rel_28": {
      "id": "rel_28",
      "source_id": "doc_0",
      "target_id": "concept_29",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.829727
    },
    "rel_29": {
      "id": "rel_29",
      "source_id": "doc_0",
      "target_id": "concept_30",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8297431
    },
    "rel_30": {
      "id": "rel_30",
      "source_id": "doc_0",
      "target_id": "concept_31",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.829756
    },
    "rel_31": {
      "id": "rel_31",
      "source_id": "doc_0",
      "target_id": "concept_32",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.829769
    },
    "rel_32": {
      "id": "rel_32",
      "source_id": "doc_0",
      "target_id": "concept_33",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.829791
    },
    "rel_33": {
      "id": "rel_33",
      "source_id": "doc_0",
      "target_id": "concept_34",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.829804
    },
    "rel_34": {
      "id": "rel_34",
      "source_id": "doc_0",
      "target_id": "concept_35",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.829817
    },
    "rel_35": {
      "id": "rel_35",
      "source_id": "doc_0",
      "target_id": "concept_36",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.82983
    },
    "rel_36": {
      "id": "rel_36",
      "source_id": "doc_0",
      "target_id": "concept_37",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.829843
    },
    "rel_37": {
      "id": "rel_37",
      "source_id": "doc_0",
      "target_id": "concept_38",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8298602
    },
    "rel_38": {
      "id": "rel_38",
      "source_id": "doc_0",
      "target_id": "concept_39",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.829885
    },
    "rel_39": {
      "id": "rel_39",
      "source_id": "doc_0",
      "target_id": "concept_40",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.829901
    },
    "rel_40": {
      "id": "rel_40",
      "source_id": "doc_0",
      "target_id": "concept_41",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8299148
    },
    "rel_41": {
      "id": "rel_41",
      "source_id": "doc_0",
      "target_id": "concept_42",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.82993
    },
    "rel_42": {
      "id": "rel_42",
      "source_id": "doc_0",
      "target_id": "concept_43",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8299441
    },
    "rel_43": {
      "id": "rel_43",
      "source_id": "doc_0",
      "target_id": "concept_44",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.829959
    },
    "rel_44": {
      "id": "rel_44",
      "source_id": "doc_0",
      "target_id": "concept_45",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.829973
    },
    "rel_45": {
      "id": "rel_45",
      "source_id": "doc_0",
      "target_id": "concept_46",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.829988
    },
    "rel_46": {
      "id": "rel_46",
      "source_id": "doc_0",
      "target_id": "concept_47",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8300512
    },
    "rel_47": {
      "id": "rel_47",
      "source_id": "doc_0",
      "target_id": "concept_48",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8300679
    },
    "rel_48": {
      "id": "rel_48",
      "source_id": "doc_0",
      "target_id": "concept_49",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8301032
    },
    "rel_49": {
      "id": "rel_49",
      "source_id": "doc_0",
      "target_id": "concept_50",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.830122
    },
    "rel_50": {
      "id": "rel_50",
      "source_id": "doc_0",
      "target_id": "concept_51",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.830139
    },
    "rel_51": {
      "id": "rel_51",
      "source_id": "doc_0",
      "target_id": "concept_52",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8301618
    },
    "rel_52": {
      "id": "rel_52",
      "source_id": "doc_0",
      "target_id": "concept_53",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.830179
    },
    "rel_53": {
      "id": "rel_53",
      "source_id": "doc_0",
      "target_id": "concept_54",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.83021
    },
    "rel_54": {
      "id": "rel_54",
      "source_id": "doc_0",
      "target_id": "concept_55",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.830227
    },
    "rel_55": {
      "id": "rel_55",
      "source_id": "doc_0",
      "target_id": "concept_56",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8302531
    },
    "rel_56": {
      "id": "rel_56",
      "source_id": "doc_0",
      "target_id": "concept_57",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8302789
    },
    "rel_57": {
      "id": "rel_57",
      "source_id": "doc_0",
      "target_id": "concept_58",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.830297
    },
    "rel_58": {
      "id": "rel_58",
      "source_id": "doc_0",
      "target_id": "concept_59",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.830316
    },
    "rel_59": {
      "id": "rel_59",
      "source_id": "doc_0",
      "target_id": "concept_60",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.830334
    },
    "rel_60": {
      "id": "rel_60",
      "source_id": "doc_0",
      "target_id": "concept_61",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8303518
    },
    "rel_61": {
      "id": "rel_61",
      "source_id": "doc_0",
      "target_id": "concept_62",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8303769
    },
    "rel_62": {
      "id": "rel_62",
      "source_id": "doc_0",
      "target_id": "concept_63",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8304
    },
    "rel_63": {
      "id": "rel_63",
      "source_id": "doc_0",
      "target_id": "concept_64",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.830425
    },
    "rel_64": {
      "id": "rel_64",
      "source_id": "doc_0",
      "target_id": "concept_65",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.830445
    },
    "rel_65": {
      "id": "rel_65",
      "source_id": "doc_0",
      "target_id": "concept_66",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.830464
    },
    "rel_66": {
      "id": "rel_66",
      "source_id": "doc_0",
      "target_id": "concept_67",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.830484
    },
    "rel_67": {
      "id": "rel_67",
      "source_id": "doc_0",
      "target_id": "concept_68",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.830511
    },
    "rel_68": {
      "id": "rel_68",
      "source_id": "doc_0",
      "target_id": "concept_69",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.830542
    },
    "rel_69": {
      "id": "rel_69",
      "source_id": "doc_0",
      "target_id": "concept_70",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.830741
    },
    "rel_70": {
      "id": "rel_70",
      "source_id": "doc_0",
      "target_id": "concept_71",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8307798
    },
    "rel_71": {
      "id": "rel_71",
      "source_id": "doc_0",
      "target_id": "concept_72",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.830801
    },
    "rel_72": {
      "id": "rel_72",
      "source_id": "doc_0",
      "target_id": "concept_73",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.830842
    },
    "rel_73": {
      "id": "rel_73",
      "source_id": "doc_0",
      "target_id": "concept_74",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.830864
    },
    "rel_74": {
      "id": "rel_74",
      "source_id": "doc_0",
      "target_id": "concept_75",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.830892
    },
    "rel_75": {
      "id": "rel_75",
      "source_id": "doc_0",
      "target_id": "concept_76",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.830915
    },
    "rel_76": {
      "id": "rel_76",
      "source_id": "doc_0",
      "target_id": "concept_77",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.830938
    },
    "rel_77": {
      "id": "rel_77",
      "source_id": "doc_0",
      "target_id": "concept_78",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.83096
    },
    "rel_78": {
      "id": "rel_78",
      "source_id": "doc_0",
      "target_id": "concept_79",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.830982
    },
    "rel_79": {
      "id": "rel_79",
      "source_id": "doc_80",
      "target_id": "concept_81",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8317811
    },
    "rel_80": {
      "id": "rel_80",
      "source_id": "doc_80",
      "target_id": "concept_82",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8318028
    },
    "rel_81": {
      "id": "rel_81",
      "source_id": "doc_80",
      "target_id": "concept_83",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.831826
    },
    "rel_82": {
      "id": "rel_82",
      "source_id": "doc_80",
      "target_id": "concept_84",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.831848
    },
    "rel_83": {
      "id": "rel_83",
      "source_id": "doc_80",
      "target_id": "concept_85",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.831872
    },
    "rel_84": {
      "id": "rel_84",
      "source_id": "doc_80",
      "target_id": "concept_26",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.831883
    },
    "rel_85": {
      "id": "rel_85",
      "source_id": "doc_80",
      "target_id": "concept_86",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8319051
    },
    "rel_86": {
      "id": "rel_86",
      "source_id": "doc_80",
      "target_id": "concept_87",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.831927
    },
    "rel_87": {
      "id": "rel_87",
      "source_id": "doc_80",
      "target_id": "concept_88",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8319502
    },
    "rel_88": {
      "id": "rel_88",
      "source_id": "doc_80",
      "target_id": "concept_89",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8319721
    },
    "rel_89": {
      "id": "rel_89",
      "source_id": "doc_80",
      "target_id": "concept_90",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.831993
    },
    "rel_90": {
      "id": "rel_90",
      "source_id": "doc_80",
      "target_id": "concept_91",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.832018
    },
    "rel_91": {
      "id": "rel_91",
      "source_id": "doc_80",
      "target_id": "concept_92",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.832041
    },
    "rel_92": {
      "id": "rel_92",
      "source_id": "doc_80",
      "target_id": "concept_93",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.832063
    },
    "rel_93": {
      "id": "rel_93",
      "source_id": "doc_80",
      "target_id": "concept_94",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.832087
    },
    "rel_94": {
      "id": "rel_94",
      "source_id": "doc_80",
      "target_id": "concept_95",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.832114
    },
    "rel_95": {
      "id": "rel_95",
      "source_id": "doc_80",
      "target_id": "concept_96",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.832257
    },
    "rel_96": {
      "id": "rel_96",
      "source_id": "doc_80",
      "target_id": "concept_97",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.832282
    },
    "rel_97": {
      "id": "rel_97",
      "source_id": "doc_80",
      "target_id": "concept_98",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.832306
    },
    "rel_98": {
      "id": "rel_98",
      "source_id": "doc_80",
      "target_id": "concept_99",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8332312
    },
    "rel_99": {
      "id": "rel_99",
      "source_id": "doc_80",
      "target_id": "concept_100",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8332999
    },
    "rel_100": {
      "id": "rel_100",
      "source_id": "doc_80",
      "target_id": "concept_101",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8334138
    },
    "rel_101": {
      "id": "rel_101",
      "source_id": "doc_80",
      "target_id": "concept_102",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.833445
    },
    "rel_102": {
      "id": "rel_102",
      "source_id": "doc_80",
      "target_id": "concept_79",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8334668
    },
    "rel_103": {
      "id": "rel_103",
      "source_id": "doc_80",
      "target_id": "concept_103",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8334908
    },
    "rel_104": {
      "id": "rel_104",
      "source_id": "doc_80",
      "target_id": "concept_104",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8335161
    },
    "rel_105": {
      "id": "rel_105",
      "source_id": "doc_80",
      "target_id": "concept_105",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.833548
    },
    "rel_106": {
      "id": "rel_106",
      "source_id": "doc_106",
      "target_id": "concept_107",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8375769
    },
    "rel_107": {
      "id": "rel_107",
      "source_id": "doc_106",
      "target_id": "concept_108",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8376052
    },
    "rel_108": {
      "id": "rel_108",
      "source_id": "doc_106",
      "target_id": "concept_109",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.837632
    },
    "rel_109": {
      "id": "rel_109",
      "source_id": "doc_106",
      "target_id": "concept_110",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8376992
    },
    "rel_110": {
      "id": "rel_110",
      "source_id": "doc_106",
      "target_id": "concept_111",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.837725
    },
    "rel_111": {
      "id": "rel_111",
      "source_id": "doc_106",
      "target_id": "concept_112",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.837752
    },
    "rel_112": {
      "id": "rel_112",
      "source_id": "doc_106",
      "target_id": "concept_113",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8378
    },
    "rel_113": {
      "id": "rel_113",
      "source_id": "doc_106",
      "target_id": "concept_114",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.837837
    },
    "rel_114": {
      "id": "rel_114",
      "source_id": "doc_106",
      "target_id": "concept_115",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.837864
    },
    "rel_115": {
      "id": "rel_115",
      "source_id": "doc_106",
      "target_id": "concept_116",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.83794
    },
    "rel_116": {
      "id": "rel_116",
      "source_id": "doc_106",
      "target_id": "concept_117",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8379679
    },
    "rel_117": {
      "id": "rel_117",
      "source_id": "doc_106",
      "target_id": "concept_118",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.838082
    },
    "rel_118": {
      "id": "rel_118",
      "source_id": "doc_106",
      "target_id": "concept_119",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.838113
    },
    "rel_119": {
      "id": "rel_119",
      "source_id": "doc_106",
      "target_id": "concept_120",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8381429
    },
    "rel_120": {
      "id": "rel_120",
      "source_id": "doc_106",
      "target_id": "concept_121",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.838172
    },
    "rel_121": {
      "id": "rel_121",
      "source_id": "doc_106",
      "target_id": "concept_122",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.838202
    },
    "rel_122": {
      "id": "rel_122",
      "source_id": "doc_106",
      "target_id": "concept_123",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.838232
    },
    "rel_123": {
      "id": "rel_123",
      "source_id": "doc_106",
      "target_id": "concept_124",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.838262
    },
    "rel_124": {
      "id": "rel_124",
      "source_id": "doc_106",
      "target_id": "concept_125",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.838292
    },
    "rel_125": {
      "id": "rel_125",
      "source_id": "doc_106",
      "target_id": "concept_126",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8383229
    },
    "rel_126": {
      "id": "rel_126",
      "source_id": "doc_106",
      "target_id": "concept_127",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.838352
    },
    "rel_127": {
      "id": "rel_127",
      "source_id": "doc_106",
      "target_id": "concept_128",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.838382
    },
    "rel_128": {
      "id": "rel_128",
      "source_id": "doc_106",
      "target_id": "concept_129",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.838412
    },
    "rel_129": {
      "id": "rel_129",
      "source_id": "doc_106",
      "target_id": "concept_130",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.838444
    },
    "rel_130": {
      "id": "rel_130",
      "source_id": "doc_106",
      "target_id": "concept_131",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.838499
    },
    "rel_131": {
      "id": "rel_131",
      "source_id": "doc_106",
      "target_id": "concept_132",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.840461
    },
    "rel_132": {
      "id": "rel_132",
      "source_id": "doc_106",
      "target_id": "concept_133",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.840518
    },
    "rel_133": {
      "id": "rel_133",
      "source_id": "doc_106",
      "target_id": "concept_134",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.840559
    },
    "rel_134": {
      "id": "rel_134",
      "source_id": "doc_106",
      "target_id": "concept_135",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.840598
    },
    "rel_135": {
      "id": "rel_135",
      "source_id": "doc_106",
      "target_id": "concept_136",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.840638
    },
    "rel_136": {
      "id": "rel_136",
      "source_id": "doc_106",
      "target_id": "concept_137",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.840687
    },
    "rel_137": {
      "id": "rel_137",
      "source_id": "doc_106",
      "target_id": "concept_138",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8407528
    },
    "rel_138": {
      "id": "rel_138",
      "source_id": "doc_106",
      "target_id": "concept_139",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.840966
    },
    "rel_139": {
      "id": "rel_139",
      "source_id": "doc_106",
      "target_id": "concept_140",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8410082
    },
    "rel_140": {
      "id": "rel_140",
      "source_id": "doc_106",
      "target_id": "concept_141",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8411698
    },
    "rel_141": {
      "id": "rel_141",
      "source_id": "doc_106",
      "target_id": "concept_142",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.841326
    },
    "rel_142": {
      "id": "rel_142",
      "source_id": "doc_106",
      "target_id": "concept_143",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8413901
    },
    "rel_143": {
      "id": "rel_143",
      "source_id": "doc_106",
      "target_id": "concept_144",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8414888
    },
    "rel_144": {
      "id": "rel_144",
      "source_id": "doc_106",
      "target_id": "concept_145",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.841561
    },
    "rel_145": {
      "id": "rel_145",
      "source_id": "doc_106",
      "target_id": "concept_146",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.841603
    },
    "rel_146": {
      "id": "rel_146",
      "source_id": "doc_106",
      "target_id": "concept_147",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.841645
    },
    "rel_147": {
      "id": "rel_147",
      "source_id": "doc_106",
      "target_id": "concept_148",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.841739
    },
    "rel_148": {
      "id": "rel_148",
      "source_id": "doc_106",
      "target_id": "concept_149",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.841781
    },
    "rel_149": {
      "id": "rel_149",
      "source_id": "doc_106",
      "target_id": "concept_150",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.841824
    },
    "rel_150": {
      "id": "rel_150",
      "source_id": "doc_106",
      "target_id": "concept_151",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.841867
    },
    "rel_151": {
      "id": "rel_151",
      "source_id": "doc_106",
      "target_id": "concept_152",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.841938
    },
    "rel_152": {
      "id": "rel_152",
      "source_id": "doc_106",
      "target_id": "concept_153",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.841986
    },
    "rel_153": {
      "id": "rel_153",
      "source_id": "doc_106",
      "target_id": "concept_154",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.84203
    },
    "rel_154": {
      "id": "rel_154",
      "source_id": "doc_106",
      "target_id": "concept_155",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8420742
    },
    "rel_155": {
      "id": "rel_155",
      "source_id": "doc_106",
      "target_id": "concept_156",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8421178
    },
    "rel_156": {
      "id": "rel_156",
      "source_id": "doc_106",
      "target_id": "concept_157",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8421628
    },
    "rel_157": {
      "id": "rel_157",
      "source_id": "doc_106",
      "target_id": "concept_158",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8422139
    },
    "rel_158": {
      "id": "rel_158",
      "source_id": "doc_106",
      "target_id": "concept_159",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.842259
    },
    "rel_159": {
      "id": "rel_159",
      "source_id": "doc_106",
      "target_id": "concept_160",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8429608
    },
    "rel_160": {
      "id": "rel_160",
      "source_id": "doc_106",
      "target_id": "concept_161",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8430212
    },
    "rel_161": {
      "id": "rel_161",
      "source_id": "doc_106",
      "target_id": "concept_162",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.843071
    },
    "rel_162": {
      "id": "rel_162",
      "source_id": "doc_106",
      "target_id": "concept_163",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.84312
    },
    "rel_163": {
      "id": "rel_163",
      "source_id": "doc_106",
      "target_id": "concept_164",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.843253
    },
    "rel_164": {
      "id": "rel_164",
      "source_id": "doc_106",
      "target_id": "concept_165",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.843303
    },
    "rel_165": {
      "id": "rel_165",
      "source_id": "doc_106",
      "target_id": "concept_166",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.843366
    },
    "rel_166": {
      "id": "rel_166",
      "source_id": "doc_106",
      "target_id": "concept_167",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8435378
    },
    "rel_167": {
      "id": "rel_167",
      "source_id": "doc_106",
      "target_id": "concept_168",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.843786
    },
    "rel_168": {
      "id": "rel_168",
      "source_id": "doc_106",
      "target_id": "concept_169",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.843907
    },
    "rel_169": {
      "id": "rel_169",
      "source_id": "doc_106",
      "target_id": "concept_170",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.844107
    },
    "rel_170": {
      "id": "rel_170",
      "source_id": "doc_106",
      "target_id": "concept_171",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.84417
    },
    "rel_171": {
      "id": "rel_171",
      "source_id": "doc_106",
      "target_id": "concept_172",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.844316
    },
    "rel_172": {
      "id": "rel_172",
      "source_id": "doc_106",
      "target_id": "concept_173",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8445702
    },
    "rel_173": {
      "id": "rel_173",
      "source_id": "doc_106",
      "target_id": "concept_174",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8446999
    },
    "rel_174": {
      "id": "rel_174",
      "source_id": "doc_106",
      "target_id": "concept_175",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8448598
    },
    "rel_175": {
      "id": "rel_175",
      "source_id": "doc_106",
      "target_id": "concept_176",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.844917
    },
    "rel_176": {
      "id": "rel_176",
      "source_id": "doc_106",
      "target_id": "concept_177",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.844969
    },
    "rel_177": {
      "id": "rel_177",
      "source_id": "doc_106",
      "target_id": "concept_178",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.845202
    },
    "rel_178": {
      "id": "rel_178",
      "source_id": "doc_106",
      "target_id": "concept_179",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.845386
    },
    "rel_179": {
      "id": "rel_179",
      "source_id": "doc_106",
      "target_id": "concept_180",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.845505
    },
    "rel_180": {
      "id": "rel_180",
      "source_id": "doc_106",
      "target_id": "concept_181",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.84561
    },
    "rel_181": {
      "id": "rel_181",
      "source_id": "doc_106",
      "target_id": "concept_182",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.845717
    },
    "rel_182": {
      "id": "rel_182",
      "source_id": "doc_106",
      "target_id": "concept_183",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.845858
    },
    "rel_183": {
      "id": "rel_183",
      "source_id": "doc_106",
      "target_id": "concept_184",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.845917
    },
    "rel_184": {
      "id": "rel_184",
      "source_id": "doc_106",
      "target_id": "concept_185",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8459818
    },
    "rel_185": {
      "id": "rel_185",
      "source_id": "doc_106",
      "target_id": "concept_186",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8460329
    },
    "rel_186": {
      "id": "rel_186",
      "source_id": "doc_106",
      "target_id": "concept_187",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8460858
    },
    "rel_187": {
      "id": "rel_187",
      "source_id": "doc_106",
      "target_id": "concept_188",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.846138
    },
    "rel_188": {
      "id": "rel_188",
      "source_id": "doc_106",
      "target_id": "concept_189",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.846189
    },
    "rel_189": {
      "id": "rel_189",
      "source_id": "doc_106",
      "target_id": "concept_190",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.846242
    },
    "rel_190": {
      "id": "rel_190",
      "source_id": "doc_106",
      "target_id": "concept_191",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8463051
    },
    "rel_191": {
      "id": "rel_191",
      "source_id": "doc_106",
      "target_id": "concept_192",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.846359
    },
    "rel_192": {
      "id": "rel_192",
      "source_id": "doc_106",
      "target_id": "concept_193",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.846412
    },
    "rel_193": {
      "id": "rel_193",
      "source_id": "doc_106",
      "target_id": "concept_194",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.846464
    },
    "rel_194": {
      "id": "rel_194",
      "source_id": "doc_106",
      "target_id": "concept_195",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.84654
    },
    "rel_195": {
      "id": "rel_195",
      "source_id": "doc_106",
      "target_id": "concept_196",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.846596
    },
    "rel_196": {
      "id": "rel_196",
      "source_id": "doc_106",
      "target_id": "concept_197",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8466492
    },
    "rel_197": {
      "id": "rel_197",
      "source_id": "doc_106",
      "target_id": "concept_198",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.846727
    },
    "rel_198": {
      "id": "rel_198",
      "source_id": "doc_106",
      "target_id": "concept_199",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.846782
    },
    "rel_199": {
      "id": "rel_199",
      "source_id": "doc_106",
      "target_id": "concept_200",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.846838
    },
    "rel_200": {
      "id": "rel_200",
      "source_id": "doc_106",
      "target_id": "concept_201",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.846892
    },
    "rel_201": {
      "id": "rel_201",
      "source_id": "doc_106",
      "target_id": "concept_202",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.846945
    },
    "rel_202": {
      "id": "rel_202",
      "source_id": "doc_106",
      "target_id": "concept_203",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.847002
    },
    "rel_203": {
      "id": "rel_203",
      "source_id": "doc_106",
      "target_id": "concept_204",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8471181
    },
    "rel_204": {
      "id": "rel_204",
      "source_id": "doc_106",
      "target_id": "concept_205",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8473442
    },
    "rel_205": {
      "id": "rel_205",
      "source_id": "doc_106",
      "target_id": "concept_206",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.847679
    },
    "rel_206": {
      "id": "rel_206",
      "source_id": "doc_106",
      "target_id": "concept_207",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.847747
    },
    "rel_207": {
      "id": "rel_207",
      "source_id": "doc_106",
      "target_id": "concept_208",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.847809
    },
    "rel_208": {
      "id": "rel_208",
      "source_id": "doc_106",
      "target_id": "concept_209",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8481832
    },
    "rel_209": {
      "id": "rel_209",
      "source_id": "doc_106",
      "target_id": "concept_210",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.848754
    },
    "rel_210": {
      "id": "rel_210",
      "source_id": "doc_106",
      "target_id": "concept_211",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.848813
    },
    "rel_211": {
      "id": "rel_211",
      "source_id": "doc_106",
      "target_id": "concept_212",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.848991
    },
    "rel_212": {
      "id": "rel_212",
      "source_id": "doc_106",
      "target_id": "concept_213",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.849321
    },
    "rel_213": {
      "id": "rel_213",
      "source_id": "doc_106",
      "target_id": "concept_214",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.849719
    },
    "rel_214": {
      "id": "rel_214",
      "source_id": "doc_106",
      "target_id": "concept_215",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8497841
    },
    "rel_215": {
      "id": "rel_215",
      "source_id": "doc_106",
      "target_id": "concept_216",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.850092
    },
    "rel_216": {
      "id": "rel_216",
      "source_id": "doc_106",
      "target_id": "concept_217",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.850166
    },
    "rel_217": {
      "id": "rel_217",
      "source_id": "doc_106",
      "target_id": "concept_218",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.850267
    },
    "rel_218": {
      "id": "rel_218",
      "source_id": "doc_106",
      "target_id": "concept_219",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.850325
    },
    "rel_219": {
      "id": "rel_219",
      "source_id": "doc_106",
      "target_id": "concept_220",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.850621
    },
    "rel_220": {
      "id": "rel_220",
      "source_id": "doc_221",
      "target_id": "concept_222",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.852661
    },
    "rel_221": {
      "id": "rel_221",
      "source_id": "doc_221",
      "target_id": "concept_223",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.852721
    },
    "rel_222": {
      "id": "rel_222",
      "source_id": "doc_221",
      "target_id": "concept_224",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.852779
    },
    "rel_223": {
      "id": "rel_223",
      "source_id": "doc_221",
      "target_id": "concept_225",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8528378
    },
    "rel_224": {
      "id": "rel_224",
      "source_id": "doc_221",
      "target_id": "concept_226",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.852961
    },
    "rel_225": {
      "id": "rel_225",
      "source_id": "doc_221",
      "target_id": "concept_227",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.853025
    },
    "rel_226": {
      "id": "rel_226",
      "source_id": "doc_221",
      "target_id": "concept_228",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.853111
    },
    "rel_227": {
      "id": "rel_227",
      "source_id": "doc_221",
      "target_id": "concept_229",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8531709
    },
    "rel_228": {
      "id": "rel_228",
      "source_id": "doc_221",
      "target_id": "concept_230",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.853245
    },
    "rel_229": {
      "id": "rel_229",
      "source_id": "doc_221",
      "target_id": "concept_231",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.853303
    },
    "rel_230": {
      "id": "rel_230",
      "source_id": "doc_221",
      "target_id": "concept_232",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8533618
    },
    "rel_231": {
      "id": "rel_231",
      "source_id": "doc_221",
      "target_id": "concept_233",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.853421
    },
    "rel_232": {
      "id": "rel_232",
      "source_id": "doc_221",
      "target_id": "concept_234",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.853479
    },
    "rel_233": {
      "id": "rel_233",
      "source_id": "doc_221",
      "target_id": "concept_235",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8535402
    },
    "rel_234": {
      "id": "rel_234",
      "source_id": "doc_221",
      "target_id": "concept_236",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.853599
    },
    "rel_235": {
      "id": "rel_235",
      "source_id": "doc_221",
      "target_id": "concept_237",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.853662
    },
    "rel_236": {
      "id": "rel_236",
      "source_id": "doc_221",
      "target_id": "concept_238",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.853724
    },
    "rel_237": {
      "id": "rel_237",
      "source_id": "doc_221",
      "target_id": "concept_239",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.853784
    },
    "rel_238": {
      "id": "rel_238",
      "source_id": "doc_221",
      "target_id": "concept_240",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.853842
    },
    "rel_239": {
      "id": "rel_239",
      "source_id": "doc_221",
      "target_id": "concept_241",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8539
    },
    "rel_240": {
      "id": "rel_240",
      "source_id": "doc_221",
      "target_id": "concept_242",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8539588
    },
    "rel_241": {
      "id": "rel_241",
      "source_id": "doc_221",
      "target_id": "concept_243",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.854018
    },
    "rel_242": {
      "id": "rel_242",
      "source_id": "doc_221",
      "target_id": "concept_244",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8540769
    },
    "rel_243": {
      "id": "rel_243",
      "source_id": "doc_221",
      "target_id": "concept_245",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8541389
    },
    "rel_244": {
      "id": "rel_244",
      "source_id": "doc_221",
      "target_id": "concept_246",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8542001
    },
    "rel_245": {
      "id": "rel_245",
      "source_id": "doc_221",
      "target_id": "concept_247",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.85429
    },
    "rel_246": {
      "id": "rel_246",
      "source_id": "doc_221",
      "target_id": "concept_248",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.85435
    },
    "rel_247": {
      "id": "rel_247",
      "source_id": "doc_221",
      "target_id": "concept_249",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.854445
    },
    "rel_248": {
      "id": "rel_248",
      "source_id": "doc_221",
      "target_id": "concept_250",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.854508
    },
    "rel_249": {
      "id": "rel_249",
      "source_id": "doc_221",
      "target_id": "concept_251",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.854638
    },
    "rel_250": {
      "id": "rel_250",
      "source_id": "doc_221",
      "target_id": "concept_252",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.854916
    },
    "rel_251": {
      "id": "rel_251",
      "source_id": "doc_221",
      "target_id": "concept_253",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.854985
    },
    "rel_252": {
      "id": "rel_252",
      "source_id": "doc_221",
      "target_id": "concept_254",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.855048
    },
    "rel_253": {
      "id": "rel_253",
      "source_id": "doc_221",
      "target_id": "concept_255",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.855138
    },
    "rel_254": {
      "id": "rel_254",
      "source_id": "doc_221",
      "target_id": "concept_256",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.855201
    },
    "rel_255": {
      "id": "rel_255",
      "source_id": "doc_221",
      "target_id": "concept_257",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.855401
    },
    "rel_256": {
      "id": "rel_256",
      "source_id": "doc_221",
      "target_id": "concept_258",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.855648
    },
    "rel_257": {
      "id": "rel_257",
      "source_id": "doc_221",
      "target_id": "concept_259",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.85577
    },
    "rel_258": {
      "id": "rel_258",
      "source_id": "doc_221",
      "target_id": "concept_260",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.856135
    },
    "rel_259": {
      "id": "rel_259",
      "source_id": "doc_221",
      "target_id": "concept_261",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.856291
    },
    "rel_260": {
      "id": "rel_260",
      "source_id": "doc_221",
      "target_id": "concept_262",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.856556
    },
    "rel_261": {
      "id": "rel_261",
      "source_id": "doc_221",
      "target_id": "concept_263",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8566558
    },
    "rel_262": {
      "id": "rel_262",
      "source_id": "doc_221",
      "target_id": "concept_264",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.856933
    },
    "rel_263": {
      "id": "rel_263",
      "source_id": "doc_221",
      "target_id": "concept_265",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8572211
    },
    "rel_264": {
      "id": "rel_264",
      "source_id": "doc_221",
      "target_id": "concept_266",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8574002
    },
    "rel_265": {
      "id": "rel_265",
      "source_id": "doc_221",
      "target_id": "concept_267",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.857524
    },
    "rel_266": {
      "id": "rel_266",
      "source_id": "doc_221",
      "target_id": "concept_268",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.857791
    },
    "rel_267": {
      "id": "rel_267",
      "source_id": "doc_221",
      "target_id": "concept_269",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8579571
    },
    "rel_268": {
      "id": "rel_268",
      "source_id": "doc_221",
      "target_id": "concept_270",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.858351
    },
    "rel_269": {
      "id": "rel_269",
      "source_id": "doc_221",
      "target_id": "concept_271",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.858834
    },
    "rel_270": {
      "id": "rel_270",
      "source_id": "doc_221",
      "target_id": "concept_272",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8592288
    },
    "rel_271": {
      "id": "rel_271",
      "source_id": "doc_221",
      "target_id": "concept_273",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.859423
    },
    "rel_272": {
      "id": "rel_272",
      "source_id": "doc_221",
      "target_id": "concept_274",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.859657
    },
    "rel_273": {
      "id": "rel_273",
      "source_id": "doc_221",
      "target_id": "concept_275",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.859915
    },
    "rel_274": {
      "id": "rel_274",
      "source_id": "doc_221",
      "target_id": "concept_276",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8600051
    },
    "rel_275": {
      "id": "rel_275",
      "source_id": "doc_221",
      "target_id": "concept_277",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8600729
    },
    "rel_276": {
      "id": "rel_276",
      "source_id": "doc_221",
      "target_id": "concept_278",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.860137
    },
    "rel_277": {
      "id": "rel_277",
      "source_id": "doc_221",
      "target_id": "concept_279",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.860199
    },
    "rel_278": {
      "id": "rel_278",
      "source_id": "doc_221",
      "target_id": "concept_280",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8602629
    },
    "rel_279": {
      "id": "rel_279",
      "source_id": "doc_221",
      "target_id": "concept_281",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.860325
    },
    "rel_280": {
      "id": "rel_280",
      "source_id": "doc_221",
      "target_id": "concept_282",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.860387
    },
    "rel_281": {
      "id": "rel_281",
      "source_id": "doc_221",
      "target_id": "concept_283",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.860451
    },
    "rel_282": {
      "id": "rel_282",
      "source_id": "doc_221",
      "target_id": "concept_284",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.860515
    },
    "rel_283": {
      "id": "rel_283",
      "source_id": "doc_221",
      "target_id": "concept_285",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.860578
    },
    "rel_284": {
      "id": "rel_284",
      "source_id": "doc_221",
      "target_id": "concept_286",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.860641
    },
    "rel_285": {
      "id": "rel_285",
      "source_id": "doc_221",
      "target_id": "concept_287",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8607051
    },
    "rel_286": {
      "id": "rel_286",
      "source_id": "doc_221",
      "target_id": "concept_288",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.860767
    },
    "rel_287": {
      "id": "rel_287",
      "source_id": "doc_221",
      "target_id": "concept_289",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.86083
    },
    "rel_288": {
      "id": "rel_288",
      "source_id": "doc_221",
      "target_id": "concept_290",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.860893
    },
    "rel_289": {
      "id": "rel_289",
      "source_id": "doc_221",
      "target_id": "concept_291",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.860956
    },
    "rel_290": {
      "id": "rel_290",
      "source_id": "doc_221",
      "target_id": "concept_292",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.861019
    },
    "rel_291": {
      "id": "rel_291",
      "source_id": "doc_221",
      "target_id": "concept_293",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.861087
    },
    "rel_292": {
      "id": "rel_292",
      "source_id": "doc_221",
      "target_id": "concept_294",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.861151
    },
    "rel_293": {
      "id": "rel_293",
      "source_id": "doc_221",
      "target_id": "concept_295",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.861232
    },
    "rel_294": {
      "id": "rel_294",
      "source_id": "doc_221",
      "target_id": "concept_296",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.861297
    },
    "rel_295": {
      "id": "rel_295",
      "source_id": "doc_221",
      "target_id": "concept_297",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.861365
    },
    "rel_296": {
      "id": "rel_296",
      "source_id": "doc_221",
      "target_id": "concept_298",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.861461
    },
    "rel_297": {
      "id": "rel_297",
      "source_id": "doc_221",
      "target_id": "concept_299",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8615282
    },
    "rel_298": {
      "id": "rel_298",
      "source_id": "doc_221",
      "target_id": "concept_300",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.861609
    },
    "rel_299": {
      "id": "rel_299",
      "source_id": "doc_221",
      "target_id": "concept_301",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.861674
    },
    "rel_300": {
      "id": "rel_300",
      "source_id": "doc_221",
      "target_id": "concept_302",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.861752
    },
    "rel_301": {
      "id": "rel_301",
      "source_id": "doc_221",
      "target_id": "concept_303",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.861818
    },
    "rel_302": {
      "id": "rel_302",
      "source_id": "doc_221",
      "target_id": "concept_304",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8618822
    },
    "rel_303": {
      "id": "rel_303",
      "source_id": "doc_221",
      "target_id": "concept_305",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.861948
    },
    "rel_304": {
      "id": "rel_304",
      "source_id": "doc_306",
      "target_id": "concept_307",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.867677
    },
    "rel_305": {
      "id": "rel_305",
      "source_id": "doc_306",
      "target_id": "concept_308",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.867743
    },
    "rel_306": {
      "id": "rel_306",
      "source_id": "doc_306",
      "target_id": "concept_309",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8678122
    },
    "rel_307": {
      "id": "rel_307",
      "source_id": "doc_306",
      "target_id": "concept_310",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.867882
    },
    "rel_308": {
      "id": "rel_308",
      "source_id": "doc_306",
      "target_id": "concept_311",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.867948
    },
    "rel_309": {
      "id": "rel_309",
      "source_id": "doc_306",
      "target_id": "concept_312",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.868072
    },
    "rel_310": {
      "id": "rel_310",
      "source_id": "doc_306",
      "target_id": "concept_313",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.868186
    },
    "rel_311": {
      "id": "rel_311",
      "source_id": "doc_306",
      "target_id": "concept_314",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.868255
    },
    "rel_312": {
      "id": "rel_312",
      "source_id": "doc_306",
      "target_id": "concept_315",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.868321
    },
    "rel_313": {
      "id": "rel_313",
      "source_id": "doc_306",
      "target_id": "concept_316",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8684
    },
    "rel_314": {
      "id": "rel_314",
      "source_id": "doc_306",
      "target_id": "concept_317",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.86847
    },
    "rel_315": {
      "id": "rel_315",
      "source_id": "doc_306",
      "target_id": "concept_318",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.868535
    },
    "rel_316": {
      "id": "rel_316",
      "source_id": "doc_306",
      "target_id": "concept_319",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8691149
    },
    "rel_317": {
      "id": "rel_317",
      "source_id": "doc_306",
      "target_id": "concept_320",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8691819
    },
    "rel_318": {
      "id": "rel_318",
      "source_id": "doc_306",
      "target_id": "concept_321",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8692548
    },
    "rel_319": {
      "id": "rel_319",
      "source_id": "doc_306",
      "target_id": "concept_322",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.869333
    },
    "rel_320": {
      "id": "rel_320",
      "source_id": "doc_306",
      "target_id": "concept_323",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.869409
    },
    "rel_321": {
      "id": "rel_321",
      "source_id": "doc_306",
      "target_id": "concept_324",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.86948
    },
    "rel_322": {
      "id": "rel_322",
      "source_id": "doc_306",
      "target_id": "concept_325",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.869549
    },
    "rel_323": {
      "id": "rel_323",
      "source_id": "doc_306",
      "target_id": "concept_326",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8696241
    },
    "rel_324": {
      "id": "rel_324",
      "source_id": "doc_306",
      "target_id": "concept_327",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8696918
    },
    "rel_325": {
      "id": "rel_325",
      "source_id": "doc_306",
      "target_id": "concept_328",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.869764
    },
    "rel_326": {
      "id": "rel_326",
      "source_id": "doc_306",
      "target_id": "concept_329",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.869845
    },
    "rel_327": {
      "id": "rel_327",
      "source_id": "doc_306",
      "target_id": "concept_330",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.869927
    },
    "rel_328": {
      "id": "rel_328",
      "source_id": "doc_306",
      "target_id": "concept_331",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.869994
    },
    "rel_329": {
      "id": "rel_329",
      "source_id": "doc_306",
      "target_id": "concept_332",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.870097
    },
    "rel_330": {
      "id": "rel_330",
      "source_id": "doc_306",
      "target_id": "concept_333",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.870163
    },
    "rel_331": {
      "id": "rel_331",
      "source_id": "doc_306",
      "target_id": "concept_334",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.87023
    },
    "rel_332": {
      "id": "rel_332",
      "source_id": "doc_306",
      "target_id": "concept_335",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8702989
    },
    "rel_333": {
      "id": "rel_333",
      "source_id": "doc_306",
      "target_id": "concept_336",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.870386
    },
    "rel_334": {
      "id": "rel_334",
      "source_id": "doc_306",
      "target_id": "concept_337",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8704581
    },
    "rel_335": {
      "id": "rel_335",
      "source_id": "doc_306",
      "target_id": "concept_338",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8705971
    },
    "rel_336": {
      "id": "rel_336",
      "source_id": "doc_306",
      "target_id": "concept_339",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.87078
    },
    "rel_337": {
      "id": "rel_337",
      "source_id": "doc_306",
      "target_id": "concept_314",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.87086
    },
    "rel_338": {
      "id": "rel_338",
      "source_id": "doc_306",
      "target_id": "concept_340",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.870951
    },
    "rel_339": {
      "id": "rel_339",
      "source_id": "doc_306",
      "target_id": "concept_341",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.871091
    },
    "rel_340": {
      "id": "rel_340",
      "source_id": "doc_306",
      "target_id": "concept_342",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.87118
    },
    "rel_341": {
      "id": "rel_341",
      "source_id": "doc_306",
      "target_id": "concept_343",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.871258
    },
    "rel_342": {
      "id": "rel_342",
      "source_id": "doc_306",
      "target_id": "concept_344",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.871354
    },
    "rel_343": {
      "id": "rel_343",
      "source_id": "doc_306",
      "target_id": "concept_345",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.871424
    },
    "rel_344": {
      "id": "rel_344",
      "source_id": "doc_306",
      "target_id": "concept_346",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.871499
    },
    "rel_345": {
      "id": "rel_345",
      "source_id": "doc_306",
      "target_id": "concept_347",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.871572
    },
    "rel_346": {
      "id": "rel_346",
      "source_id": "doc_306",
      "target_id": "concept_348",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.871645
    },
    "rel_347": {
      "id": "rel_347",
      "source_id": "doc_306",
      "target_id": "concept_349",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.871727
    },
    "rel_348": {
      "id": "rel_348",
      "source_id": "doc_306",
      "target_id": "concept_350",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8718069
    },
    "rel_349": {
      "id": "rel_349",
      "source_id": "doc_306",
      "target_id": "concept_351",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8719099
    },
    "rel_350": {
      "id": "rel_350",
      "source_id": "doc_306",
      "target_id": "concept_352",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.871986
    },
    "rel_351": {
      "id": "rel_351",
      "source_id": "doc_306",
      "target_id": "concept_353",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8720572
    },
    "rel_352": {
      "id": "rel_352",
      "source_id": "doc_306",
      "target_id": "concept_354",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8721302
    },
    "rel_353": {
      "id": "rel_353",
      "source_id": "doc_306",
      "target_id": "concept_355",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8721988
    },
    "rel_354": {
      "id": "rel_354",
      "source_id": "doc_306",
      "target_id": "concept_356",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.874908
    },
    "rel_355": {
      "id": "rel_355",
      "source_id": "doc_306",
      "target_id": "concept_357",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.875006
    },
    "rel_356": {
      "id": "rel_356",
      "source_id": "doc_306",
      "target_id": "concept_358",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.875082
    },
    "rel_357": {
      "id": "rel_357",
      "source_id": "doc_306",
      "target_id": "concept_359",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8751638
    },
    "rel_358": {
      "id": "rel_358",
      "source_id": "doc_306",
      "target_id": "concept_360",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8752441
    },
    "rel_359": {
      "id": "rel_359",
      "source_id": "doc_306",
      "target_id": "concept_361",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.875325
    },
    "rel_360": {
      "id": "rel_360",
      "source_id": "doc_306",
      "target_id": "concept_362",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.875435
    },
    "rel_361": {
      "id": "rel_361",
      "source_id": "doc_306",
      "target_id": "concept_363",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.875555
    },
    "rel_362": {
      "id": "rel_362",
      "source_id": "doc_306",
      "target_id": "concept_364",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.876239
    },
    "rel_363": {
      "id": "rel_363",
      "source_id": "doc_306",
      "target_id": "concept_365",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8763268
    },
    "rel_364": {
      "id": "rel_364",
      "source_id": "doc_306",
      "target_id": "concept_366",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.876433
    },
    "rel_365": {
      "id": "rel_365",
      "source_id": "doc_306",
      "target_id": "concept_367",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8765361
    },
    "rel_366": {
      "id": "rel_366",
      "source_id": "doc_306",
      "target_id": "concept_368",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8766232
    },
    "rel_367": {
      "id": "rel_367",
      "source_id": "doc_306",
      "target_id": "concept_369",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8767118
    },
    "rel_368": {
      "id": "rel_368",
      "source_id": "doc_306",
      "target_id": "concept_370",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8767931
    },
    "rel_369": {
      "id": "rel_369",
      "source_id": "doc_306",
      "target_id": "concept_371",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8769221
    },
    "rel_370": {
      "id": "rel_370",
      "source_id": "doc_306",
      "target_id": "concept_372",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.877017
    },
    "rel_371": {
      "id": "rel_371",
      "source_id": "doc_306",
      "target_id": "concept_373",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.877154
    },
    "rel_372": {
      "id": "rel_372",
      "source_id": "doc_306",
      "target_id": "concept_374",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8779361
    },
    "rel_373": {
      "id": "rel_373",
      "source_id": "doc_306",
      "target_id": "concept_375",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.878032
    },
    "rel_374": {
      "id": "rel_374",
      "source_id": "doc_306",
      "target_id": "concept_345",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.87811
    },
    "rel_375": {
      "id": "rel_375",
      "source_id": "doc_306",
      "target_id": "concept_376",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.878211
    },
    "rel_376": {
      "id": "rel_376",
      "source_id": "doc_306",
      "target_id": "concept_377",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.878309
    },
    "rel_377": {
      "id": "rel_377",
      "source_id": "doc_306",
      "target_id": "concept_378",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8783958
    },
    "rel_378": {
      "id": "rel_378",
      "source_id": "doc_306",
      "target_id": "concept_379",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.878478
    },
    "rel_379": {
      "id": "rel_379",
      "source_id": "doc_306",
      "target_id": "concept_380",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.878558
    },
    "rel_380": {
      "id": "rel_380",
      "source_id": "doc_306",
      "target_id": "concept_381",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.878646
    },
    "rel_381": {
      "id": "rel_381",
      "source_id": "doc_306",
      "target_id": "concept_382",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8787498
    },
    "rel_382": {
      "id": "rel_382",
      "source_id": "doc_306",
      "target_id": "concept_383",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8788311
    },
    "rel_383": {
      "id": "rel_383",
      "source_id": "doc_306",
      "target_id": "concept_384",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.878921
    },
    "rel_384": {
      "id": "rel_384",
      "source_id": "doc_306",
      "target_id": "concept_385",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.880202
    },
    "rel_385": {
      "id": "rel_385",
      "source_id": "doc_306",
      "target_id": "concept_386",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8803031
    },
    "rel_386": {
      "id": "rel_386",
      "source_id": "doc_306",
      "target_id": "concept_387",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.880395
    },
    "rel_387": {
      "id": "rel_387",
      "source_id": "doc_306",
      "target_id": "concept_388",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.880487
    },
    "rel_388": {
      "id": "rel_388",
      "source_id": "doc_306",
      "target_id": "concept_389",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8805828
    },
    "rel_389": {
      "id": "rel_389",
      "source_id": "doc_306",
      "target_id": "concept_390",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.880672
    },
    "rel_390": {
      "id": "rel_390",
      "source_id": "doc_306",
      "target_id": "concept_391",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.880758
    },
    "rel_391": {
      "id": "rel_391",
      "source_id": "doc_306",
      "target_id": "concept_392",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.880842
    },
    "rel_392": {
      "id": "rel_392",
      "source_id": "doc_306",
      "target_id": "concept_393",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.88161
    },
    "rel_393": {
      "id": "rel_393",
      "source_id": "doc_306",
      "target_id": "concept_394",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.881814
    },
    "rel_394": {
      "id": "rel_394",
      "source_id": "doc_306",
      "target_id": "concept_395",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8819158
    },
    "rel_395": {
      "id": "rel_395",
      "source_id": "doc_306",
      "target_id": "concept_396",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.882015
    },
    "rel_396": {
      "id": "rel_396",
      "source_id": "doc_306",
      "target_id": "concept_397",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.882106
    },
    "rel_397": {
      "id": "rel_397",
      "source_id": "doc_306",
      "target_id": "concept_398",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8822
    },
    "rel_398": {
      "id": "rel_398",
      "source_id": "doc_306",
      "target_id": "concept_399",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.882294
    },
    "rel_399": {
      "id": "rel_399",
      "source_id": "doc_306",
      "target_id": "concept_400",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8823922
    },
    "rel_400": {
      "id": "rel_400",
      "source_id": "doc_306",
      "target_id": "concept_401",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.882487
    },
    "rel_401": {
      "id": "rel_401",
      "source_id": "doc_306",
      "target_id": "concept_402",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.882584
    },
    "rel_402": {
      "id": "rel_402",
      "source_id": "doc_306",
      "target_id": "concept_403",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8826728
    },
    "rel_403": {
      "id": "rel_403",
      "source_id": "doc_306",
      "target_id": "concept_404",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.882797
    },
    "rel_404": {
      "id": "rel_404",
      "source_id": "doc_306",
      "target_id": "concept_405",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.882949
    },
    "rel_405": {
      "id": "rel_405",
      "source_id": "doc_306",
      "target_id": "concept_406",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.883051
    },
    "rel_406": {
      "id": "rel_406",
      "source_id": "doc_306",
      "target_id": "concept_407",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.883165
    },
    "rel_407": {
      "id": "rel_407",
      "source_id": "doc_306",
      "target_id": "concept_408",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8832939
    },
    "rel_408": {
      "id": "rel_408",
      "source_id": "doc_306",
      "target_id": "concept_409",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.883383
    },
    "rel_409": {
      "id": "rel_409",
      "source_id": "doc_306",
      "target_id": "concept_410",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.883473
    },
    "rel_410": {
      "id": "rel_410",
      "source_id": "doc_306",
      "target_id": "concept_411",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.883568
    },
    "rel_411": {
      "id": "rel_411",
      "source_id": "doc_306",
      "target_id": "concept_412",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.883657
    },
    "rel_412": {
      "id": "rel_412",
      "source_id": "doc_306",
      "target_id": "concept_413",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.883782
    },
    "rel_413": {
      "id": "rel_413",
      "source_id": "doc_306",
      "target_id": "concept_414",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8838882
    },
    "rel_414": {
      "id": "rel_414",
      "source_id": "doc_306",
      "target_id": "concept_415",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.884004
    },
    "rel_415": {
      "id": "rel_415",
      "source_id": "doc_306",
      "target_id": "concept_416",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.884117
    },
    "rel_416": {
      "id": "rel_416",
      "source_id": "doc_306",
      "target_id": "concept_417",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8842628
    },
    "rel_417": {
      "id": "rel_417",
      "source_id": "doc_306",
      "target_id": "concept_418",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.884361
    },
    "rel_418": {
      "id": "rel_418",
      "source_id": "doc_306",
      "target_id": "concept_419",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.884464
    },
    "rel_419": {
      "id": "rel_419",
      "source_id": "doc_306",
      "target_id": "concept_420",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.884558
    },
    "rel_420": {
      "id": "rel_420",
      "source_id": "doc_306",
      "target_id": "concept_421",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8846579
    },
    "rel_421": {
      "id": "rel_421",
      "source_id": "doc_306",
      "target_id": "concept_422",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.884758
    },
    "rel_422": {
      "id": "rel_422",
      "source_id": "doc_306",
      "target_id": "concept_423",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.884901
    },
    "rel_423": {
      "id": "rel_423",
      "source_id": "doc_306",
      "target_id": "concept_424",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.885081
    },
    "rel_424": {
      "id": "rel_424",
      "source_id": "doc_306",
      "target_id": "concept_425",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.885247
    },
    "rel_425": {
      "id": "rel_425",
      "source_id": "doc_306",
      "target_id": "concept_426",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.885526
    },
    "rel_426": {
      "id": "rel_426",
      "source_id": "doc_306",
      "target_id": "concept_427",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.885719
    },
    "rel_427": {
      "id": "rel_427",
      "source_id": "doc_306",
      "target_id": "concept_428",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8858528
    },
    "rel_428": {
      "id": "rel_428",
      "source_id": "doc_306",
      "target_id": "concept_429",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.885955
    },
    "rel_429": {
      "id": "rel_429",
      "source_id": "doc_306",
      "target_id": "concept_430",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.886056
    },
    "rel_430": {
      "id": "rel_430",
      "source_id": "doc_306",
      "target_id": "concept_431",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.886241
    },
    "rel_431": {
      "id": "rel_431",
      "source_id": "doc_306",
      "target_id": "concept_432",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.886341
    },
    "rel_432": {
      "id": "rel_432",
      "source_id": "doc_306",
      "target_id": "concept_433",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.886443
    },
    "rel_433": {
      "id": "rel_433",
      "source_id": "doc_306",
      "target_id": "concept_434",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.886646
    },
    "rel_434": {
      "id": "rel_434",
      "source_id": "doc_306",
      "target_id": "concept_435",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.886743
    },
    "rel_435": {
      "id": "rel_435",
      "source_id": "doc_306",
      "target_id": "concept_436",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.886847
    },
    "rel_436": {
      "id": "rel_436",
      "source_id": "doc_306",
      "target_id": "concept_437",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8869572
    },
    "rel_437": {
      "id": "rel_437",
      "source_id": "doc_306",
      "target_id": "concept_438",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.888117
    },
    "rel_438": {
      "id": "rel_438",
      "source_id": "doc_306",
      "target_id": "concept_439",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.888361
    },
    "rel_439": {
      "id": "rel_439",
      "source_id": "doc_306",
      "target_id": "concept_440",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.889903
    },
    "rel_440": {
      "id": "rel_440",
      "source_id": "doc_306",
      "target_id": "concept_441",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.89049
    },
    "rel_441": {
      "id": "rel_441",
      "source_id": "doc_306",
      "target_id": "concept_442",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8909729
    },
    "rel_442": {
      "id": "rel_442",
      "source_id": "doc_306",
      "target_id": "concept_443",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8915782
    },
    "rel_443": {
      "id": "rel_443",
      "source_id": "doc_306",
      "target_id": "concept_444",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8917089
    },
    "rel_444": {
      "id": "rel_444",
      "source_id": "doc_306",
      "target_id": "concept_445",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.891819
    },
    "rel_445": {
      "id": "rel_445",
      "source_id": "doc_306",
      "target_id": "concept_446",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.891928
    },
    "rel_446": {
      "id": "rel_446",
      "source_id": "doc_306",
      "target_id": "concept_447",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.892034
    },
    "rel_447": {
      "id": "rel_447",
      "source_id": "doc_306",
      "target_id": "concept_448",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.892138
    },
    "rel_448": {
      "id": "rel_448",
      "source_id": "doc_306",
      "target_id": "concept_449",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.892284
    },
    "rel_449": {
      "id": "rel_449",
      "source_id": "doc_306",
      "target_id": "concept_450",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8923929
    },
    "rel_450": {
      "id": "rel_450",
      "source_id": "doc_306",
      "target_id": "concept_451",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8925
    },
    "rel_451": {
      "id": "rel_451",
      "source_id": "doc_306",
      "target_id": "concept_403",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.892591
    },
    "rel_452": {
      "id": "rel_452",
      "source_id": "doc_306",
      "target_id": "concept_452",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.892716
    },
    "rel_453": {
      "id": "rel_453",
      "source_id": "doc_306",
      "target_id": "concept_453",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.892954
    },
    "rel_454": {
      "id": "rel_454",
      "source_id": "doc_306",
      "target_id": "concept_454",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.893077
    },
    "rel_455": {
      "id": "rel_455",
      "source_id": "doc_306",
      "target_id": "concept_455",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.893183
    },
    "rel_456": {
      "id": "rel_456",
      "source_id": "doc_306",
      "target_id": "concept_456",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8932889
    },
    "rel_457": {
      "id": "rel_457",
      "source_id": "doc_306",
      "target_id": "concept_457",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.893419
    },
    "rel_458": {
      "id": "rel_458",
      "source_id": "doc_306",
      "target_id": "concept_458",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8935292
    },
    "rel_459": {
      "id": "rel_459",
      "source_id": "doc_306",
      "target_id": "concept_459",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.893662
    },
    "rel_460": {
      "id": "rel_460",
      "source_id": "doc_306",
      "target_id": "concept_460",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.893825
    },
    "rel_461": {
      "id": "rel_461",
      "source_id": "doc_306",
      "target_id": "concept_461",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.893933
    },
    "rel_462": {
      "id": "rel_462",
      "source_id": "doc_306",
      "target_id": "concept_462",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8940659
    },
    "rel_463": {
      "id": "rel_463",
      "source_id": "doc_306",
      "target_id": "concept_463",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.894204
    },
    "rel_464": {
      "id": "rel_464",
      "source_id": "doc_306",
      "target_id": "concept_464",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.89431
    },
    "rel_465": {
      "id": "rel_465",
      "source_id": "doc_306",
      "target_id": "concept_465",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.8944159
    },
    "rel_466": {
      "id": "rel_466",
      "source_id": "doc_306",
      "target_id": "concept_466",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.894517
    },
    "rel_467": {
      "id": "rel_467",
      "source_id": "doc_306",
      "target_id": "concept_467",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.9009001
    },
    "rel_468": {
      "id": "rel_468",
      "source_id": "doc_306",
      "target_id": "concept_468",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.904198
    },
    "rel_469": {
      "id": "rel_469",
      "source_id": "doc_306",
      "target_id": "concept_469",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.90498
    },
    "rel_470": {
      "id": "rel_470",
      "source_id": "doc_306",
      "target_id": "concept_470",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.90513
    },
    "rel_471": {
      "id": "rel_471",
      "source_id": "doc_306",
      "target_id": "concept_471",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.905239
    },
    "rel_472": {
      "id": "rel_472",
      "source_id": "doc_306",
      "target_id": "concept_472",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.90535
    },
    "rel_473": {
      "id": "rel_473",
      "source_id": "doc_306",
      "target_id": "concept_473",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.905458
    },
    "rel_474": {
      "id": "rel_474",
      "source_id": "doc_306",
      "target_id": "concept_474",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.9055748
    },
    "rel_475": {
      "id": "rel_475",
      "source_id": "doc_306",
      "target_id": "concept_475",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.9057379
    },
    "rel_476": {
      "id": "rel_476",
      "source_id": "doc_306",
      "target_id": "concept_476",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.905967
    },
    "rel_477": {
      "id": "rel_477",
      "source_id": "doc_306",
      "target_id": "concept_477",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.906254
    },
    "rel_478": {
      "id": "rel_478",
      "source_id": "doc_306",
      "target_id": "concept_478",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.906673
    },
    "rel_479": {
      "id": "rel_479",
      "source_id": "doc_306",
      "target_id": "concept_313",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.906872
    },
    "rel_480": {
      "id": "rel_480",
      "source_id": "doc_306",
      "target_id": "concept_479",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.913745
    },
    "rel_481": {
      "id": "rel_481",
      "source_id": "doc_306",
      "target_id": "concept_480",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.9138792
    },
    "rel_482": {
      "id": "rel_482",
      "source_id": "doc_306",
      "target_id": "concept_481",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.913995
    },
    "rel_483": {
      "id": "rel_483",
      "source_id": "doc_306",
      "target_id": "concept_482",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.92143
    },
    "rel_484": {
      "id": "rel_484",
      "source_id": "doc_306",
      "target_id": "concept_483",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.9216042
    },
    "rel_485": {
      "id": "rel_485",
      "source_id": "doc_306",
      "target_id": "concept_484",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.922229
    },
    "rel_486": {
      "id": "rel_486",
      "source_id": "doc_306",
      "target_id": "concept_320",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.922476
    },
    "rel_487": {
      "id": "rel_487",
      "source_id": "doc_306",
      "target_id": "concept_485",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.922838
    },
    "rel_488": {
      "id": "rel_488",
      "source_id": "doc_306",
      "target_id": "concept_486",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.924355
    },
    "rel_489": {
      "id": "rel_489",
      "source_id": "doc_306",
      "target_id": "concept_487",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.924523
    },
    "rel_490": {
      "id": "rel_490",
      "source_id": "doc_306",
      "target_id": "concept_488",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.9257832
    },
    "rel_491": {
      "id": "rel_491",
      "source_id": "doc_306",
      "target_id": "concept_489",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.9264588
    },
    "rel_492": {
      "id": "rel_492",
      "source_id": "doc_306",
      "target_id": "concept_490",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.9290528
    },
    "rel_493": {
      "id": "rel_493",
      "source_id": "doc_306",
      "target_id": "concept_491",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.9292722
    },
    "rel_494": {
      "id": "rel_494",
      "source_id": "doc_306",
      "target_id": "concept_492",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.929544
    },
    "rel_495": {
      "id": "rel_495",
      "source_id": "doc_306",
      "target_id": "concept_493",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.9296708
    },
    "rel_496": {
      "id": "rel_496",
      "source_id": "doc_306",
      "target_id": "concept_494",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.929785
    },
    "rel_497": {
      "id": "rel_497",
      "source_id": "doc_306",
      "target_id": "concept_495",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.930495
    },
    "rel_498": {
      "id": "rel_498",
      "source_id": "doc_306",
      "target_id": "concept_496",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.9308531
    },
    "rel_499": {
      "id": "rel_499",
      "source_id": "doc_306",
      "target_id": "concept_497",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.9336488
    },
    "rel_500": {
      "id": "rel_500",
      "source_id": "doc_306",
      "target_id": "concept_498",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.934027
    },
    "rel_501": {
      "id": "rel_501",
      "source_id": "doc_306",
      "target_id": "concept_499",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.934839
    },
    "rel_502": {
      "id": "rel_502",
      "source_id": "doc_306",
      "target_id": "concept_500",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.935473
    },
    "rel_503": {
      "id": "rel_503",
      "source_id": "doc_306",
      "target_id": "concept_501",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.9358752
    },
    "rel_504": {
      "id": "rel_504",
      "source_id": "doc_306",
      "target_id": "concept_502",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.936239
    },
    "rel_505": {
      "id": "rel_505",
      "source_id": "doc_306",
      "target_id": "concept_503",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.937315
    },
    "rel_506": {
      "id": "rel_506",
      "source_id": "doc_306",
      "target_id": "concept_504",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.93781
    },
    "rel_507": {
      "id": "rel_507",
      "source_id": "doc_306",
      "target_id": "concept_505",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.937946
    },
    "rel_508": {
      "id": "rel_508",
      "source_id": "doc_306",
      "target_id": "concept_506",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.938398
    },
    "rel_509": {
      "id": "rel_509",
      "source_id": "doc_306",
      "target_id": "concept_507",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.938853
    },
    "rel_510": {
      "id": "rel_510",
      "source_id": "doc_306",
      "target_id": "concept_508",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.9406679
    },
    "rel_511": {
      "id": "rel_511",
      "source_id": "doc_306",
      "target_id": "concept_509",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.941368
    },
    "rel_512": {
      "id": "rel_512",
      "source_id": "doc_306",
      "target_id": "concept_510",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.942025
    },
    "rel_513": {
      "id": "rel_513",
      "source_id": "doc_306",
      "target_id": "concept_511",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.943101
    },
    "rel_514": {
      "id": "rel_514",
      "source_id": "doc_306",
      "target_id": "concept_512",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.944322
    },
    "rel_515": {
      "id": "rel_515",
      "source_id": "doc_306",
      "target_id": "concept_513",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.944994
    },
    "rel_516": {
      "id": "rel_516",
      "source_id": "doc_306",
      "target_id": "concept_514",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.945675
    },
    "rel_517": {
      "id": "rel_517",
      "source_id": "doc_306",
      "target_id": "concept_515",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.9458601
    },
    "rel_518": {
      "id": "rel_518",
      "source_id": "doc_306",
      "target_id": "concept_516",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.946374
    },
    "rel_519": {
      "id": "rel_519",
      "source_id": "doc_306",
      "target_id": "concept_517",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.946704
    },
    "rel_520": {
      "id": "rel_520",
      "source_id": "doc_306",
      "target_id": "concept_518",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.947723
    },
    "rel_521": {
      "id": "rel_521",
      "source_id": "doc_306",
      "target_id": "concept_519",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.952629
    },
    "rel_522": {
      "id": "rel_522",
      "source_id": "doc_306",
      "target_id": "concept_520",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.954247
    },
    "rel_523": {
      "id": "rel_523",
      "source_id": "doc_306",
      "target_id": "concept_521",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.955012
    },
    "rel_524": {
      "id": "rel_524",
      "source_id": "doc_306",
      "target_id": "concept_522",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.955611
    },
    "rel_525": {
      "id": "rel_525",
      "source_id": "doc_306",
      "target_id": "concept_523",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.95681
    },
    "rel_526": {
      "id": "rel_526",
      "source_id": "doc_306",
      "target_id": "concept_524",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.956949
    },
    "rel_527": {
      "id": "rel_527",
      "source_id": "doc_525",
      "target_id": "concept_526",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.968927
    },
    "rel_528": {
      "id": "rel_528",
      "source_id": "doc_525",
      "target_id": "concept_527",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.969053
    },
    "rel_529": {
      "id": "rel_529",
      "source_id": "doc_525",
      "target_id": "concept_528",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.9692218
    },
    "rel_530": {
      "id": "rel_530",
      "source_id": "doc_525",
      "target_id": "concept_529",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.969388
    },
    "rel_531": {
      "id": "rel_531",
      "source_id": "doc_525",
      "target_id": "concept_313",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.969453
    },
    "rel_532": {
      "id": "rel_532",
      "source_id": "doc_525",
      "target_id": "concept_314",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.9695191
    },
    "rel_533": {
      "id": "rel_533",
      "source_id": "doc_525",
      "target_id": "concept_530",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.9696581
    },
    "rel_534": {
      "id": "rel_534",
      "source_id": "doc_525",
      "target_id": "concept_531",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.969769
    },
    "rel_535": {
      "id": "rel_535",
      "source_id": "doc_525",
      "target_id": "concept_532",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.969883
    },
    "rel_536": {
      "id": "rel_536",
      "source_id": "doc_525",
      "target_id": "concept_533",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.970874
    },
    "rel_537": {
      "id": "rel_537",
      "source_id": "doc_525",
      "target_id": "concept_333",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.971049
    },
    "rel_538": {
      "id": "rel_538",
      "source_id": "doc_525",
      "target_id": "concept_321",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.9711869
    },
    "rel_539": {
      "id": "rel_539",
      "source_id": "doc_525",
      "target_id": "concept_534",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.971803
    },
    "rel_540": {
      "id": "rel_540",
      "source_id": "doc_525",
      "target_id": "concept_535",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.972246
    },
    "rel_541": {
      "id": "rel_541",
      "source_id": "doc_525",
      "target_id": "concept_536",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.9752278
    },
    "rel_542": {
      "id": "rel_542",
      "source_id": "doc_525",
      "target_id": "concept_537",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.9757519
    },
    "rel_543": {
      "id": "rel_543",
      "source_id": "doc_525",
      "target_id": "concept_538",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.975877
    },
    "rel_544": {
      "id": "rel_544",
      "source_id": "doc_525",
      "target_id": "concept_208",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.975935
    },
    "rel_545": {
      "id": "rel_545",
      "source_id": "doc_525",
      "target_id": "concept_539",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.976077
    },
    "rel_546": {
      "id": "rel_546",
      "source_id": "doc_525",
      "target_id": "concept_540",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.976189
    },
    "rel_547": {
      "id": "rel_547",
      "source_id": "doc_525",
      "target_id": "concept_541",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.976982
    },
    "rel_548": {
      "id": "rel_548",
      "source_id": "doc_525",
      "target_id": "concept_542",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.977841
    },
    "rel_549": {
      "id": "rel_549",
      "source_id": "doc_525",
      "target_id": "concept_543",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.978017
    },
    "rel_550": {
      "id": "rel_550",
      "source_id": "doc_525",
      "target_id": "concept_544",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.978137
    },
    "rel_551": {
      "id": "rel_551",
      "source_id": "doc_525",
      "target_id": "concept_545",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.9782531
    },
    "rel_552": {
      "id": "rel_552",
      "source_id": "doc_525",
      "target_id": "concept_546",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.9784
    },
    "rel_553": {
      "id": "rel_553",
      "source_id": "doc_525",
      "target_id": "concept_547",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.978509
    },
    "rel_554": {
      "id": "rel_554",
      "source_id": "doc_525",
      "target_id": "concept_548",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.978732
    },
    "rel_555": {
      "id": "rel_555",
      "source_id": "doc_525",
      "target_id": "concept_549",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.97891
    },
    "rel_556": {
      "id": "rel_556",
      "source_id": "doc_525",
      "target_id": "concept_550",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.979039
    },
    "rel_557": {
      "id": "rel_557",
      "source_id": "doc_525",
      "target_id": "concept_551",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.9791648
    },
    "rel_558": {
      "id": "rel_558",
      "source_id": "doc_525",
      "target_id": "concept_552",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.979656
    },
    "rel_559": {
      "id": "rel_559",
      "source_id": "doc_525",
      "target_id": "concept_553",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.979775
    },
    "rel_560": {
      "id": "rel_560",
      "source_id": "doc_525",
      "target_id": "concept_554",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.979895
    },
    "rel_561": {
      "id": "rel_561",
      "source_id": "doc_525",
      "target_id": "concept_555",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.980015
    },
    "rel_562": {
      "id": "rel_562",
      "source_id": "doc_525",
      "target_id": "concept_556",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.980187
    },
    "rel_563": {
      "id": "rel_563",
      "source_id": "doc_525",
      "target_id": "concept_522",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.9803112
    },
    "rel_564": {
      "id": "rel_564",
      "source_id": "doc_525",
      "target_id": "concept_557",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.980427
    },
    "rel_565": {
      "id": "rel_565",
      "source_id": "doc_525",
      "target_id": "concept_141",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.98048
    },
    "rel_566": {
      "id": "rel_566",
      "source_id": "doc_525",
      "target_id": "concept_558",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.980621
    },
    "rel_567": {
      "id": "rel_567",
      "source_id": "doc_525",
      "target_id": "concept_559",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.9807382
    },
    "rel_568": {
      "id": "rel_568",
      "source_id": "doc_525",
      "target_id": "concept_560",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.980851
    },
    "rel_569": {
      "id": "rel_569",
      "source_id": "doc_525",
      "target_id": "concept_561",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.9809642
    },
    "rel_570": {
      "id": "rel_570",
      "source_id": "doc_525",
      "target_id": "concept_562",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.9811258
    },
    "rel_571": {
      "id": "rel_571",
      "source_id": "doc_525",
      "target_id": "concept_563",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.9812381
    },
    "rel_572": {
      "id": "rel_572",
      "source_id": "doc_525",
      "target_id": "concept_564",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.98135
    },
    "rel_573": {
      "id": "rel_573",
      "source_id": "doc_525",
      "target_id": "concept_565",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.981472
    },
    "rel_574": {
      "id": "rel_574",
      "source_id": "doc_525",
      "target_id": "concept_566",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.981965
    },
    "rel_575": {
      "id": "rel_575",
      "source_id": "doc_525",
      "target_id": "concept_567",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.982132
    },
    "rel_576": {
      "id": "rel_576",
      "source_id": "doc_525",
      "target_id": "concept_568",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.982254
    },
    "rel_577": {
      "id": "rel_577",
      "source_id": "doc_525",
      "target_id": "concept_569",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.982423
    },
    "rel_578": {
      "id": "rel_578",
      "source_id": "doc_525",
      "target_id": "concept_570",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.982762
    },
    "rel_579": {
      "id": "rel_579",
      "source_id": "doc_525",
      "target_id": "concept_571",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.982887
    },
    "rel_580": {
      "id": "rel_580",
      "source_id": "doc_525",
      "target_id": "concept_572",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.983053
    },
    "rel_581": {
      "id": "rel_581",
      "source_id": "doc_525",
      "target_id": "concept_573",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.9831822
    },
    "rel_582": {
      "id": "rel_582",
      "source_id": "doc_525",
      "target_id": "concept_161",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.98324
    },
    "rel_583": {
      "id": "rel_583",
      "source_id": "doc_525",
      "target_id": "concept_574",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.983375
    },
    "rel_584": {
      "id": "rel_584",
      "source_id": "doc_525",
      "target_id": "concept_403",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.983472
    },
    "rel_585": {
      "id": "rel_585",
      "source_id": "doc_525",
      "target_id": "concept_575",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.9836202
    },
    "rel_586": {
      "id": "rel_586",
      "source_id": "doc_525",
      "target_id": "concept_576",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.983762
    },
    "rel_587": {
      "id": "rel_587",
      "source_id": "doc_525",
      "target_id": "concept_577",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.983888
    },
    "rel_588": {
      "id": "rel_588",
      "source_id": "doc_525",
      "target_id": "concept_578",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.984067
    },
    "rel_589": {
      "id": "rel_589",
      "source_id": "doc_525",
      "target_id": "concept_144",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.984108
    },
    "rel_590": {
      "id": "rel_590",
      "source_id": "doc_525",
      "target_id": "concept_579",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.984226
    },
    "rel_591": {
      "id": "rel_591",
      "source_id": "doc_525",
      "target_id": "concept_580",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.98445
    },
    "rel_592": {
      "id": "rel_592",
      "source_id": "doc_525",
      "target_id": "concept_581",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.984568
    },
    "rel_593": {
      "id": "rel_593",
      "source_id": "doc_525",
      "target_id": "concept_582",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.9846919
    },
    "rel_594": {
      "id": "rel_594",
      "source_id": "doc_525",
      "target_id": "concept_170",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.9847481
    },
    "rel_595": {
      "id": "rel_595",
      "source_id": "doc_525",
      "target_id": "concept_583",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.984927
    },
    "rel_596": {
      "id": "rel_596",
      "source_id": "doc_525",
      "target_id": "concept_584",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.9850922
    },
    "rel_597": {
      "id": "rel_597",
      "source_id": "doc_525",
      "target_id": "concept_585",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.985224
    },
    "rel_598": {
      "id": "rel_598",
      "source_id": "doc_525",
      "target_id": "concept_586",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.9853451
    },
    "rel_599": {
      "id": "rel_599",
      "source_id": "doc_525",
      "target_id": "concept_587",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.985472
    },
    "rel_600": {
      "id": "rel_600",
      "source_id": "doc_525",
      "target_id": "concept_588",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.9872608
    },
    "rel_601": {
      "id": "rel_601",
      "source_id": "doc_525",
      "target_id": "concept_589",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.98739
    },
    "rel_602": {
      "id": "rel_602",
      "source_id": "doc_525",
      "target_id": "concept_590",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.9875169
    },
    "rel_603": {
      "id": "rel_603",
      "source_id": "doc_525",
      "target_id": "concept_591",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.987641
    },
    "rel_604": {
      "id": "rel_604",
      "source_id": "doc_525",
      "target_id": "concept_592",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.987762
    },
    "rel_605": {
      "id": "rel_605",
      "source_id": "doc_525",
      "target_id": "concept_593",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.9879491
    },
    "rel_606": {
      "id": "rel_606",
      "source_id": "doc_525",
      "target_id": "concept_594",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.9881852
    },
    "rel_607": {
      "id": "rel_607",
      "source_id": "doc_525",
      "target_id": "concept_595",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.9883142
    },
    "rel_608": {
      "id": "rel_608",
      "source_id": "doc_525",
      "target_id": "concept_193",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.9883661
    },
    "rel_609": {
      "id": "rel_609",
      "source_id": "doc_525",
      "target_id": "concept_596",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.9884899
    },
    "rel_610": {
      "id": "rel_610",
      "source_id": "doc_525",
      "target_id": "concept_597",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.988866
    },
    "rel_611": {
      "id": "rel_611",
      "source_id": "doc_525",
      "target_id": "concept_598",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.989077
    },
    "rel_612": {
      "id": "rel_612",
      "source_id": "doc_525",
      "target_id": "concept_599",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.989645
    },
    "rel_613": {
      "id": "rel_613",
      "source_id": "doc_525",
      "target_id": "concept_600",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.990165
    },
    "rel_614": {
      "id": "rel_614",
      "source_id": "doc_525",
      "target_id": "concept_601",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.990467
    },
    "rel_615": {
      "id": "rel_615",
      "source_id": "doc_525",
      "target_id": "concept_602",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.990617
    },
    "rel_616": {
      "id": "rel_616",
      "source_id": "doc_525",
      "target_id": "concept_603",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.990759
    },
    "rel_617": {
      "id": "rel_617",
      "source_id": "doc_525",
      "target_id": "concept_604",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.990894
    },
    "rel_618": {
      "id": "rel_618",
      "source_id": "doc_525",
      "target_id": "concept_605",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.991165
    },
    "rel_619": {
      "id": "rel_619",
      "source_id": "doc_525",
      "target_id": "concept_606",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.9913442
    },
    "rel_620": {
      "id": "rel_620",
      "source_id": "doc_525",
      "target_id": "concept_607",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.9914749
    },
    "rel_621": {
      "id": "rel_621",
      "source_id": "doc_525",
      "target_id": "concept_608",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.99161
    },
    "rel_622": {
      "id": "rel_622",
      "source_id": "doc_525",
      "target_id": "concept_609",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.991956
    },
    "rel_623": {
      "id": "rel_623",
      "source_id": "doc_525",
      "target_id": "concept_610",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.992259
    },
    "rel_624": {
      "id": "rel_624",
      "source_id": "doc_525",
      "target_id": "concept_611",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.9928389
    },
    "rel_625": {
      "id": "rel_625",
      "source_id": "doc_525",
      "target_id": "concept_612",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.993286
    },
    "rel_626": {
      "id": "rel_626",
      "source_id": "doc_525",
      "target_id": "concept_613",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.993668
    },
    "rel_627": {
      "id": "rel_627",
      "source_id": "doc_525",
      "target_id": "concept_614",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.993809
    },
    "rel_628": {
      "id": "rel_628",
      "source_id": "doc_525",
      "target_id": "concept_615",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.994025
    },
    "rel_629": {
      "id": "rel_629",
      "source_id": "doc_525",
      "target_id": "concept_616",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.9941561
    },
    "rel_630": {
      "id": "rel_630",
      "source_id": "doc_525",
      "target_id": "concept_207",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.994217
    },
    "rel_631": {
      "id": "rel_631",
      "source_id": "doc_525",
      "target_id": "concept_617",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.994347
    },
    "rel_632": {
      "id": "rel_632",
      "source_id": "doc_525",
      "target_id": "concept_618",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.994483
    },
    "rel_633": {
      "id": "rel_633",
      "source_id": "doc_525",
      "target_id": "concept_619",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.9946141
    },
    "rel_634": {
      "id": "rel_634",
      "source_id": "doc_525",
      "target_id": "concept_620",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.9949188
    },
    "rel_635": {
      "id": "rel_635",
      "source_id": "doc_525",
      "target_id": "concept_621",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.995049
    },
    "rel_636": {
      "id": "rel_636",
      "source_id": "doc_525",
      "target_id": "concept_622",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.995178
    },
    "rel_637": {
      "id": "rel_637",
      "source_id": "doc_525",
      "target_id": "concept_623",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.99539
    },
    "rel_638": {
      "id": "rel_638",
      "source_id": "doc_525",
      "target_id": "concept_624",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.9958022
    },
    "rel_639": {
      "id": "rel_639",
      "source_id": "doc_525",
      "target_id": "concept_625",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.9961011
    },
    "rel_640": {
      "id": "rel_640",
      "source_id": "doc_525",
      "target_id": "concept_214",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.996329
    },
    "rel_641": {
      "id": "rel_641",
      "source_id": "doc_525",
      "target_id": "concept_626",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.996474
    },
    "rel_642": {
      "id": "rel_642",
      "source_id": "doc_525",
      "target_id": "concept_627",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.996604
    },
    "rel_643": {
      "id": "rel_643",
      "source_id": "doc_525",
      "target_id": "concept_628",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.996747
    },
    "rel_644": {
      "id": "rel_644",
      "source_id": "doc_525",
      "target_id": "concept_629",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957550.996879
    },
    "rel_645": {
      "id": "rel_645",
      "source_id": "doc_525",
      "target_id": "concept_630",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0010738
    },
    "rel_646": {
      "id": "rel_646",
      "source_id": "doc_525",
      "target_id": "concept_631",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.001336
    },
    "rel_647": {
      "id": "rel_647",
      "source_id": "doc_525",
      "target_id": "concept_632",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.001598
    },
    "rel_648": {
      "id": "rel_648",
      "source_id": "doc_525",
      "target_id": "concept_633",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.00177
    },
    "rel_649": {
      "id": "rel_649",
      "source_id": "doc_525",
      "target_id": "concept_634",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.003448
    },
    "rel_650": {
      "id": "rel_650",
      "source_id": "doc_525",
      "target_id": "concept_635",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.003595
    },
    "rel_651": {
      "id": "rel_651",
      "source_id": "doc_525",
      "target_id": "concept_636",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0037272
    },
    "rel_652": {
      "id": "rel_652",
      "source_id": "doc_525",
      "target_id": "concept_637",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0038888
    },
    "rel_653": {
      "id": "rel_653",
      "source_id": "doc_525",
      "target_id": "concept_638",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.004268
    },
    "rel_654": {
      "id": "rel_654",
      "source_id": "doc_525",
      "target_id": "concept_639",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.004571
    },
    "rel_655": {
      "id": "rel_655",
      "source_id": "doc_525",
      "target_id": "concept_640",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0048718
    },
    "rel_656": {
      "id": "rel_656",
      "source_id": "doc_525",
      "target_id": "concept_641",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.005172
    },
    "rel_657": {
      "id": "rel_657",
      "source_id": "doc_525",
      "target_id": "concept_642",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.006193
    },
    "rel_658": {
      "id": "rel_658",
      "source_id": "doc_525",
      "target_id": "concept_643",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0063539
    },
    "rel_659": {
      "id": "rel_659",
      "source_id": "doc_525",
      "target_id": "concept_644",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0064929
    },
    "rel_660": {
      "id": "rel_660",
      "source_id": "doc_525",
      "target_id": "concept_645",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.006628
    },
    "rel_661": {
      "id": "rel_661",
      "source_id": "doc_525",
      "target_id": "concept_646",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.006943
    },
    "rel_662": {
      "id": "rel_662",
      "source_id": "doc_525",
      "target_id": "concept_647",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0071008
    },
    "rel_663": {
      "id": "rel_663",
      "source_id": "doc_525",
      "target_id": "concept_648",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.007238
    },
    "rel_664": {
      "id": "rel_664",
      "source_id": "doc_525",
      "target_id": "concept_649",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.00769
    },
    "rel_665": {
      "id": "rel_665",
      "source_id": "doc_650",
      "target_id": "concept_651",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.008492
    },
    "rel_666": {
      "id": "rel_666",
      "source_id": "doc_650",
      "target_id": "concept_652",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.008666
    },
    "rel_667": {
      "id": "rel_667",
      "source_id": "doc_650",
      "target_id": "concept_653",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0088232
    },
    "rel_668": {
      "id": "rel_668",
      "source_id": "doc_650",
      "target_id": "concept_654",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.008991
    },
    "rel_669": {
      "id": "rel_669",
      "source_id": "doc_650",
      "target_id": "concept_655",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0091252
    },
    "rel_670": {
      "id": "rel_670",
      "source_id": "doc_650",
      "target_id": "concept_656",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.009296
    },
    "rel_671": {
      "id": "rel_671",
      "source_id": "doc_650",
      "target_id": "concept_657",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.00954
    },
    "rel_672": {
      "id": "rel_672",
      "source_id": "doc_650",
      "target_id": "concept_658",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.009685
    },
    "rel_673": {
      "id": "rel_673",
      "source_id": "doc_650",
      "target_id": "concept_659",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0099049
    },
    "rel_674": {
      "id": "rel_674",
      "source_id": "doc_650",
      "target_id": "concept_660",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0100942
    },
    "rel_675": {
      "id": "rel_675",
      "source_id": "doc_650",
      "target_id": "concept_661",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.010265
    },
    "rel_676": {
      "id": "rel_676",
      "source_id": "doc_650",
      "target_id": "concept_662",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.010398
    },
    "rel_677": {
      "id": "rel_677",
      "source_id": "doc_650",
      "target_id": "concept_663",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0106041
    },
    "rel_678": {
      "id": "rel_678",
      "source_id": "doc_650",
      "target_id": "concept_664",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.010741
    },
    "rel_679": {
      "id": "rel_679",
      "source_id": "doc_650",
      "target_id": "concept_665",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0109289
    },
    "rel_680": {
      "id": "rel_680",
      "source_id": "doc_650",
      "target_id": "concept_666",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.011106
    },
    "rel_681": {
      "id": "rel_681",
      "source_id": "doc_650",
      "target_id": "concept_667",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.011279
    },
    "rel_682": {
      "id": "rel_682",
      "source_id": "doc_650",
      "target_id": "concept_668",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0114188
    },
    "rel_683": {
      "id": "rel_683",
      "source_id": "doc_650",
      "target_id": "concept_669",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0115871
    },
    "rel_684": {
      "id": "rel_684",
      "source_id": "doc_650",
      "target_id": "concept_670",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.011746
    },
    "rel_685": {
      "id": "rel_685",
      "source_id": "doc_650",
      "target_id": "concept_671",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0118809
    },
    "rel_686": {
      "id": "rel_686",
      "source_id": "doc_650",
      "target_id": "concept_672",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.012036
    },
    "rel_687": {
      "id": "rel_687",
      "source_id": "doc_650",
      "target_id": "concept_673",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.012192
    },
    "rel_688": {
      "id": "rel_688",
      "source_id": "doc_650",
      "target_id": "concept_674",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.012363
    },
    "rel_689": {
      "id": "rel_689",
      "source_id": "doc_650",
      "target_id": "concept_675",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0124989
    },
    "rel_690": {
      "id": "rel_690",
      "source_id": "doc_650",
      "target_id": "concept_676",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.012691
    },
    "rel_691": {
      "id": "rel_691",
      "source_id": "doc_650",
      "target_id": "concept_677",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.012863
    },
    "rel_692": {
      "id": "rel_692",
      "source_id": "doc_650",
      "target_id": "concept_678",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.013004
    },
    "rel_693": {
      "id": "rel_693",
      "source_id": "doc_650",
      "target_id": "concept_679",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0131588
    },
    "rel_694": {
      "id": "rel_694",
      "source_id": "doc_650",
      "target_id": "concept_680",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.013317
    },
    "rel_695": {
      "id": "rel_695",
      "source_id": "doc_650",
      "target_id": "concept_681",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.013471
    },
    "rel_696": {
      "id": "rel_696",
      "source_id": "doc_682",
      "target_id": "concept_683",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.017138
    },
    "rel_697": {
      "id": "rel_697",
      "source_id": "doc_682",
      "target_id": "concept_684",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.017288
    },
    "rel_698": {
      "id": "rel_698",
      "source_id": "doc_682",
      "target_id": "concept_685",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.017439
    },
    "rel_699": {
      "id": "rel_699",
      "source_id": "doc_682",
      "target_id": "concept_686",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.017573
    },
    "rel_700": {
      "id": "rel_700",
      "source_id": "doc_682",
      "target_id": "concept_687",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.017855
    },
    "rel_701": {
      "id": "rel_701",
      "source_id": "doc_682",
      "target_id": "concept_688",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0181482
    },
    "rel_702": {
      "id": "rel_702",
      "source_id": "doc_682",
      "target_id": "concept_689",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.018314
    },
    "rel_703": {
      "id": "rel_703",
      "source_id": "doc_682",
      "target_id": "concept_690",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.018461
    },
    "rel_704": {
      "id": "rel_704",
      "source_id": "doc_682",
      "target_id": "concept_691",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0186691
    },
    "rel_705": {
      "id": "rel_705",
      "source_id": "doc_682",
      "target_id": "concept_692",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.018813
    },
    "rel_706": {
      "id": "rel_706",
      "source_id": "doc_682",
      "target_id": "concept_693",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.019119
    },
    "rel_707": {
      "id": "rel_707",
      "source_id": "doc_682",
      "target_id": "concept_694",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.019288
    },
    "rel_708": {
      "id": "rel_708",
      "source_id": "doc_682",
      "target_id": "concept_695",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.019437
    },
    "rel_709": {
      "id": "rel_709",
      "source_id": "doc_682",
      "target_id": "concept_696",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.019584
    },
    "rel_710": {
      "id": "rel_710",
      "source_id": "doc_682",
      "target_id": "concept_697",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0198321
    },
    "rel_711": {
      "id": "rel_711",
      "source_id": "doc_682",
      "target_id": "concept_698",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0201018
    },
    "rel_712": {
      "id": "rel_712",
      "source_id": "doc_682",
      "target_id": "concept_699",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.020395
    },
    "rel_713": {
      "id": "rel_713",
      "source_id": "doc_682",
      "target_id": "concept_700",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0207639
    },
    "rel_714": {
      "id": "rel_714",
      "source_id": "doc_682",
      "target_id": "concept_701",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0209181
    },
    "rel_715": {
      "id": "rel_715",
      "source_id": "doc_682",
      "target_id": "concept_702",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.021072
    },
    "rel_716": {
      "id": "rel_716",
      "source_id": "doc_682",
      "target_id": "concept_703",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0212102
    },
    "rel_717": {
      "id": "rel_717",
      "source_id": "doc_682",
      "target_id": "concept_704",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.02141
    },
    "rel_718": {
      "id": "rel_718",
      "source_id": "doc_682",
      "target_id": "concept_705",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0215669
    },
    "rel_719": {
      "id": "rel_719",
      "source_id": "doc_682",
      "target_id": "concept_706",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.021715
    },
    "rel_720": {
      "id": "rel_720",
      "source_id": "doc_682",
      "target_id": "concept_707",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.021875
    },
    "rel_721": {
      "id": "rel_721",
      "source_id": "doc_682",
      "target_id": "concept_708",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.02202
    },
    "rel_722": {
      "id": "rel_722",
      "source_id": "doc_682",
      "target_id": "concept_709",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.022167
    },
    "rel_723": {
      "id": "rel_723",
      "source_id": "doc_682",
      "target_id": "concept_710",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.022458
    },
    "rel_724": {
      "id": "rel_724",
      "source_id": "doc_682",
      "target_id": "concept_711",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.022594
    },
    "rel_725": {
      "id": "rel_725",
      "source_id": "doc_682",
      "target_id": "concept_712",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.022729
    },
    "rel_726": {
      "id": "rel_726",
      "source_id": "doc_682",
      "target_id": "concept_713",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.022922
    },
    "rel_727": {
      "id": "rel_727",
      "source_id": "doc_682",
      "target_id": "concept_714",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.023065
    },
    "rel_728": {
      "id": "rel_728",
      "source_id": "doc_682",
      "target_id": "concept_715",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0235388
    },
    "rel_729": {
      "id": "rel_729",
      "source_id": "doc_682",
      "target_id": "concept_716",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0238552
    },
    "rel_730": {
      "id": "rel_730",
      "source_id": "doc_682",
      "target_id": "concept_717",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0240169
    },
    "rel_731": {
      "id": "rel_731",
      "source_id": "doc_682",
      "target_id": "concept_718",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.024174
    },
    "rel_732": {
      "id": "rel_732",
      "source_id": "doc_682",
      "target_id": "concept_719",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0243251
    },
    "rel_733": {
      "id": "rel_733",
      "source_id": "doc_682",
      "target_id": "concept_720",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.02452
    },
    "rel_734": {
      "id": "rel_734",
      "source_id": "doc_682",
      "target_id": "concept_721",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.024659
    },
    "rel_735": {
      "id": "rel_735",
      "source_id": "doc_682",
      "target_id": "concept_722",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.024801
    },
    "rel_736": {
      "id": "rel_736",
      "source_id": "doc_682",
      "target_id": "concept_723",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.024951
    },
    "rel_737": {
      "id": "rel_737",
      "source_id": "doc_682",
      "target_id": "concept_724",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.02509
    },
    "rel_738": {
      "id": "rel_738",
      "source_id": "doc_682",
      "target_id": "concept_725",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.025384
    },
    "rel_739": {
      "id": "rel_739",
      "source_id": "doc_682",
      "target_id": "concept_726",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.025706
    },
    "rel_740": {
      "id": "rel_740",
      "source_id": "doc_682",
      "target_id": "concept_727",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.02586
    },
    "rel_741": {
      "id": "rel_741",
      "source_id": "doc_682",
      "target_id": "concept_728",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.026155
    },
    "rel_742": {
      "id": "rel_742",
      "source_id": "doc_682",
      "target_id": "concept_729",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0263119
    },
    "rel_743": {
      "id": "rel_743",
      "source_id": "doc_682",
      "target_id": "concept_730",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.026464
    },
    "rel_744": {
      "id": "rel_744",
      "source_id": "doc_682",
      "target_id": "concept_731",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0266109
    },
    "rel_745": {
      "id": "rel_745",
      "source_id": "doc_682",
      "target_id": "concept_732",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.026764
    },
    "rel_746": {
      "id": "rel_746",
      "source_id": "doc_682",
      "target_id": "concept_733",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0269198
    },
    "rel_747": {
      "id": "rel_747",
      "source_id": "doc_682",
      "target_id": "concept_734",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0270662
    },
    "rel_748": {
      "id": "rel_748",
      "source_id": "doc_682",
      "target_id": "concept_735",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.027329
    },
    "rel_749": {
      "id": "rel_749",
      "source_id": "doc_682",
      "target_id": "concept_191",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.027391
    },
    "rel_750": {
      "id": "rel_750",
      "source_id": "doc_682",
      "target_id": "concept_736",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.027545
    },
    "rel_751": {
      "id": "rel_751",
      "source_id": "doc_682",
      "target_id": "concept_737",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.027854
    },
    "rel_752": {
      "id": "rel_752",
      "source_id": "doc_682",
      "target_id": "concept_738",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.028008
    },
    "rel_753": {
      "id": "rel_753",
      "source_id": "doc_682",
      "target_id": "concept_739",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.028206
    },
    "rel_754": {
      "id": "rel_754",
      "source_id": "doc_682",
      "target_id": "concept_740",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.028397
    },
    "rel_755": {
      "id": "rel_755",
      "source_id": "doc_682",
      "target_id": "concept_741",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.028708
    },
    "rel_756": {
      "id": "rel_756",
      "source_id": "doc_682",
      "target_id": "concept_742",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.028867
    },
    "rel_757": {
      "id": "rel_757",
      "source_id": "doc_682",
      "target_id": "concept_743",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.029023
    },
    "rel_758": {
      "id": "rel_758",
      "source_id": "doc_682",
      "target_id": "concept_744",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.029315
    },
    "rel_759": {
      "id": "rel_759",
      "source_id": "doc_682",
      "target_id": "concept_745",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.029461
    },
    "rel_760": {
      "id": "rel_760",
      "source_id": "doc_682",
      "target_id": "concept_746",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.029621
    },
    "rel_761": {
      "id": "rel_761",
      "source_id": "doc_682",
      "target_id": "concept_747",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.029771
    },
    "rel_762": {
      "id": "rel_762",
      "source_id": "doc_682",
      "target_id": "concept_748",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.030153
    },
    "rel_763": {
      "id": "rel_763",
      "source_id": "doc_682",
      "target_id": "concept_749",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.030316
    },
    "rel_764": {
      "id": "rel_764",
      "source_id": "doc_682",
      "target_id": "concept_750",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.030468
    },
    "rel_765": {
      "id": "rel_765",
      "source_id": "doc_682",
      "target_id": "concept_751",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0306182
    },
    "rel_766": {
      "id": "rel_766",
      "source_id": "doc_682",
      "target_id": "concept_752",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0307698
    },
    "rel_767": {
      "id": "rel_767",
      "source_id": "doc_682",
      "target_id": "concept_753",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.030918
    },
    "rel_768": {
      "id": "rel_768",
      "source_id": "doc_682",
      "target_id": "concept_754",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.031203
    },
    "rel_769": {
      "id": "rel_769",
      "source_id": "doc_682",
      "target_id": "concept_755",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.031363
    },
    "rel_770": {
      "id": "rel_770",
      "source_id": "doc_682",
      "target_id": "concept_756",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0316632
    },
    "rel_771": {
      "id": "rel_771",
      "source_id": "doc_682",
      "target_id": "concept_757",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0321321
    },
    "rel_772": {
      "id": "rel_772",
      "source_id": "doc_682",
      "target_id": "concept_758",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.032507
    },
    "rel_773": {
      "id": "rel_773",
      "source_id": "doc_682",
      "target_id": "concept_759",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0326889
    },
    "rel_774": {
      "id": "rel_774",
      "source_id": "doc_682",
      "target_id": "concept_760",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.032973
    },
    "rel_775": {
      "id": "rel_775",
      "source_id": "doc_682",
      "target_id": "concept_761",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0331311
    },
    "rel_776": {
      "id": "rel_776",
      "source_id": "doc_682",
      "target_id": "concept_762",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.033293
    },
    "rel_777": {
      "id": "rel_777",
      "source_id": "doc_682",
      "target_id": "concept_763",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.033449
    },
    "rel_778": {
      "id": "rel_778",
      "source_id": "doc_682",
      "target_id": "concept_764",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.03367
    },
    "rel_779": {
      "id": "rel_779",
      "source_id": "doc_682",
      "target_id": "concept_765",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.033825
    },
    "rel_780": {
      "id": "rel_780",
      "source_id": "doc_682",
      "target_id": "concept_766",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.034168
    },
    "rel_781": {
      "id": "rel_781",
      "source_id": "doc_682",
      "target_id": "concept_767",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0343301
    },
    "rel_782": {
      "id": "rel_782",
      "source_id": "doc_682",
      "target_id": "concept_768",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.034474
    },
    "rel_783": {
      "id": "rel_783",
      "source_id": "doc_682",
      "target_id": "concept_769",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.034637
    },
    "rel_784": {
      "id": "rel_784",
      "source_id": "doc_682",
      "target_id": "concept_770",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.034954
    },
    "rel_785": {
      "id": "rel_785",
      "source_id": "doc_682",
      "target_id": "concept_771",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.035118
    },
    "rel_786": {
      "id": "rel_786",
      "source_id": "doc_682",
      "target_id": "concept_772",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.035267
    },
    "rel_787": {
      "id": "rel_787",
      "source_id": "doc_682",
      "target_id": "concept_773",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0354939
    },
    "rel_788": {
      "id": "rel_788",
      "source_id": "doc_682",
      "target_id": "concept_774",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0356538
    },
    "rel_789": {
      "id": "rel_789",
      "source_id": "doc_682",
      "target_id": "concept_775",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.036001
    },
    "rel_790": {
      "id": "rel_790",
      "source_id": "doc_682",
      "target_id": "concept_776",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0363278
    },
    "rel_791": {
      "id": "rel_791",
      "source_id": "doc_682",
      "target_id": "concept_777",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0366259
    },
    "rel_792": {
      "id": "rel_792",
      "source_id": "doc_682",
      "target_id": "concept_778",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.036789
    },
    "rel_793": {
      "id": "rel_793",
      "source_id": "doc_682",
      "target_id": "concept_779",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0369542
    },
    "rel_794": {
      "id": "rel_794",
      "source_id": "doc_682",
      "target_id": "concept_780",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.037139
    },
    "rel_795": {
      "id": "rel_795",
      "source_id": "doc_682",
      "target_id": "concept_781",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.037299
    },
    "rel_796": {
      "id": "rel_796",
      "source_id": "doc_682",
      "target_id": "concept_782",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0374668
    },
    "rel_797": {
      "id": "rel_797",
      "source_id": "doc_682",
      "target_id": "concept_783",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0376298
    },
    "rel_798": {
      "id": "rel_798",
      "source_id": "doc_682",
      "target_id": "concept_784",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.037778
    },
    "rel_799": {
      "id": "rel_799",
      "source_id": "doc_682",
      "target_id": "concept_785",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.03794
    },
    "rel_800": {
      "id": "rel_800",
      "source_id": "doc_682",
      "target_id": "concept_786",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.038101
    },
    "rel_801": {
      "id": "rel_801",
      "source_id": "doc_682",
      "target_id": "concept_787",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.038371
    },
    "rel_802": {
      "id": "rel_802",
      "source_id": "doc_682",
      "target_id": "concept_788",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.038543
    },
    "rel_803": {
      "id": "rel_803",
      "source_id": "doc_682",
      "target_id": "concept_789",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0387042
    },
    "rel_804": {
      "id": "rel_804",
      "source_id": "doc_682",
      "target_id": "concept_790",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.038871
    },
    "rel_805": {
      "id": "rel_805",
      "source_id": "doc_682",
      "target_id": "concept_791",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0390348
    },
    "rel_806": {
      "id": "rel_806",
      "source_id": "doc_682",
      "target_id": "concept_792",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.039187
    },
    "rel_807": {
      "id": "rel_807",
      "source_id": "doc_682",
      "target_id": "concept_793",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.039343
    },
    "rel_808": {
      "id": "rel_808",
      "source_id": "doc_682",
      "target_id": "concept_794",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.039506
    },
    "rel_809": {
      "id": "rel_809",
      "source_id": "doc_682",
      "target_id": "concept_795",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.039677
    },
    "rel_810": {
      "id": "rel_810",
      "source_id": "doc_682",
      "target_id": "concept_796",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.040127
    },
    "rel_811": {
      "id": "rel_811",
      "source_id": "doc_682",
      "target_id": "concept_797",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.040426
    },
    "rel_812": {
      "id": "rel_812",
      "source_id": "doc_682",
      "target_id": "concept_798",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.040668
    },
    "rel_813": {
      "id": "rel_813",
      "source_id": "doc_682",
      "target_id": "concept_799",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.040938
    },
    "rel_814": {
      "id": "rel_814",
      "source_id": "doc_682",
      "target_id": "concept_800",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.041117
    },
    "rel_815": {
      "id": "rel_815",
      "source_id": "doc_682",
      "target_id": "concept_801",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0413408
    },
    "rel_816": {
      "id": "rel_816",
      "source_id": "doc_682",
      "target_id": "concept_802",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.041603
    },
    "rel_817": {
      "id": "rel_817",
      "source_id": "doc_682",
      "target_id": "concept_803",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0419462
    },
    "rel_818": {
      "id": "rel_818",
      "source_id": "doc_682",
      "target_id": "concept_804",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0421708
    },
    "rel_819": {
      "id": "rel_819",
      "source_id": "doc_682",
      "target_id": "concept_805",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.042382
    },
    "rel_820": {
      "id": "rel_820",
      "source_id": "doc_682",
      "target_id": "concept_806",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.042541
    },
    "rel_821": {
      "id": "rel_821",
      "source_id": "doc_682",
      "target_id": "concept_807",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0426922
    },
    "rel_822": {
      "id": "rel_822",
      "source_id": "doc_682",
      "target_id": "concept_808",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.042857
    },
    "rel_823": {
      "id": "rel_823",
      "source_id": "doc_682",
      "target_id": "concept_809",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0430222
    },
    "rel_824": {
      "id": "rel_824",
      "source_id": "doc_682",
      "target_id": "concept_810",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.043203
    },
    "rel_825": {
      "id": "rel_825",
      "source_id": "doc_682",
      "target_id": "concept_811",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.043359
    },
    "rel_826": {
      "id": "rel_826",
      "source_id": "doc_682",
      "target_id": "concept_812",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.043524
    },
    "rel_827": {
      "id": "rel_827",
      "source_id": "doc_682",
      "target_id": "concept_813",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.043692
    },
    "rel_828": {
      "id": "rel_828",
      "source_id": "doc_682",
      "target_id": "concept_814",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.043859
    },
    "rel_829": {
      "id": "rel_829",
      "source_id": "doc_682",
      "target_id": "concept_815",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0440269
    },
    "rel_830": {
      "id": "rel_830",
      "source_id": "doc_682",
      "target_id": "concept_816",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0442061
    },
    "rel_831": {
      "id": "rel_831",
      "source_id": "doc_682",
      "target_id": "concept_817",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0444438
    },
    "rel_832": {
      "id": "rel_832",
      "source_id": "doc_682",
      "target_id": "concept_818",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.044671
    },
    "rel_833": {
      "id": "rel_833",
      "source_id": "doc_682",
      "target_id": "concept_819",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.044909
    },
    "rel_834": {
      "id": "rel_834",
      "source_id": "doc_682",
      "target_id": "concept_820",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.045086
    },
    "rel_835": {
      "id": "rel_835",
      "source_id": "doc_682",
      "target_id": "concept_821",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.045249
    },
    "rel_836": {
      "id": "rel_836",
      "source_id": "doc_682",
      "target_id": "concept_822",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.045673
    },
    "rel_837": {
      "id": "rel_837",
      "source_id": "doc_682",
      "target_id": "concept_823",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.045933
    },
    "rel_838": {
      "id": "rel_838",
      "source_id": "doc_682",
      "target_id": "concept_824",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0461
    },
    "rel_839": {
      "id": "rel_839",
      "source_id": "doc_682",
      "target_id": "concept_825",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.046261
    },
    "rel_840": {
      "id": "rel_840",
      "source_id": "doc_682",
      "target_id": "concept_826",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0464141
    },
    "rel_841": {
      "id": "rel_841",
      "source_id": "doc_682",
      "target_id": "concept_827",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0467598
    },
    "rel_842": {
      "id": "rel_842",
      "source_id": "doc_682",
      "target_id": "concept_828",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.046916
    },
    "rel_843": {
      "id": "rel_843",
      "source_id": "doc_682",
      "target_id": "concept_829",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.047284
    },
    "rel_844": {
      "id": "rel_844",
      "source_id": "doc_682",
      "target_id": "concept_830",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0476391
    },
    "rel_845": {
      "id": "rel_845",
      "source_id": "doc_682",
      "target_id": "concept_831",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.047997
    },
    "rel_846": {
      "id": "rel_846",
      "source_id": "doc_832",
      "target_id": "concept_833",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.050959
    },
    "rel_847": {
      "id": "rel_847",
      "source_id": "doc_832",
      "target_id": "concept_834",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0511239
    },
    "rel_848": {
      "id": "rel_848",
      "source_id": "doc_832",
      "target_id": "concept_835",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.051278
    },
    "rel_849": {
      "id": "rel_849",
      "source_id": "doc_832",
      "target_id": "concept_836",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.051469
    },
    "rel_850": {
      "id": "rel_850",
      "source_id": "doc_832",
      "target_id": "concept_837",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.051668
    },
    "rel_851": {
      "id": "rel_851",
      "source_id": "doc_832",
      "target_id": "concept_838",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.05183
    },
    "rel_852": {
      "id": "rel_852",
      "source_id": "doc_832",
      "target_id": "concept_839",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.052
    },
    "rel_853": {
      "id": "rel_853",
      "source_id": "doc_832",
      "target_id": "concept_840",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.052192
    },
    "rel_854": {
      "id": "rel_854",
      "source_id": "doc_832",
      "target_id": "concept_841",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0523572
    },
    "rel_855": {
      "id": "rel_855",
      "source_id": "doc_832",
      "target_id": "concept_842",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0525289
    },
    "rel_856": {
      "id": "rel_856",
      "source_id": "doc_832",
      "target_id": "concept_843",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.052754
    },
    "rel_857": {
      "id": "rel_857",
      "source_id": "doc_832",
      "target_id": "concept_844",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0529048
    },
    "rel_858": {
      "id": "rel_858",
      "source_id": "doc_832",
      "target_id": "concept_845",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.053059
    },
    "rel_859": {
      "id": "rel_859",
      "source_id": "doc_832",
      "target_id": "concept_846",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0534809
    },
    "rel_860": {
      "id": "rel_860",
      "source_id": "doc_832",
      "target_id": "concept_847",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.053647
    },
    "rel_861": {
      "id": "rel_861",
      "source_id": "doc_832",
      "target_id": "concept_848",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0538251
    },
    "rel_862": {
      "id": "rel_862",
      "source_id": "doc_832",
      "target_id": "concept_849",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.053988
    },
    "rel_863": {
      "id": "rel_863",
      "source_id": "doc_832",
      "target_id": "concept_850",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0541499
    },
    "rel_864": {
      "id": "rel_864",
      "source_id": "doc_832",
      "target_id": "concept_851",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.054388
    },
    "rel_865": {
      "id": "rel_865",
      "source_id": "doc_832",
      "target_id": "concept_852",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0545468
    },
    "rel_866": {
      "id": "rel_866",
      "source_id": "doc_832",
      "target_id": "concept_853",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0547059
    },
    "rel_867": {
      "id": "rel_867",
      "source_id": "doc_832",
      "target_id": "concept_854",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.054901
    },
    "rel_868": {
      "id": "rel_868",
      "source_id": "doc_832",
      "target_id": "concept_855",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0550652
    },
    "rel_869": {
      "id": "rel_869",
      "source_id": "doc_832",
      "target_id": "concept_856",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.055223
    },
    "rel_870": {
      "id": "rel_870",
      "source_id": "doc_832",
      "target_id": "concept_857",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.055399
    },
    "rel_871": {
      "id": "rel_871",
      "source_id": "doc_832",
      "target_id": "concept_858",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.055695
    },
    "rel_872": {
      "id": "rel_872",
      "source_id": "doc_832",
      "target_id": "concept_859",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.058423
    },
    "rel_873": {
      "id": "rel_873",
      "source_id": "doc_832",
      "target_id": "concept_860",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.058891
    },
    "rel_874": {
      "id": "rel_874",
      "source_id": "doc_832",
      "target_id": "concept_861",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0590641
    },
    "rel_875": {
      "id": "rel_875",
      "source_id": "doc_832",
      "target_id": "concept_862",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.059235
    },
    "rel_876": {
      "id": "rel_876",
      "source_id": "doc_832",
      "target_id": "concept_863",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.059405
    },
    "rel_877": {
      "id": "rel_877",
      "source_id": "doc_832",
      "target_id": "concept_864",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.059575
    },
    "rel_878": {
      "id": "rel_878",
      "source_id": "doc_832",
      "target_id": "concept_865",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.05999
    },
    "rel_879": {
      "id": "rel_879",
      "source_id": "doc_832",
      "target_id": "concept_866",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0601642
    },
    "rel_880": {
      "id": "rel_880",
      "source_id": "doc_832",
      "target_id": "concept_867",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0606341
    },
    "rel_881": {
      "id": "rel_881",
      "source_id": "doc_832",
      "target_id": "concept_868",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.060821
    },
    "rel_882": {
      "id": "rel_882",
      "source_id": "doc_832",
      "target_id": "concept_869",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.060993
    },
    "rel_883": {
      "id": "rel_883",
      "source_id": "doc_832",
      "target_id": "concept_870",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.061158
    },
    "rel_884": {
      "id": "rel_884",
      "source_id": "doc_832",
      "target_id": "concept_871",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.061336
    },
    "rel_885": {
      "id": "rel_885",
      "source_id": "doc_832",
      "target_id": "concept_872",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.061558
    },
    "rel_886": {
      "id": "rel_886",
      "source_id": "doc_832",
      "target_id": "concept_873",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.061735
    },
    "rel_887": {
      "id": "rel_887",
      "source_id": "doc_832",
      "target_id": "concept_874",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0618958
    },
    "rel_888": {
      "id": "rel_888",
      "source_id": "doc_832",
      "target_id": "concept_875",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.062068
    },
    "rel_889": {
      "id": "rel_889",
      "source_id": "doc_832",
      "target_id": "concept_876",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0622568
    },
    "rel_890": {
      "id": "rel_890",
      "source_id": "doc_832",
      "target_id": "concept_877",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.062437
    },
    "rel_891": {
      "id": "rel_891",
      "source_id": "doc_832",
      "target_id": "concept_878",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0626078
    },
    "rel_892": {
      "id": "rel_892",
      "source_id": "doc_832",
      "target_id": "concept_879",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.062776
    },
    "rel_893": {
      "id": "rel_893",
      "source_id": "doc_832",
      "target_id": "concept_880",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.062943
    },
    "rel_894": {
      "id": "rel_894",
      "source_id": "doc_832",
      "target_id": "concept_881",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.063199
    },
    "rel_895": {
      "id": "rel_895",
      "source_id": "doc_832",
      "target_id": "concept_882",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.063364
    },
    "rel_896": {
      "id": "rel_896",
      "source_id": "doc_832",
      "target_id": "concept_883",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.06353
    },
    "rel_897": {
      "id": "rel_897",
      "source_id": "doc_832",
      "target_id": "concept_884",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.063785
    },
    "rel_898": {
      "id": "rel_898",
      "source_id": "doc_832",
      "target_id": "concept_885",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.063968
    },
    "rel_899": {
      "id": "rel_899",
      "source_id": "doc_832",
      "target_id": "concept_886",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.064244
    },
    "rel_900": {
      "id": "rel_900",
      "source_id": "doc_832",
      "target_id": "concept_887",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.064408
    },
    "rel_901": {
      "id": "rel_901",
      "source_id": "doc_832",
      "target_id": "concept_888",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.064574
    },
    "rel_902": {
      "id": "rel_902",
      "source_id": "doc_832",
      "target_id": "concept_889",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0647418
    },
    "rel_903": {
      "id": "rel_903",
      "source_id": "doc_832",
      "target_id": "concept_890",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.06509
    },
    "rel_904": {
      "id": "rel_904",
      "source_id": "doc_832",
      "target_id": "concept_891",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.065386
    },
    "rel_905": {
      "id": "rel_905",
      "source_id": "doc_832",
      "target_id": "concept_892",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.065568
    },
    "rel_906": {
      "id": "rel_906",
      "source_id": "doc_832",
      "target_id": "concept_893",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0657449
    },
    "rel_907": {
      "id": "rel_907",
      "source_id": "doc_832",
      "target_id": "concept_894",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.065964
    },
    "rel_908": {
      "id": "rel_908",
      "source_id": "doc_832",
      "target_id": "concept_895",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0661418
    },
    "rel_909": {
      "id": "rel_909",
      "source_id": "doc_832",
      "target_id": "concept_896",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.066326
    },
    "rel_910": {
      "id": "rel_910",
      "source_id": "doc_832",
      "target_id": "concept_897",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.066489
    },
    "rel_911": {
      "id": "rel_911",
      "source_id": "doc_832",
      "target_id": "concept_898",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0666509
    },
    "rel_912": {
      "id": "rel_912",
      "source_id": "doc_832",
      "target_id": "concept_899",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.066935
    },
    "rel_913": {
      "id": "rel_913",
      "source_id": "doc_832",
      "target_id": "concept_900",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.067106
    },
    "rel_914": {
      "id": "rel_914",
      "source_id": "doc_832",
      "target_id": "concept_901",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.067364
    },
    "rel_915": {
      "id": "rel_915",
      "source_id": "doc_832",
      "target_id": "concept_902",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.067541
    },
    "rel_916": {
      "id": "rel_916",
      "source_id": "doc_832",
      "target_id": "concept_903",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.067714
    },
    "rel_917": {
      "id": "rel_917",
      "source_id": "doc_832",
      "target_id": "concept_904",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.067882
    },
    "rel_918": {
      "id": "rel_918",
      "source_id": "doc_832",
      "target_id": "concept_905",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0680609
    },
    "rel_919": {
      "id": "rel_919",
      "source_id": "doc_832",
      "target_id": "concept_906",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.068251
    },
    "rel_920": {
      "id": "rel_920",
      "source_id": "doc_832",
      "target_id": "concept_907",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0685198
    },
    "rel_921": {
      "id": "rel_921",
      "source_id": "doc_832",
      "target_id": "concept_908",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.068796
    },
    "rel_922": {
      "id": "rel_922",
      "source_id": "doc_832",
      "target_id": "concept_909",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.068969
    },
    "rel_923": {
      "id": "rel_923",
      "source_id": "doc_832",
      "target_id": "concept_910",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0691452
    },
    "rel_924": {
      "id": "rel_924",
      "source_id": "doc_832",
      "target_id": "concept_911",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.069321
    },
    "rel_925": {
      "id": "rel_925",
      "source_id": "doc_832",
      "target_id": "concept_912",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.069512
    },
    "rel_926": {
      "id": "rel_926",
      "source_id": "doc_832",
      "target_id": "concept_913",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0696871
    },
    "rel_927": {
      "id": "rel_927",
      "source_id": "doc_832",
      "target_id": "concept_914",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.069869
    },
    "rel_928": {
      "id": "rel_928",
      "source_id": "doc_832",
      "target_id": "concept_915",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.070121
    },
    "rel_929": {
      "id": "rel_929",
      "source_id": "doc_832",
      "target_id": "concept_916",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.070312
    },
    "rel_930": {
      "id": "rel_930",
      "source_id": "doc_832",
      "target_id": "concept_917",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0705369
    },
    "rel_931": {
      "id": "rel_931",
      "source_id": "doc_832",
      "target_id": "concept_918",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.07073
    },
    "rel_932": {
      "id": "rel_932",
      "source_id": "doc_832",
      "target_id": "concept_919",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0708969
    },
    "rel_933": {
      "id": "rel_933",
      "source_id": "doc_832",
      "target_id": "concept_920",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0710652
    },
    "rel_934": {
      "id": "rel_934",
      "source_id": "doc_832",
      "target_id": "concept_921",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.071237
    },
    "rel_935": {
      "id": "rel_935",
      "source_id": "doc_832",
      "target_id": "concept_922",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.07141
    },
    "rel_936": {
      "id": "rel_936",
      "source_id": "doc_832",
      "target_id": "concept_923",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.071598
    },
    "rel_937": {
      "id": "rel_937",
      "source_id": "doc_832",
      "target_id": "concept_924",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0717802
    },
    "rel_938": {
      "id": "rel_938",
      "source_id": "doc_832",
      "target_id": "concept_925",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.072057
    },
    "rel_939": {
      "id": "rel_939",
      "source_id": "doc_832",
      "target_id": "concept_926",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0722282
    },
    "rel_940": {
      "id": "rel_940",
      "source_id": "doc_832",
      "target_id": "concept_927",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.072507
    },
    "rel_941": {
      "id": "rel_941",
      "source_id": "doc_832",
      "target_id": "concept_928",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0726871
    },
    "rel_942": {
      "id": "rel_942",
      "source_id": "doc_832",
      "target_id": "concept_929",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.07286
    },
    "rel_943": {
      "id": "rel_943",
      "source_id": "doc_832",
      "target_id": "concept_930",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.073157
    },
    "rel_944": {
      "id": "rel_944",
      "source_id": "doc_832",
      "target_id": "concept_931",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.073549
    },
    "rel_945": {
      "id": "rel_945",
      "source_id": "doc_832",
      "target_id": "concept_152",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.07361
    },
    "rel_946": {
      "id": "rel_946",
      "source_id": "doc_832",
      "target_id": "concept_932",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.073811
    },
    "rel_947": {
      "id": "rel_947",
      "source_id": "doc_832",
      "target_id": "concept_933",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.073998
    },
    "rel_948": {
      "id": "rel_948",
      "source_id": "doc_832",
      "target_id": "concept_934",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.074222
    },
    "rel_949": {
      "id": "rel_949",
      "source_id": "doc_832",
      "target_id": "concept_935",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.074446
    },
    "rel_950": {
      "id": "rel_950",
      "source_id": "doc_832",
      "target_id": "concept_936",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0746298
    },
    "rel_951": {
      "id": "rel_951",
      "source_id": "doc_832",
      "target_id": "concept_937",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0771048
    },
    "rel_952": {
      "id": "rel_952",
      "source_id": "doc_832",
      "target_id": "concept_938",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.077285
    },
    "rel_953": {
      "id": "rel_953",
      "source_id": "doc_832",
      "target_id": "concept_939",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.077476
    },
    "rel_954": {
      "id": "rel_954",
      "source_id": "doc_832",
      "target_id": "concept_940",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.077648
    },
    "rel_955": {
      "id": "rel_955",
      "source_id": "doc_832",
      "target_id": "concept_941",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.077832
    },
    "rel_956": {
      "id": "rel_956",
      "source_id": "doc_832",
      "target_id": "concept_942",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.078016
    },
    "rel_957": {
      "id": "rel_957",
      "source_id": "doc_832",
      "target_id": "concept_943",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0781891
    },
    "rel_958": {
      "id": "rel_958",
      "source_id": "doc_832",
      "target_id": "concept_944",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0783622
    },
    "rel_959": {
      "id": "rel_959",
      "source_id": "doc_832",
      "target_id": "concept_945",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.078668
    },
    "rel_960": {
      "id": "rel_960",
      "source_id": "doc_832",
      "target_id": "concept_946",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0788732
    },
    "rel_961": {
      "id": "rel_961",
      "source_id": "doc_832",
      "target_id": "concept_947",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.079061
    },
    "rel_962": {
      "id": "rel_962",
      "source_id": "doc_832",
      "target_id": "concept_948",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0792341
    },
    "rel_963": {
      "id": "rel_963",
      "source_id": "doc_832",
      "target_id": "concept_949",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.079416
    },
    "rel_964": {
      "id": "rel_964",
      "source_id": "doc_832",
      "target_id": "concept_950",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.079596
    },
    "rel_965": {
      "id": "rel_965",
      "source_id": "doc_832",
      "target_id": "concept_951",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0798779
    },
    "rel_966": {
      "id": "rel_966",
      "source_id": "doc_832",
      "target_id": "concept_952",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.080051
    },
    "rel_967": {
      "id": "rel_967",
      "source_id": "doc_832",
      "target_id": "concept_953",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.080234
    },
    "rel_968": {
      "id": "rel_968",
      "source_id": "doc_832",
      "target_id": "concept_954",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.080409
    },
    "rel_969": {
      "id": "rel_969",
      "source_id": "doc_832",
      "target_id": "concept_955",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.080734
    },
    "rel_970": {
      "id": "rel_970",
      "source_id": "doc_832",
      "target_id": "concept_956",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.08092
    },
    "rel_971": {
      "id": "rel_971",
      "source_id": "doc_832",
      "target_id": "concept_957",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.081194
    },
    "rel_972": {
      "id": "rel_972",
      "source_id": "doc_832",
      "target_id": "concept_958",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0813792
    },
    "rel_973": {
      "id": "rel_973",
      "source_id": "doc_832",
      "target_id": "concept_959",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.081651
    },
    "rel_974": {
      "id": "rel_974",
      "source_id": "doc_832",
      "target_id": "concept_960",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.081886
    },
    "rel_975": {
      "id": "rel_975",
      "source_id": "doc_832",
      "target_id": "concept_961",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.082171
    },
    "rel_976": {
      "id": "rel_976",
      "source_id": "doc_832",
      "target_id": "concept_962",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.082431
    },
    "rel_977": {
      "id": "rel_977",
      "source_id": "doc_832",
      "target_id": "concept_963",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.082676
    },
    "rel_978": {
      "id": "rel_978",
      "source_id": "doc_832",
      "target_id": "concept_964",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0828679
    },
    "rel_979": {
      "id": "rel_979",
      "source_id": "doc_832",
      "target_id": "concept_965",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.083044
    },
    "rel_980": {
      "id": "rel_980",
      "source_id": "doc_832",
      "target_id": "concept_966",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.083224
    },
    "rel_981": {
      "id": "rel_981",
      "source_id": "doc_832",
      "target_id": "concept_967",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.083489
    },
    "rel_982": {
      "id": "rel_982",
      "source_id": "doc_832",
      "target_id": "concept_968",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.083682
    },
    "rel_983": {
      "id": "rel_983",
      "source_id": "doc_832",
      "target_id": "concept_969",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.083858
    },
    "rel_984": {
      "id": "rel_984",
      "source_id": "doc_832",
      "target_id": "concept_970",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.084039
    },
    "rel_985": {
      "id": "rel_985",
      "source_id": "doc_832",
      "target_id": "concept_971",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.084314
    },
    "rel_986": {
      "id": "rel_986",
      "source_id": "doc_832",
      "target_id": "concept_972",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.084505
    },
    "rel_987": {
      "id": "rel_987",
      "source_id": "doc_832",
      "target_id": "concept_973",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.084775
    },
    "rel_988": {
      "id": "rel_988",
      "source_id": "doc_832",
      "target_id": "concept_974",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.084971
    },
    "rel_989": {
      "id": "rel_989",
      "source_id": "doc_832",
      "target_id": "concept_975",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.085419
    },
    "rel_990": {
      "id": "rel_990",
      "source_id": "doc_832",
      "target_id": "concept_976",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.085699
    },
    "rel_991": {
      "id": "rel_991",
      "source_id": "doc_832",
      "target_id": "concept_977",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0858948
    },
    "rel_992": {
      "id": "rel_992",
      "source_id": "doc_832",
      "target_id": "concept_978",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.086074
    },
    "rel_993": {
      "id": "rel_993",
      "source_id": "doc_832",
      "target_id": "concept_979",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.08625
    },
    "rel_994": {
      "id": "rel_994",
      "source_id": "doc_832",
      "target_id": "concept_980",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.086495
    },
    "rel_995": {
      "id": "rel_995",
      "source_id": "doc_832",
      "target_id": "concept_981",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0866811
    },
    "rel_996": {
      "id": "rel_996",
      "source_id": "doc_832",
      "target_id": "concept_982",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.086884
    },
    "rel_997": {
      "id": "rel_997",
      "source_id": "doc_832",
      "target_id": "concept_983",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0870788
    },
    "rel_998": {
      "id": "rel_998",
      "source_id": "doc_832",
      "target_id": "concept_984",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.087269
    },
    "rel_999": {
      "id": "rel_999",
      "source_id": "doc_832",
      "target_id": "concept_985",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.087444
    },
    "rel_1000": {
      "id": "rel_1000",
      "source_id": "doc_832",
      "target_id": "concept_986",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.087633
    },
    "rel_1001": {
      "id": "rel_1001",
      "source_id": "doc_832",
      "target_id": "concept_987",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0878122
    },
    "rel_1002": {
      "id": "rel_1002",
      "source_id": "doc_832",
      "target_id": "concept_988",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.088164
    },
    "rel_1003": {
      "id": "rel_1003",
      "source_id": "doc_832",
      "target_id": "concept_989",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.088351
    },
    "rel_1004": {
      "id": "rel_1004",
      "source_id": "doc_832",
      "target_id": "concept_990",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.08863
    },
    "rel_1005": {
      "id": "rel_1005",
      "source_id": "doc_832",
      "target_id": "concept_991",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.088829
    },
    "rel_1006": {
      "id": "rel_1006",
      "source_id": "doc_832",
      "target_id": "concept_992",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0890088
    },
    "rel_1007": {
      "id": "rel_1007",
      "source_id": "doc_832",
      "target_id": "concept_993",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0891929
    },
    "rel_1008": {
      "id": "rel_1008",
      "source_id": "doc_832",
      "target_id": "concept_994",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.08937
    },
    "rel_1009": {
      "id": "rel_1009",
      "source_id": "doc_832",
      "target_id": "concept_995",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.089552
    },
    "rel_1010": {
      "id": "rel_1010",
      "source_id": "doc_832",
      "target_id": "concept_996",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.089847
    },
    "rel_1011": {
      "id": "rel_1011",
      "source_id": "doc_832",
      "target_id": "concept_997",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.090074
    },
    "rel_1012": {
      "id": "rel_1012",
      "source_id": "doc_832",
      "target_id": "concept_998",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.090345
    },
    "rel_1013": {
      "id": "rel_1013",
      "source_id": "doc_832",
      "target_id": "concept_999",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.090653
    },
    "rel_1014": {
      "id": "rel_1014",
      "source_id": "doc_832",
      "target_id": "concept_1000",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.090951
    },
    "rel_1015": {
      "id": "rel_1015",
      "source_id": "doc_832",
      "target_id": "concept_1001",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.091163
    },
    "rel_1016": {
      "id": "rel_1016",
      "source_id": "doc_832",
      "target_id": "concept_1002",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.091391
    },
    "rel_1017": {
      "id": "rel_1017",
      "source_id": "doc_832",
      "target_id": "concept_1003",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.091609
    },
    "rel_1018": {
      "id": "rel_1018",
      "source_id": "doc_832",
      "target_id": "concept_1004",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0918038
    },
    "rel_1019": {
      "id": "rel_1019",
      "source_id": "doc_832",
      "target_id": "concept_1005",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.091989
    },
    "rel_1020": {
      "id": "rel_1020",
      "source_id": "doc_832",
      "target_id": "concept_1006",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.092182
    },
    "rel_1021": {
      "id": "rel_1021",
      "source_id": "doc_832",
      "target_id": "concept_1007",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.092624
    },
    "rel_1022": {
      "id": "rel_1022",
      "source_id": "doc_832",
      "target_id": "concept_1008",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.092814
    },
    "rel_1023": {
      "id": "rel_1023",
      "source_id": "doc_832",
      "target_id": "concept_1009",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.093174
    },
    "rel_1024": {
      "id": "rel_1024",
      "source_id": "doc_832",
      "target_id": "concept_1010",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.093354
    },
    "rel_1025": {
      "id": "rel_1025",
      "source_id": "doc_832",
      "target_id": "concept_1011",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0935419
    },
    "rel_1026": {
      "id": "rel_1026",
      "source_id": "doc_832",
      "target_id": "concept_1012",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0938601
    },
    "rel_1027": {
      "id": "rel_1027",
      "source_id": "doc_832",
      "target_id": "concept_1013",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0941272
    },
    "rel_1028": {
      "id": "rel_1028",
      "source_id": "doc_832",
      "target_id": "concept_1014",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.094411
    },
    "rel_1029": {
      "id": "rel_1029",
      "source_id": "doc_832",
      "target_id": "concept_1015",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.094618
    },
    "rel_1030": {
      "id": "rel_1030",
      "source_id": "doc_832",
      "target_id": "concept_1016",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.09481
    },
    "rel_1031": {
      "id": "rel_1031",
      "source_id": "doc_832",
      "target_id": "concept_1017",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.095006
    },
    "rel_1032": {
      "id": "rel_1032",
      "source_id": "doc_832",
      "target_id": "concept_1018",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.095201
    },
    "rel_1033": {
      "id": "rel_1033",
      "source_id": "doc_832",
      "target_id": "concept_1019",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.095393
    },
    "rel_1034": {
      "id": "rel_1034",
      "source_id": "doc_832",
      "target_id": "concept_1020",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.095687
    },
    "rel_1035": {
      "id": "rel_1035",
      "source_id": "doc_832",
      "target_id": "concept_1021",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0958788
    },
    "rel_1036": {
      "id": "rel_1036",
      "source_id": "doc_832",
      "target_id": "concept_1022",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.096062
    },
    "rel_1037": {
      "id": "rel_1037",
      "source_id": "doc_832",
      "target_id": "concept_1023",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.096333
    },
    "rel_1038": {
      "id": "rel_1038",
      "source_id": "doc_832",
      "target_id": "concept_1024",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.096513
    },
    "rel_1039": {
      "id": "rel_1039",
      "source_id": "doc_832",
      "target_id": "concept_1025",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.096689
    },
    "rel_1040": {
      "id": "rel_1040",
      "source_id": "doc_832",
      "target_id": "concept_1026",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0969641
    },
    "rel_1041": {
      "id": "rel_1041",
      "source_id": "doc_832",
      "target_id": "concept_1027",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.097161
    },
    "rel_1042": {
      "id": "rel_1042",
      "source_id": "doc_832",
      "target_id": "concept_1028",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.097347
    },
    "rel_1043": {
      "id": "rel_1043",
      "source_id": "doc_832",
      "target_id": "concept_1029",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0975301
    },
    "rel_1044": {
      "id": "rel_1044",
      "source_id": "doc_832",
      "target_id": "concept_1030",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.097983
    },
    "rel_1045": {
      "id": "rel_1045",
      "source_id": "doc_832",
      "target_id": "concept_1031",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0981781
    },
    "rel_1046": {
      "id": "rel_1046",
      "source_id": "doc_832",
      "target_id": "concept_1032",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0983648
    },
    "rel_1047": {
      "id": "rel_1047",
      "source_id": "doc_832",
      "target_id": "concept_1033",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.098558
    },
    "rel_1048": {
      "id": "rel_1048",
      "source_id": "doc_832",
      "target_id": "concept_1034",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.098742
    },
    "rel_1049": {
      "id": "rel_1049",
      "source_id": "doc_832",
      "target_id": "concept_1035",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0989308
    },
    "rel_1050": {
      "id": "rel_1050",
      "source_id": "doc_832",
      "target_id": "concept_1036",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0991209
    },
    "rel_1051": {
      "id": "rel_1051",
      "source_id": "doc_832",
      "target_id": "concept_1037",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0993102
    },
    "rel_1052": {
      "id": "rel_1052",
      "source_id": "doc_832",
      "target_id": "concept_1038",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.0994968
    },
    "rel_1053": {
      "id": "rel_1053",
      "source_id": "doc_1039",
      "target_id": "concept_1040",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1009521
    },
    "rel_1054": {
      "id": "rel_1054",
      "source_id": "doc_1039",
      "target_id": "concept_1041",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.101152
    },
    "rel_1055": {
      "id": "rel_1055",
      "source_id": "doc_1039",
      "target_id": "concept_1042",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.101345
    },
    "rel_1056": {
      "id": "rel_1056",
      "source_id": "doc_1039",
      "target_id": "concept_1043",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.101563
    },
    "rel_1057": {
      "id": "rel_1057",
      "source_id": "doc_1039",
      "target_id": "concept_1044",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.101758
    },
    "rel_1058": {
      "id": "rel_1058",
      "source_id": "doc_1039",
      "target_id": "concept_1045",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1019871
    },
    "rel_1059": {
      "id": "rel_1059",
      "source_id": "doc_1039",
      "target_id": "concept_1046",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1021829
    },
    "rel_1060": {
      "id": "rel_1060",
      "source_id": "doc_1039",
      "target_id": "concept_1047",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.102379
    },
    "rel_1061": {
      "id": "rel_1061",
      "source_id": "doc_1039",
      "target_id": "concept_1048",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1025972
    },
    "rel_1062": {
      "id": "rel_1062",
      "source_id": "doc_1039",
      "target_id": "concept_1049",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.102783
    },
    "rel_1063": {
      "id": "rel_1063",
      "source_id": "doc_1039",
      "target_id": "concept_1050",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.102974
    },
    "rel_1064": {
      "id": "rel_1064",
      "source_id": "doc_1039",
      "target_id": "concept_1051",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.103173
    },
    "rel_1065": {
      "id": "rel_1065",
      "source_id": "doc_1039",
      "target_id": "concept_14",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.103182
    },
    "rel_1066": {
      "id": "rel_1066",
      "source_id": "doc_1039",
      "target_id": "concept_15",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1031868
    },
    "rel_1067": {
      "id": "rel_1067",
      "source_id": "doc_1039",
      "target_id": "concept_1052",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.103383
    },
    "rel_1068": {
      "id": "rel_1068",
      "source_id": "doc_1039",
      "target_id": "concept_1053",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.103638
    },
    "rel_1069": {
      "id": "rel_1069",
      "source_id": "doc_1039",
      "target_id": "concept_1054",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.103873
    },
    "rel_1070": {
      "id": "rel_1070",
      "source_id": "doc_1039",
      "target_id": "concept_1055",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.104071
    },
    "rel_1071": {
      "id": "rel_1071",
      "source_id": "doc_1039",
      "target_id": "concept_1056",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1042612
    },
    "rel_1072": {
      "id": "rel_1072",
      "source_id": "doc_1039",
      "target_id": "concept_1057",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.104455
    },
    "rel_1073": {
      "id": "rel_1073",
      "source_id": "doc_1039",
      "target_id": "concept_1058",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1046321
    },
    "rel_1074": {
      "id": "rel_1074",
      "source_id": "doc_1039",
      "target_id": "concept_23",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1046422
    },
    "rel_1075": {
      "id": "rel_1075",
      "source_id": "doc_1039",
      "target_id": "concept_1059",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.104825
    },
    "rel_1076": {
      "id": "rel_1076",
      "source_id": "doc_1039",
      "target_id": "concept_1060",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.105014
    },
    "rel_1077": {
      "id": "rel_1077",
      "source_id": "doc_1039",
      "target_id": "concept_367",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1051111
    },
    "rel_1078": {
      "id": "rel_1078",
      "source_id": "doc_1039",
      "target_id": "concept_25",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.10512
    },
    "rel_1079": {
      "id": "rel_1079",
      "source_id": "doc_1039",
      "target_id": "concept_1061",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.105648
    },
    "rel_1080": {
      "id": "rel_1080",
      "source_id": "doc_1039",
      "target_id": "concept_1062",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.105837
    },
    "rel_1081": {
      "id": "rel_1081",
      "source_id": "doc_1039",
      "target_id": "concept_1063",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.106024
    },
    "rel_1082": {
      "id": "rel_1082",
      "source_id": "doc_1039",
      "target_id": "concept_1064",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.106299
    },
    "rel_1083": {
      "id": "rel_1083",
      "source_id": "doc_1039",
      "target_id": "concept_1065",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.106545
    },
    "rel_1084": {
      "id": "rel_1084",
      "source_id": "doc_1039",
      "target_id": "concept_1066",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.106739
    },
    "rel_1085": {
      "id": "rel_1085",
      "source_id": "doc_1039",
      "target_id": "concept_1067",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.106935
    },
    "rel_1086": {
      "id": "rel_1086",
      "source_id": "doc_1039",
      "target_id": "concept_1068",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.107122
    },
    "rel_1087": {
      "id": "rel_1087",
      "source_id": "doc_1039",
      "target_id": "concept_1069",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.107313
    },
    "rel_1088": {
      "id": "rel_1088",
      "source_id": "doc_1039",
      "target_id": "concept_1070",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.110087
    },
    "rel_1089": {
      "id": "rel_1089",
      "source_id": "doc_1039",
      "target_id": "concept_1071",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1106849
    },
    "rel_1090": {
      "id": "rel_1090",
      "source_id": "doc_1039",
      "target_id": "concept_1072",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.110923
    },
    "rel_1091": {
      "id": "rel_1091",
      "source_id": "doc_1039",
      "target_id": "concept_1073",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.111111
    },
    "rel_1092": {
      "id": "rel_1092",
      "source_id": "doc_1039",
      "target_id": "concept_1074",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.111393
    },
    "rel_1093": {
      "id": "rel_1093",
      "source_id": "doc_1039",
      "target_id": "concept_1075",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1115909
    },
    "rel_1094": {
      "id": "rel_1094",
      "source_id": "doc_1039",
      "target_id": "concept_1076",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.111805
    },
    "rel_1095": {
      "id": "rel_1095",
      "source_id": "doc_1039",
      "target_id": "concept_1077",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.112052
    },
    "rel_1096": {
      "id": "rel_1096",
      "source_id": "doc_1039",
      "target_id": "concept_1078",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.112284
    },
    "rel_1097": {
      "id": "rel_1097",
      "source_id": "doc_1039",
      "target_id": "concept_41",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.112299
    },
    "rel_1098": {
      "id": "rel_1098",
      "source_id": "doc_1039",
      "target_id": "concept_1079",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.112513
    },
    "rel_1099": {
      "id": "rel_1099",
      "source_id": "doc_1039",
      "target_id": "concept_1080",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.112706
    },
    "rel_1100": {
      "id": "rel_1100",
      "source_id": "doc_1039",
      "target_id": "concept_43",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.112721
    },
    "rel_1101": {
      "id": "rel_1101",
      "source_id": "doc_1039",
      "target_id": "concept_1081",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.112916
    },
    "rel_1102": {
      "id": "rel_1102",
      "source_id": "doc_1039",
      "target_id": "concept_1082",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.11317
    },
    "rel_1103": {
      "id": "rel_1103",
      "source_id": "doc_1039",
      "target_id": "concept_1083",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1133661
    },
    "rel_1104": {
      "id": "rel_1104",
      "source_id": "doc_1039",
      "target_id": "concept_1084",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.113576
    },
    "rel_1105": {
      "id": "rel_1105",
      "source_id": "doc_1039",
      "target_id": "concept_1085",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.113763
    },
    "rel_1106": {
      "id": "rel_1106",
      "source_id": "doc_1039",
      "target_id": "concept_1086",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.113952
    },
    "rel_1107": {
      "id": "rel_1107",
      "source_id": "doc_1039",
      "target_id": "concept_1087",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.114155
    },
    "rel_1108": {
      "id": "rel_1108",
      "source_id": "doc_1039",
      "target_id": "concept_1088",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.114342
    },
    "rel_1109": {
      "id": "rel_1109",
      "source_id": "doc_1039",
      "target_id": "concept_1089",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.115197
    },
    "rel_1110": {
      "id": "rel_1110",
      "source_id": "doc_1039",
      "target_id": "concept_1090",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.115461
    },
    "rel_1111": {
      "id": "rel_1111",
      "source_id": "doc_1039",
      "target_id": "concept_1091",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.115689
    },
    "rel_1112": {
      "id": "rel_1112",
      "source_id": "doc_1039",
      "target_id": "concept_1092",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.115896
    },
    "rel_1113": {
      "id": "rel_1113",
      "source_id": "doc_1039",
      "target_id": "concept_1093",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1160939
    },
    "rel_1114": {
      "id": "rel_1114",
      "source_id": "doc_1039",
      "target_id": "concept_1094",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.116287
    },
    "rel_1115": {
      "id": "rel_1115",
      "source_id": "doc_1039",
      "target_id": "concept_1095",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.11991
    },
    "rel_1116": {
      "id": "rel_1116",
      "source_id": "doc_1039",
      "target_id": "concept_61",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.11993
    },
    "rel_1117": {
      "id": "rel_1117",
      "source_id": "doc_1039",
      "target_id": "concept_1096",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.120202
    },
    "rel_1118": {
      "id": "rel_1118",
      "source_id": "doc_1039",
      "target_id": "concept_1097",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.120468
    },
    "rel_1119": {
      "id": "rel_1119",
      "source_id": "doc_1039",
      "target_id": "concept_1098",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.120666
    },
    "rel_1120": {
      "id": "rel_1120",
      "source_id": "doc_1039",
      "target_id": "concept_1099",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1209111
    },
    "rel_1121": {
      "id": "rel_1121",
      "source_id": "doc_1039",
      "target_id": "concept_1100",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.12112
    },
    "rel_1122": {
      "id": "rel_1122",
      "source_id": "doc_1039",
      "target_id": "concept_1101",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.121322
    },
    "rel_1123": {
      "id": "rel_1123",
      "source_id": "doc_1039",
      "target_id": "concept_1102",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.121738
    },
    "rel_1124": {
      "id": "rel_1124",
      "source_id": "doc_1039",
      "target_id": "concept_1103",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.121967
    },
    "rel_1125": {
      "id": "rel_1125",
      "source_id": "doc_1039",
      "target_id": "concept_1104",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.122167
    },
    "rel_1126": {
      "id": "rel_1126",
      "source_id": "doc_1039",
      "target_id": "concept_1105",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1223629
    },
    "rel_1127": {
      "id": "rel_1127",
      "source_id": "doc_1039",
      "target_id": "concept_1106",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.122574
    },
    "rel_1128": {
      "id": "rel_1128",
      "source_id": "doc_1039",
      "target_id": "concept_1107",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.122782
    },
    "rel_1129": {
      "id": "rel_1129",
      "source_id": "doc_1039",
      "target_id": "concept_1108",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.122989
    },
    "rel_1130": {
      "id": "rel_1130",
      "source_id": "doc_1039",
      "target_id": "concept_1109",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.123253
    },
    "rel_1131": {
      "id": "rel_1131",
      "source_id": "doc_1039",
      "target_id": "concept_74",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1232781
    },
    "rel_1132": {
      "id": "rel_1132",
      "source_id": "doc_1039",
      "target_id": "concept_1110",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1235461
    },
    "rel_1133": {
      "id": "rel_1133",
      "source_id": "doc_1039",
      "target_id": "concept_1111",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.123754
    },
    "rel_1134": {
      "id": "rel_1134",
      "source_id": "doc_1039",
      "target_id": "concept_1112",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.123957
    },
    "rel_1135": {
      "id": "rel_1135",
      "source_id": "doc_1039",
      "target_id": "concept_1113",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.12416
    },
    "rel_1136": {
      "id": "rel_1136",
      "source_id": "doc_1039",
      "target_id": "concept_1114",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1243541
    },
    "rel_1137": {
      "id": "rel_1137",
      "source_id": "doc_1039",
      "target_id": "concept_1115",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.124562
    },
    "rel_1138": {
      "id": "rel_1138",
      "source_id": "doc_1116",
      "target_id": "concept_1117",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.126975
    },
    "rel_1139": {
      "id": "rel_1139",
      "source_id": "doc_1116",
      "target_id": "concept_1118",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.127181
    },
    "rel_1140": {
      "id": "rel_1140",
      "source_id": "doc_1116",
      "target_id": "concept_1119",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.127399
    },
    "rel_1141": {
      "id": "rel_1141",
      "source_id": "doc_1116",
      "target_id": "concept_1120",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.127609
    },
    "rel_1142": {
      "id": "rel_1142",
      "source_id": "doc_1116",
      "target_id": "concept_1121",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.127829
    },
    "rel_1143": {
      "id": "rel_1143",
      "source_id": "doc_1116",
      "target_id": "concept_1122",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.128463
    },
    "rel_1144": {
      "id": "rel_1144",
      "source_id": "doc_1116",
      "target_id": "concept_1123",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1286762
    },
    "rel_1145": {
      "id": "rel_1145",
      "source_id": "doc_1116",
      "target_id": "concept_1124",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.128883
    },
    "rel_1146": {
      "id": "rel_1146",
      "source_id": "doc_1116",
      "target_id": "concept_1125",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.129087
    },
    "rel_1147": {
      "id": "rel_1147",
      "source_id": "doc_1116",
      "target_id": "concept_1126",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1292841
    },
    "rel_1148": {
      "id": "rel_1148",
      "source_id": "doc_1116",
      "target_id": "concept_1127",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1294851
    },
    "rel_1149": {
      "id": "rel_1149",
      "source_id": "doc_1116",
      "target_id": "concept_1128",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.129689
    },
    "rel_1150": {
      "id": "rel_1150",
      "source_id": "doc_1116",
      "target_id": "concept_1129",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.129888
    },
    "rel_1151": {
      "id": "rel_1151",
      "source_id": "doc_1116",
      "target_id": "concept_1130",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.130105
    },
    "rel_1152": {
      "id": "rel_1152",
      "source_id": "doc_1116",
      "target_id": "concept_1131",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.130312
    },
    "rel_1153": {
      "id": "rel_1153",
      "source_id": "doc_1116",
      "target_id": "concept_1132",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.13069
    },
    "rel_1154": {
      "id": "rel_1154",
      "source_id": "doc_1116",
      "target_id": "concept_1133",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.131016
    },
    "rel_1155": {
      "id": "rel_1155",
      "source_id": "doc_1116",
      "target_id": "concept_1134",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.131234
    },
    "rel_1156": {
      "id": "rel_1156",
      "source_id": "doc_1116",
      "target_id": "concept_1135",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.131495
    },
    "rel_1157": {
      "id": "rel_1157",
      "source_id": "doc_1116",
      "target_id": "concept_1136",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1317499
    },
    "rel_1158": {
      "id": "rel_1158",
      "source_id": "doc_1116",
      "target_id": "concept_1137",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.13201
    },
    "rel_1159": {
      "id": "rel_1159",
      "source_id": "doc_1116",
      "target_id": "concept_1138",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.132235
    },
    "rel_1160": {
      "id": "rel_1160",
      "source_id": "doc_1116",
      "target_id": "concept_1139",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.132448
    },
    "rel_1161": {
      "id": "rel_1161",
      "source_id": "doc_1116",
      "target_id": "concept_1140",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.132755
    },
    "rel_1162": {
      "id": "rel_1162",
      "source_id": "doc_1116",
      "target_id": "concept_1141",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.132971
    },
    "rel_1163": {
      "id": "rel_1163",
      "source_id": "doc_1116",
      "target_id": "concept_1142",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.133179
    },
    "rel_1164": {
      "id": "rel_1164",
      "source_id": "doc_1116",
      "target_id": "concept_1143",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.133395
    },
    "rel_1165": {
      "id": "rel_1165",
      "source_id": "doc_1116",
      "target_id": "concept_1144",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.133601
    },
    "rel_1166": {
      "id": "rel_1166",
      "source_id": "doc_1116",
      "target_id": "concept_1056",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.133781
    },
    "rel_1167": {
      "id": "rel_1167",
      "source_id": "doc_1116",
      "target_id": "concept_1145",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.134096
    },
    "rel_1168": {
      "id": "rel_1168",
      "source_id": "doc_1116",
      "target_id": "concept_1146",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.134303
    },
    "rel_1169": {
      "id": "rel_1169",
      "source_id": "doc_1116",
      "target_id": "concept_1147",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.134515
    },
    "rel_1170": {
      "id": "rel_1170",
      "source_id": "doc_1116",
      "target_id": "concept_1148",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1347241
    },
    "rel_1171": {
      "id": "rel_1171",
      "source_id": "doc_1116",
      "target_id": "concept_1149",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.134954
    },
    "rel_1172": {
      "id": "rel_1172",
      "source_id": "doc_1116",
      "target_id": "concept_1150",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.135166
    },
    "rel_1173": {
      "id": "rel_1173",
      "source_id": "doc_1116",
      "target_id": "concept_1151",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.13628
    },
    "rel_1174": {
      "id": "rel_1174",
      "source_id": "doc_1116",
      "target_id": "concept_1152",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.136498
    },
    "rel_1175": {
      "id": "rel_1175",
      "source_id": "doc_1116",
      "target_id": "concept_1153",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.136698
    },
    "rel_1176": {
      "id": "rel_1176",
      "source_id": "doc_1116",
      "target_id": "concept_1154",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.136893
    },
    "rel_1177": {
      "id": "rel_1177",
      "source_id": "doc_1116",
      "target_id": "concept_1155",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.137106
    },
    "rel_1178": {
      "id": "rel_1178",
      "source_id": "doc_1116",
      "target_id": "concept_1156",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.137311
    },
    "rel_1179": {
      "id": "rel_1179",
      "source_id": "doc_1116",
      "target_id": "concept_1157",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.137534
    },
    "rel_1180": {
      "id": "rel_1180",
      "source_id": "doc_1116",
      "target_id": "concept_1158",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.137737
    },
    "rel_1181": {
      "id": "rel_1181",
      "source_id": "doc_1116",
      "target_id": "concept_1159",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.138544
    },
    "rel_1182": {
      "id": "rel_1182",
      "source_id": "doc_1116",
      "target_id": "concept_1160",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.138753
    },
    "rel_1183": {
      "id": "rel_1183",
      "source_id": "doc_1116",
      "target_id": "concept_1161",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.138967
    },
    "rel_1184": {
      "id": "rel_1184",
      "source_id": "doc_1116",
      "target_id": "concept_1162",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.139175
    },
    "rel_1185": {
      "id": "rel_1185",
      "source_id": "doc_1116",
      "target_id": "concept_1163",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.139381
    },
    "rel_1186": {
      "id": "rel_1186",
      "source_id": "doc_1116",
      "target_id": "concept_1164",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1395829
    },
    "rel_1187": {
      "id": "rel_1187",
      "source_id": "doc_1116",
      "target_id": "concept_1165",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.139797
    },
    "rel_1188": {
      "id": "rel_1188",
      "source_id": "doc_1116",
      "target_id": "concept_391",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.13989
    },
    "rel_1189": {
      "id": "rel_1189",
      "source_id": "doc_1116",
      "target_id": "concept_1166",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.140255
    },
    "rel_1190": {
      "id": "rel_1190",
      "source_id": "doc_1116",
      "target_id": "concept_1167",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1405928
    },
    "rel_1191": {
      "id": "rel_1191",
      "source_id": "doc_1116",
      "target_id": "concept_1168",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.140845
    },
    "rel_1192": {
      "id": "rel_1192",
      "source_id": "doc_1116",
      "target_id": "concept_1169",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.141131
    },
    "rel_1193": {
      "id": "rel_1193",
      "source_id": "doc_1116",
      "target_id": "concept_1170",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.141359
    },
    "rel_1194": {
      "id": "rel_1194",
      "source_id": "doc_1116",
      "target_id": "concept_1171",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1415732
    },
    "rel_1195": {
      "id": "rel_1195",
      "source_id": "doc_1116",
      "target_id": "concept_1172",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1417952
    },
    "rel_1196": {
      "id": "rel_1196",
      "source_id": "doc_1116",
      "target_id": "concept_1173",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.142056
    },
    "rel_1197": {
      "id": "rel_1197",
      "source_id": "doc_1116",
      "target_id": "concept_1174",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1422741
    },
    "rel_1198": {
      "id": "rel_1198",
      "source_id": "doc_1116",
      "target_id": "concept_1175",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1424901
    },
    "rel_1199": {
      "id": "rel_1199",
      "source_id": "doc_1116",
      "target_id": "concept_1176",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.142708
    },
    "rel_1200": {
      "id": "rel_1200",
      "source_id": "doc_1116",
      "target_id": "concept_1177",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.142941
    },
    "rel_1201": {
      "id": "rel_1201",
      "source_id": "doc_1116",
      "target_id": "concept_1178",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.143182
    },
    "rel_1202": {
      "id": "rel_1202",
      "source_id": "doc_1116",
      "target_id": "concept_1179",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1434119
    },
    "rel_1203": {
      "id": "rel_1203",
      "source_id": "doc_1116",
      "target_id": "concept_1180",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1437929
    },
    "rel_1204": {
      "id": "rel_1204",
      "source_id": "doc_1116",
      "target_id": "concept_1181",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.144011
    },
    "rel_1205": {
      "id": "rel_1205",
      "source_id": "doc_1116",
      "target_id": "concept_1182",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.144233
    },
    "rel_1206": {
      "id": "rel_1206",
      "source_id": "doc_1116",
      "target_id": "concept_1183",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.144522
    },
    "rel_1207": {
      "id": "rel_1207",
      "source_id": "doc_1116",
      "target_id": "concept_1184",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1447308
    },
    "rel_1208": {
      "id": "rel_1208",
      "source_id": "doc_1116",
      "target_id": "concept_1185",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.144932
    },
    "rel_1209": {
      "id": "rel_1209",
      "source_id": "doc_1116",
      "target_id": "concept_1186",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1451452
    },
    "rel_1210": {
      "id": "rel_1210",
      "source_id": "doc_1116",
      "target_id": "concept_1187",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.14535
    },
    "rel_1211": {
      "id": "rel_1211",
      "source_id": "doc_1116",
      "target_id": "concept_1188",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.14556
    },
    "rel_1212": {
      "id": "rel_1212",
      "source_id": "doc_1116",
      "target_id": "concept_1189",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1458602
    },
    "rel_1213": {
      "id": "rel_1213",
      "source_id": "doc_1116",
      "target_id": "concept_1190",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.146145
    },
    "rel_1214": {
      "id": "rel_1214",
      "source_id": "doc_1116",
      "target_id": "concept_1191",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1463838
    },
    "rel_1215": {
      "id": "rel_1215",
      "source_id": "doc_1116",
      "target_id": "concept_1192",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.146592
    },
    "rel_1216": {
      "id": "rel_1216",
      "source_id": "doc_1116",
      "target_id": "concept_1193",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1467981
    },
    "rel_1217": {
      "id": "rel_1217",
      "source_id": "doc_1116",
      "target_id": "concept_1194",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.147019
    },
    "rel_1218": {
      "id": "rel_1218",
      "source_id": "doc_1116",
      "target_id": "concept_1195",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.147233
    },
    "rel_1219": {
      "id": "rel_1219",
      "source_id": "doc_1116",
      "target_id": "concept_1196",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.14746
    },
    "rel_1220": {
      "id": "rel_1220",
      "source_id": "doc_1116",
      "target_id": "concept_1197",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.147684
    },
    "rel_1221": {
      "id": "rel_1221",
      "source_id": "doc_1116",
      "target_id": "concept_1198",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1480188
    },
    "rel_1222": {
      "id": "rel_1222",
      "source_id": "doc_1116",
      "target_id": "concept_1199",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.148236
    },
    "rel_1223": {
      "id": "rel_1223",
      "source_id": "doc_1116",
      "target_id": "concept_1200",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.148569
    },
    "rel_1224": {
      "id": "rel_1224",
      "source_id": "doc_1116",
      "target_id": "concept_1201",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.148774
    },
    "rel_1225": {
      "id": "rel_1225",
      "source_id": "doc_1116",
      "target_id": "concept_1202",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.149351
    },
    "rel_1226": {
      "id": "rel_1226",
      "source_id": "doc_1116",
      "target_id": "concept_1203",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.149566
    },
    "rel_1227": {
      "id": "rel_1227",
      "source_id": "doc_1116",
      "target_id": "concept_1204",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.149776
    },
    "rel_1228": {
      "id": "rel_1228",
      "source_id": "doc_1116",
      "target_id": "concept_1205",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1499798
    },
    "rel_1229": {
      "id": "rel_1229",
      "source_id": "doc_1116",
      "target_id": "concept_1206",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1502059
    },
    "rel_1230": {
      "id": "rel_1230",
      "source_id": "doc_1116",
      "target_id": "concept_1207",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.150419
    },
    "rel_1231": {
      "id": "rel_1231",
      "source_id": "doc_1116",
      "target_id": "concept_1208",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1506329
    },
    "rel_1232": {
      "id": "rel_1232",
      "source_id": "doc_1116",
      "target_id": "concept_1209",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1508338
    },
    "rel_1233": {
      "id": "rel_1233",
      "source_id": "doc_1116",
      "target_id": "concept_475",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1509728
    },
    "rel_1234": {
      "id": "rel_1234",
      "source_id": "doc_1116",
      "target_id": "concept_1210",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1512861
    },
    "rel_1235": {
      "id": "rel_1235",
      "source_id": "doc_1116",
      "target_id": "concept_1211",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.151555
    },
    "rel_1236": {
      "id": "rel_1236",
      "source_id": "doc_1116",
      "target_id": "concept_1212",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.151786
    },
    "rel_1237": {
      "id": "rel_1237",
      "source_id": "doc_1116",
      "target_id": "concept_1213",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.151996
    },
    "rel_1238": {
      "id": "rel_1238",
      "source_id": "doc_1116",
      "target_id": "concept_1214",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.152204
    },
    "rel_1239": {
      "id": "rel_1239",
      "source_id": "doc_1116",
      "target_id": "concept_1215",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1524282
    },
    "rel_1240": {
      "id": "rel_1240",
      "source_id": "doc_1116",
      "target_id": "concept_1216",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.152658
    },
    "rel_1241": {
      "id": "rel_1241",
      "source_id": "doc_1116",
      "target_id": "concept_1217",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.15286
    },
    "rel_1242": {
      "id": "rel_1242",
      "source_id": "doc_1116",
      "target_id": "concept_1218",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1530728
    },
    "rel_1243": {
      "id": "rel_1243",
      "source_id": "doc_1116",
      "target_id": "concept_1219",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.15328
    },
    "rel_1244": {
      "id": "rel_1244",
      "source_id": "doc_1116",
      "target_id": "concept_1220",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.153506
    },
    "rel_1245": {
      "id": "rel_1245",
      "source_id": "doc_1116",
      "target_id": "concept_1221",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.153744
    },
    "rel_1246": {
      "id": "rel_1246",
      "source_id": "doc_1116",
      "target_id": "concept_1222",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1539578
    },
    "rel_1247": {
      "id": "rel_1247",
      "source_id": "doc_1116",
      "target_id": "concept_1223",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.154183
    },
    "rel_1248": {
      "id": "rel_1248",
      "source_id": "doc_1116",
      "target_id": "concept_1224",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1543941
    },
    "rel_1249": {
      "id": "rel_1249",
      "source_id": "doc_1116",
      "target_id": "concept_1225",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.154602
    },
    "rel_1250": {
      "id": "rel_1250",
      "source_id": "doc_1116",
      "target_id": "concept_1226",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.154836
    },
    "rel_1251": {
      "id": "rel_1251",
      "source_id": "doc_1116",
      "target_id": "concept_1227",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1550772
    },
    "rel_1252": {
      "id": "rel_1252",
      "source_id": "doc_1116",
      "target_id": "concept_1228",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.155306
    },
    "rel_1253": {
      "id": "rel_1253",
      "source_id": "doc_1116",
      "target_id": "concept_1229",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.155536
    },
    "rel_1254": {
      "id": "rel_1254",
      "source_id": "doc_1116",
      "target_id": "concept_1230",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.155761
    },
    "rel_1255": {
      "id": "rel_1255",
      "source_id": "doc_1116",
      "target_id": "concept_1231",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.155984
    },
    "rel_1256": {
      "id": "rel_1256",
      "source_id": "doc_1116",
      "target_id": "concept_1197",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.156193
    },
    "rel_1257": {
      "id": "rel_1257",
      "source_id": "doc_1116",
      "target_id": "concept_1232",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.156406
    },
    "rel_1258": {
      "id": "rel_1258",
      "source_id": "doc_1116",
      "target_id": "concept_1233",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.156632
    },
    "rel_1259": {
      "id": "rel_1259",
      "source_id": "doc_1116",
      "target_id": "concept_1234",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.156874
    },
    "rel_1260": {
      "id": "rel_1260",
      "source_id": "doc_1116",
      "target_id": "concept_1235",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.157096
    },
    "rel_1261": {
      "id": "rel_1261",
      "source_id": "doc_1116",
      "target_id": "concept_1236",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.157312
    },
    "rel_1262": {
      "id": "rel_1262",
      "source_id": "doc_1116",
      "target_id": "concept_1237",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.157535
    },
    "rel_1263": {
      "id": "rel_1263",
      "source_id": "doc_1116",
      "target_id": "concept_1114",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1577501
    },
    "rel_1264": {
      "id": "rel_1264",
      "source_id": "doc_1116",
      "target_id": "concept_1238",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1580238
    },
    "rel_1265": {
      "id": "rel_1265",
      "source_id": "doc_1116",
      "target_id": "concept_1239",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.158242
    },
    "rel_1266": {
      "id": "rel_1266",
      "source_id": "doc_1116",
      "target_id": "concept_1240",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.158481
    },
    "rel_1267": {
      "id": "rel_1267",
      "source_id": "doc_1116",
      "target_id": "concept_1241",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1589718
    },
    "rel_1268": {
      "id": "rel_1268",
      "source_id": "doc_1116",
      "target_id": "concept_1242",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.159231
    },
    "rel_1269": {
      "id": "rel_1269",
      "source_id": "doc_1116",
      "target_id": "concept_1243",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.159486
    },
    "rel_1270": {
      "id": "rel_1270",
      "source_id": "doc_1116",
      "target_id": "concept_1244",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.159728
    },
    "rel_1271": {
      "id": "rel_1271",
      "source_id": "doc_1116",
      "target_id": "concept_1245",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.160087
    },
    "rel_1272": {
      "id": "rel_1272",
      "source_id": "doc_1246",
      "target_id": "concept_1247",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1633868
    },
    "rel_1273": {
      "id": "rel_1273",
      "source_id": "doc_1246",
      "target_id": "concept_527",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.163501
    },
    "rel_1274": {
      "id": "rel_1274",
      "source_id": "doc_1246",
      "target_id": "concept_109",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1635342
    },
    "rel_1275": {
      "id": "rel_1275",
      "source_id": "doc_1246",
      "target_id": "concept_112",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1635609
    },
    "rel_1276": {
      "id": "rel_1276",
      "source_id": "doc_1246",
      "target_id": "concept_531",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.163668
    },
    "rel_1277": {
      "id": "rel_1277",
      "source_id": "doc_1246",
      "target_id": "concept_1248",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.163965
    },
    "rel_1278": {
      "id": "rel_1278",
      "source_id": "doc_1246",
      "target_id": "concept_1249",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1641998
    },
    "rel_1279": {
      "id": "rel_1279",
      "source_id": "doc_1246",
      "target_id": "concept_1250",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1645079
    },
    "rel_1280": {
      "id": "rel_1280",
      "source_id": "doc_1246",
      "target_id": "concept_115",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.164536
    },
    "rel_1281": {
      "id": "rel_1281",
      "source_id": "doc_1246",
      "target_id": "concept_1251",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.16482
    },
    "rel_1282": {
      "id": "rel_1282",
      "source_id": "doc_1246",
      "target_id": "concept_1252",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1650739
    },
    "rel_1283": {
      "id": "rel_1283",
      "source_id": "doc_1246",
      "target_id": "concept_1253",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1652899
    },
    "rel_1284": {
      "id": "rel_1284",
      "source_id": "doc_1246",
      "target_id": "concept_1254",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.165529
    },
    "rel_1285": {
      "id": "rel_1285",
      "source_id": "doc_1246",
      "target_id": "concept_1255",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.165819
    },
    "rel_1286": {
      "id": "rel_1286",
      "source_id": "doc_1246",
      "target_id": "concept_539",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1659598
    },
    "rel_1287": {
      "id": "rel_1287",
      "source_id": "doc_1246",
      "target_id": "concept_1256",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.166184
    },
    "rel_1288": {
      "id": "rel_1288",
      "source_id": "doc_1246",
      "target_id": "concept_540",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.166294
    },
    "rel_1289": {
      "id": "rel_1289",
      "source_id": "doc_1246",
      "target_id": "concept_1257",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1665258
    },
    "rel_1290": {
      "id": "rel_1290",
      "source_id": "doc_1246",
      "target_id": "concept_1258",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1667578
    },
    "rel_1291": {
      "id": "rel_1291",
      "source_id": "doc_1246",
      "target_id": "concept_1259",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1670122
    },
    "rel_1292": {
      "id": "rel_1292",
      "source_id": "doc_1246",
      "target_id": "concept_541",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.167527
    },
    "rel_1293": {
      "id": "rel_1293",
      "source_id": "doc_1246",
      "target_id": "concept_1260",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.167775
    },
    "rel_1294": {
      "id": "rel_1294",
      "source_id": "doc_1246",
      "target_id": "concept_1261",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.167995
    },
    "rel_1295": {
      "id": "rel_1295",
      "source_id": "doc_1246",
      "target_id": "concept_1262",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.168237
    },
    "rel_1296": {
      "id": "rel_1296",
      "source_id": "doc_1246",
      "target_id": "concept_1263",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.168489
    },
    "rel_1297": {
      "id": "rel_1297",
      "source_id": "doc_1246",
      "target_id": "concept_120",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.16852
    },
    "rel_1298": {
      "id": "rel_1298",
      "source_id": "doc_1246",
      "target_id": "concept_544",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.168629
    },
    "rel_1299": {
      "id": "rel_1299",
      "source_id": "doc_1246",
      "target_id": "concept_1264",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.168864
    },
    "rel_1300": {
      "id": "rel_1300",
      "source_id": "doc_1246",
      "target_id": "concept_545",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.168979
    },
    "rel_1301": {
      "id": "rel_1301",
      "source_id": "doc_1246",
      "target_id": "concept_121",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.169008
    },
    "rel_1302": {
      "id": "rel_1302",
      "source_id": "doc_1246",
      "target_id": "concept_1265",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.169238
    },
    "rel_1303": {
      "id": "rel_1303",
      "source_id": "doc_1246",
      "target_id": "concept_1266",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.169464
    },
    "rel_1304": {
      "id": "rel_1304",
      "source_id": "doc_1246",
      "target_id": "concept_547",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.169573
    },
    "rel_1305": {
      "id": "rel_1305",
      "source_id": "doc_1246",
      "target_id": "concept_1267",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.16979
    },
    "rel_1306": {
      "id": "rel_1306",
      "source_id": "doc_1246",
      "target_id": "concept_1268",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.170094
    },
    "rel_1307": {
      "id": "rel_1307",
      "source_id": "doc_1246",
      "target_id": "concept_550",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.170208
    },
    "rel_1308": {
      "id": "rel_1308",
      "source_id": "doc_1246",
      "target_id": "concept_1269",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.170771
    },
    "rel_1309": {
      "id": "rel_1309",
      "source_id": "doc_1246",
      "target_id": "concept_1270",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.173186
    },
    "rel_1310": {
      "id": "rel_1310",
      "source_id": "doc_1246",
      "target_id": "concept_128",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.173224
    },
    "rel_1311": {
      "id": "rel_1311",
      "source_id": "doc_1246",
      "target_id": "concept_1271",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.173595
    },
    "rel_1312": {
      "id": "rel_1312",
      "source_id": "doc_1246",
      "target_id": "concept_1272",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.173842
    },
    "rel_1313": {
      "id": "rel_1313",
      "source_id": "doc_1246",
      "target_id": "concept_1273",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1741061
    },
    "rel_1314": {
      "id": "rel_1314",
      "source_id": "doc_1246",
      "target_id": "concept_133",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1741471
    },
    "rel_1315": {
      "id": "rel_1315",
      "source_id": "doc_1246",
      "target_id": "concept_1274",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1743739
    },
    "rel_1316": {
      "id": "rel_1316",
      "source_id": "doc_1246",
      "target_id": "concept_1275",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.174607
    },
    "rel_1317": {
      "id": "rel_1317",
      "source_id": "doc_1246",
      "target_id": "concept_1276",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.174936
    },
    "rel_1318": {
      "id": "rel_1318",
      "source_id": "doc_1246",
      "target_id": "concept_1277",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.175172
    },
    "rel_1319": {
      "id": "rel_1319",
      "source_id": "doc_1246",
      "target_id": "concept_1278",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1753979
    },
    "rel_1320": {
      "id": "rel_1320",
      "source_id": "doc_1246",
      "target_id": "concept_1279",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.17562
    },
    "rel_1321": {
      "id": "rel_1321",
      "source_id": "doc_1246",
      "target_id": "concept_1280",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.175841
    },
    "rel_1322": {
      "id": "rel_1322",
      "source_id": "doc_1246",
      "target_id": "concept_555",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1759539
    },
    "rel_1323": {
      "id": "rel_1323",
      "source_id": "doc_1246",
      "target_id": "concept_1281",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.176501
    },
    "rel_1324": {
      "id": "rel_1324",
      "source_id": "doc_1246",
      "target_id": "concept_560",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.176617
    },
    "rel_1325": {
      "id": "rel_1325",
      "source_id": "doc_1246",
      "target_id": "concept_1282",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1769202
    },
    "rel_1326": {
      "id": "rel_1326",
      "source_id": "doc_1246",
      "target_id": "concept_1283",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.177142
    },
    "rel_1327": {
      "id": "rel_1327",
      "source_id": "doc_1246",
      "target_id": "concept_1284",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.17738
    },
    "rel_1328": {
      "id": "rel_1328",
      "source_id": "doc_1246",
      "target_id": "concept_1285",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.177748
    },
    "rel_1329": {
      "id": "rel_1329",
      "source_id": "doc_1246",
      "target_id": "concept_1286",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.177968
    },
    "rel_1330": {
      "id": "rel_1330",
      "source_id": "doc_1246",
      "target_id": "concept_1287",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1783192
    },
    "rel_1331": {
      "id": "rel_1331",
      "source_id": "doc_1246",
      "target_id": "concept_1288",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.182868
    },
    "rel_1332": {
      "id": "rel_1332",
      "source_id": "doc_1246",
      "target_id": "concept_1289",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1834319
    },
    "rel_1333": {
      "id": "rel_1333",
      "source_id": "doc_1246",
      "target_id": "concept_150",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.183476
    },
    "rel_1334": {
      "id": "rel_1334",
      "source_id": "doc_1246",
      "target_id": "concept_1290",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1838322
    },
    "rel_1335": {
      "id": "rel_1335",
      "source_id": "doc_1246",
      "target_id": "concept_151",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1838741
    },
    "rel_1336": {
      "id": "rel_1336",
      "source_id": "doc_1246",
      "target_id": "concept_567",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.184018
    },
    "rel_1337": {
      "id": "rel_1337",
      "source_id": "doc_1246",
      "target_id": "concept_1291",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.184268
    },
    "rel_1338": {
      "id": "rel_1338",
      "source_id": "doc_1246",
      "target_id": "concept_1292",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1844969
    },
    "rel_1339": {
      "id": "rel_1339",
      "source_id": "doc_1246",
      "target_id": "concept_569",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.184654
    },
    "rel_1340": {
      "id": "rel_1340",
      "source_id": "doc_1246",
      "target_id": "concept_1293",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.184884
    },
    "rel_1341": {
      "id": "rel_1341",
      "source_id": "doc_1246",
      "target_id": "concept_1294",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1852338
    },
    "rel_1342": {
      "id": "rel_1342",
      "source_id": "doc_1246",
      "target_id": "concept_159",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.185277
    },
    "rel_1343": {
      "id": "rel_1343",
      "source_id": "doc_1246",
      "target_id": "concept_571",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1853912
    },
    "rel_1344": {
      "id": "rel_1344",
      "source_id": "doc_1246",
      "target_id": "concept_1295",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1856132
    },
    "rel_1345": {
      "id": "rel_1345",
      "source_id": "doc_1246",
      "target_id": "concept_1296",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.185842
    },
    "rel_1346": {
      "id": "rel_1346",
      "source_id": "doc_1246",
      "target_id": "concept_161",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.185899
    },
    "rel_1347": {
      "id": "rel_1347",
      "source_id": "doc_1246",
      "target_id": "concept_163",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.185947
    },
    "rel_1348": {
      "id": "rel_1348",
      "source_id": "doc_1246",
      "target_id": "concept_577",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.186065
    },
    "rel_1349": {
      "id": "rel_1349",
      "source_id": "doc_1246",
      "target_id": "concept_164",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.186111
    },
    "rel_1350": {
      "id": "rel_1350",
      "source_id": "doc_1246",
      "target_id": "concept_1297",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1890402
    },
    "rel_1351": {
      "id": "rel_1351",
      "source_id": "doc_1246",
      "target_id": "concept_1298",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.189274
    },
    "rel_1352": {
      "id": "rel_1352",
      "source_id": "doc_1246",
      "target_id": "concept_1299",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.189604
    },
    "rel_1353": {
      "id": "rel_1353",
      "source_id": "doc_1246",
      "target_id": "concept_1300",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.189872
    },
    "rel_1354": {
      "id": "rel_1354",
      "source_id": "doc_1246",
      "target_id": "concept_581",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1899898
    },
    "rel_1355": {
      "id": "rel_1355",
      "source_id": "doc_1246",
      "target_id": "concept_582",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.190121
    },
    "rel_1356": {
      "id": "rel_1356",
      "source_id": "doc_1246",
      "target_id": "concept_1301",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.19039
    },
    "rel_1357": {
      "id": "rel_1357",
      "source_id": "doc_1246",
      "target_id": "concept_1302",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.190644
    },
    "rel_1358": {
      "id": "rel_1358",
      "source_id": "doc_1246",
      "target_id": "concept_1303",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.190906
    },
    "rel_1359": {
      "id": "rel_1359",
      "source_id": "doc_1246",
      "target_id": "concept_1304",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.191294
    },
    "rel_1360": {
      "id": "rel_1360",
      "source_id": "doc_1246",
      "target_id": "concept_1305",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1915882
    },
    "rel_1361": {
      "id": "rel_1361",
      "source_id": "doc_1246",
      "target_id": "concept_1306",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.191947
    },
    "rel_1362": {
      "id": "rel_1362",
      "source_id": "doc_1246",
      "target_id": "concept_171",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.191999
    },
    "rel_1363": {
      "id": "rel_1363",
      "source_id": "doc_1246",
      "target_id": "concept_1307",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.19223
    },
    "rel_1364": {
      "id": "rel_1364",
      "source_id": "doc_1246",
      "target_id": "concept_1308",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.192797
    },
    "rel_1365": {
      "id": "rel_1365",
      "source_id": "doc_1246",
      "target_id": "concept_592",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.192916
    },
    "rel_1366": {
      "id": "rel_1366",
      "source_id": "doc_1246",
      "target_id": "concept_1309",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.193206
    },
    "rel_1367": {
      "id": "rel_1367",
      "source_id": "doc_1246",
      "target_id": "concept_1310",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.193483
    },
    "rel_1368": {
      "id": "rel_1368",
      "source_id": "doc_1246",
      "target_id": "concept_1311",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.193991
    },
    "rel_1369": {
      "id": "rel_1369",
      "source_id": "doc_1246",
      "target_id": "concept_1312",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.194218
    },
    "rel_1370": {
      "id": "rel_1370",
      "source_id": "doc_1246",
      "target_id": "concept_1313",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.194459
    },
    "rel_1371": {
      "id": "rel_1371",
      "source_id": "doc_1246",
      "target_id": "concept_1314",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.194689
    },
    "rel_1372": {
      "id": "rel_1372",
      "source_id": "doc_1246",
      "target_id": "concept_1315",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1949482
    },
    "rel_1373": {
      "id": "rel_1373",
      "source_id": "doc_1246",
      "target_id": "concept_1316",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.195202
    },
    "rel_1374": {
      "id": "rel_1374",
      "source_id": "doc_1246",
      "target_id": "concept_596",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.195324
    },
    "rel_1375": {
      "id": "rel_1375",
      "source_id": "doc_1246",
      "target_id": "concept_1317",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1956842
    },
    "rel_1376": {
      "id": "rel_1376",
      "source_id": "doc_1246",
      "target_id": "concept_1318",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.195976
    },
    "rel_1377": {
      "id": "rel_1377",
      "source_id": "doc_1246",
      "target_id": "concept_598",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.196098
    },
    "rel_1378": {
      "id": "rel_1378",
      "source_id": "doc_1246",
      "target_id": "concept_181",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.196149
    },
    "rel_1379": {
      "id": "rel_1379",
      "source_id": "doc_1246",
      "target_id": "concept_1319",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.196404
    },
    "rel_1380": {
      "id": "rel_1380",
      "source_id": "doc_1246",
      "target_id": "concept_1320",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1967628
    },
    "rel_1381": {
      "id": "rel_1381",
      "source_id": "doc_1246",
      "target_id": "concept_601",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1968892
    },
    "rel_1382": {
      "id": "rel_1382",
      "source_id": "doc_1246",
      "target_id": "concept_1321",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.197134
    },
    "rel_1383": {
      "id": "rel_1383",
      "source_id": "doc_1246",
      "target_id": "concept_1322",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.197372
    },
    "rel_1384": {
      "id": "rel_1384",
      "source_id": "doc_1246",
      "target_id": "concept_604",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.197508
    },
    "rel_1385": {
      "id": "rel_1385",
      "source_id": "doc_1246",
      "target_id": "concept_186",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.197558
    },
    "rel_1386": {
      "id": "rel_1386",
      "source_id": "doc_1246",
      "target_id": "concept_1323",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.197793
    },
    "rel_1387": {
      "id": "rel_1387",
      "source_id": "doc_1246",
      "target_id": "concept_1324",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.198029
    },
    "rel_1388": {
      "id": "rel_1388",
      "source_id": "doc_1246",
      "target_id": "concept_1325",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.198375
    },
    "rel_1389": {
      "id": "rel_1389",
      "source_id": "doc_1246",
      "target_id": "concept_1326",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.198668
    },
    "rel_1390": {
      "id": "rel_1390",
      "source_id": "doc_1246",
      "target_id": "concept_1327",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1989398
    },
    "rel_1391": {
      "id": "rel_1391",
      "source_id": "doc_1246",
      "target_id": "concept_190",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.198994
    },
    "rel_1392": {
      "id": "rel_1392",
      "source_id": "doc_1246",
      "target_id": "concept_1328",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1992462
    },
    "rel_1393": {
      "id": "rel_1393",
      "source_id": "doc_1246",
      "target_id": "concept_1329",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.199599
    },
    "rel_1394": {
      "id": "rel_1394",
      "source_id": "doc_1246",
      "target_id": "concept_192",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.1996531
    },
    "rel_1395": {
      "id": "rel_1395",
      "source_id": "doc_1246",
      "target_id": "concept_1330",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.199905
    },
    "rel_1396": {
      "id": "rel_1396",
      "source_id": "doc_1246",
      "target_id": "concept_1331",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.2001631
    },
    "rel_1397": {
      "id": "rel_1397",
      "source_id": "doc_1246",
      "target_id": "concept_611",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.200361
    },
    "rel_1398": {
      "id": "rel_1398",
      "source_id": "doc_1246",
      "target_id": "concept_1332",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.200952
    },
    "rel_1399": {
      "id": "rel_1399",
      "source_id": "doc_1246",
      "target_id": "concept_1333",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.2012239
    },
    "rel_1400": {
      "id": "rel_1400",
      "source_id": "doc_1246",
      "target_id": "concept_1334",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.201498
    },
    "rel_1401": {
      "id": "rel_1401",
      "source_id": "doc_1246",
      "target_id": "concept_1335",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.201824
    },
    "rel_1402": {
      "id": "rel_1402",
      "source_id": "doc_1246",
      "target_id": "concept_1336",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.2025201
    },
    "rel_1403": {
      "id": "rel_1403",
      "source_id": "doc_1246",
      "target_id": "concept_1337",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.2027788
    },
    "rel_1404": {
      "id": "rel_1404",
      "source_id": "doc_1246",
      "target_id": "concept_1338",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.203018
    },
    "rel_1405": {
      "id": "rel_1405",
      "source_id": "doc_1246",
      "target_id": "concept_1339",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.203537
    },
    "rel_1406": {
      "id": "rel_1406",
      "source_id": "doc_1246",
      "target_id": "concept_1340",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.203789
    },
    "rel_1407": {
      "id": "rel_1407",
      "source_id": "doc_1246",
      "target_id": "concept_1341",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.20404
    },
    "rel_1408": {
      "id": "rel_1408",
      "source_id": "doc_1246",
      "target_id": "concept_621",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.204166
    },
    "rel_1409": {
      "id": "rel_1409",
      "source_id": "doc_1246",
      "target_id": "concept_1342",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.2044249
    },
    "rel_1410": {
      "id": "rel_1410",
      "source_id": "doc_1246",
      "target_id": "concept_623",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.204546
    },
    "rel_1411": {
      "id": "rel_1411",
      "source_id": "doc_1246",
      "target_id": "concept_201",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.2045991
    },
    "rel_1412": {
      "id": "rel_1412",
      "source_id": "doc_1246",
      "target_id": "concept_1343",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.2048352
    },
    "rel_1413": {
      "id": "rel_1413",
      "source_id": "doc_1246",
      "target_id": "concept_1344",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.2051861
    },
    "rel_1414": {
      "id": "rel_1414",
      "source_id": "doc_1246",
      "target_id": "concept_1345",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.205672
    },
    "rel_1415": {
      "id": "rel_1415",
      "source_id": "doc_1246",
      "target_id": "concept_1346",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.205909
    },
    "rel_1416": {
      "id": "rel_1416",
      "source_id": "doc_1246",
      "target_id": "concept_627",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.206034
    },
    "rel_1417": {
      "id": "rel_1417",
      "source_id": "doc_1246",
      "target_id": "concept_1347",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.206472
    },
    "rel_1418": {
      "id": "rel_1418",
      "source_id": "doc_1246",
      "target_id": "concept_633",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.206667
    },
    "rel_1419": {
      "id": "rel_1419",
      "source_id": "doc_1246",
      "target_id": "concept_210",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.2067258
    },
    "rel_1420": {
      "id": "rel_1420",
      "source_id": "doc_1246",
      "target_id": "concept_1348",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.207117
    },
    "rel_1421": {
      "id": "rel_1421",
      "source_id": "doc_1246",
      "target_id": "concept_1349",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.207499
    },
    "rel_1422": {
      "id": "rel_1422",
      "source_id": "doc_1246",
      "target_id": "concept_1350",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.207767
    },
    "rel_1423": {
      "id": "rel_1423",
      "source_id": "doc_1246",
      "target_id": "concept_1351",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.208375
    },
    "rel_1424": {
      "id": "rel_1424",
      "source_id": "doc_1246",
      "target_id": "concept_1352",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.208645
    },
    "rel_1425": {
      "id": "rel_1425",
      "source_id": "doc_1246",
      "target_id": "concept_212",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.208705
    },
    "rel_1426": {
      "id": "rel_1426",
      "source_id": "doc_1246",
      "target_id": "concept_636",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.208834
    },
    "rel_1427": {
      "id": "rel_1427",
      "source_id": "doc_1246",
      "target_id": "concept_1353",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.2090821
    },
    "rel_1428": {
      "id": "rel_1428",
      "source_id": "doc_1246",
      "target_id": "concept_1354",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.209322
    },
    "rel_1429": {
      "id": "rel_1429",
      "source_id": "doc_1246",
      "target_id": "concept_1355",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.209992
    },
    "rel_1430": {
      "id": "rel_1430",
      "source_id": "doc_1246",
      "target_id": "concept_1356",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.2102342
    },
    "rel_1431": {
      "id": "rel_1431",
      "source_id": "doc_1246",
      "target_id": "concept_1357",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.210481
    },
    "rel_1432": {
      "id": "rel_1432",
      "source_id": "doc_1246",
      "target_id": "concept_217",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.210542
    },
    "rel_1433": {
      "id": "rel_1433",
      "source_id": "doc_1246",
      "target_id": "concept_639",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.210668
    },
    "rel_1434": {
      "id": "rel_1434",
      "source_id": "doc_1246",
      "target_id": "concept_1358",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.210907
    },
    "rel_1435": {
      "id": "rel_1435",
      "source_id": "doc_1246",
      "target_id": "concept_1359",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.2121239
    },
    "rel_1436": {
      "id": "rel_1436",
      "source_id": "doc_1246",
      "target_id": "concept_641",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.212277
    },
    "rel_1437": {
      "id": "rel_1437",
      "source_id": "doc_1246",
      "target_id": "concept_642",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.212946
    },
    "rel_1438": {
      "id": "rel_1438",
      "source_id": "doc_1246",
      "target_id": "concept_644",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.213079
    },
    "rel_1439": {
      "id": "rel_1439",
      "source_id": "doc_1246",
      "target_id": "concept_219",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.213135
    },
    "rel_1440": {
      "id": "rel_1440",
      "source_id": "doc_1246",
      "target_id": "concept_1360",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.2134132
    },
    "rel_1441": {
      "id": "rel_1441",
      "source_id": "doc_1246",
      "target_id": "concept_1361",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.213908
    },
    "rel_1442": {
      "id": "rel_1442",
      "source_id": "doc_1246",
      "target_id": "concept_595",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.2140539
    },
    "rel_1443": {
      "id": "rel_1443",
      "source_id": "doc_1362",
      "target_id": "concept_1363",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.218177
    },
    "rel_1444": {
      "id": "rel_1444",
      "source_id": "doc_1362",
      "target_id": "concept_1364",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.218555
    },
    "rel_1445": {
      "id": "rel_1445",
      "source_id": "doc_1362",
      "target_id": "concept_1365",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.2188091
    },
    "rel_1446": {
      "id": "rel_1446",
      "source_id": "doc_1362",
      "target_id": "concept_1366",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.219053
    },
    "rel_1447": {
      "id": "rel_1447",
      "source_id": "doc_1362",
      "target_id": "concept_1367",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.2192872
    },
    "rel_1448": {
      "id": "rel_1448",
      "source_id": "doc_1362",
      "target_id": "concept_1368",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.219549
    },
    "rel_1449": {
      "id": "rel_1449",
      "source_id": "doc_1362",
      "target_id": "concept_109",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.219575
    },
    "rel_1450": {
      "id": "rel_1450",
      "source_id": "doc_1362",
      "target_id": "concept_1369",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.219834
    },
    "rel_1451": {
      "id": "rel_1451",
      "source_id": "doc_1362",
      "target_id": "concept_1370",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.220105
    },
    "rel_1452": {
      "id": "rel_1452",
      "source_id": "doc_1362",
      "target_id": "concept_226",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.220159
    },
    "rel_1453": {
      "id": "rel_1453",
      "source_id": "doc_1362",
      "target_id": "concept_1371",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.220434
    },
    "rel_1454": {
      "id": "rel_1454",
      "source_id": "doc_1362",
      "target_id": "concept_530",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.220583
    },
    "rel_1455": {
      "id": "rel_1455",
      "source_id": "doc_1362",
      "target_id": "concept_1372",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.220841
    },
    "rel_1456": {
      "id": "rel_1456",
      "source_id": "doc_1362",
      "target_id": "concept_1373",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.2210848
    },
    "rel_1457": {
      "id": "rel_1457",
      "source_id": "doc_1362",
      "target_id": "concept_1374",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.221382
    },
    "rel_1458": {
      "id": "rel_1458",
      "source_id": "doc_1362",
      "target_id": "concept_1375",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.221668
    },
    "rel_1459": {
      "id": "rel_1459",
      "source_id": "doc_1362",
      "target_id": "concept_1376",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.221996
    },
    "rel_1460": {
      "id": "rel_1460",
      "source_id": "doc_1362",
      "target_id": "concept_115",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.222037
    },
    "rel_1461": {
      "id": "rel_1461",
      "source_id": "doc_1362",
      "target_id": "concept_1377",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.222433
    },
    "rel_1462": {
      "id": "rel_1462",
      "source_id": "doc_1362",
      "target_id": "concept_1378",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.2237592
    },
    "rel_1463": {
      "id": "rel_1463",
      "source_id": "doc_1362",
      "target_id": "concept_1379",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.224372
    },
    "rel_1464": {
      "id": "rel_1464",
      "source_id": "doc_1362",
      "target_id": "concept_1380",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.224737
    },
    "rel_1465": {
      "id": "rel_1465",
      "source_id": "doc_1362",
      "target_id": "concept_1381",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.225027
    },
    "rel_1466": {
      "id": "rel_1466",
      "source_id": "doc_1362",
      "target_id": "concept_1382",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.225298
    },
    "rel_1467": {
      "id": "rel_1467",
      "source_id": "doc_1362",
      "target_id": "concept_231",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.225355
    },
    "rel_1468": {
      "id": "rel_1468",
      "source_id": "doc_1362",
      "target_id": "concept_1383",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.225607
    },
    "rel_1469": {
      "id": "rel_1469",
      "source_id": "doc_1362",
      "target_id": "concept_1384",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.225878
    },
    "rel_1470": {
      "id": "rel_1470",
      "source_id": "doc_1362",
      "target_id": "concept_1385",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.2261288
    },
    "rel_1471": {
      "id": "rel_1471",
      "source_id": "doc_1362",
      "target_id": "concept_1386",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.226412
    },
    "rel_1472": {
      "id": "rel_1472",
      "source_id": "doc_1362",
      "target_id": "concept_1387",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.22683
    },
    "rel_1473": {
      "id": "rel_1473",
      "source_id": "doc_1362",
      "target_id": "concept_1388",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.227084
    },
    "rel_1474": {
      "id": "rel_1474",
      "source_id": "doc_1362",
      "target_id": "concept_1389",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.227337
    },
    "rel_1475": {
      "id": "rel_1475",
      "source_id": "doc_1362",
      "target_id": "concept_1390",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.2275891
    },
    "rel_1476": {
      "id": "rel_1476",
      "source_id": "doc_1362",
      "target_id": "concept_1391",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.227853
    },
    "rel_1477": {
      "id": "rel_1477",
      "source_id": "doc_1362",
      "target_id": "concept_1392",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.2281358
    },
    "rel_1478": {
      "id": "rel_1478",
      "source_id": "doc_1362",
      "target_id": "concept_1393",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.228419
    },
    "rel_1479": {
      "id": "rel_1479",
      "source_id": "doc_1362",
      "target_id": "concept_1394",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.2287009
    },
    "rel_1480": {
      "id": "rel_1480",
      "source_id": "doc_1362",
      "target_id": "concept_1395",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.2291389
    },
    "rel_1481": {
      "id": "rel_1481",
      "source_id": "doc_1362",
      "target_id": "concept_1396",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.229378
    },
    "rel_1482": {
      "id": "rel_1482",
      "source_id": "doc_1362",
      "target_id": "concept_1397",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.2296262
    },
    "rel_1483": {
      "id": "rel_1483",
      "source_id": "doc_1362",
      "target_id": "concept_1398",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.229886
    },
    "rel_1484": {
      "id": "rel_1484",
      "source_id": "doc_1362",
      "target_id": "concept_240",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.22994
    },
    "rel_1485": {
      "id": "rel_1485",
      "source_id": "doc_1362",
      "target_id": "concept_1399",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.230203
    },
    "rel_1486": {
      "id": "rel_1486",
      "source_id": "doc_1362",
      "target_id": "concept_1400",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.230444
    },
    "rel_1487": {
      "id": "rel_1487",
      "source_id": "doc_1362",
      "target_id": "concept_1401",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.230711
    },
    "rel_1488": {
      "id": "rel_1488",
      "source_id": "doc_1362",
      "target_id": "concept_1402",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.230968
    },
    "rel_1489": {
      "id": "rel_1489",
      "source_id": "doc_1362",
      "target_id": "concept_1403",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.2312179
    },
    "rel_1490": {
      "id": "rel_1490",
      "source_id": "doc_1362",
      "target_id": "concept_1404",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.231452
    },
    "rel_1491": {
      "id": "rel_1491",
      "source_id": "doc_1362",
      "target_id": "concept_1405",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.231991
    },
    "rel_1492": {
      "id": "rel_1492",
      "source_id": "doc_1362",
      "target_id": "concept_1406",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.232804
    },
    "rel_1493": {
      "id": "rel_1493",
      "source_id": "doc_1362",
      "target_id": "concept_1407",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.233325
    },
    "rel_1494": {
      "id": "rel_1494",
      "source_id": "doc_1362",
      "target_id": "concept_1408",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.2335842
    },
    "rel_1495": {
      "id": "rel_1495",
      "source_id": "doc_1362",
      "target_id": "concept_1409",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.233876
    },
    "rel_1496": {
      "id": "rel_1496",
      "source_id": "doc_1362",
      "target_id": "concept_1410",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.234188
    },
    "rel_1497": {
      "id": "rel_1497",
      "source_id": "doc_1362",
      "target_id": "concept_1411",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.234459
    },
    "rel_1498": {
      "id": "rel_1498",
      "source_id": "doc_1362",
      "target_id": "concept_1412",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.234727
    },
    "rel_1499": {
      "id": "rel_1499",
      "source_id": "doc_1362",
      "target_id": "concept_128",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.23476
    },
    "rel_1500": {
      "id": "rel_1500",
      "source_id": "doc_1362",
      "target_id": "concept_1413",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.235009
    },
    "rel_1501": {
      "id": "rel_1501",
      "source_id": "doc_1362",
      "target_id": "concept_1414",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.2352629
    },
    "rel_1502": {
      "id": "rel_1502",
      "source_id": "doc_1362",
      "target_id": "concept_1415",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.235523
    },
    "rel_1503": {
      "id": "rel_1503",
      "source_id": "doc_1362",
      "target_id": "concept_1416",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.235771
    },
    "rel_1504": {
      "id": "rel_1504",
      "source_id": "doc_1362",
      "target_id": "concept_1417",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.2360508
    },
    "rel_1505": {
      "id": "rel_1505",
      "source_id": "doc_1362",
      "target_id": "concept_1418",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.236335
    },
    "rel_1506": {
      "id": "rel_1506",
      "source_id": "doc_1362",
      "target_id": "concept_1419",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.236619
    },
    "rel_1507": {
      "id": "rel_1507",
      "source_id": "doc_1362",
      "target_id": "concept_1420",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.236913
    },
    "rel_1508": {
      "id": "rel_1508",
      "source_id": "doc_1362",
      "target_id": "concept_1421",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.2371771
    },
    "rel_1509": {
      "id": "rel_1509",
      "source_id": "doc_1362",
      "target_id": "concept_1422",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.238899
    },
    "rel_1510": {
      "id": "rel_1510",
      "source_id": "doc_1362",
      "target_id": "concept_1423",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.2391942
    },
    "rel_1511": {
      "id": "rel_1511",
      "source_id": "doc_1362",
      "target_id": "concept_133",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.2392352
    },
    "rel_1512": {
      "id": "rel_1512",
      "source_id": "doc_1362",
      "target_id": "concept_1424",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.2394822
    },
    "rel_1513": {
      "id": "rel_1513",
      "source_id": "doc_1362",
      "target_id": "concept_1425",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.239733
    },
    "rel_1514": {
      "id": "rel_1514",
      "source_id": "doc_1362",
      "target_id": "concept_1426",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.2399879
    },
    "rel_1515": {
      "id": "rel_1515",
      "source_id": "doc_1362",
      "target_id": "concept_1427",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.240271
    },
    "rel_1516": {
      "id": "rel_1516",
      "source_id": "doc_1362",
      "target_id": "concept_1428",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.2405188
    },
    "rel_1517": {
      "id": "rel_1517",
      "source_id": "doc_1362",
      "target_id": "concept_1429",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.240777
    },
    "rel_1518": {
      "id": "rel_1518",
      "source_id": "doc_1362",
      "target_id": "concept_1430",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.241029
    },
    "rel_1519": {
      "id": "rel_1519",
      "source_id": "doc_1362",
      "target_id": "concept_1431",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.241277
    },
    "rel_1520": {
      "id": "rel_1520",
      "source_id": "doc_1362",
      "target_id": "concept_1432",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.241528
    },
    "rel_1521": {
      "id": "rel_1521",
      "source_id": "doc_1362",
      "target_id": "concept_1433",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.2418072
    },
    "rel_1522": {
      "id": "rel_1522",
      "source_id": "doc_1362",
      "target_id": "concept_1434",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.242066
    },
    "rel_1523": {
      "id": "rel_1523",
      "source_id": "doc_1362",
      "target_id": "concept_1435",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.242372
    },
    "rel_1524": {
      "id": "rel_1524",
      "source_id": "doc_1362",
      "target_id": "concept_1436",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.242665
    },
    "rel_1525": {
      "id": "rel_1525",
      "source_id": "doc_1362",
      "target_id": "concept_1437",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.243469
    },
    "rel_1526": {
      "id": "rel_1526",
      "source_id": "doc_1362",
      "target_id": "concept_1438",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.243862
    },
    "rel_1527": {
      "id": "rel_1527",
      "source_id": "doc_1362",
      "target_id": "concept_904",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.244034
    },
    "rel_1528": {
      "id": "rel_1528",
      "source_id": "doc_1362",
      "target_id": "concept_1439",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.244303
    },
    "rel_1529": {
      "id": "rel_1529",
      "source_id": "doc_1362",
      "target_id": "concept_1440",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.244651
    },
    "rel_1530": {
      "id": "rel_1530",
      "source_id": "doc_1362",
      "target_id": "concept_1441",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.244925
    },
    "rel_1531": {
      "id": "rel_1531",
      "source_id": "doc_1362",
      "target_id": "concept_1442",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.245353
    },
    "rel_1532": {
      "id": "rel_1532",
      "source_id": "doc_1362",
      "target_id": "concept_1443",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.2456472
    },
    "rel_1533": {
      "id": "rel_1533",
      "source_id": "doc_1362",
      "target_id": "concept_1444",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.2459168
    },
    "rel_1534": {
      "id": "rel_1534",
      "source_id": "doc_1362",
      "target_id": "concept_1445",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.2461922
    },
    "rel_1535": {
      "id": "rel_1535",
      "source_id": "doc_1362",
      "target_id": "concept_1446",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.246461
    },
    "rel_1536": {
      "id": "rel_1536",
      "source_id": "doc_1362",
      "target_id": "concept_1447",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.246753
    },
    "rel_1537": {
      "id": "rel_1537",
      "source_id": "doc_1362",
      "target_id": "concept_1448",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.2469928
    },
    "rel_1538": {
      "id": "rel_1538",
      "source_id": "doc_1362",
      "target_id": "concept_1449",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.247241
    },
    "rel_1539": {
      "id": "rel_1539",
      "source_id": "doc_1362",
      "target_id": "concept_1450",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.24751
    },
    "rel_1540": {
      "id": "rel_1540",
      "source_id": "doc_1362",
      "target_id": "concept_1451",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.2477582
    },
    "rel_1541": {
      "id": "rel_1541",
      "source_id": "doc_1362",
      "target_id": "concept_1452",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.24802
    },
    "rel_1542": {
      "id": "rel_1542",
      "source_id": "doc_1362",
      "target_id": "concept_1453",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.248343
    },
    "rel_1543": {
      "id": "rel_1543",
      "source_id": "doc_1362",
      "target_id": "concept_1454",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.2486231
    },
    "rel_1544": {
      "id": "rel_1544",
      "source_id": "doc_1362",
      "target_id": "concept_1455",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.248876
    },
    "rel_1545": {
      "id": "rel_1545",
      "source_id": "doc_1362",
      "target_id": "concept_1456",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.249126
    },
    "rel_1546": {
      "id": "rel_1546",
      "source_id": "doc_1362",
      "target_id": "concept_1457",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.249376
    },
    "rel_1547": {
      "id": "rel_1547",
      "source_id": "doc_1362",
      "target_id": "concept_1458",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.249622
    },
    "rel_1548": {
      "id": "rel_1548",
      "source_id": "doc_1362",
      "target_id": "concept_1459",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.249887
    },
    "rel_1549": {
      "id": "rel_1549",
      "source_id": "doc_1362",
      "target_id": "concept_1460",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.250148
    },
    "rel_1550": {
      "id": "rel_1550",
      "source_id": "doc_1362",
      "target_id": "concept_1461",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.250394
    },
    "rel_1551": {
      "id": "rel_1551",
      "source_id": "doc_1362",
      "target_id": "concept_1462",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.250653
    },
    "rel_1552": {
      "id": "rel_1552",
      "source_id": "doc_1362",
      "target_id": "concept_1463",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.250904
    },
    "rel_1553": {
      "id": "rel_1553",
      "source_id": "doc_1362",
      "target_id": "concept_1464",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.251158
    },
    "rel_1554": {
      "id": "rel_1554",
      "source_id": "doc_1362",
      "target_id": "concept_1465",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.251442
    },
    "rel_1555": {
      "id": "rel_1555",
      "source_id": "doc_1362",
      "target_id": "concept_150",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.2514849
    },
    "rel_1556": {
      "id": "rel_1556",
      "source_id": "doc_1362",
      "target_id": "concept_1466",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.2517629
    },
    "rel_1557": {
      "id": "rel_1557",
      "source_id": "doc_1362",
      "target_id": "concept_1467",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.2520268
    },
    "rel_1558": {
      "id": "rel_1558",
      "source_id": "doc_1362",
      "target_id": "concept_151",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.2520692
    },
    "rel_1559": {
      "id": "rel_1559",
      "source_id": "doc_1362",
      "target_id": "concept_1468",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.252366
    },
    "rel_1560": {
      "id": "rel_1560",
      "source_id": "doc_1362",
      "target_id": "concept_251",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.2524428
    },
    "rel_1561": {
      "id": "rel_1561",
      "source_id": "doc_1362",
      "target_id": "concept_252",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.252504
    },
    "rel_1562": {
      "id": "rel_1562",
      "source_id": "doc_1362",
      "target_id": "concept_1469",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.2528288
    },
    "rel_1563": {
      "id": "rel_1563",
      "source_id": "doc_1362",
      "target_id": "concept_1470",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.253145
    },
    "rel_1564": {
      "id": "rel_1564",
      "source_id": "doc_1362",
      "target_id": "concept_1471",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.253408
    },
    "rel_1565": {
      "id": "rel_1565",
      "source_id": "doc_1362",
      "target_id": "concept_1472",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.25374
    },
    "rel_1566": {
      "id": "rel_1566",
      "source_id": "doc_1362",
      "target_id": "concept_1473",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.2540329
    },
    "rel_1567": {
      "id": "rel_1567",
      "source_id": "doc_1362",
      "target_id": "concept_253",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.25409
    },
    "rel_1568": {
      "id": "rel_1568",
      "source_id": "doc_1362",
      "target_id": "concept_1474",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.254345
    },
    "rel_1569": {
      "id": "rel_1569",
      "source_id": "doc_1362",
      "target_id": "concept_1475",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.254608
    },
    "rel_1570": {
      "id": "rel_1570",
      "source_id": "doc_1362",
      "target_id": "concept_1476",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.25486
    },
    "rel_1571": {
      "id": "rel_1571",
      "source_id": "doc_1362",
      "target_id": "concept_1477",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.2552729
    },
    "rel_1572": {
      "id": "rel_1572",
      "source_id": "doc_1362",
      "target_id": "concept_1478",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.2555609
    },
    "rel_1573": {
      "id": "rel_1573",
      "source_id": "doc_1362",
      "target_id": "concept_1479",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.255807
    },
    "rel_1574": {
      "id": "rel_1574",
      "source_id": "doc_1362",
      "target_id": "concept_159",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.25585
    },
    "rel_1575": {
      "id": "rel_1575",
      "source_id": "doc_1362",
      "target_id": "concept_1480",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.256098
    },
    "rel_1576": {
      "id": "rel_1576",
      "source_id": "doc_1362",
      "target_id": "concept_1481",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.256365
    },
    "rel_1577": {
      "id": "rel_1577",
      "source_id": "doc_1362",
      "target_id": "concept_1482",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.256653
    },
    "rel_1578": {
      "id": "rel_1578",
      "source_id": "doc_1362",
      "target_id": "concept_1483",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.256906
    },
    "rel_1579": {
      "id": "rel_1579",
      "source_id": "doc_1362",
      "target_id": "concept_1484",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.257185
    },
    "rel_1580": {
      "id": "rel_1580",
      "source_id": "doc_1362",
      "target_id": "concept_1485",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.2574341
    },
    "rel_1581": {
      "id": "rel_1581",
      "source_id": "doc_1362",
      "target_id": "concept_1486",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.257816
    },
    "rel_1582": {
      "id": "rel_1582",
      "source_id": "doc_1362",
      "target_id": "concept_1487",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.25809
    },
    "rel_1583": {
      "id": "rel_1583",
      "source_id": "doc_1362",
      "target_id": "concept_1488",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.258337
    },
    "rel_1584": {
      "id": "rel_1584",
      "source_id": "doc_1362",
      "target_id": "concept_259",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.258394
    },
    "rel_1585": {
      "id": "rel_1585",
      "source_id": "doc_1362",
      "target_id": "concept_163",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.258441
    },
    "rel_1586": {
      "id": "rel_1586",
      "source_id": "doc_1362",
      "target_id": "concept_1489",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.2586932
    },
    "rel_1587": {
      "id": "rel_1587",
      "source_id": "doc_1362",
      "target_id": "concept_1490",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.258973
    },
    "rel_1588": {
      "id": "rel_1588",
      "source_id": "doc_1362",
      "target_id": "concept_1491",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.259279
    },
    "rel_1589": {
      "id": "rel_1589",
      "source_id": "doc_1362",
      "target_id": "concept_1492",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.259547
    },
    "rel_1590": {
      "id": "rel_1590",
      "source_id": "doc_1362",
      "target_id": "concept_1493",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.259817
    },
    "rel_1591": {
      "id": "rel_1591",
      "source_id": "doc_1362",
      "target_id": "concept_1494",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.2600791
    },
    "rel_1592": {
      "id": "rel_1592",
      "source_id": "doc_1362",
      "target_id": "concept_1495",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.260334
    },
    "rel_1593": {
      "id": "rel_1593",
      "source_id": "doc_1362",
      "target_id": "concept_1496",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.2605922
    },
    "rel_1594": {
      "id": "rel_1594",
      "source_id": "doc_1362",
      "target_id": "concept_164",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.260638
    },
    "rel_1595": {
      "id": "rel_1595",
      "source_id": "doc_1362",
      "target_id": "concept_1497",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.260889
    },
    "rel_1596": {
      "id": "rel_1596",
      "source_id": "doc_1362",
      "target_id": "concept_1498",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.2611442
    },
    "rel_1597": {
      "id": "rel_1597",
      "source_id": "doc_1362",
      "target_id": "concept_1499",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.261427
    },
    "rel_1598": {
      "id": "rel_1598",
      "source_id": "doc_1362",
      "target_id": "concept_1500",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.261688
    },
    "rel_1599": {
      "id": "rel_1599",
      "source_id": "doc_1362",
      "target_id": "concept_1501",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.2619479
    },
    "rel_1600": {
      "id": "rel_1600",
      "source_id": "doc_1362",
      "target_id": "concept_1502",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.262198
    },
    "rel_1601": {
      "id": "rel_1601",
      "source_id": "doc_1362",
      "target_id": "concept_1503",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.262558
    },
    "rel_1602": {
      "id": "rel_1602",
      "source_id": "doc_1362",
      "target_id": "concept_1504",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.2628312
    },
    "rel_1603": {
      "id": "rel_1603",
      "source_id": "doc_1362",
      "target_id": "concept_1505",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.263238
    },
    "rel_1604": {
      "id": "rel_1604",
      "source_id": "doc_1362",
      "target_id": "concept_1506",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.263534
    },
    "rel_1605": {
      "id": "rel_1605",
      "source_id": "doc_1362",
      "target_id": "concept_1507",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.2637901
    },
    "rel_1606": {
      "id": "rel_1606",
      "source_id": "doc_1362",
      "target_id": "concept_1508",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.264065
    },
    "rel_1607": {
      "id": "rel_1607",
      "source_id": "doc_1362",
      "target_id": "concept_1509",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.264457
    },
    "rel_1608": {
      "id": "rel_1608",
      "source_id": "doc_1362",
      "target_id": "concept_1510",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.264728
    },
    "rel_1609": {
      "id": "rel_1609",
      "source_id": "doc_1362",
      "target_id": "concept_1511",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.265086
    },
    "rel_1610": {
      "id": "rel_1610",
      "source_id": "doc_1362",
      "target_id": "concept_1512",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.265364
    },
    "rel_1611": {
      "id": "rel_1611",
      "source_id": "doc_1362",
      "target_id": "concept_1513",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.265669
    },
    "rel_1612": {
      "id": "rel_1612",
      "source_id": "doc_1362",
      "target_id": "concept_171",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.265717
    },
    "rel_1613": {
      "id": "rel_1613",
      "source_id": "doc_1362",
      "target_id": "concept_1514",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.2702122
    },
    "rel_1614": {
      "id": "rel_1614",
      "source_id": "doc_1362",
      "target_id": "concept_1515",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.270538
    },
    "rel_1615": {
      "id": "rel_1615",
      "source_id": "doc_1362",
      "target_id": "concept_1516",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.270955
    },
    "rel_1616": {
      "id": "rel_1616",
      "source_id": "doc_1362",
      "target_id": "concept_270",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.271016
    },
    "rel_1617": {
      "id": "rel_1617",
      "source_id": "doc_1362",
      "target_id": "concept_1517",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.271282
    },
    "rel_1618": {
      "id": "rel_1618",
      "source_id": "doc_1362",
      "target_id": "concept_1518",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.2715452
    },
    "rel_1619": {
      "id": "rel_1619",
      "source_id": "doc_1362",
      "target_id": "concept_590",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.271672
    },
    "rel_1620": {
      "id": "rel_1620",
      "source_id": "doc_1362",
      "target_id": "concept_1519",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.2719831
    },
    "rel_1621": {
      "id": "rel_1621",
      "source_id": "doc_1362",
      "target_id": "concept_1520",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.272249
    },
    "rel_1622": {
      "id": "rel_1622",
      "source_id": "doc_1362",
      "target_id": "concept_1521",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.272583
    },
    "rel_1623": {
      "id": "rel_1623",
      "source_id": "doc_1362",
      "target_id": "concept_1522",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.27298
    },
    "rel_1624": {
      "id": "rel_1624",
      "source_id": "doc_1362",
      "target_id": "concept_1523",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.273458
    },
    "rel_1625": {
      "id": "rel_1625",
      "source_id": "doc_1362",
      "target_id": "concept_1524",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.2737331
    },
    "rel_1626": {
      "id": "rel_1626",
      "source_id": "doc_1362",
      "target_id": "concept_1525",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.274019
    },
    "rel_1627": {
      "id": "rel_1627",
      "source_id": "doc_1362",
      "target_id": "concept_1526",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.27432
    },
    "rel_1628": {
      "id": "rel_1628",
      "source_id": "doc_1362",
      "target_id": "concept_1527",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.2746198
    },
    "rel_1629": {
      "id": "rel_1629",
      "source_id": "doc_1362",
      "target_id": "concept_1528",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.274902
    },
    "rel_1630": {
      "id": "rel_1630",
      "source_id": "doc_1362",
      "target_id": "concept_1529",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.2755232
    },
    "rel_1631": {
      "id": "rel_1631",
      "source_id": "doc_1362",
      "target_id": "concept_1530",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.275807
    },
    "rel_1632": {
      "id": "rel_1632",
      "source_id": "doc_1362",
      "target_id": "concept_1531",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.276072
    },
    "rel_1633": {
      "id": "rel_1633",
      "source_id": "doc_1362",
      "target_id": "concept_181",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.276124
    },
    "rel_1634": {
      "id": "rel_1634",
      "source_id": "doc_1362",
      "target_id": "concept_1532",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.2764192
    },
    "rel_1635": {
      "id": "rel_1635",
      "source_id": "doc_1362",
      "target_id": "concept_1533",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.276721
    },
    "rel_1636": {
      "id": "rel_1636",
      "source_id": "doc_1362",
      "target_id": "concept_1534",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.277017
    },
    "rel_1637": {
      "id": "rel_1637",
      "source_id": "doc_1362",
      "target_id": "concept_1535",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.2772942
    },
    "rel_1638": {
      "id": "rel_1638",
      "source_id": "doc_1362",
      "target_id": "concept_1536",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.277576
    },
    "rel_1639": {
      "id": "rel_1639",
      "source_id": "doc_1362",
      "target_id": "concept_1537",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.277969
    },
    "rel_1640": {
      "id": "rel_1640",
      "source_id": "doc_1362",
      "target_id": "concept_1538",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.2782521
    },
    "rel_1641": {
      "id": "rel_1641",
      "source_id": "doc_1362",
      "target_id": "concept_1539",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.278532
    },
    "rel_1642": {
      "id": "rel_1642",
      "source_id": "doc_1362",
      "target_id": "concept_1540",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.278827
    },
    "rel_1643": {
      "id": "rel_1643",
      "source_id": "doc_1362",
      "target_id": "concept_1541",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.2791119
    },
    "rel_1644": {
      "id": "rel_1644",
      "source_id": "doc_1362",
      "target_id": "concept_1542",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.2793841
    },
    "rel_1645": {
      "id": "rel_1645",
      "source_id": "doc_1362",
      "target_id": "concept_1543",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.279649
    },
    "rel_1646": {
      "id": "rel_1646",
      "source_id": "doc_1362",
      "target_id": "concept_186",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.279706
    },
    "rel_1647": {
      "id": "rel_1647",
      "source_id": "doc_1362",
      "target_id": "concept_1544",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.2799711
    },
    "rel_1648": {
      "id": "rel_1648",
      "source_id": "doc_1362",
      "target_id": "concept_1545",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.280281
    },
    "rel_1649": {
      "id": "rel_1649",
      "source_id": "doc_1362",
      "target_id": "concept_1546",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.280569
    },
    "rel_1650": {
      "id": "rel_1650",
      "source_id": "doc_1362",
      "target_id": "concept_1547",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.280857
    },
    "rel_1651": {
      "id": "rel_1651",
      "source_id": "doc_1362",
      "target_id": "concept_1548",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.2811651
    },
    "rel_1652": {
      "id": "rel_1652",
      "source_id": "doc_1362",
      "target_id": "concept_1549",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.281507
    },
    "rel_1653": {
      "id": "rel_1653",
      "source_id": "doc_1362",
      "target_id": "concept_1550",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.281852
    },
    "rel_1654": {
      "id": "rel_1654",
      "source_id": "doc_1362",
      "target_id": "concept_1551",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.2821388
    },
    "rel_1655": {
      "id": "rel_1655",
      "source_id": "doc_1362",
      "target_id": "concept_1552",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.282462
    },
    "rel_1656": {
      "id": "rel_1656",
      "source_id": "doc_1362",
      "target_id": "concept_1553",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.282772
    },
    "rel_1657": {
      "id": "rel_1657",
      "source_id": "doc_1362",
      "target_id": "concept_190",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.28283
    },
    "rel_1658": {
      "id": "rel_1658",
      "source_id": "doc_1362",
      "target_id": "concept_1554",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.283108
    },
    "rel_1659": {
      "id": "rel_1659",
      "source_id": "doc_1362",
      "target_id": "concept_284",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.283167
    },
    "rel_1660": {
      "id": "rel_1660",
      "source_id": "doc_1362",
      "target_id": "concept_1555",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.283624
    },
    "rel_1661": {
      "id": "rel_1661",
      "source_id": "doc_1362",
      "target_id": "concept_1556",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.283927
    },
    "rel_1662": {
      "id": "rel_1662",
      "source_id": "doc_1362",
      "target_id": "concept_1557",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.2842271
    },
    "rel_1663": {
      "id": "rel_1663",
      "source_id": "doc_1362",
      "target_id": "concept_192",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.28428
    },
    "rel_1664": {
      "id": "rel_1664",
      "source_id": "doc_1362",
      "target_id": "concept_1558",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.284547
    },
    "rel_1665": {
      "id": "rel_1665",
      "source_id": "doc_1362",
      "target_id": "concept_1559",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.284833
    },
    "rel_1666": {
      "id": "rel_1666",
      "source_id": "doc_1362",
      "target_id": "concept_1560",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.285098
    },
    "rel_1667": {
      "id": "rel_1667",
      "source_id": "doc_1362",
      "target_id": "concept_1561",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.285372
    },
    "rel_1668": {
      "id": "rel_1668",
      "source_id": "doc_1362",
      "target_id": "concept_1562",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.285664
    },
    "rel_1669": {
      "id": "rel_1669",
      "source_id": "doc_1362",
      "target_id": "concept_1563",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.2859468
    },
    "rel_1670": {
      "id": "rel_1670",
      "source_id": "doc_1362",
      "target_id": "concept_1564",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.286247
    },
    "rel_1671": {
      "id": "rel_1671",
      "source_id": "doc_1362",
      "target_id": "concept_1565",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.286538
    },
    "rel_1672": {
      "id": "rel_1672",
      "source_id": "doc_1362",
      "target_id": "concept_1566",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.286825
    },
    "rel_1673": {
      "id": "rel_1673",
      "source_id": "doc_1362",
      "target_id": "concept_1567",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.287104
    },
    "rel_1674": {
      "id": "rel_1674",
      "source_id": "doc_1362",
      "target_id": "concept_1568",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.28737
    },
    "rel_1675": {
      "id": "rel_1675",
      "source_id": "doc_1362",
      "target_id": "concept_1569",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.287648
    },
    "rel_1676": {
      "id": "rel_1676",
      "source_id": "doc_1362",
      "target_id": "concept_1570",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.287915
    },
    "rel_1677": {
      "id": "rel_1677",
      "source_id": "doc_1362",
      "target_id": "concept_1571",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.2881842
    },
    "rel_1678": {
      "id": "rel_1678",
      "source_id": "doc_1362",
      "target_id": "concept_1572",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.288476
    },
    "rel_1679": {
      "id": "rel_1679",
      "source_id": "doc_1362",
      "target_id": "concept_1573",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.2887669
    },
    "rel_1680": {
      "id": "rel_1680",
      "source_id": "doc_1362",
      "target_id": "concept_1574",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.289066
    },
    "rel_1681": {
      "id": "rel_1681",
      "source_id": "doc_1362",
      "target_id": "concept_1575",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.2893262
    },
    "rel_1682": {
      "id": "rel_1682",
      "source_id": "doc_1362",
      "target_id": "concept_1576",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.289682
    },
    "rel_1683": {
      "id": "rel_1683",
      "source_id": "doc_1362",
      "target_id": "concept_1577",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.290005
    },
    "rel_1684": {
      "id": "rel_1684",
      "source_id": "doc_1362",
      "target_id": "concept_289",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.29007
    },
    "rel_1685": {
      "id": "rel_1685",
      "source_id": "doc_1362",
      "target_id": "concept_201",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.290126
    },
    "rel_1686": {
      "id": "rel_1686",
      "source_id": "doc_1362",
      "target_id": "concept_1578",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.29041
    },
    "rel_1687": {
      "id": "rel_1687",
      "source_id": "doc_1362",
      "target_id": "concept_1579",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.290723
    },
    "rel_1688": {
      "id": "rel_1688",
      "source_id": "doc_1362",
      "target_id": "concept_1580",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.291024
    },
    "rel_1689": {
      "id": "rel_1689",
      "source_id": "doc_1362",
      "target_id": "concept_1581",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.29133
    },
    "rel_1690": {
      "id": "rel_1690",
      "source_id": "doc_1362",
      "target_id": "concept_1582",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.29167
    },
    "rel_1691": {
      "id": "rel_1691",
      "source_id": "doc_1362",
      "target_id": "concept_204",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.291724
    },
    "rel_1692": {
      "id": "rel_1692",
      "source_id": "doc_1362",
      "target_id": "concept_1583",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.292028
    },
    "rel_1693": {
      "id": "rel_1693",
      "source_id": "doc_1362",
      "target_id": "concept_1584",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.292553
    },
    "rel_1694": {
      "id": "rel_1694",
      "source_id": "doc_1362",
      "target_id": "concept_1585",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.292854
    },
    "rel_1695": {
      "id": "rel_1695",
      "source_id": "doc_1362",
      "target_id": "concept_1586",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.293155
    },
    "rel_1696": {
      "id": "rel_1696",
      "source_id": "doc_1362",
      "target_id": "concept_1587",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.29344
    },
    "rel_1697": {
      "id": "rel_1697",
      "source_id": "doc_1362",
      "target_id": "concept_1588",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.293749
    },
    "rel_1698": {
      "id": "rel_1698",
      "source_id": "doc_1362",
      "target_id": "concept_1589",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.294049
    },
    "rel_1699": {
      "id": "rel_1699",
      "source_id": "doc_1362",
      "target_id": "concept_1590",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.2943602
    },
    "rel_1700": {
      "id": "rel_1700",
      "source_id": "doc_1362",
      "target_id": "concept_1591",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.294678
    },
    "rel_1701": {
      "id": "rel_1701",
      "source_id": "doc_1362",
      "target_id": "concept_1592",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.295109
    },
    "rel_1702": {
      "id": "rel_1702",
      "source_id": "doc_1362",
      "target_id": "concept_1593",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.2954051
    },
    "rel_1703": {
      "id": "rel_1703",
      "source_id": "doc_1362",
      "target_id": "concept_1594",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.295723
    },
    "rel_1704": {
      "id": "rel_1704",
      "source_id": "doc_1362",
      "target_id": "concept_1595",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.296046
    },
    "rel_1705": {
      "id": "rel_1705",
      "source_id": "doc_1362",
      "target_id": "concept_210",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.2961001
    },
    "rel_1706": {
      "id": "rel_1706",
      "source_id": "doc_1362",
      "target_id": "concept_211",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.296154
    },
    "rel_1707": {
      "id": "rel_1707",
      "source_id": "doc_1362",
      "target_id": "concept_1596",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.2965891
    },
    "rel_1708": {
      "id": "rel_1708",
      "source_id": "doc_1362",
      "target_id": "concept_1597",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.296882
    },
    "rel_1709": {
      "id": "rel_1709",
      "source_id": "doc_1362",
      "target_id": "concept_212",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.296939
    },
    "rel_1710": {
      "id": "rel_1710",
      "source_id": "doc_1362",
      "target_id": "concept_1598",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.2972128
    },
    "rel_1711": {
      "id": "rel_1711",
      "source_id": "doc_1362",
      "target_id": "concept_1599",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.297506
    },
    "rel_1712": {
      "id": "rel_1712",
      "source_id": "doc_1362",
      "target_id": "concept_1600",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.297771
    },
    "rel_1713": {
      "id": "rel_1713",
      "source_id": "doc_1362",
      "target_id": "concept_1601",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.29806
    },
    "rel_1714": {
      "id": "rel_1714",
      "source_id": "doc_1362",
      "target_id": "concept_1602",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.298354
    },
    "rel_1715": {
      "id": "rel_1715",
      "source_id": "doc_1362",
      "target_id": "concept_1603",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.29868
    },
    "rel_1716": {
      "id": "rel_1716",
      "source_id": "doc_1362",
      "target_id": "concept_1604",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.2989829
    },
    "rel_1717": {
      "id": "rel_1717",
      "source_id": "doc_1362",
      "target_id": "concept_217",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.299041
    },
    "rel_1718": {
      "id": "rel_1718",
      "source_id": "doc_1362",
      "target_id": "concept_1605",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.2993221
    },
    "rel_1719": {
      "id": "rel_1719",
      "source_id": "doc_1362",
      "target_id": "concept_1606",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.299602
    },
    "rel_1720": {
      "id": "rel_1720",
      "source_id": "doc_1362",
      "target_id": "concept_1607",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.299901
    },
    "rel_1721": {
      "id": "rel_1721",
      "source_id": "doc_1362",
      "target_id": "concept_1608",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.300323
    },
    "rel_1722": {
      "id": "rel_1722",
      "source_id": "doc_1362",
      "target_id": "concept_1609",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.300608
    },
    "rel_1723": {
      "id": "rel_1723",
      "source_id": "doc_1362",
      "target_id": "concept_1610",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.301054
    },
    "rel_1724": {
      "id": "rel_1724",
      "source_id": "doc_1362",
      "target_id": "concept_1611",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.3013592
    },
    "rel_1725": {
      "id": "rel_1725",
      "source_id": "doc_1362",
      "target_id": "concept_303",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.301425
    },
    "rel_1726": {
      "id": "rel_1726",
      "source_id": "doc_1362",
      "target_id": "concept_1612",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.301713
    },
    "rel_1727": {
      "id": "rel_1727",
      "source_id": "doc_1362",
      "target_id": "concept_1613",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.301982
    },
    "rel_1728": {
      "id": "rel_1728",
      "source_id": "doc_1614",
      "target_id": "concept_1615",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.306359
    },
    "rel_1729": {
      "id": "rel_1729",
      "source_id": "doc_1614",
      "target_id": "concept_1616",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.306676
    },
    "rel_1730": {
      "id": "rel_1730",
      "source_id": "doc_1614",
      "target_id": "concept_1617",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.306963
    },
    "rel_1731": {
      "id": "rel_1731",
      "source_id": "doc_1614",
      "target_id": "concept_1618",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.3072681
    },
    "rel_1732": {
      "id": "rel_1732",
      "source_id": "doc_1614",
      "target_id": "concept_1619",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.307571
    },
    "rel_1733": {
      "id": "rel_1733",
      "source_id": "doc_1614",
      "target_id": "concept_1620",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.307853
    },
    "rel_1734": {
      "id": "rel_1734",
      "source_id": "doc_1614",
      "target_id": "concept_1621",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.3082392
    },
    "rel_1735": {
      "id": "rel_1735",
      "source_id": "doc_1614",
      "target_id": "concept_1622",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.308532
    },
    "rel_1736": {
      "id": "rel_1736",
      "source_id": "doc_1614",
      "target_id": "concept_1623",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.308844
    },
    "rel_1737": {
      "id": "rel_1737",
      "source_id": "doc_1614",
      "target_id": "concept_1624",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.309147
    },
    "rel_1738": {
      "id": "rel_1738",
      "source_id": "doc_1614",
      "target_id": "concept_1625",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.3094459
    },
    "rel_1739": {
      "id": "rel_1739",
      "source_id": "doc_1614",
      "target_id": "concept_1626",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.3100932
    },
    "rel_1740": {
      "id": "rel_1740",
      "source_id": "doc_1614",
      "target_id": "concept_1627",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.3107011
    },
    "rel_1741": {
      "id": "rel_1741",
      "source_id": "doc_1614",
      "target_id": "concept_1628",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.311004
    },
    "rel_1742": {
      "id": "rel_1742",
      "source_id": "doc_1614",
      "target_id": "concept_1629",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.3113332
    },
    "rel_1743": {
      "id": "rel_1743",
      "source_id": "doc_1614",
      "target_id": "concept_1630",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.311648
    },
    "rel_1744": {
      "id": "rel_1744",
      "source_id": "doc_1614",
      "target_id": "concept_1631",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.3122041
    },
    "rel_1745": {
      "id": "rel_1745",
      "source_id": "doc_1614",
      "target_id": "concept_1632",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.312587
    },
    "rel_1746": {
      "id": "rel_1746",
      "source_id": "doc_1614",
      "target_id": "concept_1633",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.312923
    },
    "rel_1747": {
      "id": "rel_1747",
      "source_id": "doc_1614",
      "target_id": "concept_1634",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.313229
    },
    "rel_1748": {
      "id": "rel_1748",
      "source_id": "doc_1614",
      "target_id": "concept_1635",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.3137112
    },
    "rel_1749": {
      "id": "rel_1749",
      "source_id": "doc_1614",
      "target_id": "concept_1636",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.314154
    },
    "rel_1750": {
      "id": "rel_1750",
      "source_id": "doc_1614",
      "target_id": "concept_1637",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.314492
    },
    "rel_1751": {
      "id": "rel_1751",
      "source_id": "doc_1614",
      "target_id": "concept_1638",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.3148851
    },
    "rel_1752": {
      "id": "rel_1752",
      "source_id": "doc_1614",
      "target_id": "concept_1639",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.3152351
    },
    "rel_1753": {
      "id": "rel_1753",
      "source_id": "doc_1614",
      "target_id": "concept_1640",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.315537
    },
    "rel_1754": {
      "id": "rel_1754",
      "source_id": "doc_1614",
      "target_id": "concept_1641",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.3158689
    },
    "rel_1755": {
      "id": "rel_1755",
      "source_id": "doc_1614",
      "target_id": "concept_1642",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.316565
    },
    "rel_1756": {
      "id": "rel_1756",
      "source_id": "doc_1614",
      "target_id": "concept_1643",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.3169239
    },
    "rel_1757": {
      "id": "rel_1757",
      "source_id": "doc_1614",
      "target_id": "concept_1644",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.317239
    },
    "rel_1758": {
      "id": "rel_1758",
      "source_id": "doc_1614",
      "target_id": "concept_1645",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.317566
    },
    "rel_1759": {
      "id": "rel_1759",
      "source_id": "doc_1614",
      "target_id": "concept_1646",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.317877
    },
    "rel_1760": {
      "id": "rel_1760",
      "source_id": "doc_1614",
      "target_id": "concept_1647",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.3181922
    },
    "rel_1761": {
      "id": "rel_1761",
      "source_id": "doc_1614",
      "target_id": "concept_1648",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.318493
    },
    "rel_1762": {
      "id": "rel_1762",
      "source_id": "doc_1614",
      "target_id": "concept_1649",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.31882
    },
    "rel_1763": {
      "id": "rel_1763",
      "source_id": "doc_1614",
      "target_id": "concept_1650",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.3192608
    },
    "rel_1764": {
      "id": "rel_1764",
      "source_id": "doc_1614",
      "target_id": "concept_1651",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.319585
    },
    "rel_1765": {
      "id": "rel_1765",
      "source_id": "doc_1614",
      "target_id": "concept_1652",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.320099
    },
    "rel_1766": {
      "id": "rel_1766",
      "source_id": "doc_1614",
      "target_id": "concept_1653",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.320414
    },
    "rel_1767": {
      "id": "rel_1767",
      "source_id": "doc_1614",
      "target_id": "concept_1654",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.320747
    },
    "rel_1768": {
      "id": "rel_1768",
      "source_id": "doc_1614",
      "target_id": "concept_718",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.320907
    },
    "rel_1769": {
      "id": "rel_1769",
      "source_id": "doc_1614",
      "target_id": "concept_1655",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.3212092
    },
    "rel_1770": {
      "id": "rel_1770",
      "source_id": "doc_1614",
      "target_id": "concept_1656",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.321513
    },
    "rel_1771": {
      "id": "rel_1771",
      "source_id": "doc_1614",
      "target_id": "concept_1657",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.321923
    },
    "rel_1772": {
      "id": "rel_1772",
      "source_id": "doc_1614",
      "target_id": "concept_727",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.322081
    },
    "rel_1773": {
      "id": "rel_1773",
      "source_id": "doc_1614",
      "target_id": "concept_1658",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.322379
    },
    "rel_1774": {
      "id": "rel_1774",
      "source_id": "doc_1614",
      "target_id": "concept_1659",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.322731
    },
    "rel_1775": {
      "id": "rel_1775",
      "source_id": "doc_1614",
      "target_id": "concept_1660",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.323071
    },
    "rel_1776": {
      "id": "rel_1776",
      "source_id": "doc_1614",
      "target_id": "concept_1661",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.323484
    },
    "rel_1777": {
      "id": "rel_1777",
      "source_id": "doc_1614",
      "target_id": "concept_1662",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.323794
    },
    "rel_1778": {
      "id": "rel_1778",
      "source_id": "doc_1614",
      "target_id": "concept_1663",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.3241758
    },
    "rel_1779": {
      "id": "rel_1779",
      "source_id": "doc_1614",
      "target_id": "concept_1664",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.324816
    },
    "rel_1780": {
      "id": "rel_1780",
      "source_id": "doc_1614",
      "target_id": "concept_1665",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.3251278
    },
    "rel_1781": {
      "id": "rel_1781",
      "source_id": "doc_1614",
      "target_id": "concept_1666",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.325452
    },
    "rel_1782": {
      "id": "rel_1782",
      "source_id": "doc_1614",
      "target_id": "concept_1667",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.3257642
    },
    "rel_1783": {
      "id": "rel_1783",
      "source_id": "doc_1614",
      "target_id": "concept_1668",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.3260732
    },
    "rel_1784": {
      "id": "rel_1784",
      "source_id": "doc_1614",
      "target_id": "concept_1669",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.32641
    },
    "rel_1785": {
      "id": "rel_1785",
      "source_id": "doc_1614",
      "target_id": "concept_1670",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.326752
    },
    "rel_1786": {
      "id": "rel_1786",
      "source_id": "doc_1614",
      "target_id": "concept_1671",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.327038
    },
    "rel_1787": {
      "id": "rel_1787",
      "source_id": "doc_1614",
      "target_id": "concept_1672",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.3275259
    },
    "rel_1788": {
      "id": "rel_1788",
      "source_id": "doc_1614",
      "target_id": "concept_1673",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.328133
    },
    "rel_1789": {
      "id": "rel_1789",
      "source_id": "doc_1614",
      "target_id": "concept_1674",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.32885
    },
    "rel_1790": {
      "id": "rel_1790",
      "source_id": "doc_1614",
      "target_id": "concept_1675",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.329153
    },
    "rel_1791": {
      "id": "rel_1791",
      "source_id": "doc_1614",
      "target_id": "concept_1676",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.3294451
    },
    "rel_1792": {
      "id": "rel_1792",
      "source_id": "doc_1614",
      "target_id": "concept_1677",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.329756
    },
    "rel_1793": {
      "id": "rel_1793",
      "source_id": "doc_1614",
      "target_id": "concept_1678",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.3301811
    },
    "rel_1794": {
      "id": "rel_1794",
      "source_id": "doc_1614",
      "target_id": "concept_1679",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.33048
    },
    "rel_1795": {
      "id": "rel_1795",
      "source_id": "doc_1614",
      "target_id": "concept_1680",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.330785
    },
    "rel_1796": {
      "id": "rel_1796",
      "source_id": "doc_1614",
      "target_id": "concept_1681",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.331069
    },
    "rel_1797": {
      "id": "rel_1797",
      "source_id": "doc_1614",
      "target_id": "concept_1682",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.331448
    },
    "rel_1798": {
      "id": "rel_1798",
      "source_id": "doc_1614",
      "target_id": "concept_1683",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.331786
    },
    "rel_1799": {
      "id": "rel_1799",
      "source_id": "doc_1614",
      "target_id": "concept_1684",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.332103
    },
    "rel_1800": {
      "id": "rel_1800",
      "source_id": "doc_1614",
      "target_id": "concept_1685",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.332417
    },
    "rel_1801": {
      "id": "rel_1801",
      "source_id": "doc_1614",
      "target_id": "concept_1686",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.332798
    },
    "rel_1802": {
      "id": "rel_1802",
      "source_id": "doc_1614",
      "target_id": "concept_1687",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.333146
    },
    "rel_1803": {
      "id": "rel_1803",
      "source_id": "doc_1614",
      "target_id": "concept_1688",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.333687
    },
    "rel_1804": {
      "id": "rel_1804",
      "source_id": "doc_1614",
      "target_id": "concept_1689",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.334053
    },
    "rel_1805": {
      "id": "rel_1805",
      "source_id": "doc_1614",
      "target_id": "concept_1690",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.334372
    },
    "rel_1806": {
      "id": "rel_1806",
      "source_id": "doc_1614",
      "target_id": "concept_1691",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.3346822
    },
    "rel_1807": {
      "id": "rel_1807",
      "source_id": "doc_1614",
      "target_id": "concept_1692",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.3349938
    },
    "rel_1808": {
      "id": "rel_1808",
      "source_id": "doc_1614",
      "target_id": "concept_1693",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.3352919
    },
    "rel_1809": {
      "id": "rel_1809",
      "source_id": "doc_1614",
      "target_id": "concept_1694",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.3356018
    },
    "rel_1810": {
      "id": "rel_1810",
      "source_id": "doc_1614",
      "target_id": "concept_1695",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.336193
    },
    "rel_1811": {
      "id": "rel_1811",
      "source_id": "doc_1614",
      "target_id": "concept_1696",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.336504
    },
    "rel_1812": {
      "id": "rel_1812",
      "source_id": "doc_1614",
      "target_id": "concept_1697",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.336811
    },
    "rel_1813": {
      "id": "rel_1813",
      "source_id": "doc_1614",
      "target_id": "concept_1698",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.337128
    },
    "rel_1814": {
      "id": "rel_1814",
      "source_id": "doc_1614",
      "target_id": "concept_1699",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.3374531
    },
    "rel_1815": {
      "id": "rel_1815",
      "source_id": "doc_1614",
      "target_id": "concept_1700",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.337777
    },
    "rel_1816": {
      "id": "rel_1816",
      "source_id": "doc_1614",
      "target_id": "concept_1701",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.3380601
    },
    "rel_1817": {
      "id": "rel_1817",
      "source_id": "doc_1614",
      "target_id": "concept_1702",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.33838
    },
    "rel_1818": {
      "id": "rel_1818",
      "source_id": "doc_1614",
      "target_id": "concept_762",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.338618
    },
    "rel_1819": {
      "id": "rel_1819",
      "source_id": "doc_1614",
      "target_id": "concept_1703",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.339123
    },
    "rel_1820": {
      "id": "rel_1820",
      "source_id": "doc_1614",
      "target_id": "concept_1704",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.339564
    },
    "rel_1821": {
      "id": "rel_1821",
      "source_id": "doc_1614",
      "target_id": "concept_1705",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.340109
    },
    "rel_1822": {
      "id": "rel_1822",
      "source_id": "doc_1614",
      "target_id": "concept_1706",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.34049
    },
    "rel_1823": {
      "id": "rel_1823",
      "source_id": "doc_1614",
      "target_id": "concept_1707",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.34092
    },
    "rel_1824": {
      "id": "rel_1824",
      "source_id": "doc_1614",
      "target_id": "concept_1708",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.341316
    },
    "rel_1825": {
      "id": "rel_1825",
      "source_id": "doc_1614",
      "target_id": "concept_1709",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.342004
    },
    "rel_1826": {
      "id": "rel_1826",
      "source_id": "doc_1614",
      "target_id": "concept_1710",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.3424299
    },
    "rel_1827": {
      "id": "rel_1827",
      "source_id": "doc_1614",
      "target_id": "concept_1711",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.342742
    },
    "rel_1828": {
      "id": "rel_1828",
      "source_id": "doc_1614",
      "target_id": "concept_1712",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.3431659
    },
    "rel_1829": {
      "id": "rel_1829",
      "source_id": "doc_1614",
      "target_id": "concept_1576",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.3435469
    },
    "rel_1830": {
      "id": "rel_1830",
      "source_id": "doc_1614",
      "target_id": "concept_1713",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.343861
    },
    "rel_1831": {
      "id": "rel_1831",
      "source_id": "doc_1614",
      "target_id": "concept_1714",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.344297
    },
    "rel_1832": {
      "id": "rel_1832",
      "source_id": "doc_1614",
      "target_id": "concept_1715",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.344598
    },
    "rel_1833": {
      "id": "rel_1833",
      "source_id": "doc_1614",
      "target_id": "concept_1716",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.344898
    },
    "rel_1834": {
      "id": "rel_1834",
      "source_id": "doc_1614",
      "target_id": "concept_1717",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.345193
    },
    "rel_1835": {
      "id": "rel_1835",
      "source_id": "doc_1614",
      "target_id": "concept_1718",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.345501
    },
    "rel_1836": {
      "id": "rel_1836",
      "source_id": "doc_1614",
      "target_id": "concept_1719",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.345802
    },
    "rel_1837": {
      "id": "rel_1837",
      "source_id": "doc_1614",
      "target_id": "concept_1720",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.3460858
    },
    "rel_1838": {
      "id": "rel_1838",
      "source_id": "doc_1614",
      "target_id": "concept_1721",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.3463721
    },
    "rel_1839": {
      "id": "rel_1839",
      "source_id": "doc_1614",
      "target_id": "concept_780",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.3465312
    },
    "rel_1840": {
      "id": "rel_1840",
      "source_id": "doc_1614",
      "target_id": "concept_1722",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.3468108
    },
    "rel_1841": {
      "id": "rel_1841",
      "source_id": "doc_1614",
      "target_id": "concept_1723",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.3472488
    },
    "rel_1842": {
      "id": "rel_1842",
      "source_id": "doc_1614",
      "target_id": "concept_1724",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.34768
    },
    "rel_1843": {
      "id": "rel_1843",
      "source_id": "doc_1614",
      "target_id": "concept_1725",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.34799
    },
    "rel_1844": {
      "id": "rel_1844",
      "source_id": "doc_1614",
      "target_id": "concept_1726",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.3483148
    },
    "rel_1845": {
      "id": "rel_1845",
      "source_id": "doc_1614",
      "target_id": "concept_1727",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.3487449
    },
    "rel_1846": {
      "id": "rel_1846",
      "source_id": "doc_1614",
      "target_id": "concept_1728",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.349055
    },
    "rel_1847": {
      "id": "rel_1847",
      "source_id": "doc_1614",
      "target_id": "concept_1729",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.3493571
    },
    "rel_1848": {
      "id": "rel_1848",
      "source_id": "doc_1614",
      "target_id": "concept_1730",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.349668
    },
    "rel_1849": {
      "id": "rel_1849",
      "source_id": "doc_1614",
      "target_id": "concept_1731",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.350076
    },
    "rel_1850": {
      "id": "rel_1850",
      "source_id": "doc_1614",
      "target_id": "concept_1732",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.350574
    },
    "rel_1851": {
      "id": "rel_1851",
      "source_id": "doc_1614",
      "target_id": "concept_1733",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.3509061
    },
    "rel_1852": {
      "id": "rel_1852",
      "source_id": "doc_1614",
      "target_id": "concept_1734",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.351501
    },
    "rel_1853": {
      "id": "rel_1853",
      "source_id": "doc_1614",
      "target_id": "concept_1735",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.3518121
    },
    "rel_1854": {
      "id": "rel_1854",
      "source_id": "doc_1614",
      "target_id": "concept_1736",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.352126
    },
    "rel_1855": {
      "id": "rel_1855",
      "source_id": "doc_1614",
      "target_id": "concept_1737",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.352412
    },
    "rel_1856": {
      "id": "rel_1856",
      "source_id": "doc_1614",
      "target_id": "concept_1738",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.352858
    },
    "rel_1857": {
      "id": "rel_1857",
      "source_id": "doc_1614",
      "target_id": "concept_1739",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.353288
    },
    "rel_1858": {
      "id": "rel_1858",
      "source_id": "doc_1614",
      "target_id": "concept_1740",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.3536708
    },
    "rel_1859": {
      "id": "rel_1859",
      "source_id": "doc_1614",
      "target_id": "concept_1741",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.3539908
    },
    "rel_1860": {
      "id": "rel_1860",
      "source_id": "doc_1614",
      "target_id": "concept_1742",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.3543098
    },
    "rel_1861": {
      "id": "rel_1861",
      "source_id": "doc_1614",
      "target_id": "concept_1743",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.354613
    },
    "rel_1862": {
      "id": "rel_1862",
      "source_id": "doc_1614",
      "target_id": "concept_1744",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.354919
    },
    "rel_1863": {
      "id": "rel_1863",
      "source_id": "doc_1614",
      "target_id": "concept_1745",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.3552058
    },
    "rel_1864": {
      "id": "rel_1864",
      "source_id": "doc_1614",
      "target_id": "concept_1746",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.35551
    },
    "rel_1865": {
      "id": "rel_1865",
      "source_id": "doc_1614",
      "target_id": "concept_1747",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.3558211
    },
    "rel_1866": {
      "id": "rel_1866",
      "source_id": "doc_1614",
      "target_id": "concept_1748",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.356252
    },
    "rel_1867": {
      "id": "rel_1867",
      "source_id": "doc_1614",
      "target_id": "concept_1749",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.3566568
    },
    "rel_1868": {
      "id": "rel_1868",
      "source_id": "doc_1614",
      "target_id": "concept_1750",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.356999
    },
    "rel_1869": {
      "id": "rel_1869",
      "source_id": "doc_1614",
      "target_id": "concept_1751",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.357322
    },
    "rel_1870": {
      "id": "rel_1870",
      "source_id": "doc_1614",
      "target_id": "concept_1752",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.357614
    },
    "rel_1871": {
      "id": "rel_1871",
      "source_id": "doc_1614",
      "target_id": "concept_1753",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.3579378
    },
    "rel_1872": {
      "id": "rel_1872",
      "source_id": "doc_1614",
      "target_id": "concept_1754",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.358235
    },
    "rel_1873": {
      "id": "rel_1873",
      "source_id": "doc_1614",
      "target_id": "concept_1755",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.358558
    },
    "rel_1874": {
      "id": "rel_1874",
      "source_id": "doc_1614",
      "target_id": "concept_1756",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.358851
    },
    "rel_1875": {
      "id": "rel_1875",
      "source_id": "doc_1614",
      "target_id": "concept_1757",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.3591769
    },
    "rel_1876": {
      "id": "rel_1876",
      "source_id": "doc_1614",
      "target_id": "concept_1758",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.3594902
    },
    "rel_1877": {
      "id": "rel_1877",
      "source_id": "doc_1614",
      "target_id": "concept_1759",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.359801
    },
    "rel_1878": {
      "id": "rel_1878",
      "source_id": "doc_1614",
      "target_id": "concept_812",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.359963
    },
    "rel_1879": {
      "id": "rel_1879",
      "source_id": "doc_1614",
      "target_id": "concept_1760",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.360256
    },
    "rel_1880": {
      "id": "rel_1880",
      "source_id": "doc_1614",
      "target_id": "concept_1761",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.3605719
    },
    "rel_1881": {
      "id": "rel_1881",
      "source_id": "doc_1614",
      "target_id": "concept_1762",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.3678248
    },
    "rel_1882": {
      "id": "rel_1882",
      "source_id": "doc_1614",
      "target_id": "concept_1763",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.368298
    },
    "rel_1883": {
      "id": "rel_1883",
      "source_id": "doc_1614",
      "target_id": "concept_1764",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.36863
    },
    "rel_1884": {
      "id": "rel_1884",
      "source_id": "doc_1614",
      "target_id": "concept_1765",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.368948
    },
    "rel_1885": {
      "id": "rel_1885",
      "source_id": "doc_1614",
      "target_id": "concept_1766",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.369398
    },
    "rel_1886": {
      "id": "rel_1886",
      "source_id": "doc_1614",
      "target_id": "concept_1767",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.3697128
    },
    "rel_1887": {
      "id": "rel_1887",
      "source_id": "doc_1614",
      "target_id": "concept_1768",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.370024
    },
    "rel_1888": {
      "id": "rel_1888",
      "source_id": "doc_1614",
      "target_id": "concept_1769",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.370517
    },
    "rel_1889": {
      "id": "rel_1889",
      "source_id": "doc_1614",
      "target_id": "concept_1770",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.370823
    },
    "rel_1890": {
      "id": "rel_1890",
      "source_id": "doc_1614",
      "target_id": "concept_1771",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.3792572
    },
    "rel_1891": {
      "id": "rel_1891",
      "source_id": "doc_1614",
      "target_id": "concept_1772",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.379617
    },
    "rel_1892": {
      "id": "rel_1892",
      "source_id": "doc_1614",
      "target_id": "concept_1773",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.38005
    },
    "rel_1893": {
      "id": "rel_1893",
      "source_id": "doc_1614",
      "target_id": "concept_1774",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.3803918
    },
    "rel_1894": {
      "id": "rel_1894",
      "source_id": "doc_1775",
      "target_id": "concept_1776",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.384362
    },
    "rel_1895": {
      "id": "rel_1895",
      "source_id": "doc_1775",
      "target_id": "concept_1777",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.3846989
    },
    "rel_1896": {
      "id": "rel_1896",
      "source_id": "doc_1775",
      "target_id": "concept_1778",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.38502
    },
    "rel_1897": {
      "id": "rel_1897",
      "source_id": "doc_1775",
      "target_id": "concept_1779",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.385334
    },
    "rel_1898": {
      "id": "rel_1898",
      "source_id": "doc_1775",
      "target_id": "concept_1780",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.3856661
    },
    "rel_1899": {
      "id": "rel_1899",
      "source_id": "doc_1775",
      "target_id": "concept_1781",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.3861592
    },
    "rel_1900": {
      "id": "rel_1900",
      "source_id": "doc_1775",
      "target_id": "concept_1782",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.386485
    },
    "rel_1901": {
      "id": "rel_1901",
      "source_id": "doc_1775",
      "target_id": "concept_1783",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.386985
    },
    "rel_1902": {
      "id": "rel_1902",
      "source_id": "doc_1775",
      "target_id": "concept_1784",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.387692
    },
    "rel_1903": {
      "id": "rel_1903",
      "source_id": "doc_1775",
      "target_id": "concept_1785",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.388005
    },
    "rel_1904": {
      "id": "rel_1904",
      "source_id": "doc_1775",
      "target_id": "concept_1786",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.3887181
    },
    "rel_1905": {
      "id": "rel_1905",
      "source_id": "doc_1775",
      "target_id": "concept_1787",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.38902
    },
    "rel_1906": {
      "id": "rel_1906",
      "source_id": "doc_1775",
      "target_id": "concept_1788",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.389489
    },
    "rel_1907": {
      "id": "rel_1907",
      "source_id": "doc_1775",
      "target_id": "concept_1789",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.389834
    },
    "rel_1908": {
      "id": "rel_1908",
      "source_id": "doc_1775",
      "target_id": "concept_1790",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.390615
    },
    "rel_1909": {
      "id": "rel_1909",
      "source_id": "doc_1775",
      "target_id": "concept_1791",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.3914292
    },
    "rel_1910": {
      "id": "rel_1910",
      "source_id": "doc_1775",
      "target_id": "concept_1792",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.391851
    },
    "rel_1911": {
      "id": "rel_1911",
      "source_id": "doc_1775",
      "target_id": "concept_1793",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.392576
    },
    "rel_1912": {
      "id": "rel_1912",
      "source_id": "doc_1775",
      "target_id": "concept_1794",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.3939798
    },
    "rel_1913": {
      "id": "rel_1913",
      "source_id": "doc_1775",
      "target_id": "concept_1795",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.3947241
    },
    "rel_1914": {
      "id": "rel_1914",
      "source_id": "doc_1775",
      "target_id": "concept_1796",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.395058
    },
    "rel_1915": {
      "id": "rel_1915",
      "source_id": "doc_1775",
      "target_id": "concept_1797",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.395798
    },
    "rel_1916": {
      "id": "rel_1916",
      "source_id": "doc_1775",
      "target_id": "concept_1798",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.396984
    },
    "rel_1917": {
      "id": "rel_1917",
      "source_id": "doc_1775",
      "target_id": "concept_1799",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.3973062
    },
    "rel_1918": {
      "id": "rel_1918",
      "source_id": "doc_1775",
      "target_id": "concept_1800",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.397613
    },
    "rel_1919": {
      "id": "rel_1919",
      "source_id": "doc_1775",
      "target_id": "concept_1801",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.39807
    },
    "rel_1920": {
      "id": "rel_1920",
      "source_id": "doc_1775",
      "target_id": "concept_1802",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.398908
    },
    "rel_1921": {
      "id": "rel_1921",
      "source_id": "doc_1775",
      "target_id": "concept_1803",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.399434
    },
    "rel_1922": {
      "id": "rel_1922",
      "source_id": "doc_1775",
      "target_id": "concept_1804",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.399889
    },
    "rel_1923": {
      "id": "rel_1923",
      "source_id": "doc_1775",
      "target_id": "concept_1805",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.4002812
    },
    "rel_1924": {
      "id": "rel_1924",
      "source_id": "doc_1775",
      "target_id": "concept_1806",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.4005911
    },
    "rel_1925": {
      "id": "rel_1925",
      "source_id": "doc_1775",
      "target_id": "concept_1807",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.4009979
    },
    "rel_1926": {
      "id": "rel_1926",
      "source_id": "doc_1775",
      "target_id": "concept_1808",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.4012969
    },
    "rel_1927": {
      "id": "rel_1927",
      "source_id": "doc_1775",
      "target_id": "concept_1809",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.402018
    },
    "rel_1928": {
      "id": "rel_1928",
      "source_id": "doc_1775",
      "target_id": "concept_1810",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.4035468
    },
    "rel_1929": {
      "id": "rel_1929",
      "source_id": "doc_1775",
      "target_id": "concept_1811",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.403875
    },
    "rel_1930": {
      "id": "rel_1930",
      "source_id": "doc_1775",
      "target_id": "concept_1812",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.408681
    },
    "rel_1931": {
      "id": "rel_1931",
      "source_id": "doc_1775",
      "target_id": "concept_1813",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.409577
    },
    "rel_1932": {
      "id": "rel_1932",
      "source_id": "doc_1775",
      "target_id": "concept_1814",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.4099112
    },
    "rel_1933": {
      "id": "rel_1933",
      "source_id": "doc_1775",
      "target_id": "concept_1815",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.410615
    },
    "rel_1934": {
      "id": "rel_1934",
      "source_id": "doc_1775",
      "target_id": "concept_1816",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.4109309
    },
    "rel_1935": {
      "id": "rel_1935",
      "source_id": "doc_1775",
      "target_id": "concept_1817",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.4112651
    },
    "rel_1936": {
      "id": "rel_1936",
      "source_id": "doc_1775",
      "target_id": "concept_1818",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.411604
    },
    "rel_1937": {
      "id": "rel_1937",
      "source_id": "doc_1775",
      "target_id": "concept_1819",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.411984
    },
    "rel_1938": {
      "id": "rel_1938",
      "source_id": "doc_1775",
      "target_id": "concept_1820",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.412482
    },
    "rel_1939": {
      "id": "rel_1939",
      "source_id": "doc_1775",
      "target_id": "concept_1821",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.412821
    },
    "rel_1940": {
      "id": "rel_1940",
      "source_id": "doc_1775",
      "target_id": "concept_1822",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.413153
    },
    "rel_1941": {
      "id": "rel_1941",
      "source_id": "doc_1775",
      "target_id": "concept_1823",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.413578
    },
    "rel_1942": {
      "id": "rel_1942",
      "source_id": "doc_1775",
      "target_id": "concept_1824",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.413915
    },
    "rel_1943": {
      "id": "rel_1943",
      "source_id": "doc_1775",
      "target_id": "concept_1825",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.414369
    },
    "rel_1944": {
      "id": "rel_1944",
      "source_id": "doc_1775",
      "target_id": "concept_1826",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.4147332
    },
    "rel_1945": {
      "id": "rel_1945",
      "source_id": "doc_1775",
      "target_id": "concept_1827",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.415123
    },
    "rel_1946": {
      "id": "rel_1946",
      "source_id": "doc_1775",
      "target_id": "concept_1828",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.415458
    },
    "rel_1947": {
      "id": "rel_1947",
      "source_id": "doc_1775",
      "target_id": "concept_1829",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.415808
    },
    "rel_1948": {
      "id": "rel_1948",
      "source_id": "doc_1775",
      "target_id": "concept_1830",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.416173
    },
    "rel_1949": {
      "id": "rel_1949",
      "source_id": "doc_1775",
      "target_id": "concept_1831",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.416521
    },
    "rel_1950": {
      "id": "rel_1950",
      "source_id": "doc_1775",
      "target_id": "concept_1832",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.416949
    },
    "rel_1951": {
      "id": "rel_1951",
      "source_id": "doc_1775",
      "target_id": "concept_1833",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.417268
    },
    "rel_1952": {
      "id": "rel_1952",
      "source_id": "doc_1775",
      "target_id": "concept_1834",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.4175959
    },
    "rel_1953": {
      "id": "rel_1953",
      "source_id": "doc_1775",
      "target_id": "concept_1835",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.418366
    },
    "rel_1954": {
      "id": "rel_1954",
      "source_id": "doc_1775",
      "target_id": "concept_1836",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.418703
    },
    "rel_1955": {
      "id": "rel_1955",
      "source_id": "doc_1775",
      "target_id": "concept_1837",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.419057
    },
    "rel_1956": {
      "id": "rel_1956",
      "source_id": "doc_1775",
      "target_id": "concept_380",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.419144
    },
    "rel_1957": {
      "id": "rel_1957",
      "source_id": "doc_1775",
      "target_id": "concept_1838",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.419486
    },
    "rel_1958": {
      "id": "rel_1958",
      "source_id": "doc_1775",
      "target_id": "concept_1839",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.419991
    },
    "rel_1959": {
      "id": "rel_1959",
      "source_id": "doc_1775",
      "target_id": "concept_1840",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.420324
    },
    "rel_1960": {
      "id": "rel_1960",
      "source_id": "doc_1775",
      "target_id": "concept_1841",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.421321
    },
    "rel_1961": {
      "id": "rel_1961",
      "source_id": "doc_1775",
      "target_id": "concept_1842",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.4216378
    },
    "rel_1962": {
      "id": "rel_1962",
      "source_id": "doc_1775",
      "target_id": "concept_1843",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.4219599
    },
    "rel_1963": {
      "id": "rel_1963",
      "source_id": "doc_1775",
      "target_id": "concept_1844",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.422536
    },
    "rel_1964": {
      "id": "rel_1964",
      "source_id": "doc_1775",
      "target_id": "concept_1845",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.422864
    },
    "rel_1965": {
      "id": "rel_1965",
      "source_id": "doc_1775",
      "target_id": "concept_1846",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.423188
    },
    "rel_1966": {
      "id": "rel_1966",
      "source_id": "doc_1775",
      "target_id": "concept_1847",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.4235048
    },
    "rel_1967": {
      "id": "rel_1967",
      "source_id": "doc_1775",
      "target_id": "concept_1848",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.423939
    },
    "rel_1968": {
      "id": "rel_1968",
      "source_id": "doc_1775",
      "target_id": "concept_1849",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.424397
    },
    "rel_1969": {
      "id": "rel_1969",
      "source_id": "doc_1775",
      "target_id": "concept_1850",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.4253068
    },
    "rel_1970": {
      "id": "rel_1970",
      "source_id": "doc_1775",
      "target_id": "concept_1851",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.42576
    },
    "rel_1971": {
      "id": "rel_1971",
      "source_id": "doc_1775",
      "target_id": "concept_1852",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.426193
    },
    "rel_1972": {
      "id": "rel_1972",
      "source_id": "doc_1775",
      "target_id": "concept_1853",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.4269629
    },
    "rel_1973": {
      "id": "rel_1973",
      "source_id": "doc_1775",
      "target_id": "concept_1854",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.427712
    },
    "rel_1974": {
      "id": "rel_1974",
      "source_id": "doc_1775",
      "target_id": "concept_1855",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.42859
    },
    "rel_1975": {
      "id": "rel_1975",
      "source_id": "doc_1775",
      "target_id": "concept_1856",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.428919
    },
    "rel_1976": {
      "id": "rel_1976",
      "source_id": "doc_1775",
      "target_id": "concept_1857",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.42923
    },
    "rel_1977": {
      "id": "rel_1977",
      "source_id": "doc_1775",
      "target_id": "concept_1858",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.429955
    },
    "rel_1978": {
      "id": "rel_1978",
      "source_id": "doc_1775",
      "target_id": "concept_1859",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.431523
    },
    "rel_1979": {
      "id": "rel_1979",
      "source_id": "doc_1775",
      "target_id": "concept_1860",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.4320269
    },
    "rel_1980": {
      "id": "rel_1980",
      "source_id": "doc_1775",
      "target_id": "concept_1861",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.432466
    },
    "rel_1981": {
      "id": "rel_1981",
      "source_id": "doc_1775",
      "target_id": "concept_1862",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.433192
    },
    "rel_1982": {
      "id": "rel_1982",
      "source_id": "doc_1775",
      "target_id": "concept_1863",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.4339788
    },
    "rel_1983": {
      "id": "rel_1983",
      "source_id": "doc_1775",
      "target_id": "concept_1864",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.434299
    },
    "rel_1984": {
      "id": "rel_1984",
      "source_id": "doc_1775",
      "target_id": "concept_1865",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.435085
    },
    "rel_1985": {
      "id": "rel_1985",
      "source_id": "doc_1775",
      "target_id": "concept_1866",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.435405
    },
    "rel_1986": {
      "id": "rel_1986",
      "source_id": "doc_1775",
      "target_id": "concept_1867",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.435733
    },
    "rel_1987": {
      "id": "rel_1987",
      "source_id": "doc_1775",
      "target_id": "concept_1868",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.4361632
    },
    "rel_1988": {
      "id": "rel_1988",
      "source_id": "doc_1775",
      "target_id": "concept_1869",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.436495
    },
    "rel_1989": {
      "id": "rel_1989",
      "source_id": "doc_1775",
      "target_id": "concept_1870",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.436926
    },
    "rel_1990": {
      "id": "rel_1990",
      "source_id": "doc_1775",
      "target_id": "concept_1871",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.437602
    },
    "rel_1991": {
      "id": "rel_1991",
      "source_id": "doc_1775",
      "target_id": "concept_1872",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.439073
    },
    "rel_1992": {
      "id": "rel_1992",
      "source_id": "doc_1775",
      "target_id": "concept_1873",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.43957
    },
    "rel_1993": {
      "id": "rel_1993",
      "source_id": "doc_1775",
      "target_id": "concept_1874",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.440028
    },
    "rel_1994": {
      "id": "rel_1994",
      "source_id": "doc_1775",
      "target_id": "concept_1875",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.440583
    },
    "rel_1995": {
      "id": "rel_1995",
      "source_id": "doc_1775",
      "target_id": "concept_1876",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.441057
    },
    "rel_1996": {
      "id": "rel_1996",
      "source_id": "doc_1775",
      "target_id": "concept_1877",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.441953
    },
    "rel_1997": {
      "id": "rel_1997",
      "source_id": "doc_1775",
      "target_id": "concept_1878",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.442283
    },
    "rel_1998": {
      "id": "rel_1998",
      "source_id": "doc_1775",
      "target_id": "concept_1879",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.442606
    },
    "rel_1999": {
      "id": "rel_1999",
      "source_id": "doc_1775",
      "target_id": "concept_1880",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.442931
    },
    "rel_2000": {
      "id": "rel_2000",
      "source_id": "doc_1775",
      "target_id": "concept_1881",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.443608
    },
    "rel_2001": {
      "id": "rel_2001",
      "source_id": "doc_1775",
      "target_id": "concept_1882",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.444041
    },
    "rel_2002": {
      "id": "rel_2002",
      "source_id": "doc_1775",
      "target_id": "concept_1883",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.444364
    },
    "rel_2003": {
      "id": "rel_2003",
      "source_id": "doc_1775",
      "target_id": "concept_1884",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.4446888
    },
    "rel_2004": {
      "id": "rel_2004",
      "source_id": "doc_1775",
      "target_id": "concept_1885",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.44549
    },
    "rel_2005": {
      "id": "rel_2005",
      "source_id": "doc_1775",
      "target_id": "concept_1886",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.4459672
    },
    "rel_2006": {
      "id": "rel_2006",
      "source_id": "doc_1775",
      "target_id": "concept_1887",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.446406
    },
    "rel_2007": {
      "id": "rel_2007",
      "source_id": "doc_1775",
      "target_id": "concept_1888",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.446729
    },
    "rel_2008": {
      "id": "rel_2008",
      "source_id": "doc_1775",
      "target_id": "concept_1889",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.447433
    },
    "rel_2009": {
      "id": "rel_2009",
      "source_id": "doc_1775",
      "target_id": "concept_1890",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.4477592
    },
    "rel_2010": {
      "id": "rel_2010",
      "source_id": "doc_1775",
      "target_id": "concept_1891",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.448546
    },
    "rel_2011": {
      "id": "rel_2011",
      "source_id": "doc_1775",
      "target_id": "concept_1892",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.448883
    },
    "rel_2012": {
      "id": "rel_2012",
      "source_id": "doc_1775",
      "target_id": "concept_1893",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.449572
    },
    "rel_2013": {
      "id": "rel_2013",
      "source_id": "doc_1775",
      "target_id": "concept_1894",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.4502232
    },
    "rel_2014": {
      "id": "rel_2014",
      "source_id": "doc_1775",
      "target_id": "concept_1895",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.450588
    },
    "rel_2015": {
      "id": "rel_2015",
      "source_id": "doc_1775",
      "target_id": "concept_1896",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.451356
    },
    "rel_2016": {
      "id": "rel_2016",
      "source_id": "doc_1775",
      "target_id": "concept_1897",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.4521
    },
    "rel_2017": {
      "id": "rel_2017",
      "source_id": "doc_1775",
      "target_id": "concept_1898",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.452618
    },
    "rel_2018": {
      "id": "rel_2018",
      "source_id": "doc_1775",
      "target_id": "concept_1899",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.4533381
    },
    "rel_2019": {
      "id": "rel_2019",
      "source_id": "doc_1775",
      "target_id": "concept_1900",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.454083
    },
    "rel_2020": {
      "id": "rel_2020",
      "source_id": "doc_1775",
      "target_id": "concept_1901",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.454425
    },
    "rel_2021": {
      "id": "rel_2021",
      "source_id": "doc_1775",
      "target_id": "concept_1902",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.454763
    },
    "rel_2022": {
      "id": "rel_2022",
      "source_id": "doc_1775",
      "target_id": "concept_1903",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.455422
    },
    "rel_2023": {
      "id": "rel_2023",
      "source_id": "doc_1775",
      "target_id": "concept_1904",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.4558442
    },
    "rel_2024": {
      "id": "rel_2024",
      "source_id": "doc_1775",
      "target_id": "concept_1905",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.456574
    },
    "rel_2025": {
      "id": "rel_2025",
      "source_id": "doc_1775",
      "target_id": "concept_1906",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.457388
    },
    "rel_2026": {
      "id": "rel_2026",
      "source_id": "doc_1775",
      "target_id": "concept_1907",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.457749
    },
    "rel_2027": {
      "id": "rel_2027",
      "source_id": "doc_1775",
      "target_id": "concept_1908",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.4580941
    },
    "rel_2028": {
      "id": "rel_2028",
      "source_id": "doc_1775",
      "target_id": "concept_1909",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.458448
    },
    "rel_2029": {
      "id": "rel_2029",
      "source_id": "doc_1775",
      "target_id": "concept_1910",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.459612
    },
    "rel_2030": {
      "id": "rel_2030",
      "source_id": "doc_1775",
      "target_id": "concept_1911",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.459967
    },
    "rel_2031": {
      "id": "rel_2031",
      "source_id": "doc_1775",
      "target_id": "concept_1912",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.4604669
    },
    "rel_2032": {
      "id": "rel_2032",
      "source_id": "doc_1775",
      "target_id": "concept_1913",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.460974
    },
    "rel_2033": {
      "id": "rel_2033",
      "source_id": "doc_1775",
      "target_id": "concept_1914",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.46133
    },
    "rel_2034": {
      "id": "rel_2034",
      "source_id": "doc_1775",
      "target_id": "concept_1915",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.4616692
    },
    "rel_2035": {
      "id": "rel_2035",
      "source_id": "doc_1775",
      "target_id": "concept_1916",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.4631019
    },
    "rel_2036": {
      "id": "rel_2036",
      "source_id": "doc_1775",
      "target_id": "concept_1917",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.4638479
    },
    "rel_2037": {
      "id": "rel_2037",
      "source_id": "doc_1775",
      "target_id": "concept_1918",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.4647481
    },
    "rel_2038": {
      "id": "rel_2038",
      "source_id": "doc_1775",
      "target_id": "concept_1919",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.465163
    },
    "rel_2039": {
      "id": "rel_2039",
      "source_id": "doc_1775",
      "target_id": "concept_1920",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.46551
    },
    "rel_2040": {
      "id": "rel_2040",
      "source_id": "doc_1775",
      "target_id": "concept_1921",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.466283
    },
    "rel_2041": {
      "id": "rel_2041",
      "source_id": "doc_1775",
      "target_id": "concept_1922",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.466632
    },
    "rel_2042": {
      "id": "rel_2042",
      "source_id": "doc_1775",
      "target_id": "concept_1923",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.466967
    },
    "rel_2043": {
      "id": "rel_2043",
      "source_id": "doc_1775",
      "target_id": "concept_1924",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.4674199
    },
    "rel_2044": {
      "id": "rel_2044",
      "source_id": "doc_1775",
      "target_id": "concept_1925",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.469218
    },
    "rel_2045": {
      "id": "rel_2045",
      "source_id": "doc_1775",
      "target_id": "concept_1926",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.4695702
    },
    "rel_2046": {
      "id": "rel_2046",
      "source_id": "doc_1775",
      "target_id": "concept_1927",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.469907
    },
    "rel_2047": {
      "id": "rel_2047",
      "source_id": "doc_1775",
      "target_id": "concept_1928",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.470676
    },
    "rel_2048": {
      "id": "rel_2048",
      "source_id": "doc_1775",
      "target_id": "concept_1929",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.471165
    },
    "rel_2049": {
      "id": "rel_2049",
      "source_id": "doc_1775",
      "target_id": "concept_1930",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.4716642
    },
    "rel_2050": {
      "id": "rel_2050",
      "source_id": "doc_1775",
      "target_id": "concept_1931",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.471992
    },
    "rel_2051": {
      "id": "rel_2051",
      "source_id": "doc_1775",
      "target_id": "concept_1932",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.472754
    },
    "rel_2052": {
      "id": "rel_2052",
      "source_id": "doc_1775",
      "target_id": "concept_1933",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.473273
    },
    "rel_2053": {
      "id": "rel_2053",
      "source_id": "doc_1775",
      "target_id": "concept_1934",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.473741
    },
    "rel_2054": {
      "id": "rel_2054",
      "source_id": "doc_1775",
      "target_id": "concept_1935",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.4740832
    },
    "rel_2055": {
      "id": "rel_2055",
      "source_id": "doc_1775",
      "target_id": "concept_1936",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.4744241
    },
    "rel_2056": {
      "id": "rel_2056",
      "source_id": "doc_1775",
      "target_id": "concept_1937",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.474765
    },
    "rel_2057": {
      "id": "rel_2057",
      "source_id": "doc_1775",
      "target_id": "concept_1938",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.475164
    },
    "rel_2058": {
      "id": "rel_2058",
      "source_id": "doc_1775",
      "target_id": "concept_1939",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.47565
    },
    "rel_2059": {
      "id": "rel_2059",
      "source_id": "doc_1775",
      "target_id": "concept_1940",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.476005
    },
    "rel_2060": {
      "id": "rel_2060",
      "source_id": "doc_1775",
      "target_id": "concept_1941",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.476351
    },
    "rel_2061": {
      "id": "rel_2061",
      "source_id": "doc_1775",
      "target_id": "concept_1942",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.476831
    },
    "rel_2062": {
      "id": "rel_2062",
      "source_id": "doc_1775",
      "target_id": "concept_1943",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.477199
    },
    "rel_2063": {
      "id": "rel_2063",
      "source_id": "doc_1775",
      "target_id": "concept_1944",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.477901
    },
    "rel_2064": {
      "id": "rel_2064",
      "source_id": "doc_1775",
      "target_id": "concept_1945",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.478792
    },
    "rel_2065": {
      "id": "rel_2065",
      "source_id": "doc_1775",
      "target_id": "concept_1946",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.4797719
    },
    "rel_2066": {
      "id": "rel_2066",
      "source_id": "doc_1775",
      "target_id": "concept_1947",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.480264
    },
    "rel_2067": {
      "id": "rel_2067",
      "source_id": "doc_1775",
      "target_id": "concept_1948",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.481907
    },
    "rel_2068": {
      "id": "rel_2068",
      "source_id": "doc_1775",
      "target_id": "concept_1949",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.482773
    },
    "rel_2069": {
      "id": "rel_2069",
      "source_id": "doc_1775",
      "target_id": "concept_1950",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.4831328
    },
    "rel_2070": {
      "id": "rel_2070",
      "source_id": "doc_1775",
      "target_id": "concept_1951",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.4836218
    },
    "rel_2071": {
      "id": "rel_2071",
      "source_id": "doc_1952",
      "target_id": "concept_1953",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.485931
    },
    "rel_2072": {
      "id": "rel_2072",
      "source_id": "doc_1952",
      "target_id": "concept_1954",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.486283
    },
    "rel_2073": {
      "id": "rel_2073",
      "source_id": "doc_1952",
      "target_id": "concept_224",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.486337
    },
    "rel_2074": {
      "id": "rel_2074",
      "source_id": "doc_1952",
      "target_id": "concept_1955",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.4867032
    },
    "rel_2075": {
      "id": "rel_2075",
      "source_id": "doc_1952",
      "target_id": "concept_1956",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.487102
    },
    "rel_2076": {
      "id": "rel_2076",
      "source_id": "doc_1952",
      "target_id": "concept_837",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.4872682
    },
    "rel_2077": {
      "id": "rel_2077",
      "source_id": "doc_1952",
      "target_id": "concept_226",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.487366
    },
    "rel_2078": {
      "id": "rel_2078",
      "source_id": "doc_1952",
      "target_id": "concept_1957",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.4878132
    },
    "rel_2079": {
      "id": "rel_2079",
      "source_id": "doc_1952",
      "target_id": "concept_1958",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.488289
    },
    "rel_2080": {
      "id": "rel_2080",
      "source_id": "doc_1952",
      "target_id": "concept_1959",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.488645
    },
    "rel_2081": {
      "id": "rel_2081",
      "source_id": "doc_1952",
      "target_id": "concept_1960",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.4889941
    },
    "rel_2082": {
      "id": "rel_2082",
      "source_id": "doc_1952",
      "target_id": "concept_1961",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.489326
    },
    "rel_2083": {
      "id": "rel_2083",
      "source_id": "doc_1952",
      "target_id": "concept_1962",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.489663
    },
    "rel_2084": {
      "id": "rel_2084",
      "source_id": "doc_1952",
      "target_id": "concept_1963",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.490371
    },
    "rel_2085": {
      "id": "rel_2085",
      "source_id": "doc_1952",
      "target_id": "concept_1964",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.49096
    },
    "rel_2086": {
      "id": "rel_2086",
      "source_id": "doc_1952",
      "target_id": "concept_1965",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.4936352
    },
    "rel_2087": {
      "id": "rel_2087",
      "source_id": "doc_1952",
      "target_id": "concept_231",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.493692
    },
    "rel_2088": {
      "id": "rel_2088",
      "source_id": "doc_1952",
      "target_id": "concept_1966",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.4940522
    },
    "rel_2089": {
      "id": "rel_2089",
      "source_id": "doc_1952",
      "target_id": "concept_1967",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.494391
    },
    "rel_2090": {
      "id": "rel_2090",
      "source_id": "doc_1952",
      "target_id": "concept_1968",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.4947379
    },
    "rel_2091": {
      "id": "rel_2091",
      "source_id": "doc_1952",
      "target_id": "concept_1969",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.495088
    },
    "rel_2092": {
      "id": "rel_2092",
      "source_id": "doc_1952",
      "target_id": "concept_234",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.495141
    },
    "rel_2093": {
      "id": "rel_2093",
      "source_id": "doc_1952",
      "target_id": "concept_1970",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.495834
    },
    "rel_2094": {
      "id": "rel_2094",
      "source_id": "doc_1952",
      "target_id": "concept_1971",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.4962208
    },
    "rel_2095": {
      "id": "rel_2095",
      "source_id": "doc_1952",
      "target_id": "concept_1972",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.496565
    },
    "rel_2096": {
      "id": "rel_2096",
      "source_id": "doc_1952",
      "target_id": "concept_856",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.4967208
    },
    "rel_2097": {
      "id": "rel_2097",
      "source_id": "doc_1952",
      "target_id": "concept_1973",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.497081
    },
    "rel_2098": {
      "id": "rel_2098",
      "source_id": "doc_1952",
      "target_id": "concept_1974",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.4982982
    },
    "rel_2099": {
      "id": "rel_2099",
      "source_id": "doc_1952",
      "target_id": "concept_1975",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.4986858
    },
    "rel_2100": {
      "id": "rel_2100",
      "source_id": "doc_1952",
      "target_id": "concept_1976",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.499234
    },
    "rel_2101": {
      "id": "rel_2101",
      "source_id": "doc_1952",
      "target_id": "concept_868",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.499398
    },
    "rel_2102": {
      "id": "rel_2102",
      "source_id": "doc_1952",
      "target_id": "concept_240",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.4994528
    },
    "rel_2103": {
      "id": "rel_2103",
      "source_id": "doc_1952",
      "target_id": "concept_1977",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.4999301
    },
    "rel_2104": {
      "id": "rel_2104",
      "source_id": "doc_1952",
      "target_id": "concept_874",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.500093
    },
    "rel_2105": {
      "id": "rel_2105",
      "source_id": "doc_1952",
      "target_id": "concept_1978",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.500452
    },
    "rel_2106": {
      "id": "rel_2106",
      "source_id": "doc_1952",
      "target_id": "concept_1405",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.5007
    },
    "rel_2107": {
      "id": "rel_2107",
      "source_id": "doc_1952",
      "target_id": "concept_1979",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.5010428
    },
    "rel_2108": {
      "id": "rel_2108",
      "source_id": "doc_1952",
      "target_id": "concept_1980",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.504492
    },
    "rel_2109": {
      "id": "rel_2109",
      "source_id": "doc_1952",
      "target_id": "concept_1981",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.505206
    },
    "rel_2110": {
      "id": "rel_2110",
      "source_id": "doc_1952",
      "target_id": "concept_1982",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.5056791
    },
    "rel_2111": {
      "id": "rel_2111",
      "source_id": "doc_1952",
      "target_id": "concept_1983",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.506175
    },
    "rel_2112": {
      "id": "rel_2112",
      "source_id": "doc_1952",
      "target_id": "concept_1984",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.5065951
    },
    "rel_2113": {
      "id": "rel_2113",
      "source_id": "doc_1952",
      "target_id": "concept_1985",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.50701
    },
    "rel_2114": {
      "id": "rel_2114",
      "source_id": "doc_1952",
      "target_id": "concept_1986",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.507434
    },
    "rel_2115": {
      "id": "rel_2115",
      "source_id": "doc_1952",
      "target_id": "concept_1987",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.507787
    },
    "rel_2116": {
      "id": "rel_2116",
      "source_id": "doc_1952",
      "target_id": "concept_893",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.507949
    },
    "rel_2117": {
      "id": "rel_2117",
      "source_id": "doc_1952",
      "target_id": "concept_1988",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.508414
    },
    "rel_2118": {
      "id": "rel_2118",
      "source_id": "doc_1952",
      "target_id": "concept_1989",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.508749
    },
    "rel_2119": {
      "id": "rel_2119",
      "source_id": "doc_1952",
      "target_id": "concept_1990",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.5091
    },
    "rel_2120": {
      "id": "rel_2120",
      "source_id": "doc_1952",
      "target_id": "concept_897",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.50926
    },
    "rel_2121": {
      "id": "rel_2121",
      "source_id": "doc_1952",
      "target_id": "concept_1435",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.509505
    },
    "rel_2122": {
      "id": "rel_2122",
      "source_id": "doc_1952",
      "target_id": "concept_1991",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.509849
    },
    "rel_2123": {
      "id": "rel_2123",
      "source_id": "doc_1952",
      "target_id": "concept_248",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.509904
    },
    "rel_2124": {
      "id": "rel_2124",
      "source_id": "doc_1952",
      "target_id": "concept_1436",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.5101461
    },
    "rel_2125": {
      "id": "rel_2125",
      "source_id": "doc_1952",
      "target_id": "concept_904",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.5103061
    },
    "rel_2126": {
      "id": "rel_2126",
      "source_id": "doc_1952",
      "target_id": "concept_1992",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.5108411
    },
    "rel_2127": {
      "id": "rel_2127",
      "source_id": "doc_1952",
      "target_id": "concept_1993",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.511477
    },
    "rel_2128": {
      "id": "rel_2128",
      "source_id": "doc_1952",
      "target_id": "concept_1994",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.511817
    },
    "rel_2129": {
      "id": "rel_2129",
      "source_id": "doc_1952",
      "target_id": "concept_1995",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.512322
    },
    "rel_2130": {
      "id": "rel_2130",
      "source_id": "doc_1952",
      "target_id": "concept_1996",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.512696
    },
    "rel_2131": {
      "id": "rel_2131",
      "source_id": "doc_1952",
      "target_id": "concept_1997",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.513161
    },
    "rel_2132": {
      "id": "rel_2132",
      "source_id": "doc_1952",
      "target_id": "concept_1998",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.513524
    },
    "rel_2133": {
      "id": "rel_2133",
      "source_id": "doc_1952",
      "target_id": "concept_1999",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.513889
    },
    "rel_2134": {
      "id": "rel_2134",
      "source_id": "doc_1952",
      "target_id": "concept_2000",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.514244
    },
    "rel_2135": {
      "id": "rel_2135",
      "source_id": "doc_1952",
      "target_id": "concept_1453",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.5145001
    },
    "rel_2136": {
      "id": "rel_2136",
      "source_id": "doc_1952",
      "target_id": "concept_2001",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.5155609
    },
    "rel_2137": {
      "id": "rel_2137",
      "source_id": "doc_1952",
      "target_id": "concept_2002",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.515967
    },
    "rel_2138": {
      "id": "rel_2138",
      "source_id": "doc_1952",
      "target_id": "concept_1457",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.5162182
    },
    "rel_2139": {
      "id": "rel_2139",
      "source_id": "doc_1952",
      "target_id": "concept_1285",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.516583
    },
    "rel_2140": {
      "id": "rel_2140",
      "source_id": "doc_1952",
      "target_id": "concept_2003",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.516937
    },
    "rel_2141": {
      "id": "rel_2141",
      "source_id": "doc_1952",
      "target_id": "concept_2004",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.517313
    },
    "rel_2142": {
      "id": "rel_2142",
      "source_id": "doc_1952",
      "target_id": "concept_926",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.51748
    },
    "rel_2143": {
      "id": "rel_2143",
      "source_id": "doc_1952",
      "target_id": "concept_2005",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.5178611
    },
    "rel_2144": {
      "id": "rel_2144",
      "source_id": "doc_1952",
      "target_id": "concept_2006",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.518333
    },
    "rel_2145": {
      "id": "rel_2145",
      "source_id": "doc_1952",
      "target_id": "concept_1290",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.5186958
    },
    "rel_2146": {
      "id": "rel_2146",
      "source_id": "doc_1952",
      "target_id": "concept_2007",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.5190778
    },
    "rel_2147": {
      "id": "rel_2147",
      "source_id": "doc_1952",
      "target_id": "concept_251",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.5191329
    },
    "rel_2148": {
      "id": "rel_2148",
      "source_id": "doc_1952",
      "target_id": "concept_2008",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.51958
    },
    "rel_2149": {
      "id": "rel_2149",
      "source_id": "doc_1952",
      "target_id": "concept_2009",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.519943
    },
    "rel_2150": {
      "id": "rel_2150",
      "source_id": "doc_1952",
      "target_id": "concept_2010",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.520305
    },
    "rel_2151": {
      "id": "rel_2151",
      "source_id": "doc_1952",
      "target_id": "concept_2011",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.520662
    },
    "rel_2152": {
      "id": "rel_2152",
      "source_id": "doc_1952",
      "target_id": "concept_253",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.520721
    },
    "rel_2153": {
      "id": "rel_2153",
      "source_id": "doc_1952",
      "target_id": "concept_1294",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.52108
    },
    "rel_2154": {
      "id": "rel_2154",
      "source_id": "doc_1952",
      "target_id": "concept_2012",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.521635
    },
    "rel_2155": {
      "id": "rel_2155",
      "source_id": "doc_1952",
      "target_id": "concept_938",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.5218089
    },
    "rel_2156": {
      "id": "rel_2156",
      "source_id": "doc_1952",
      "target_id": "concept_2013",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.522163
    },
    "rel_2157": {
      "id": "rel_2157",
      "source_id": "doc_1952",
      "target_id": "concept_2014",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.522516
    },
    "rel_2158": {
      "id": "rel_2158",
      "source_id": "doc_1952",
      "target_id": "concept_2015",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.522874
    },
    "rel_2159": {
      "id": "rel_2159",
      "source_id": "doc_1952",
      "target_id": "concept_2016",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.523231
    },
    "rel_2160": {
      "id": "rel_2160",
      "source_id": "doc_1952",
      "target_id": "concept_2017",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.523593
    },
    "rel_2161": {
      "id": "rel_2161",
      "source_id": "doc_1952",
      "target_id": "concept_946",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.52377
    },
    "rel_2162": {
      "id": "rel_2162",
      "source_id": "doc_1952",
      "target_id": "concept_1489",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.524045
    },
    "rel_2163": {
      "id": "rel_2163",
      "source_id": "doc_1952",
      "target_id": "concept_260",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.524106
    },
    "rel_2164": {
      "id": "rel_2164",
      "source_id": "doc_1952",
      "target_id": "concept_2018",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.5244632
    },
    "rel_2165": {
      "id": "rel_2165",
      "source_id": "doc_1952",
      "target_id": "concept_2019",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.524837
    },
    "rel_2166": {
      "id": "rel_2166",
      "source_id": "doc_1952",
      "target_id": "concept_2020",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.5252092
    },
    "rel_2167": {
      "id": "rel_2167",
      "source_id": "doc_1952",
      "target_id": "concept_2021",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.525665
    },
    "rel_2168": {
      "id": "rel_2168",
      "source_id": "doc_1952",
      "target_id": "concept_2022",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.52613
    },
    "rel_2169": {
      "id": "rel_2169",
      "source_id": "doc_1952",
      "target_id": "concept_2023",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.526502
    },
    "rel_2170": {
      "id": "rel_2170",
      "source_id": "doc_1952",
      "target_id": "concept_2024",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.5268621
    },
    "rel_2171": {
      "id": "rel_2171",
      "source_id": "doc_1952",
      "target_id": "concept_2025",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.527356
    },
    "rel_2172": {
      "id": "rel_2172",
      "source_id": "doc_1952",
      "target_id": "concept_2026",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.527731
    },
    "rel_2173": {
      "id": "rel_2173",
      "source_id": "doc_1952",
      "target_id": "concept_2027",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.528238
    },
    "rel_2174": {
      "id": "rel_2174",
      "source_id": "doc_1952",
      "target_id": "concept_2028",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.52863
    },
    "rel_2175": {
      "id": "rel_2175",
      "source_id": "doc_1952",
      "target_id": "concept_448",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.5287669
    },
    "rel_2176": {
      "id": "rel_2176",
      "source_id": "doc_1952",
      "target_id": "concept_2029",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.5291579
    },
    "rel_2177": {
      "id": "rel_2177",
      "source_id": "doc_1952",
      "target_id": "concept_2030",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.5295959
    },
    "rel_2178": {
      "id": "rel_2178",
      "source_id": "doc_1952",
      "target_id": "concept_2031",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.530126
    },
    "rel_2179": {
      "id": "rel_2179",
      "source_id": "doc_1952",
      "target_id": "concept_1317",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.5304909
    },
    "rel_2180": {
      "id": "rel_2180",
      "source_id": "doc_1952",
      "target_id": "concept_2032",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.530876
    },
    "rel_2181": {
      "id": "rel_2181",
      "source_id": "doc_1952",
      "target_id": "concept_1320",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.5312278
    },
    "rel_2182": {
      "id": "rel_2182",
      "source_id": "doc_1952",
      "target_id": "concept_280",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.53129
    },
    "rel_2183": {
      "id": "rel_2183",
      "source_id": "doc_1952",
      "target_id": "concept_2033",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.531757
    },
    "rel_2184": {
      "id": "rel_2184",
      "source_id": "doc_1952",
      "target_id": "concept_1535",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.532036
    },
    "rel_2185": {
      "id": "rel_2185",
      "source_id": "doc_1952",
      "target_id": "concept_282",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.532096
    },
    "rel_2186": {
      "id": "rel_2186",
      "source_id": "doc_1952",
      "target_id": "concept_2034",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.532872
    },
    "rel_2187": {
      "id": "rel_2187",
      "source_id": "doc_1952",
      "target_id": "concept_2035",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.53335
    },
    "rel_2188": {
      "id": "rel_2188",
      "source_id": "doc_1952",
      "target_id": "concept_2036",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.5337
    },
    "rel_2189": {
      "id": "rel_2189",
      "source_id": "doc_1952",
      "target_id": "concept_2037",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.534063
    },
    "rel_2190": {
      "id": "rel_2190",
      "source_id": "doc_1952",
      "target_id": "concept_2038",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.5344288
    },
    "rel_2191": {
      "id": "rel_2191",
      "source_id": "doc_1952",
      "target_id": "concept_2039",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.5347872
    },
    "rel_2192": {
      "id": "rel_2192",
      "source_id": "doc_1952",
      "target_id": "concept_2040",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.535253
    },
    "rel_2193": {
      "id": "rel_2193",
      "source_id": "doc_1952",
      "target_id": "concept_2041",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.5356832
    },
    "rel_2194": {
      "id": "rel_2194",
      "source_id": "doc_1952",
      "target_id": "concept_2042",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.536275
    },
    "rel_2195": {
      "id": "rel_2195",
      "source_id": "doc_1952",
      "target_id": "concept_1562",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.536546
    },
    "rel_2196": {
      "id": "rel_2196",
      "source_id": "doc_1952",
      "target_id": "concept_2043",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.5369852
    },
    "rel_2197": {
      "id": "rel_2197",
      "source_id": "doc_1952",
      "target_id": "concept_997",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.537209
    },
    "rel_2198": {
      "id": "rel_2198",
      "source_id": "doc_1952",
      "target_id": "concept_2044",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.5375922
    },
    "rel_2199": {
      "id": "rel_2199",
      "source_id": "doc_1952",
      "target_id": "concept_2045",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.538235
    },
    "rel_2200": {
      "id": "rel_2200",
      "source_id": "doc_1952",
      "target_id": "concept_2046",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.5385978
    },
    "rel_2201": {
      "id": "rel_2201",
      "source_id": "doc_1952",
      "target_id": "concept_2047",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.538959
    },
    "rel_2202": {
      "id": "rel_2202",
      "source_id": "doc_1952",
      "target_id": "concept_2048",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.5393128
    },
    "rel_2203": {
      "id": "rel_2203",
      "source_id": "doc_1952",
      "target_id": "concept_289",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.539377
    },
    "rel_2204": {
      "id": "rel_2204",
      "source_id": "doc_1952",
      "target_id": "concept_2049",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.539739
    },
    "rel_2205": {
      "id": "rel_2205",
      "source_id": "doc_1952",
      "target_id": "concept_2050",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.540106
    },
    "rel_2206": {
      "id": "rel_2206",
      "source_id": "doc_1952",
      "target_id": "concept_2051",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.5404701
    },
    "rel_2207": {
      "id": "rel_2207",
      "source_id": "doc_1952",
      "target_id": "concept_2052",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.540873
    },
    "rel_2208": {
      "id": "rel_2208",
      "source_id": "doc_1952",
      "target_id": "concept_2053",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.541224
    },
    "rel_2209": {
      "id": "rel_2209",
      "source_id": "doc_1952",
      "target_id": "concept_1347",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.541613
    },
    "rel_2210": {
      "id": "rel_2210",
      "source_id": "doc_1952",
      "target_id": "concept_2054",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.541971
    },
    "rel_2211": {
      "id": "rel_2211",
      "source_id": "doc_1952",
      "target_id": "concept_2055",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.542337
    },
    "rel_2212": {
      "id": "rel_2212",
      "source_id": "doc_1952",
      "target_id": "concept_2056",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.542714
    },
    "rel_2213": {
      "id": "rel_2213",
      "source_id": "doc_1952",
      "target_id": "concept_2057",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.543075
    },
    "rel_2214": {
      "id": "rel_2214",
      "source_id": "doc_1952",
      "target_id": "concept_2058",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.543581
    },
    "rel_2215": {
      "id": "rel_2215",
      "source_id": "doc_1952",
      "target_id": "concept_2059",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.543935
    },
    "rel_2216": {
      "id": "rel_2216",
      "source_id": "doc_1952",
      "target_id": "concept_2060",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.544289
    },
    "rel_2217": {
      "id": "rel_2217",
      "source_id": "doc_1952",
      "target_id": "concept_2061",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.5446432
    },
    "rel_2218": {
      "id": "rel_2218",
      "source_id": "doc_1952",
      "target_id": "concept_2062",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.545003
    },
    "rel_2219": {
      "id": "rel_2219",
      "source_id": "doc_1952",
      "target_id": "concept_2063",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.545625
    },
    "rel_2220": {
      "id": "rel_2220",
      "source_id": "doc_1952",
      "target_id": "concept_2064",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.546019
    },
    "rel_2221": {
      "id": "rel_2221",
      "source_id": "doc_1952",
      "target_id": "concept_2065",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.5463848
    },
    "rel_2222": {
      "id": "rel_2222",
      "source_id": "doc_1952",
      "target_id": "concept_2066",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.546773
    },
    "rel_2223": {
      "id": "rel_2223",
      "source_id": "doc_1952",
      "target_id": "concept_2067",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.5471308
    },
    "rel_2224": {
      "id": "rel_2224",
      "source_id": "doc_1952",
      "target_id": "concept_2068",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.547497
    },
    "rel_2225": {
      "id": "rel_2225",
      "source_id": "doc_1952",
      "target_id": "concept_303",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.54756
    },
    "rel_2226": {
      "id": "rel_2226",
      "source_id": "doc_1952",
      "target_id": "concept_2069",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.548275
    },
    "rel_2227": {
      "id": "rel_2227",
      "source_id": "doc_1952",
      "target_id": "concept_2070",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.548673
    },
    "rel_2228": {
      "id": "rel_2228",
      "source_id": "doc_2071",
      "target_id": "concept_2072",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.561569
    },
    "rel_2229": {
      "id": "rel_2229",
      "source_id": "doc_2071",
      "target_id": "concept_2073",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.561934
    },
    "rel_2230": {
      "id": "rel_2230",
      "source_id": "doc_2071",
      "target_id": "concept_2074",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.56228
    },
    "rel_2231": {
      "id": "rel_2231",
      "source_id": "doc_2071",
      "target_id": "concept_2075",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.562618
    },
    "rel_2232": {
      "id": "rel_2232",
      "source_id": "doc_2071",
      "target_id": "concept_2076",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.562979
    },
    "rel_2233": {
      "id": "rel_2233",
      "source_id": "doc_2071",
      "target_id": "concept_2077",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.563369
    },
    "rel_2234": {
      "id": "rel_2234",
      "source_id": "doc_2071",
      "target_id": "concept_2078",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.5637279
    },
    "rel_2235": {
      "id": "rel_2235",
      "source_id": "doc_2071",
      "target_id": "concept_2079",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.5640728
    },
    "rel_2236": {
      "id": "rel_2236",
      "source_id": "doc_2071",
      "target_id": "concept_2080",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.564437
    },
    "rel_2237": {
      "id": "rel_2237",
      "source_id": "doc_2071",
      "target_id": "concept_2081",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.5647879
    },
    "rel_2238": {
      "id": "rel_2238",
      "source_id": "doc_2071",
      "target_id": "concept_2082",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.565175
    },
    "rel_2239": {
      "id": "rel_2239",
      "source_id": "doc_2071",
      "target_id": "concept_2083",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.56553
    },
    "rel_2240": {
      "id": "rel_2240",
      "source_id": "doc_2071",
      "target_id": "concept_2084",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.566108
    },
    "rel_2241": {
      "id": "rel_2241",
      "source_id": "doc_2071",
      "target_id": "concept_2085",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.566483
    },
    "rel_2242": {
      "id": "rel_2242",
      "source_id": "doc_2071",
      "target_id": "concept_2086",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.566842
    },
    "rel_2243": {
      "id": "rel_2243",
      "source_id": "doc_2071",
      "target_id": "concept_2087",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.567192
    },
    "rel_2244": {
      "id": "rel_2244",
      "source_id": "doc_2071",
      "target_id": "concept_2088",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.567534
    },
    "rel_2245": {
      "id": "rel_2245",
      "source_id": "doc_2071",
      "target_id": "concept_2089",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.5678751
    },
    "rel_2246": {
      "id": "rel_2246",
      "source_id": "doc_2071",
      "target_id": "concept_2090",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.568243
    },
    "rel_2247": {
      "id": "rel_2247",
      "source_id": "doc_2071",
      "target_id": "concept_2091",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.5686731
    },
    "rel_2248": {
      "id": "rel_2248",
      "source_id": "doc_2071",
      "target_id": "concept_2092",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.569029
    },
    "rel_2249": {
      "id": "rel_2249",
      "source_id": "doc_2071",
      "target_id": "concept_2093",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.5693882
    },
    "rel_2250": {
      "id": "rel_2250",
      "source_id": "doc_2071",
      "target_id": "concept_2094",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.569738
    },
    "rel_2251": {
      "id": "rel_2251",
      "source_id": "doc_2071",
      "target_id": "concept_2095",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.570086
    },
    "rel_2252": {
      "id": "rel_2252",
      "source_id": "doc_2071",
      "target_id": "concept_2096",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.570475
    },
    "rel_2253": {
      "id": "rel_2253",
      "source_id": "doc_2071",
      "target_id": "concept_2097",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.570928
    },
    "rel_2254": {
      "id": "rel_2254",
      "source_id": "doc_2071",
      "target_id": "concept_2098",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.5713449
    },
    "rel_2255": {
      "id": "rel_2255",
      "source_id": "doc_2071",
      "target_id": "concept_2099",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.571706
    },
    "rel_2256": {
      "id": "rel_2256",
      "source_id": "doc_2071",
      "target_id": "concept_2100",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.572065
    },
    "rel_2257": {
      "id": "rel_2257",
      "source_id": "doc_2071",
      "target_id": "concept_2101",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.5724459
    },
    "rel_2258": {
      "id": "rel_2258",
      "source_id": "doc_2071",
      "target_id": "concept_2102",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.5728042
    },
    "rel_2259": {
      "id": "rel_2259",
      "source_id": "doc_2071",
      "target_id": "concept_2103",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.573162
    },
    "rel_2260": {
      "id": "rel_2260",
      "source_id": "doc_2071",
      "target_id": "concept_2104",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.5735319
    },
    "rel_2261": {
      "id": "rel_2261",
      "source_id": "doc_2071",
      "target_id": "concept_2105",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.573897
    },
    "rel_2262": {
      "id": "rel_2262",
      "source_id": "doc_2071",
      "target_id": "concept_2106",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.574302
    },
    "rel_2263": {
      "id": "rel_2263",
      "source_id": "doc_2071",
      "target_id": "concept_2107",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.5747058
    },
    "rel_2264": {
      "id": "rel_2264",
      "source_id": "doc_2071",
      "target_id": "concept_2108",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.575088
    },
    "rel_2265": {
      "id": "rel_2265",
      "source_id": "doc_2071",
      "target_id": "concept_2109",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.5754461
    },
    "rel_2266": {
      "id": "rel_2266",
      "source_id": "doc_2071",
      "target_id": "concept_2110",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.5758889
    },
    "rel_2267": {
      "id": "rel_2267",
      "source_id": "doc_2071",
      "target_id": "concept_2111",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.576334
    },
    "rel_2268": {
      "id": "rel_2268",
      "source_id": "doc_2071",
      "target_id": "concept_2112",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.576745
    },
    "rel_2269": {
      "id": "rel_2269",
      "source_id": "doc_2071",
      "target_id": "concept_2113",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.577111
    },
    "rel_2270": {
      "id": "rel_2270",
      "source_id": "doc_2071",
      "target_id": "concept_2114",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.577494
    },
    "rel_2271": {
      "id": "rel_2271",
      "source_id": "doc_2071",
      "target_id": "concept_2115",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.5779
    },
    "rel_2272": {
      "id": "rel_2272",
      "source_id": "doc_2071",
      "target_id": "concept_2116",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.578258
    },
    "rel_2273": {
      "id": "rel_2273",
      "source_id": "doc_2071",
      "target_id": "concept_2117",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.578639
    },
    "rel_2274": {
      "id": "rel_2274",
      "source_id": "doc_2071",
      "target_id": "concept_2118",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.5791109
    },
    "rel_2275": {
      "id": "rel_2275",
      "source_id": "doc_2071",
      "target_id": "concept_2119",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.579494
    },
    "rel_2276": {
      "id": "rel_2276",
      "source_id": "doc_2071",
      "target_id": "concept_2120",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.579853
    },
    "rel_2277": {
      "id": "rel_2277",
      "source_id": "doc_2071",
      "target_id": "concept_2121",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.580228
    },
    "rel_2278": {
      "id": "rel_2278",
      "source_id": "doc_2071",
      "target_id": "concept_2122",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.5805938
    },
    "rel_2279": {
      "id": "rel_2279",
      "source_id": "doc_2071",
      "target_id": "concept_2123",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.580967
    },
    "rel_2280": {
      "id": "rel_2280",
      "source_id": "doc_2071",
      "target_id": "concept_2124",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.581321
    },
    "rel_2281": {
      "id": "rel_2281",
      "source_id": "doc_2071",
      "target_id": "concept_2125",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.581693
    },
    "rel_2282": {
      "id": "rel_2282",
      "source_id": "doc_2071",
      "target_id": "concept_2126",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.582093
    },
    "rel_2283": {
      "id": "rel_2283",
      "source_id": "doc_2071",
      "target_id": "concept_2127",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.582453
    },
    "rel_2284": {
      "id": "rel_2284",
      "source_id": "doc_2071",
      "target_id": "concept_2128",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.5828302
    },
    "rel_2285": {
      "id": "rel_2285",
      "source_id": "doc_2071",
      "target_id": "concept_2129",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.583188
    },
    "rel_2286": {
      "id": "rel_2286",
      "source_id": "doc_2071",
      "target_id": "concept_2130",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.583542
    },
    "rel_2287": {
      "id": "rel_2287",
      "source_id": "doc_2071",
      "target_id": "concept_2131",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.583897
    },
    "rel_2288": {
      "id": "rel_2288",
      "source_id": "doc_2071",
      "target_id": "concept_2132",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.5842502
    },
    "rel_2289": {
      "id": "rel_2289",
      "source_id": "doc_2071",
      "target_id": "concept_2133",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.584625
    },
    "rel_2290": {
      "id": "rel_2290",
      "source_id": "doc_2071",
      "target_id": "concept_2134",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.584985
    },
    "rel_2291": {
      "id": "rel_2291",
      "source_id": "doc_2071",
      "target_id": "concept_2135",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.585346
    },
    "rel_2292": {
      "id": "rel_2292",
      "source_id": "doc_2071",
      "target_id": "concept_2136",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.585736
    },
    "rel_2293": {
      "id": "rel_2293",
      "source_id": "doc_2071",
      "target_id": "concept_2137",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.5862029
    },
    "rel_2294": {
      "id": "rel_2294",
      "source_id": "doc_2071",
      "target_id": "concept_2138",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.5865972
    },
    "rel_2295": {
      "id": "rel_2295",
      "source_id": "doc_2071",
      "target_id": "concept_2139",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.587028
    },
    "rel_2296": {
      "id": "rel_2296",
      "source_id": "doc_2071",
      "target_id": "concept_2140",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.587399
    },
    "rel_2297": {
      "id": "rel_2297",
      "source_id": "doc_2071",
      "target_id": "concept_2141",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.5877519
    },
    "rel_2298": {
      "id": "rel_2298",
      "source_id": "doc_2071",
      "target_id": "concept_2142",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.58812
    },
    "rel_2299": {
      "id": "rel_2299",
      "source_id": "doc_2071",
      "target_id": "concept_2143",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.588468
    },
    "rel_2300": {
      "id": "rel_2300",
      "source_id": "doc_2071",
      "target_id": "concept_2144",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.588845
    },
    "rel_2301": {
      "id": "rel_2301",
      "source_id": "doc_2071",
      "target_id": "concept_2145",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.5892081
    },
    "rel_2302": {
      "id": "rel_2302",
      "source_id": "doc_2071",
      "target_id": "concept_2146",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.5895731
    },
    "rel_2303": {
      "id": "rel_2303",
      "source_id": "doc_2071",
      "target_id": "concept_2147",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.589968
    },
    "rel_2304": {
      "id": "rel_2304",
      "source_id": "doc_2071",
      "target_id": "concept_2148",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.5903249
    },
    "rel_2305": {
      "id": "rel_2305",
      "source_id": "doc_2071",
      "target_id": "concept_2149",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.590678
    },
    "rel_2306": {
      "id": "rel_2306",
      "source_id": "doc_2071",
      "target_id": "concept_2150",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.591059
    },
    "rel_2307": {
      "id": "rel_2307",
      "source_id": "doc_2071",
      "target_id": "concept_2151",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.5914161
    },
    "rel_2308": {
      "id": "rel_2308",
      "source_id": "doc_2071",
      "target_id": "concept_2152",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.5917718
    },
    "rel_2309": {
      "id": "rel_2309",
      "source_id": "doc_2071",
      "target_id": "concept_2153",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.5921211
    },
    "rel_2310": {
      "id": "rel_2310",
      "source_id": "doc_2071",
      "target_id": "concept_2154",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.5924668
    },
    "rel_2311": {
      "id": "rel_2311",
      "source_id": "doc_2071",
      "target_id": "concept_2155",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.59284
    },
    "rel_2312": {
      "id": "rel_2312",
      "source_id": "doc_2071",
      "target_id": "concept_2156",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.593197
    },
    "rel_2313": {
      "id": "rel_2313",
      "source_id": "doc_2071",
      "target_id": "concept_2157",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.593568
    },
    "rel_2314": {
      "id": "rel_2314",
      "source_id": "doc_2071",
      "target_id": "concept_2158",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.593947
    },
    "rel_2315": {
      "id": "rel_2315",
      "source_id": "doc_2071",
      "target_id": "concept_2075",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.594288
    },
    "rel_2316": {
      "id": "rel_2316",
      "source_id": "doc_2071",
      "target_id": "concept_2159",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.5946429
    },
    "rel_2317": {
      "id": "rel_2317",
      "source_id": "doc_2071",
      "target_id": "concept_2160",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.595
    },
    "rel_2318": {
      "id": "rel_2318",
      "source_id": "doc_2071",
      "target_id": "concept_2161",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.595364
    },
    "rel_2319": {
      "id": "rel_2319",
      "source_id": "doc_2071",
      "target_id": "concept_2162",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.595739
    },
    "rel_2320": {
      "id": "rel_2320",
      "source_id": "doc_2071",
      "target_id": "concept_2163",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.596184
    },
    "rel_2321": {
      "id": "rel_2321",
      "source_id": "doc_2071",
      "target_id": "concept_2164",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.596544
    },
    "rel_2322": {
      "id": "rel_2322",
      "source_id": "doc_2071",
      "target_id": "concept_2165",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.596902
    },
    "rel_2323": {
      "id": "rel_2323",
      "source_id": "doc_2071",
      "target_id": "concept_2166",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.597295
    },
    "rel_2324": {
      "id": "rel_2324",
      "source_id": "doc_2071",
      "target_id": "concept_2167",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.5976472
    },
    "rel_2325": {
      "id": "rel_2325",
      "source_id": "doc_2071",
      "target_id": "concept_2168",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.597995
    },
    "rel_2326": {
      "id": "rel_2326",
      "source_id": "doc_2071",
      "target_id": "concept_2169",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.598484
    },
    "rel_2327": {
      "id": "rel_2327",
      "source_id": "doc_2071",
      "target_id": "concept_2170",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.59886
    },
    "rel_2328": {
      "id": "rel_2328",
      "source_id": "doc_2071",
      "target_id": "concept_475",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.598958
    },
    "rel_2329": {
      "id": "rel_2329",
      "source_id": "doc_2071",
      "target_id": "concept_2171",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.599319
    },
    "rel_2330": {
      "id": "rel_2330",
      "source_id": "doc_2071",
      "target_id": "concept_2172",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.599675
    },
    "rel_2331": {
      "id": "rel_2331",
      "source_id": "doc_2071",
      "target_id": "concept_2173",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.600021
    },
    "rel_2332": {
      "id": "rel_2332",
      "source_id": "doc_2071",
      "target_id": "concept_2174",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.600367
    },
    "rel_2333": {
      "id": "rel_2333",
      "source_id": "doc_2071",
      "target_id": "concept_2175",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.600725
    },
    "rel_2334": {
      "id": "rel_2334",
      "source_id": "doc_2071",
      "target_id": "concept_2176",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.60109
    },
    "rel_2335": {
      "id": "rel_2335",
      "source_id": "doc_2071",
      "target_id": "concept_2177",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.601441
    },
    "rel_2336": {
      "id": "rel_2336",
      "source_id": "doc_2071",
      "target_id": "concept_2178",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.601811
    },
    "rel_2337": {
      "id": "rel_2337",
      "source_id": "doc_2071",
      "target_id": "concept_2179",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.602188
    },
    "rel_2338": {
      "id": "rel_2338",
      "source_id": "doc_2071",
      "target_id": "concept_2180",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.602568
    },
    "rel_2339": {
      "id": "rel_2339",
      "source_id": "doc_2071",
      "target_id": "concept_2181",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.602922
    },
    "rel_2340": {
      "id": "rel_2340",
      "source_id": "doc_2071",
      "target_id": "concept_2182",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.603275
    },
    "rel_2341": {
      "id": "rel_2341",
      "source_id": "doc_2071",
      "target_id": "concept_2183",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.6036322
    },
    "rel_2342": {
      "id": "rel_2342",
      "source_id": "doc_2071",
      "target_id": "concept_2184",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.603992
    },
    "rel_2343": {
      "id": "rel_2343",
      "source_id": "doc_2071",
      "target_id": "concept_2185",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.6043441
    },
    "rel_2344": {
      "id": "rel_2344",
      "source_id": "doc_2071",
      "target_id": "concept_2186",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.604702
    },
    "rel_2345": {
      "id": "rel_2345",
      "source_id": "doc_2071",
      "target_id": "concept_2187",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.6050901
    },
    "rel_2346": {
      "id": "rel_2346",
      "source_id": "doc_2071",
      "target_id": "concept_2188",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.605464
    },
    "rel_2347": {
      "id": "rel_2347",
      "source_id": "doc_2071",
      "target_id": "concept_2189",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.605856
    },
    "rel_2348": {
      "id": "rel_2348",
      "source_id": "doc_2071",
      "target_id": "concept_2190",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.606466
    },
    "rel_2349": {
      "id": "rel_2349",
      "source_id": "doc_2071",
      "target_id": "concept_2191",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.606883
    },
    "rel_2350": {
      "id": "rel_2350",
      "source_id": "doc_2071",
      "target_id": "concept_2192",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.607272
    },
    "rel_2351": {
      "id": "rel_2351",
      "source_id": "doc_2071",
      "target_id": "concept_2193",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.60763
    },
    "rel_2352": {
      "id": "rel_2352",
      "source_id": "doc_2071",
      "target_id": "concept_2194",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.607984
    },
    "rel_2353": {
      "id": "rel_2353",
      "source_id": "doc_2071",
      "target_id": "concept_2195",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.608342
    },
    "rel_2354": {
      "id": "rel_2354",
      "source_id": "doc_2071",
      "target_id": "concept_2196",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.6086998
    },
    "rel_2355": {
      "id": "rel_2355",
      "source_id": "doc_2071",
      "target_id": "concept_2197",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.6090722
    },
    "rel_2356": {
      "id": "rel_2356",
      "source_id": "doc_2071",
      "target_id": "concept_2198",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.6094542
    },
    "rel_2357": {
      "id": "rel_2357",
      "source_id": "doc_2071",
      "target_id": "concept_2199",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.609822
    },
    "rel_2358": {
      "id": "rel_2358",
      "source_id": "doc_2071",
      "target_id": "concept_2200",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.610177
    },
    "rel_2359": {
      "id": "rel_2359",
      "source_id": "doc_2071",
      "target_id": "concept_2201",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.610532
    },
    "rel_2360": {
      "id": "rel_2360",
      "source_id": "doc_2071",
      "target_id": "concept_2202",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.61088
    },
    "rel_2361": {
      "id": "rel_2361",
      "source_id": "doc_2071",
      "target_id": "concept_2203",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.611236
    },
    "rel_2362": {
      "id": "rel_2362",
      "source_id": "doc_2071",
      "target_id": "concept_2204",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.6116202
    },
    "rel_2363": {
      "id": "rel_2363",
      "source_id": "doc_2071",
      "target_id": "concept_2205",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.611999
    },
    "rel_2364": {
      "id": "rel_2364",
      "source_id": "doc_2071",
      "target_id": "concept_2206",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.612353
    },
    "rel_2365": {
      "id": "rel_2365",
      "source_id": "doc_2071",
      "target_id": "concept_2207",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.612708
    },
    "rel_2366": {
      "id": "rel_2366",
      "source_id": "doc_2071",
      "target_id": "concept_2208",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.613055
    },
    "rel_2367": {
      "id": "rel_2367",
      "source_id": "doc_2071",
      "target_id": "concept_2209",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.61341
    },
    "rel_2368": {
      "id": "rel_2368",
      "source_id": "doc_2071",
      "target_id": "concept_2210",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.6137578
    },
    "rel_2369": {
      "id": "rel_2369",
      "source_id": "doc_2071",
      "target_id": "concept_2211",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.614104
    },
    "rel_2370": {
      "id": "rel_2370",
      "source_id": "doc_2071",
      "target_id": "concept_2212",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.614458
    },
    "rel_2371": {
      "id": "rel_2371",
      "source_id": "doc_2071",
      "target_id": "concept_2213",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.614836
    },
    "rel_2372": {
      "id": "rel_2372",
      "source_id": "doc_2071",
      "target_id": "concept_2214",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.615208
    },
    "rel_2373": {
      "id": "rel_2373",
      "source_id": "doc_2071",
      "target_id": "concept_2215",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.615561
    },
    "rel_2374": {
      "id": "rel_2374",
      "source_id": "doc_2071",
      "target_id": "concept_2216",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.615969
    },
    "rel_2375": {
      "id": "rel_2375",
      "source_id": "doc_2071",
      "target_id": "concept_2217",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.61639
    },
    "rel_2376": {
      "id": "rel_2376",
      "source_id": "doc_2071",
      "target_id": "concept_2218",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.6168032
    },
    "rel_2377": {
      "id": "rel_2377",
      "source_id": "doc_2071",
      "target_id": "concept_2219",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.6172018
    },
    "rel_2378": {
      "id": "rel_2378",
      "source_id": "doc_2071",
      "target_id": "concept_2220",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.6175559
    },
    "rel_2379": {
      "id": "rel_2379",
      "source_id": "doc_2071",
      "target_id": "concept_2221",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.617909
    },
    "rel_2380": {
      "id": "rel_2380",
      "source_id": "doc_2071",
      "target_id": "concept_2222",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.618287
    },
    "rel_2381": {
      "id": "rel_2381",
      "source_id": "doc_2223",
      "target_id": "concept_2224",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.620975
    },
    "rel_2382": {
      "id": "rel_2382",
      "source_id": "doc_2223",
      "target_id": "concept_2225",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.621341
    },
    "rel_2383": {
      "id": "rel_2383",
      "source_id": "doc_2223",
      "target_id": "concept_2226",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.6217222
    },
    "rel_2384": {
      "id": "rel_2384",
      "source_id": "doc_2223",
      "target_id": "concept_2227",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.6220999
    },
    "rel_2385": {
      "id": "rel_2385",
      "source_id": "doc_2223",
      "target_id": "concept_2228",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.6224651
    },
    "rel_2386": {
      "id": "rel_2386",
      "source_id": "doc_2223",
      "target_id": "concept_2229",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.622827
    },
    "rel_2387": {
      "id": "rel_2387",
      "source_id": "doc_2223",
      "target_id": "concept_2230",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.623198
    },
    "rel_2388": {
      "id": "rel_2388",
      "source_id": "doc_2223",
      "target_id": "concept_2085",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.6235452
    },
    "rel_2389": {
      "id": "rel_2389",
      "source_id": "doc_2223",
      "target_id": "concept_95",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.623573
    },
    "rel_2390": {
      "id": "rel_2390",
      "source_id": "doc_2223",
      "target_id": "concept_2231",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.623932
    },
    "rel_2391": {
      "id": "rel_2391",
      "source_id": "doc_2223",
      "target_id": "concept_101",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.623956
    },
    "rel_2392": {
      "id": "rel_2392",
      "source_id": "doc_2223",
      "target_id": "concept_2232",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.624335
    },
    "rel_2393": {
      "id": "rel_2393",
      "source_id": "doc_2223",
      "target_id": "concept_2233",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.6248472
    },
    "rel_2394": {
      "id": "rel_2394",
      "source_id": "doc_2223",
      "target_id": "concept_2234",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.625237
    },
    "rel_2395": {
      "id": "rel_2395",
      "source_id": "doc_2223",
      "target_id": "concept_2235",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.625619
    },
    "rel_2396": {
      "id": "rel_2396",
      "source_id": "doc_2223",
      "target_id": "concept_105",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.625651
    },
    "rel_2397": {
      "id": "rel_2397",
      "source_id": "doc_2223",
      "target_id": "concept_2236",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.62609
    },
    "rel_2398": {
      "id": "rel_2398",
      "source_id": "doc_2223",
      "target_id": "concept_82",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.626118
    },
    "rel_2399": {
      "id": "rel_2399",
      "source_id": "doc_2223",
      "target_id": "concept_2237",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.6265569
    },
    "rel_2400": {
      "id": "rel_2400",
      "source_id": "doc_2223",
      "target_id": "concept_104",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.626582
    },
    "rel_2401": {
      "id": "rel_2401",
      "source_id": "doc_2223",
      "target_id": "concept_2238",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.626945
    },
    "rel_2402": {
      "id": "rel_2402",
      "source_id": "doc_2223",
      "target_id": "concept_83",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.6269681
    },
    "rel_2403": {
      "id": "rel_2403",
      "source_id": "doc_2223",
      "target_id": "concept_84",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.6269891
    },
    "rel_2404": {
      "id": "rel_2404",
      "source_id": "doc_2223",
      "target_id": "concept_2239",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.6273952
    },
    "rel_2405": {
      "id": "rel_2405",
      "source_id": "doc_2223",
      "target_id": "concept_2240",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.627764
    },
    "rel_2406": {
      "id": "rel_2406",
      "source_id": "doc_2223",
      "target_id": "concept_26",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.627774
    },
    "rel_2407": {
      "id": "rel_2407",
      "source_id": "doc_2223",
      "target_id": "concept_2241",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.628142
    },
    "rel_2408": {
      "id": "rel_2408",
      "source_id": "doc_2223",
      "target_id": "concept_2242",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.628546
    },
    "rel_2409": {
      "id": "rel_2409",
      "source_id": "doc_2223",
      "target_id": "concept_2243",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.62891
    },
    "rel_2410": {
      "id": "rel_2410",
      "source_id": "doc_2223",
      "target_id": "concept_2244",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.629272
    },
    "rel_2411": {
      "id": "rel_2411",
      "source_id": "doc_2223",
      "target_id": "concept_89",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.629295
    },
    "rel_2412": {
      "id": "rel_2412",
      "source_id": "doc_2223",
      "target_id": "concept_2245",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.629647
    },
    "rel_2413": {
      "id": "rel_2413",
      "source_id": "doc_2223",
      "target_id": "concept_92",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.6296709
    },
    "rel_2414": {
      "id": "rel_2414",
      "source_id": "doc_2223",
      "target_id": "concept_93",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.629693
    },
    "rel_2415": {
      "id": "rel_2415",
      "source_id": "doc_2223",
      "target_id": "concept_96",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.629832
    },
    "rel_2416": {
      "id": "rel_2416",
      "source_id": "doc_2223",
      "target_id": "concept_2246",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.630223
    },
    "rel_2417": {
      "id": "rel_2417",
      "source_id": "doc_2223",
      "target_id": "concept_98",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.6302478
    },
    "rel_2418": {
      "id": "rel_2418",
      "source_id": "doc_2223",
      "target_id": "concept_2247",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.6306229
    },
    "rel_2419": {
      "id": "rel_2419",
      "source_id": "doc_2223",
      "target_id": "concept_2248",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.630986
    },
    "rel_2420": {
      "id": "rel_2420",
      "source_id": "doc_2223",
      "target_id": "concept_2249",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.6314209
    },
    "rel_2421": {
      "id": "rel_2421",
      "source_id": "doc_2223",
      "target_id": "concept_2250",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.6318588
    },
    "rel_2422": {
      "id": "rel_2422",
      "source_id": "doc_2223",
      "target_id": "concept_2251",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.632235
    },
    "rel_2423": {
      "id": "rel_2423",
      "source_id": "doc_2223",
      "target_id": "concept_2252",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.632786
    },
    "rel_2424": {
      "id": "rel_2424",
      "source_id": "doc_2223",
      "target_id": "concept_2253",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.633237
    },
    "rel_2425": {
      "id": "rel_2425",
      "source_id": "doc_2223",
      "target_id": "concept_86",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.6332622
    },
    "rel_2426": {
      "id": "rel_2426",
      "source_id": "doc_2223",
      "target_id": "concept_87",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.633284
    },
    "rel_2427": {
      "id": "rel_2427",
      "source_id": "doc_2223",
      "target_id": "concept_2254",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.6336482
    },
    "rel_2428": {
      "id": "rel_2428",
      "source_id": "doc_2223",
      "target_id": "concept_88",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.633672
    },
    "rel_2429": {
      "id": "rel_2429",
      "source_id": "doc_2223",
      "target_id": "concept_2255",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.634052
    },
    "rel_2430": {
      "id": "rel_2430",
      "source_id": "doc_2223",
      "target_id": "concept_2256",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.634422
    },
    "rel_2431": {
      "id": "rel_2431",
      "source_id": "doc_2223",
      "target_id": "concept_91",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.634447
    },
    "rel_2432": {
      "id": "rel_2432",
      "source_id": "doc_2223",
      "target_id": "concept_94",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.6344728
    },
    "rel_2433": {
      "id": "rel_2433",
      "source_id": "doc_2223",
      "target_id": "concept_2257",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.634832
    },
    "rel_2434": {
      "id": "rel_2434",
      "source_id": "doc_2223",
      "target_id": "concept_2258",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.635205
    },
    "rel_2435": {
      "id": "rel_2435",
      "source_id": "doc_2223",
      "target_id": "concept_2259",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.635595
    },
    "rel_2436": {
      "id": "rel_2436",
      "source_id": "doc_2223",
      "target_id": "concept_2260",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.635971
    },
    "rel_2437": {
      "id": "rel_2437",
      "source_id": "doc_2223",
      "target_id": "concept_103",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.6360152
    },
    "rel_2438": {
      "id": "rel_2438",
      "source_id": "doc_2223",
      "target_id": "concept_81",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.6360462
    },
    "rel_2439": {
      "id": "rel_2439",
      "source_id": "doc_2223",
      "target_id": "concept_2261",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.636458
    },
    "rel_2440": {
      "id": "rel_2440",
      "source_id": "doc_2223",
      "target_id": "concept_2262",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.636829
    },
    "rel_2441": {
      "id": "rel_2441",
      "source_id": "doc_2223",
      "target_id": "concept_2263",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.637279
    },
    "rel_2442": {
      "id": "rel_2442",
      "source_id": "doc_2223",
      "target_id": "concept_2264",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.637652
    },
    "rel_2443": {
      "id": "rel_2443",
      "source_id": "doc_2223",
      "target_id": "concept_2265",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.638092
    },
    "rel_2444": {
      "id": "rel_2444",
      "source_id": "doc_2223",
      "target_id": "concept_2266",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.638462
    },
    "rel_2445": {
      "id": "rel_2445",
      "source_id": "doc_2223",
      "target_id": "concept_2185",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.6388102
    },
    "rel_2446": {
      "id": "rel_2446",
      "source_id": "doc_2223",
      "target_id": "concept_85",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.6388328
    },
    "rel_2447": {
      "id": "rel_2447",
      "source_id": "doc_2223",
      "target_id": "concept_2267",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.63922
    },
    "rel_2448": {
      "id": "rel_2448",
      "source_id": "doc_2223",
      "target_id": "concept_90",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.639242
    },
    "rel_2449": {
      "id": "rel_2449",
      "source_id": "doc_2223",
      "target_id": "concept_2268",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.6396039
    },
    "rel_2450": {
      "id": "rel_2450",
      "source_id": "doc_2223",
      "target_id": "concept_2269",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.64006
    },
    "rel_2451": {
      "id": "rel_2451",
      "source_id": "doc_2223",
      "target_id": "concept_2270",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.640496
    },
    "rel_2452": {
      "id": "rel_2452",
      "source_id": "doc_2223",
      "target_id": "concept_2271",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.641024
    },
    "rel_2453": {
      "id": "rel_2453",
      "source_id": "doc_2223",
      "target_id": "concept_2272",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.641431
    },
    "rel_2454": {
      "id": "rel_2454",
      "source_id": "doc_2223",
      "target_id": "concept_2273",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.64182
    },
    "rel_2455": {
      "id": "rel_2455",
      "source_id": "doc_2223",
      "target_id": "concept_2274",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.64219
    },
    "rel_2456": {
      "id": "rel_2456",
      "source_id": "doc_2223",
      "target_id": "concept_97",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.642216
    },
    "rel_2457": {
      "id": "rel_2457",
      "source_id": "doc_2223",
      "target_id": "concept_2275",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.64259
    },
    "rel_2458": {
      "id": "rel_2458",
      "source_id": "doc_2223",
      "target_id": "concept_99",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.642615
    },
    "rel_2459": {
      "id": "rel_2459",
      "source_id": "doc_2223",
      "target_id": "concept_100",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.6426399
    },
    "rel_2460": {
      "id": "rel_2460",
      "source_id": "doc_2223",
      "target_id": "concept_102",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.642664
    },
    "rel_2461": {
      "id": "rel_2461",
      "source_id": "doc_2223",
      "target_id": "concept_2276",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.643042
    },
    "rel_2462": {
      "id": "rel_2462",
      "source_id": "doc_2223",
      "target_id": "concept_2277",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.64341
    },
    "rel_2463": {
      "id": "rel_2463",
      "source_id": "doc_2223",
      "target_id": "concept_79",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.643431
    },
    "rel_2464": {
      "id": "rel_2464",
      "source_id": "doc_2223",
      "target_id": "concept_2278",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.643809
    },
    "rel_2465": {
      "id": "rel_2465",
      "source_id": "doc_2279",
      "target_id": "concept_2280",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.653295
    },
    "rel_2466": {
      "id": "rel_2466",
      "source_id": "doc_2279",
      "target_id": "concept_2281",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.653663
    },
    "rel_2467": {
      "id": "rel_2467",
      "source_id": "doc_2279",
      "target_id": "concept_2282",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.6540291
    },
    "rel_2468": {
      "id": "rel_2468",
      "source_id": "doc_2279",
      "target_id": "concept_2283",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.6543932
    },
    "rel_2469": {
      "id": "rel_2469",
      "source_id": "doc_2279",
      "target_id": "concept_2284",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.6547682
    },
    "rel_2470": {
      "id": "rel_2470",
      "source_id": "doc_2279",
      "target_id": "concept_2285",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.655133
    },
    "rel_2471": {
      "id": "rel_2471",
      "source_id": "doc_2279",
      "target_id": "concept_2286",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.655496
    },
    "rel_2472": {
      "id": "rel_2472",
      "source_id": "doc_2279",
      "target_id": "concept_2287",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.655877
    },
    "rel_2473": {
      "id": "rel_2473",
      "source_id": "doc_2279",
      "target_id": "concept_2230",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.6562428
    },
    "rel_2474": {
      "id": "rel_2474",
      "source_id": "doc_2279",
      "target_id": "concept_2085",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.6566038
    },
    "rel_2475": {
      "id": "rel_2475",
      "source_id": "doc_2279",
      "target_id": "concept_2288",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.6570408
    },
    "rel_2476": {
      "id": "rel_2476",
      "source_id": "doc_2279",
      "target_id": "concept_2289",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.6575391
    },
    "rel_2477": {
      "id": "rel_2477",
      "source_id": "doc_2279",
      "target_id": "concept_2290",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.657985
    },
    "rel_2478": {
      "id": "rel_2478",
      "source_id": "doc_2279",
      "target_id": "concept_2095",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.658441
    },
    "rel_2479": {
      "id": "rel_2479",
      "source_id": "doc_2279",
      "target_id": "concept_2097",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.658805
    },
    "rel_2480": {
      "id": "rel_2480",
      "source_id": "doc_2279",
      "target_id": "concept_2291",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.659188
    },
    "rel_2481": {
      "id": "rel_2481",
      "source_id": "doc_2279",
      "target_id": "concept_2292",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.65955
    },
    "rel_2482": {
      "id": "rel_2482",
      "source_id": "doc_2279",
      "target_id": "concept_2293",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.659947
    },
    "rel_2483": {
      "id": "rel_2483",
      "source_id": "doc_2279",
      "target_id": "concept_2294",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.6603441
    },
    "rel_2484": {
      "id": "rel_2484",
      "source_id": "doc_2279",
      "target_id": "concept_2295",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.660743
    },
    "rel_2485": {
      "id": "rel_2485",
      "source_id": "doc_2279",
      "target_id": "concept_345",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.660827
    },
    "rel_2486": {
      "id": "rel_2486",
      "source_id": "doc_2279",
      "target_id": "concept_2296",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.6612182
    },
    "rel_2487": {
      "id": "rel_2487",
      "source_id": "doc_2279",
      "target_id": "concept_2297",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.661607
    },
    "rel_2488": {
      "id": "rel_2488",
      "source_id": "doc_2279",
      "target_id": "concept_2298",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.662011
    },
    "rel_2489": {
      "id": "rel_2489",
      "source_id": "doc_2279",
      "target_id": "concept_2299",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.6624582
    },
    "rel_2490": {
      "id": "rel_2490",
      "source_id": "doc_2279",
      "target_id": "concept_2300",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.6628559
    },
    "rel_2491": {
      "id": "rel_2491",
      "source_id": "doc_2279",
      "target_id": "concept_2301",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.663223
    },
    "rel_2492": {
      "id": "rel_2492",
      "source_id": "doc_2279",
      "target_id": "concept_2302",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.663593
    },
    "rel_2493": {
      "id": "rel_2493",
      "source_id": "doc_2279",
      "target_id": "concept_2303",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.663979
    },
    "rel_2494": {
      "id": "rel_2494",
      "source_id": "doc_2279",
      "target_id": "concept_2304",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.6643689
    },
    "rel_2495": {
      "id": "rel_2495",
      "source_id": "doc_2279",
      "target_id": "concept_2305",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.6647491
    },
    "rel_2496": {
      "id": "rel_2496",
      "source_id": "doc_2279",
      "target_id": "concept_2306",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.665209
    },
    "rel_2497": {
      "id": "rel_2497",
      "source_id": "doc_2279",
      "target_id": "concept_2307",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.665646
    },
    "rel_2498": {
      "id": "rel_2498",
      "source_id": "doc_2279",
      "target_id": "concept_2243",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.666024
    },
    "rel_2499": {
      "id": "rel_2499",
      "source_id": "doc_2279",
      "target_id": "concept_2308",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.6664069
    },
    "rel_2500": {
      "id": "rel_2500",
      "source_id": "doc_2279",
      "target_id": "concept_2309",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.666775
    },
    "rel_2501": {
      "id": "rel_2501",
      "source_id": "doc_2279",
      "target_id": "concept_2310",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.667165
    },
    "rel_2502": {
      "id": "rel_2502",
      "source_id": "doc_2279",
      "target_id": "concept_2311",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.667532
    },
    "rel_2503": {
      "id": "rel_2503",
      "source_id": "doc_2279",
      "target_id": "concept_2312",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.6679108
    },
    "rel_2504": {
      "id": "rel_2504",
      "source_id": "doc_2279",
      "target_id": "concept_2313",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.6683462
    },
    "rel_2505": {
      "id": "rel_2505",
      "source_id": "doc_2279",
      "target_id": "concept_2138",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.6687381
    },
    "rel_2506": {
      "id": "rel_2506",
      "source_id": "doc_2279",
      "target_id": "concept_2314",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.669132
    },
    "rel_2507": {
      "id": "rel_2507",
      "source_id": "doc_2279",
      "target_id": "concept_2315",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.669514
    },
    "rel_2508": {
      "id": "rel_2508",
      "source_id": "doc_2279",
      "target_id": "concept_2316",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.669889
    },
    "rel_2509": {
      "id": "rel_2509",
      "source_id": "doc_2279",
      "target_id": "concept_2317",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.670323
    },
    "rel_2510": {
      "id": "rel_2510",
      "source_id": "doc_2279",
      "target_id": "concept_2318",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.670743
    },
    "rel_2511": {
      "id": "rel_2511",
      "source_id": "doc_2279",
      "target_id": "concept_2319",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.671178
    },
    "rel_2512": {
      "id": "rel_2512",
      "source_id": "doc_2279",
      "target_id": "concept_2320",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.671558
    },
    "rel_2513": {
      "id": "rel_2513",
      "source_id": "doc_2279",
      "target_id": "concept_2321",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.6719182
    },
    "rel_2514": {
      "id": "rel_2514",
      "source_id": "doc_2279",
      "target_id": "concept_2322",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.672288
    },
    "rel_2515": {
      "id": "rel_2515",
      "source_id": "doc_2279",
      "target_id": "concept_2323",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.672649
    },
    "rel_2516": {
      "id": "rel_2516",
      "source_id": "doc_2279",
      "target_id": "concept_2324",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.673012
    },
    "rel_2517": {
      "id": "rel_2517",
      "source_id": "doc_2279",
      "target_id": "concept_2325",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.673449
    },
    "rel_2518": {
      "id": "rel_2518",
      "source_id": "doc_2279",
      "target_id": "concept_2326",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.673834
    },
    "rel_2519": {
      "id": "rel_2519",
      "source_id": "doc_2279",
      "target_id": "concept_2327",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.6742022
    },
    "rel_2520": {
      "id": "rel_2520",
      "source_id": "doc_2279",
      "target_id": "concept_2328",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.6745799
    },
    "rel_2521": {
      "id": "rel_2521",
      "source_id": "doc_2279",
      "target_id": "concept_2154",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.674927
    },
    "rel_2522": {
      "id": "rel_2522",
      "source_id": "doc_2279",
      "target_id": "concept_2329",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.6753001
    },
    "rel_2523": {
      "id": "rel_2523",
      "source_id": "doc_2279",
      "target_id": "concept_2330",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.675663
    },
    "rel_2524": {
      "id": "rel_2524",
      "source_id": "doc_2279",
      "target_id": "concept_2331",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.676034
    },
    "rel_2525": {
      "id": "rel_2525",
      "source_id": "doc_2279",
      "target_id": "concept_439",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.67613
    },
    "rel_2526": {
      "id": "rel_2526",
      "source_id": "doc_2279",
      "target_id": "concept_2332",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.6764932
    },
    "rel_2527": {
      "id": "rel_2527",
      "source_id": "doc_2279",
      "target_id": "concept_2333",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.6768599
    },
    "rel_2528": {
      "id": "rel_2528",
      "source_id": "doc_2279",
      "target_id": "concept_2334",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.6772249
    },
    "rel_2529": {
      "id": "rel_2529",
      "source_id": "doc_2279",
      "target_id": "concept_2335",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.677602
    },
    "rel_2530": {
      "id": "rel_2530",
      "source_id": "doc_2279",
      "target_id": "concept_2336",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.67797
    },
    "rel_2531": {
      "id": "rel_2531",
      "source_id": "doc_2279",
      "target_id": "concept_2337",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.678415
    },
    "rel_2532": {
      "id": "rel_2532",
      "source_id": "doc_2279",
      "target_id": "concept_2338",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.6789
    },
    "rel_2533": {
      "id": "rel_2533",
      "source_id": "doc_2279",
      "target_id": "concept_475",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.6790028
    },
    "rel_2534": {
      "id": "rel_2534",
      "source_id": "doc_2279",
      "target_id": "concept_2339",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.679496
    },
    "rel_2535": {
      "id": "rel_2535",
      "source_id": "doc_2279",
      "target_id": "concept_2340",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.67988
    },
    "rel_2536": {
      "id": "rel_2536",
      "source_id": "doc_2279",
      "target_id": "concept_2341",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.680258
    },
    "rel_2537": {
      "id": "rel_2537",
      "source_id": "doc_2279",
      "target_id": "concept_2342",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.680637
    },
    "rel_2538": {
      "id": "rel_2538",
      "source_id": "doc_2279",
      "target_id": "concept_2343",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.6810172
    },
    "rel_2539": {
      "id": "rel_2539",
      "source_id": "doc_2279",
      "target_id": "concept_2344",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.6813939
    },
    "rel_2540": {
      "id": "rel_2540",
      "source_id": "doc_2279",
      "target_id": "concept_2345",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.6818151
    },
    "rel_2541": {
      "id": "rel_2541",
      "source_id": "doc_2279",
      "target_id": "concept_2262",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.682176
    },
    "rel_2542": {
      "id": "rel_2542",
      "source_id": "doc_2279",
      "target_id": "concept_2346",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.682546
    },
    "rel_2543": {
      "id": "rel_2543",
      "source_id": "doc_2279",
      "target_id": "concept_2347",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.682909
    },
    "rel_2544": {
      "id": "rel_2544",
      "source_id": "doc_2279",
      "target_id": "concept_2185",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.6832561
    },
    "rel_2545": {
      "id": "rel_2545",
      "source_id": "doc_2279",
      "target_id": "concept_2348",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.683638
    },
    "rel_2546": {
      "id": "rel_2546",
      "source_id": "doc_2279",
      "target_id": "concept_2349",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.684006
    },
    "rel_2547": {
      "id": "rel_2547",
      "source_id": "doc_2279",
      "target_id": "concept_2350",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.684368
    },
    "rel_2548": {
      "id": "rel_2548",
      "source_id": "doc_2279",
      "target_id": "concept_2351",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.684737
    },
    "rel_2549": {
      "id": "rel_2549",
      "source_id": "doc_2279",
      "target_id": "concept_2352",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.685112
    },
    "rel_2550": {
      "id": "rel_2550",
      "source_id": "doc_2279",
      "target_id": "concept_2353",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.685481
    },
    "rel_2551": {
      "id": "rel_2551",
      "source_id": "doc_2279",
      "target_id": "concept_2354",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.685844
    },
    "rel_2552": {
      "id": "rel_2552",
      "source_id": "doc_2279",
      "target_id": "concept_2355",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.6862059
    },
    "rel_2553": {
      "id": "rel_2553",
      "source_id": "doc_2279",
      "target_id": "concept_2202",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.6865542
    },
    "rel_2554": {
      "id": "rel_2554",
      "source_id": "doc_2279",
      "target_id": "concept_2356",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.686927
    },
    "rel_2555": {
      "id": "rel_2555",
      "source_id": "doc_2279",
      "target_id": "concept_2357",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.6872928
    },
    "rel_2556": {
      "id": "rel_2556",
      "source_id": "doc_2279",
      "target_id": "concept_2358",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.687668
    },
    "rel_2557": {
      "id": "rel_2557",
      "source_id": "doc_2279",
      "target_id": "concept_2359",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.6880379
    },
    "rel_2558": {
      "id": "rel_2558",
      "source_id": "doc_2279",
      "target_id": "concept_2360",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.688494
    },
    "rel_2559": {
      "id": "rel_2559",
      "source_id": "doc_2279",
      "target_id": "concept_2361",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.6889868
    },
    "rel_2560": {
      "id": "rel_2560",
      "source_id": "doc_2279",
      "target_id": "concept_2362",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.689373
    },
    "rel_2561": {
      "id": "rel_2561",
      "source_id": "doc_2279",
      "target_id": "concept_2363",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.6898072
    },
    "rel_2562": {
      "id": "rel_2562",
      "source_id": "doc_2279",
      "target_id": "concept_2364",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.6902459
    },
    "rel_2563": {
      "id": "rel_2563",
      "source_id": "doc_2279",
      "target_id": "concept_2365",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.690636
    },
    "rel_2564": {
      "id": "rel_2564",
      "source_id": "doc_2279",
      "target_id": "concept_2366",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.691008
    },
    "rel_2565": {
      "id": "rel_2565",
      "source_id": "doc_2279",
      "target_id": "concept_2367",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.6913862
    },
    "rel_2566": {
      "id": "rel_2566",
      "source_id": "doc_2279",
      "target_id": "concept_2368",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.691767
    },
    "rel_2567": {
      "id": "rel_2567",
      "source_id": "doc_2369",
      "target_id": "concept_2237",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.6954691
    },
    "rel_2568": {
      "id": "rel_2568",
      "source_id": "doc_2369",
      "target_id": "concept_2262",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.695827
    },
    "rel_2569": {
      "id": "rel_2569",
      "source_id": "doc_2369",
      "target_id": "concept_2370",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.6962
    },
    "rel_2570": {
      "id": "rel_2570",
      "source_id": "doc_2369",
      "target_id": "concept_2371",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.6965802
    },
    "rel_2571": {
      "id": "rel_2571",
      "source_id": "doc_2369",
      "target_id": "concept_2372",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.69694
    },
    "rel_2572": {
      "id": "rel_2572",
      "source_id": "doc_2369",
      "target_id": "concept_2238",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.697292
    },
    "rel_2573": {
      "id": "rel_2573",
      "source_id": "doc_2369",
      "target_id": "concept_2373",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.697658
    },
    "rel_2574": {
      "id": "rel_2574",
      "source_id": "doc_2369",
      "target_id": "concept_2374",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.698128
    },
    "rel_2575": {
      "id": "rel_2575",
      "source_id": "doc_2369",
      "target_id": "concept_2375",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.6986449
    },
    "rel_2576": {
      "id": "rel_2576",
      "source_id": "doc_2369",
      "target_id": "concept_2376",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.69903
    },
    "rel_2577": {
      "id": "rel_2577",
      "source_id": "doc_2369",
      "target_id": "concept_2185",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.6993861
    },
    "rel_2578": {
      "id": "rel_2578",
      "source_id": "doc_2369",
      "target_id": "concept_2377",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.6997602
    },
    "rel_2579": {
      "id": "rel_2579",
      "source_id": "doc_2369",
      "target_id": "concept_2378",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.700136
    },
    "rel_2580": {
      "id": "rel_2580",
      "source_id": "doc_2369",
      "target_id": "concept_2379",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.700503
    },
    "rel_2581": {
      "id": "rel_2581",
      "source_id": "doc_2369",
      "target_id": "concept_2380",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.700877
    },
    "rel_2582": {
      "id": "rel_2582",
      "source_id": "doc_2369",
      "target_id": "concept_2381",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.70125
    },
    "rel_2583": {
      "id": "rel_2583",
      "source_id": "doc_2369",
      "target_id": "concept_2382",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.701628
    },
    "rel_2584": {
      "id": "rel_2584",
      "source_id": "doc_2369",
      "target_id": "concept_2383",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.701996
    },
    "rel_2585": {
      "id": "rel_2585",
      "source_id": "doc_2369",
      "target_id": "concept_2384",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.702367
    },
    "rel_2586": {
      "id": "rel_2586",
      "source_id": "doc_2369",
      "target_id": "concept_2243",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.70272
    },
    "rel_2587": {
      "id": "rel_2587",
      "source_id": "doc_2369",
      "target_id": "concept_2385",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.7031062
    },
    "rel_2588": {
      "id": "rel_2588",
      "source_id": "doc_2369",
      "target_id": "concept_2386",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.703485
    },
    "rel_2589": {
      "id": "rel_2589",
      "source_id": "doc_2369",
      "target_id": "concept_2387",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.703888
    },
    "rel_2590": {
      "id": "rel_2590",
      "source_id": "doc_2369",
      "target_id": "concept_2388",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.704271
    },
    "rel_2591": {
      "id": "rel_2591",
      "source_id": "doc_2369",
      "target_id": "concept_2389",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.7046452
    },
    "rel_2592": {
      "id": "rel_2592",
      "source_id": "doc_2369",
      "target_id": "concept_2390",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.705013
    },
    "rel_2593": {
      "id": "rel_2593",
      "source_id": "doc_2369",
      "target_id": "concept_2391",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.705375
    },
    "rel_2594": {
      "id": "rel_2594",
      "source_id": "doc_2369",
      "target_id": "concept_2392",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.705754
    },
    "rel_2595": {
      "id": "rel_2595",
      "source_id": "doc_2369",
      "target_id": "concept_2230",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.706112
    },
    "rel_2596": {
      "id": "rel_2596",
      "source_id": "doc_2369",
      "target_id": "concept_2085",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.7064488
    },
    "rel_2597": {
      "id": "rel_2597",
      "source_id": "doc_2369",
      "target_id": "concept_2393",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.7068238
    },
    "rel_2598": {
      "id": "rel_2598",
      "source_id": "doc_2369",
      "target_id": "concept_2394",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.7071989
    },
    "rel_2599": {
      "id": "rel_2599",
      "source_id": "doc_2369",
      "target_id": "concept_2395",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.707596
    },
    "rel_2600": {
      "id": "rel_2600",
      "source_id": "doc_2369",
      "target_id": "concept_2396",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.707965
    },
    "rel_2601": {
      "id": "rel_2601",
      "source_id": "doc_2369",
      "target_id": "concept_2397",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.7083452
    },
    "rel_2602": {
      "id": "rel_2602",
      "source_id": "doc_2369",
      "target_id": "concept_2398",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.708811
    },
    "rel_2603": {
      "id": "rel_2603",
      "source_id": "doc_2369",
      "target_id": "concept_2399",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.7092
    },
    "rel_2604": {
      "id": "rel_2604",
      "source_id": "doc_2369",
      "target_id": "concept_2400",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.7095969
    },
    "rel_2605": {
      "id": "rel_2605",
      "source_id": "doc_2369",
      "target_id": "concept_2401",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.710005
    },
    "rel_2606": {
      "id": "rel_2606",
      "source_id": "doc_2369",
      "target_id": "concept_2402",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.7104042
    },
    "rel_2607": {
      "id": "rel_2607",
      "source_id": "doc_2369",
      "target_id": "concept_2095",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.710774
    },
    "rel_2608": {
      "id": "rel_2608",
      "source_id": "doc_2369",
      "target_id": "concept_2403",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.711157
    },
    "rel_2609": {
      "id": "rel_2609",
      "source_id": "doc_2369",
      "target_id": "concept_2404",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.711541
    },
    "rel_2610": {
      "id": "rel_2610",
      "source_id": "doc_2369",
      "target_id": "concept_2405",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.711929
    },
    "rel_2611": {
      "id": "rel_2611",
      "source_id": "doc_2369",
      "target_id": "concept_2406",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.712377
    },
    "rel_2612": {
      "id": "rel_2612",
      "source_id": "doc_2369",
      "target_id": "concept_2407",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.7127612
    },
    "rel_2613": {
      "id": "rel_2613",
      "source_id": "doc_2369",
      "target_id": "concept_2337",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.713127
    },
    "rel_2614": {
      "id": "rel_2614",
      "source_id": "doc_2369",
      "target_id": "concept_2408",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.713498
    },
    "rel_2615": {
      "id": "rel_2615",
      "source_id": "doc_2369",
      "target_id": "concept_2409",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.7138839
    },
    "rel_2616": {
      "id": "rel_2616",
      "source_id": "doc_2369",
      "target_id": "concept_2410",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.714269
    },
    "rel_2617": {
      "id": "rel_2617",
      "source_id": "doc_2369",
      "target_id": "concept_2411",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.71464
    },
    "rel_2618": {
      "id": "rel_2618",
      "source_id": "doc_2369",
      "target_id": "concept_2412",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.715177
    },
    "rel_2619": {
      "id": "rel_2619",
      "source_id": "doc_2369",
      "target_id": "concept_2413",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.7156239
    },
    "rel_2620": {
      "id": "rel_2620",
      "source_id": "doc_2369",
      "target_id": "concept_2414",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.716029
    },
    "rel_2621": {
      "id": "rel_2621",
      "source_id": "doc_2369",
      "target_id": "concept_2415",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.716419
    },
    "rel_2622": {
      "id": "rel_2622",
      "source_id": "doc_2369",
      "target_id": "concept_2416",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.716792
    },
    "rel_2623": {
      "id": "rel_2623",
      "source_id": "doc_2369",
      "target_id": "concept_354",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.716865
    },
    "rel_2624": {
      "id": "rel_2624",
      "source_id": "doc_2369",
      "target_id": "concept_2417",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.71724
    },
    "rel_2625": {
      "id": "rel_2625",
      "source_id": "doc_2369",
      "target_id": "concept_2418",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.717611
    },
    "rel_2626": {
      "id": "rel_2626",
      "source_id": "doc_2369",
      "target_id": "concept_2419",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.7179809
    },
    "rel_2627": {
      "id": "rel_2627",
      "source_id": "doc_2420",
      "target_id": "concept_2421",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.723966
    },
    "rel_2628": {
      "id": "rel_2628",
      "source_id": "doc_2420",
      "target_id": "concept_2422",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.724344
    },
    "rel_2629": {
      "id": "rel_2629",
      "source_id": "doc_2420",
      "target_id": "concept_313",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.724406
    },
    "rel_2630": {
      "id": "rel_2630",
      "source_id": "doc_2420",
      "target_id": "concept_331",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.724472
    },
    "rel_2631": {
      "id": "rel_2631",
      "source_id": "doc_2420",
      "target_id": "concept_2286",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.724861
    },
    "rel_2632": {
      "id": "rel_2632",
      "source_id": "doc_2420",
      "target_id": "concept_2138",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.725219
    },
    "rel_2633": {
      "id": "rel_2633",
      "source_id": "doc_2420",
      "target_id": "concept_2423",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.725597
    },
    "rel_2634": {
      "id": "rel_2634",
      "source_id": "doc_2420",
      "target_id": "concept_2230",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.725965
    },
    "rel_2635": {
      "id": "rel_2635",
      "source_id": "doc_2420",
      "target_id": "concept_2085",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.726308
    },
    "rel_2636": {
      "id": "rel_2636",
      "source_id": "doc_2420",
      "target_id": "concept_2288",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.726679
    },
    "rel_2637": {
      "id": "rel_2637",
      "source_id": "doc_2420",
      "target_id": "concept_2424",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.727062
    },
    "rel_2638": {
      "id": "rel_2638",
      "source_id": "doc_2420",
      "target_id": "concept_2425",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.7274392
    },
    "rel_2639": {
      "id": "rel_2639",
      "source_id": "doc_2420",
      "target_id": "concept_2426",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.72782
    },
    "rel_2640": {
      "id": "rel_2640",
      "source_id": "doc_2420",
      "target_id": "concept_2290",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.728183
    },
    "rel_2641": {
      "id": "rel_2641",
      "source_id": "doc_2420",
      "target_id": "concept_2097",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.728605
    },
    "rel_2642": {
      "id": "rel_2642",
      "source_id": "doc_2420",
      "target_id": "concept_2427",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.729011
    },
    "rel_2643": {
      "id": "rel_2643",
      "source_id": "doc_2420",
      "target_id": "concept_2428",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.729383
    },
    "rel_2644": {
      "id": "rel_2644",
      "source_id": "doc_2420",
      "target_id": "concept_2429",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.72976
    },
    "rel_2645": {
      "id": "rel_2645",
      "source_id": "doc_2420",
      "target_id": "concept_2295",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.730141
    },
    "rel_2646": {
      "id": "rel_2646",
      "source_id": "doc_2420",
      "target_id": "concept_2430",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.730525
    },
    "rel_2647": {
      "id": "rel_2647",
      "source_id": "doc_2420",
      "target_id": "concept_2431",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.730926
    },
    "rel_2648": {
      "id": "rel_2648",
      "source_id": "doc_2420",
      "target_id": "concept_2432",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.731312
    },
    "rel_2649": {
      "id": "rel_2649",
      "source_id": "doc_2420",
      "target_id": "concept_2433",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.7317061
    },
    "rel_2650": {
      "id": "rel_2650",
      "source_id": "doc_2420",
      "target_id": "concept_2434",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.732099
    },
    "rel_2651": {
      "id": "rel_2651",
      "source_id": "doc_2420",
      "target_id": "concept_2301",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.7325351
    },
    "rel_2652": {
      "id": "rel_2652",
      "source_id": "doc_2420",
      "target_id": "concept_2302",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.732982
    },
    "rel_2653": {
      "id": "rel_2653",
      "source_id": "doc_2420",
      "target_id": "concept_2303",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.7333708
    },
    "rel_2654": {
      "id": "rel_2654",
      "source_id": "doc_2420",
      "target_id": "concept_2435",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.733752
    },
    "rel_2655": {
      "id": "rel_2655",
      "source_id": "doc_2420",
      "target_id": "concept_522",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.733856
    },
    "rel_2656": {
      "id": "rel_2656",
      "source_id": "doc_2420",
      "target_id": "concept_2243",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.734206
    },
    "rel_2657": {
      "id": "rel_2657",
      "source_id": "doc_2420",
      "target_id": "concept_2436",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.734582
    },
    "rel_2658": {
      "id": "rel_2658",
      "source_id": "doc_2420",
      "target_id": "concept_2437",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.734967
    },
    "rel_2659": {
      "id": "rel_2659",
      "source_id": "doc_2420",
      "target_id": "concept_2438",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.7353659
    },
    "rel_2660": {
      "id": "rel_2660",
      "source_id": "doc_2420",
      "target_id": "concept_2439",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.735764
    },
    "rel_2661": {
      "id": "rel_2661",
      "source_id": "doc_2420",
      "target_id": "concept_2308",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.736201
    },
    "rel_2662": {
      "id": "rel_2662",
      "source_id": "doc_2420",
      "target_id": "concept_2440",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.736602
    },
    "rel_2663": {
      "id": "rel_2663",
      "source_id": "doc_2420",
      "target_id": "concept_2441",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.7369778
    },
    "rel_2664": {
      "id": "rel_2664",
      "source_id": "doc_2420",
      "target_id": "concept_2442",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.737377
    },
    "rel_2665": {
      "id": "rel_2665",
      "source_id": "doc_2420",
      "target_id": "concept_2443",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.73776
    },
    "rel_2666": {
      "id": "rel_2666",
      "source_id": "doc_2420",
      "target_id": "concept_2444",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.738147
    },
    "rel_2667": {
      "id": "rel_2667",
      "source_id": "doc_2420",
      "target_id": "concept_2137",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.738493
    },
    "rel_2668": {
      "id": "rel_2668",
      "source_id": "doc_2420",
      "target_id": "concept_2311",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.739053
    },
    "rel_2669": {
      "id": "rel_2669",
      "source_id": "doc_2420",
      "target_id": "concept_2445",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.739553
    },
    "rel_2670": {
      "id": "rel_2670",
      "source_id": "doc_2420",
      "target_id": "concept_2446",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.740032
    },
    "rel_2671": {
      "id": "rel_2671",
      "source_id": "doc_2420",
      "target_id": "concept_2315",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.740843
    },
    "rel_2672": {
      "id": "rel_2672",
      "source_id": "doc_2420",
      "target_id": "concept_2447",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.741463
    },
    "rel_2673": {
      "id": "rel_2673",
      "source_id": "doc_2420",
      "target_id": "concept_2316",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.741869
    },
    "rel_2674": {
      "id": "rel_2674",
      "source_id": "doc_2420",
      "target_id": "concept_2448",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.7422998
    },
    "rel_2675": {
      "id": "rel_2675",
      "source_id": "doc_2420",
      "target_id": "concept_2449",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.7427
    },
    "rel_2676": {
      "id": "rel_2676",
      "source_id": "doc_2420",
      "target_id": "concept_2450",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.743089
    },
    "rel_2677": {
      "id": "rel_2677",
      "source_id": "doc_2420",
      "target_id": "concept_2323",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.743472
    },
    "rel_2678": {
      "id": "rel_2678",
      "source_id": "doc_2420",
      "target_id": "concept_2324",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.743864
    },
    "rel_2679": {
      "id": "rel_2679",
      "source_id": "doc_2420",
      "target_id": "concept_2451",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.74425
    },
    "rel_2680": {
      "id": "rel_2680",
      "source_id": "doc_2420",
      "target_id": "concept_2154",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.744601
    },
    "rel_2681": {
      "id": "rel_2681",
      "source_id": "doc_2420",
      "target_id": "concept_2329",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.7449799
    },
    "rel_2682": {
      "id": "rel_2682",
      "source_id": "doc_2420",
      "target_id": "concept_2452",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.7453818
    },
    "rel_2683": {
      "id": "rel_2683",
      "source_id": "doc_2420",
      "target_id": "concept_2160",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.745731
    },
    "rel_2684": {
      "id": "rel_2684",
      "source_id": "doc_2420",
      "target_id": "concept_2332",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.746091
    },
    "rel_2685": {
      "id": "rel_2685",
      "source_id": "doc_2420",
      "target_id": "concept_2453",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.746474
    },
    "rel_2686": {
      "id": "rel_2686",
      "source_id": "doc_2420",
      "target_id": "concept_2454",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.746876
    },
    "rel_2687": {
      "id": "rel_2687",
      "source_id": "doc_2420",
      "target_id": "concept_2333",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.747246
    },
    "rel_2688": {
      "id": "rel_2688",
      "source_id": "doc_2420",
      "target_id": "concept_2455",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.747644
    },
    "rel_2689": {
      "id": "rel_2689",
      "source_id": "doc_2420",
      "target_id": "concept_2335",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.748002
    },
    "rel_2690": {
      "id": "rel_2690",
      "source_id": "doc_2420",
      "target_id": "concept_2456",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.74839
    },
    "rel_2691": {
      "id": "rel_2691",
      "source_id": "doc_2420",
      "target_id": "concept_2457",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.7488441
    },
    "rel_2692": {
      "id": "rel_2692",
      "source_id": "doc_2420",
      "target_id": "concept_2336",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.7492301
    },
    "rel_2693": {
      "id": "rel_2693",
      "source_id": "doc_2420",
      "target_id": "concept_2458",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.749635
    },
    "rel_2694": {
      "id": "rel_2694",
      "source_id": "doc_2420",
      "target_id": "concept_2459",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.750032
    },
    "rel_2695": {
      "id": "rel_2695",
      "source_id": "doc_2420",
      "target_id": "concept_602",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.750154
    },
    "rel_2696": {
      "id": "rel_2696",
      "source_id": "doc_2420",
      "target_id": "concept_475",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.750252
    },
    "rel_2697": {
      "id": "rel_2697",
      "source_id": "doc_2420",
      "target_id": "concept_2341",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.750624
    },
    "rel_2698": {
      "id": "rel_2698",
      "source_id": "doc_2420",
      "target_id": "concept_2460",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.751002
    },
    "rel_2699": {
      "id": "rel_2699",
      "source_id": "doc_2420",
      "target_id": "concept_2461",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.751374
    },
    "rel_2700": {
      "id": "rel_2700",
      "source_id": "doc_2420",
      "target_id": "concept_2343",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.751755
    },
    "rel_2701": {
      "id": "rel_2701",
      "source_id": "doc_2420",
      "target_id": "concept_2462",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.752161
    },
    "rel_2702": {
      "id": "rel_2702",
      "source_id": "doc_2420",
      "target_id": "concept_2344",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.752534
    },
    "rel_2703": {
      "id": "rel_2703",
      "source_id": "doc_2420",
      "target_id": "concept_2463",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.7529101
    },
    "rel_2704": {
      "id": "rel_2704",
      "source_id": "doc_2420",
      "target_id": "concept_2262",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.7532642
    },
    "rel_2705": {
      "id": "rel_2705",
      "source_id": "doc_2420",
      "target_id": "concept_2346",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.75363
    },
    "rel_2706": {
      "id": "rel_2706",
      "source_id": "doc_2420",
      "target_id": "concept_424",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.7537222
    },
    "rel_2707": {
      "id": "rel_2707",
      "source_id": "doc_2420",
      "target_id": "concept_2464",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.754113
    },
    "rel_2708": {
      "id": "rel_2708",
      "source_id": "doc_2420",
      "target_id": "concept_2185",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.7544699
    },
    "rel_2709": {
      "id": "rel_2709",
      "source_id": "doc_2420",
      "target_id": "concept_2465",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.754848
    },
    "rel_2710": {
      "id": "rel_2710",
      "source_id": "doc_2420",
      "target_id": "concept_2466",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.7552252
    },
    "rel_2711": {
      "id": "rel_2711",
      "source_id": "doc_2420",
      "target_id": "concept_2467",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.755597
    },
    "rel_2712": {
      "id": "rel_2712",
      "source_id": "doc_2420",
      "target_id": "concept_625",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.755718
    },
    "rel_2713": {
      "id": "rel_2713",
      "source_id": "doc_2420",
      "target_id": "concept_2202",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.756072
    },
    "rel_2714": {
      "id": "rel_2714",
      "source_id": "doc_2420",
      "target_id": "concept_2356",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.756459
    },
    "rel_2715": {
      "id": "rel_2715",
      "source_id": "doc_2420",
      "target_id": "concept_2468",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.756853
    },
    "rel_2716": {
      "id": "rel_2716",
      "source_id": "doc_2420",
      "target_id": "concept_2469",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.7572632
    },
    "rel_2717": {
      "id": "rel_2717",
      "source_id": "doc_2420",
      "target_id": "concept_2357",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.757653
    },
    "rel_2718": {
      "id": "rel_2718",
      "source_id": "doc_2420",
      "target_id": "concept_2470",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.758049
    },
    "rel_2719": {
      "id": "rel_2719",
      "source_id": "doc_2420",
      "target_id": "concept_2471",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.7584598
    },
    "rel_2720": {
      "id": "rel_2720",
      "source_id": "doc_2420",
      "target_id": "concept_2472",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.7589052
    },
    "rel_2721": {
      "id": "rel_2721",
      "source_id": "doc_2420",
      "target_id": "concept_2473",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.759474
    },
    "rel_2722": {
      "id": "rel_2722",
      "source_id": "doc_2420",
      "target_id": "concept_2474",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.7599308
    },
    "rel_2723": {
      "id": "rel_2723",
      "source_id": "doc_2420",
      "target_id": "concept_2363",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.760416
    },
    "rel_2724": {
      "id": "rel_2724",
      "source_id": "doc_2420",
      "target_id": "concept_2475",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.7608619
    },
    "rel_2725": {
      "id": "rel_2725",
      "source_id": "doc_2420",
      "target_id": "concept_2476",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.761253
    },
    "rel_2726": {
      "id": "rel_2726",
      "source_id": "doc_2479",
      "target_id": "concept_2074",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.7694101
    },
    "rel_2727": {
      "id": "rel_2727",
      "source_id": "doc_2479",
      "target_id": "concept_2480",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.769852
    },
    "rel_2728": {
      "id": "rel_2728",
      "source_id": "doc_2479",
      "target_id": "concept_2075",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.77042
    },
    "rel_2729": {
      "id": "rel_2729",
      "source_id": "doc_2479",
      "target_id": "concept_2481",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.771213
    },
    "rel_2730": {
      "id": "rel_2730",
      "source_id": "doc_2479",
      "target_id": "concept_1961",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.771602
    },
    "rel_2731": {
      "id": "rel_2731",
      "source_id": "doc_2479",
      "target_id": "concept_2076",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.7720199
    },
    "rel_2732": {
      "id": "rel_2732",
      "source_id": "doc_2479",
      "target_id": "concept_2079",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.772442
    },
    "rel_2733": {
      "id": "rel_2733",
      "source_id": "doc_2479",
      "target_id": "concept_2081",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.772815
    },
    "rel_2734": {
      "id": "rel_2734",
      "source_id": "doc_2479",
      "target_id": "concept_2082",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.7732348
    },
    "rel_2735": {
      "id": "rel_2735",
      "source_id": "doc_2479",
      "target_id": "concept_2482",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.773856
    },
    "rel_2736": {
      "id": "rel_2736",
      "source_id": "doc_2479",
      "target_id": "concept_2084",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.774294
    },
    "rel_2737": {
      "id": "rel_2737",
      "source_id": "doc_2479",
      "target_id": "concept_2230",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.774685
    },
    "rel_2738": {
      "id": "rel_2738",
      "source_id": "doc_2479",
      "target_id": "concept_2085",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.7750201
    },
    "rel_2739": {
      "id": "rel_2739",
      "source_id": "doc_2479",
      "target_id": "concept_2086",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.7753952
    },
    "rel_2740": {
      "id": "rel_2740",
      "source_id": "doc_2479",
      "target_id": "concept_2089",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.775739
    },
    "rel_2741": {
      "id": "rel_2741",
      "source_id": "doc_2479",
      "target_id": "concept_2092",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.7760808
    },
    "rel_2742": {
      "id": "rel_2742",
      "source_id": "doc_2479",
      "target_id": "concept_2093",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.7764218
    },
    "rel_2743": {
      "id": "rel_2743",
      "source_id": "doc_2479",
      "target_id": "concept_2097",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.7767732
    },
    "rel_2744": {
      "id": "rel_2744",
      "source_id": "doc_2479",
      "target_id": "concept_2427",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.77714
    },
    "rel_2745": {
      "id": "rel_2745",
      "source_id": "doc_2479",
      "target_id": "concept_2428",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.7775118
    },
    "rel_2746": {
      "id": "rel_2746",
      "source_id": "doc_2479",
      "target_id": "concept_2483",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.7781
    },
    "rel_2747": {
      "id": "rel_2747",
      "source_id": "doc_2479",
      "target_id": "concept_2222",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.7784462
    },
    "rel_2748": {
      "id": "rel_2748",
      "source_id": "doc_2479",
      "target_id": "concept_2103",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.7787929
    },
    "rel_2749": {
      "id": "rel_2749",
      "source_id": "doc_2479",
      "target_id": "concept_2484",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.7792141
    },
    "rel_2750": {
      "id": "rel_2750",
      "source_id": "doc_2479",
      "target_id": "concept_2485",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.7796118
    },
    "rel_2751": {
      "id": "rel_2751",
      "source_id": "doc_2479",
      "target_id": "concept_2486",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.7801752
    },
    "rel_2752": {
      "id": "rel_2752",
      "source_id": "doc_2479",
      "target_id": "concept_2487",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.78058
    },
    "rel_2753": {
      "id": "rel_2753",
      "source_id": "doc_2479",
      "target_id": "concept_2488",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.7809741
    },
    "rel_2754": {
      "id": "rel_2754",
      "source_id": "doc_2479",
      "target_id": "concept_2116",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.781315
    },
    "rel_2755": {
      "id": "rel_2755",
      "source_id": "doc_2479",
      "target_id": "concept_2117",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.781753
    },
    "rel_2756": {
      "id": "rel_2756",
      "source_id": "doc_2479",
      "target_id": "concept_2489",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.782227
    },
    "rel_2757": {
      "id": "rel_2757",
      "source_id": "doc_2479",
      "target_id": "concept_2121",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.7827258
    },
    "rel_2758": {
      "id": "rel_2758",
      "source_id": "doc_2479",
      "target_id": "concept_2122",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.783193
    },
    "rel_2759": {
      "id": "rel_2759",
      "source_id": "doc_2479",
      "target_id": "concept_2123",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.783592
    },
    "rel_2760": {
      "id": "rel_2760",
      "source_id": "doc_2479",
      "target_id": "concept_2127",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.783981
    },
    "rel_2761": {
      "id": "rel_2761",
      "source_id": "doc_2479",
      "target_id": "concept_2130",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.7843819
    },
    "rel_2762": {
      "id": "rel_2762",
      "source_id": "doc_2479",
      "target_id": "concept_2490",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.784872
    },
    "rel_2763": {
      "id": "rel_2763",
      "source_id": "doc_2479",
      "target_id": "concept_2491",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.7853389
    },
    "rel_2764": {
      "id": "rel_2764",
      "source_id": "doc_2479",
      "target_id": "concept_2492",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.7858229
    },
    "rel_2765": {
      "id": "rel_2765",
      "source_id": "doc_2479",
      "target_id": "concept_2493",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.7862122
    },
    "rel_2766": {
      "id": "rel_2766",
      "source_id": "doc_2479",
      "target_id": "concept_2494",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.7866108
    },
    "rel_2767": {
      "id": "rel_2767",
      "source_id": "doc_2479",
      "target_id": "concept_2495",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.7870631
    },
    "rel_2768": {
      "id": "rel_2768",
      "source_id": "doc_2479",
      "target_id": "concept_2141",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.787528
    },
    "rel_2769": {
      "id": "rel_2769",
      "source_id": "doc_2479",
      "target_id": "concept_2496",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.788002
    },
    "rel_2770": {
      "id": "rel_2770",
      "source_id": "doc_2479",
      "target_id": "concept_2497",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.7885
    },
    "rel_2771": {
      "id": "rel_2771",
      "source_id": "doc_2479",
      "target_id": "concept_2147",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.788929
    },
    "rel_2772": {
      "id": "rel_2772",
      "source_id": "doc_2479",
      "target_id": "concept_2148",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.789332
    },
    "rel_2773": {
      "id": "rel_2773",
      "source_id": "doc_2479",
      "target_id": "concept_2498",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.7898262
    },
    "rel_2774": {
      "id": "rel_2774",
      "source_id": "doc_2479",
      "target_id": "concept_2499",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.7903302
    },
    "rel_2775": {
      "id": "rel_2775",
      "source_id": "doc_2479",
      "target_id": "concept_2500",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.790716
    },
    "rel_2776": {
      "id": "rel_2776",
      "source_id": "doc_2479",
      "target_id": "concept_2153",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.791067
    },
    "rel_2777": {
      "id": "rel_2777",
      "source_id": "doc_2479",
      "target_id": "concept_2501",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.7914612
    },
    "rel_2778": {
      "id": "rel_2778",
      "source_id": "doc_2479",
      "target_id": "concept_2154",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.791807
    },
    "rel_2779": {
      "id": "rel_2779",
      "source_id": "doc_2479",
      "target_id": "concept_2502",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.792292
    },
    "rel_2780": {
      "id": "rel_2780",
      "source_id": "doc_2479",
      "target_id": "concept_2075",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.792778
    },
    "rel_2781": {
      "id": "rel_2781",
      "source_id": "doc_2479",
      "target_id": "concept_2160",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.793241
    },
    "rel_2782": {
      "id": "rel_2782",
      "source_id": "doc_2479",
      "target_id": "concept_2503",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.793653
    },
    "rel_2783": {
      "id": "rel_2783",
      "source_id": "doc_2479",
      "target_id": "concept_2504",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.794073
    },
    "rel_2784": {
      "id": "rel_2784",
      "source_id": "doc_2479",
      "target_id": "concept_2505",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.794485
    },
    "rel_2785": {
      "id": "rel_2785",
      "source_id": "doc_2479",
      "target_id": "concept_2506",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.7948859
    },
    "rel_2786": {
      "id": "rel_2786",
      "source_id": "doc_2479",
      "target_id": "concept_475",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.794988
    },
    "rel_2787": {
      "id": "rel_2787",
      "source_id": "doc_2479",
      "target_id": "concept_2171",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.7953439
    },
    "rel_2788": {
      "id": "rel_2788",
      "source_id": "doc_2479",
      "target_id": "concept_2461",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.795796
    },
    "rel_2789": {
      "id": "rel_2789",
      "source_id": "doc_2479",
      "target_id": "concept_2507",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.796214
    },
    "rel_2790": {
      "id": "rel_2790",
      "source_id": "doc_2479",
      "target_id": "concept_2177",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.796581
    },
    "rel_2791": {
      "id": "rel_2791",
      "source_id": "doc_2479",
      "target_id": "concept_2508",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.797002
    },
    "rel_2792": {
      "id": "rel_2792",
      "source_id": "doc_2479",
      "target_id": "concept_2178",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.797363
    },
    "rel_2793": {
      "id": "rel_2793",
      "source_id": "doc_2479",
      "target_id": "concept_2509",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.7977579
    },
    "rel_2794": {
      "id": "rel_2794",
      "source_id": "doc_2479",
      "target_id": "concept_2510",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.7982311
    },
    "rel_2795": {
      "id": "rel_2795",
      "source_id": "doc_2479",
      "target_id": "concept_2184",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.798647
    },
    "rel_2796": {
      "id": "rel_2796",
      "source_id": "doc_2479",
      "target_id": "concept_2183",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.798996
    },
    "rel_2797": {
      "id": "rel_2797",
      "source_id": "doc_2479",
      "target_id": "concept_2511",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.7993999
    },
    "rel_2798": {
      "id": "rel_2798",
      "source_id": "doc_2479",
      "target_id": "concept_2185",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.799745
    },
    "rel_2799": {
      "id": "rel_2799",
      "source_id": "doc_2479",
      "target_id": "concept_2465",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.8001149
    },
    "rel_2800": {
      "id": "rel_2800",
      "source_id": "doc_2479",
      "target_id": "concept_2512",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.800503
    },
    "rel_2801": {
      "id": "rel_2801",
      "source_id": "doc_2479",
      "target_id": "concept_2513",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.800904
    },
    "rel_2802": {
      "id": "rel_2802",
      "source_id": "doc_2479",
      "target_id": "concept_2196",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.8012538
    },
    "rel_2803": {
      "id": "rel_2803",
      "source_id": "doc_2479",
      "target_id": "concept_2202",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.8016
    },
    "rel_2804": {
      "id": "rel_2804",
      "source_id": "doc_2479",
      "target_id": "concept_2203",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.801953
    },
    "rel_2805": {
      "id": "rel_2805",
      "source_id": "doc_2479",
      "target_id": "concept_2514",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.8024452
    },
    "rel_2806": {
      "id": "rel_2806",
      "source_id": "doc_2479",
      "target_id": "concept_2515",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.802925
    },
    "rel_2807": {
      "id": "rel_2807",
      "source_id": "doc_2479",
      "target_id": "concept_2209",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.803322
    },
    "rel_2808": {
      "id": "rel_2808",
      "source_id": "doc_2479",
      "target_id": "concept_2516",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.8038259
    },
    "rel_2809": {
      "id": "rel_2809",
      "source_id": "doc_2479",
      "target_id": "concept_2517",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.804276
    },
    "rel_2810": {
      "id": "rel_2810",
      "source_id": "doc_2479",
      "target_id": "concept_2215",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.804626
    },
    "rel_2811": {
      "id": "rel_2811",
      "source_id": "doc_2479",
      "target_id": "concept_2518",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.805019
    },
    "rel_2812": {
      "id": "rel_2812",
      "source_id": "doc_2479",
      "target_id": "concept_2519",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.805409
    },
    "rel_2813": {
      "id": "rel_2813",
      "source_id": "doc_2479",
      "target_id": "concept_2520",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.805989
    },
    "rel_2814": {
      "id": "rel_2814",
      "source_id": "doc_2521",
      "target_id": "concept_2522",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.825114
    },
    "rel_2815": {
      "id": "rel_2815",
      "source_id": "doc_2521",
      "target_id": "concept_2523",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.825519
    },
    "rel_2816": {
      "id": "rel_2816",
      "source_id": "doc_2521",
      "target_id": "concept_2524",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.825923
    },
    "rel_2817": {
      "id": "rel_2817",
      "source_id": "doc_2521",
      "target_id": "concept_2074",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.8262668
    },
    "rel_2818": {
      "id": "rel_2818",
      "source_id": "doc_2521",
      "target_id": "concept_2480",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.82669
    },
    "rel_2819": {
      "id": "rel_2819",
      "source_id": "doc_2521",
      "target_id": "concept_2525",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.827296
    },
    "rel_2820": {
      "id": "rel_2820",
      "source_id": "doc_2521",
      "target_id": "concept_2526",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.827918
    },
    "rel_2821": {
      "id": "rel_2821",
      "source_id": "doc_2521",
      "target_id": "concept_2075",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.828335
    },
    "rel_2822": {
      "id": "rel_2822",
      "source_id": "doc_2521",
      "target_id": "concept_2527",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.828804
    },
    "rel_2823": {
      "id": "rel_2823",
      "source_id": "doc_2521",
      "target_id": "concept_2481",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.829507
    },
    "rel_2824": {
      "id": "rel_2824",
      "source_id": "doc_2521",
      "target_id": "concept_2528",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.829953
    },
    "rel_2825": {
      "id": "rel_2825",
      "source_id": "doc_2521",
      "target_id": "concept_2529",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.8303812
    },
    "rel_2826": {
      "id": "rel_2826",
      "source_id": "doc_2521",
      "target_id": "concept_1961",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.830734
    },
    "rel_2827": {
      "id": "rel_2827",
      "source_id": "doc_2521",
      "target_id": "concept_2530",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.831168
    },
    "rel_2828": {
      "id": "rel_2828",
      "source_id": "doc_2521",
      "target_id": "concept_2076",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.8315651
    },
    "rel_2829": {
      "id": "rel_2829",
      "source_id": "doc_2521",
      "target_id": "concept_2531",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.832004
    },
    "rel_2830": {
      "id": "rel_2830",
      "source_id": "doc_2521",
      "target_id": "concept_2079",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.832366
    },
    "rel_2831": {
      "id": "rel_2831",
      "source_id": "doc_2521",
      "target_id": "concept_2532",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.8327942
    },
    "rel_2832": {
      "id": "rel_2832",
      "source_id": "doc_2521",
      "target_id": "concept_2082",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.8332329
    },
    "rel_2833": {
      "id": "rel_2833",
      "source_id": "doc_2521",
      "target_id": "concept_2081",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.833627
    },
    "rel_2834": {
      "id": "rel_2834",
      "source_id": "doc_2521",
      "target_id": "concept_675",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.833761
    },
    "rel_2835": {
      "id": "rel_2835",
      "source_id": "doc_2521",
      "target_id": "concept_2482",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.834404
    },
    "rel_2836": {
      "id": "rel_2836",
      "source_id": "doc_2521",
      "target_id": "concept_2390",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.8349261
    },
    "rel_2837": {
      "id": "rel_2837",
      "source_id": "doc_2521",
      "target_id": "concept_2084",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.835436
    },
    "rel_2838": {
      "id": "rel_2838",
      "source_id": "doc_2521",
      "target_id": "concept_2533",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.836083
    },
    "rel_2839": {
      "id": "rel_2839",
      "source_id": "doc_2521",
      "target_id": "concept_2230",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.836524
    },
    "rel_2840": {
      "id": "rel_2840",
      "source_id": "doc_2521",
      "target_id": "concept_2085",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.83688
    },
    "rel_2841": {
      "id": "rel_2841",
      "source_id": "doc_2521",
      "target_id": "concept_2086",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.837255
    },
    "rel_2842": {
      "id": "rel_2842",
      "source_id": "doc_2521",
      "target_id": "concept_2534",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.8376582
    },
    "rel_2843": {
      "id": "rel_2843",
      "source_id": "doc_2521",
      "target_id": "concept_2535",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.8380532
    },
    "rel_2844": {
      "id": "rel_2844",
      "source_id": "doc_2521",
      "target_id": "concept_2089",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.838399
    },
    "rel_2845": {
      "id": "rel_2845",
      "source_id": "doc_2521",
      "target_id": "concept_2536",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.838808
    },
    "rel_2846": {
      "id": "rel_2846",
      "source_id": "doc_2521",
      "target_id": "concept_2092",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.839148
    },
    "rel_2847": {
      "id": "rel_2847",
      "source_id": "doc_2521",
      "target_id": "concept_2537",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.839563
    },
    "rel_2848": {
      "id": "rel_2848",
      "source_id": "doc_2521",
      "target_id": "concept_2093",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.839922
    },
    "rel_2849": {
      "id": "rel_2849",
      "source_id": "doc_2521",
      "target_id": "concept_2538",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.840354
    },
    "rel_2850": {
      "id": "rel_2850",
      "source_id": "doc_2521",
      "target_id": "concept_2539",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.8407638
    },
    "rel_2851": {
      "id": "rel_2851",
      "source_id": "doc_2521",
      "target_id": "concept_2540",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.841168
    },
    "rel_2852": {
      "id": "rel_2852",
      "source_id": "doc_2521",
      "target_id": "concept_2095",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.841506
    },
    "rel_2853": {
      "id": "rel_2853",
      "source_id": "doc_2521",
      "target_id": "concept_2541",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.841902
    },
    "rel_2854": {
      "id": "rel_2854",
      "source_id": "doc_2521",
      "target_id": "concept_2097",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.842249
    },
    "rel_2855": {
      "id": "rel_2855",
      "source_id": "doc_2521",
      "target_id": "concept_2427",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.8426182
    },
    "rel_2856": {
      "id": "rel_2856",
      "source_id": "doc_2521",
      "target_id": "concept_2428",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.843029
    },
    "rel_2857": {
      "id": "rel_2857",
      "source_id": "doc_2521",
      "target_id": "concept_2542",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.8435469
    },
    "rel_2858": {
      "id": "rel_2858",
      "source_id": "doc_2521",
      "target_id": "concept_2483",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.844161
    },
    "rel_2859": {
      "id": "rel_2859",
      "source_id": "doc_2521",
      "target_id": "concept_2543",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.8445828
    },
    "rel_2860": {
      "id": "rel_2860",
      "source_id": "doc_2521",
      "target_id": "concept_2544",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.844993
    },
    "rel_2861": {
      "id": "rel_2861",
      "source_id": "doc_2521",
      "target_id": "concept_2103",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.845362
    },
    "rel_2862": {
      "id": "rel_2862",
      "source_id": "doc_2521",
      "target_id": "concept_2105",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.8457432
    },
    "rel_2863": {
      "id": "rel_2863",
      "source_id": "doc_2521",
      "target_id": "concept_2545",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.846179
    },
    "rel_2864": {
      "id": "rel_2864",
      "source_id": "doc_2521",
      "target_id": "concept_2546",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.846565
    },
    "rel_2865": {
      "id": "rel_2865",
      "source_id": "doc_2521",
      "target_id": "concept_2484",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.846994
    },
    "rel_2866": {
      "id": "rel_2866",
      "source_id": "doc_2521",
      "target_id": "concept_2547",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.8473952
    },
    "rel_2867": {
      "id": "rel_2867",
      "source_id": "doc_2521",
      "target_id": "concept_2548",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.847801
    },
    "rel_2868": {
      "id": "rel_2868",
      "source_id": "doc_2521",
      "target_id": "concept_2485",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.8482618
    },
    "rel_2869": {
      "id": "rel_2869",
      "source_id": "doc_2521",
      "target_id": "concept_2549",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.848707
    },
    "rel_2870": {
      "id": "rel_2870",
      "source_id": "doc_2521",
      "target_id": "concept_2550",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.849108
    },
    "rel_2871": {
      "id": "rel_2871",
      "source_id": "doc_2521",
      "target_id": "concept_2486",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.84966
    },
    "rel_2872": {
      "id": "rel_2872",
      "source_id": "doc_2521",
      "target_id": "concept_2487",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.850053
    },
    "rel_2873": {
      "id": "rel_2873",
      "source_id": "doc_2521",
      "target_id": "concept_2551",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.8504488
    },
    "rel_2874": {
      "id": "rel_2874",
      "source_id": "doc_2521",
      "target_id": "concept_2488",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.850842
    },
    "rel_2875": {
      "id": "rel_2875",
      "source_id": "doc_2521",
      "target_id": "concept_2552",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.851232
    },
    "rel_2876": {
      "id": "rel_2876",
      "source_id": "doc_2521",
      "target_id": "concept_2553",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.851615
    },
    "rel_2877": {
      "id": "rel_2877",
      "source_id": "doc_2521",
      "target_id": "concept_2554",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.8520162
    },
    "rel_2878": {
      "id": "rel_2878",
      "source_id": "doc_2521",
      "target_id": "concept_2116",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.8523562
    },
    "rel_2879": {
      "id": "rel_2879",
      "source_id": "doc_2521",
      "target_id": "concept_2555",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.852763
    },
    "rel_2880": {
      "id": "rel_2880",
      "source_id": "doc_2521",
      "target_id": "concept_2117",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.8531651
    },
    "rel_2881": {
      "id": "rel_2881",
      "source_id": "doc_2521",
      "target_id": "concept_2556",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.853632
    },
    "rel_2882": {
      "id": "rel_2882",
      "source_id": "doc_2521",
      "target_id": "concept_2557",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.854055
    },
    "rel_2883": {
      "id": "rel_2883",
      "source_id": "doc_2521",
      "target_id": "concept_2558",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.854483
    },
    "rel_2884": {
      "id": "rel_2884",
      "source_id": "doc_2521",
      "target_id": "concept_2489",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.854917
    },
    "rel_2885": {
      "id": "rel_2885",
      "source_id": "doc_2521",
      "target_id": "concept_2559",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.855351
    },
    "rel_2886": {
      "id": "rel_2886",
      "source_id": "doc_2521",
      "target_id": "concept_2560",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.855768
    },
    "rel_2887": {
      "id": "rel_2887",
      "source_id": "doc_2521",
      "target_id": "concept_2561",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.856214
    },
    "rel_2888": {
      "id": "rel_2888",
      "source_id": "doc_2521",
      "target_id": "concept_2562",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.856719
    },
    "rel_2889": {
      "id": "rel_2889",
      "source_id": "doc_2521",
      "target_id": "concept_2563",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.857135
    },
    "rel_2890": {
      "id": "rel_2890",
      "source_id": "doc_2521",
      "target_id": "concept_2564",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.857549
    },
    "rel_2891": {
      "id": "rel_2891",
      "source_id": "doc_2521",
      "target_id": "concept_2565",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.85796
    },
    "rel_2892": {
      "id": "rel_2892",
      "source_id": "doc_2521",
      "target_id": "concept_2121",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.858319
    },
    "rel_2893": {
      "id": "rel_2893",
      "source_id": "doc_2521",
      "target_id": "concept_2122",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.858665
    },
    "rel_2894": {
      "id": "rel_2894",
      "source_id": "doc_2521",
      "target_id": "concept_2123",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.8590112
    },
    "rel_2895": {
      "id": "rel_2895",
      "source_id": "doc_2521",
      "target_id": "concept_2566",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.859405
    },
    "rel_2896": {
      "id": "rel_2896",
      "source_id": "doc_2521",
      "target_id": "concept_2127",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.859759
    },
    "rel_2897": {
      "id": "rel_2897",
      "source_id": "doc_2521",
      "target_id": "concept_2567",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.8601558
    },
    "rel_2898": {
      "id": "rel_2898",
      "source_id": "doc_2521",
      "target_id": "concept_2568",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.8605409
    },
    "rel_2899": {
      "id": "rel_2899",
      "source_id": "doc_2521",
      "target_id": "concept_2569",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.860938
    },
    "rel_2900": {
      "id": "rel_2900",
      "source_id": "doc_2521",
      "target_id": "concept_2130",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.861283
    },
    "rel_2901": {
      "id": "rel_2901",
      "source_id": "doc_2521",
      "target_id": "concept_2570",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.861681
    },
    "rel_2902": {
      "id": "rel_2902",
      "source_id": "doc_2521",
      "target_id": "concept_2571",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.86207
    },
    "rel_2903": {
      "id": "rel_2903",
      "source_id": "doc_2521",
      "target_id": "concept_2490",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.8624809
    },
    "rel_2904": {
      "id": "rel_2904",
      "source_id": "doc_2521",
      "target_id": "concept_2491",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.862871
    },
    "rel_2905": {
      "id": "rel_2905",
      "source_id": "doc_2521",
      "target_id": "concept_2572",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.863449
    },
    "rel_2906": {
      "id": "rel_2906",
      "source_id": "doc_2521",
      "target_id": "concept_2492",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.863919
    },
    "rel_2907": {
      "id": "rel_2907",
      "source_id": "doc_2521",
      "target_id": "concept_2136",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.864303
    },
    "rel_2908": {
      "id": "rel_2908",
      "source_id": "doc_2521",
      "target_id": "concept_2573",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.864793
    },
    "rel_2909": {
      "id": "rel_2909",
      "source_id": "doc_2521",
      "target_id": "concept_2574",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.865281
    },
    "rel_2910": {
      "id": "rel_2910",
      "source_id": "doc_2521",
      "target_id": "concept_2493",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.86567
    },
    "rel_2911": {
      "id": "rel_2911",
      "source_id": "doc_2521",
      "target_id": "concept_2575",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.866086
    },
    "rel_2912": {
      "id": "rel_2912",
      "source_id": "doc_2521",
      "target_id": "concept_2576",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.8664682
    },
    "rel_2913": {
      "id": "rel_2913",
      "source_id": "doc_2521",
      "target_id": "concept_2494",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.866857
    },
    "rel_2914": {
      "id": "rel_2914",
      "source_id": "doc_2521",
      "target_id": "concept_2577",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.86724
    },
    "rel_2915": {
      "id": "rel_2915",
      "source_id": "doc_2521",
      "target_id": "concept_2495",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.867635
    },
    "rel_2916": {
      "id": "rel_2916",
      "source_id": "doc_2521",
      "target_id": "concept_2578",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.868024
    },
    "rel_2917": {
      "id": "rel_2917",
      "source_id": "doc_2521",
      "target_id": "concept_2141",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.868372
    },
    "rel_2918": {
      "id": "rel_2918",
      "source_id": "doc_2521",
      "target_id": "concept_2579",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.868757
    },
    "rel_2919": {
      "id": "rel_2919",
      "source_id": "doc_2521",
      "target_id": "concept_2580",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.869142
    },
    "rel_2920": {
      "id": "rel_2920",
      "source_id": "doc_2521",
      "target_id": "concept_2496",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.869525
    },
    "rel_2921": {
      "id": "rel_2921",
      "source_id": "doc_2521",
      "target_id": "concept_2581",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.86993
    },
    "rel_2922": {
      "id": "rel_2922",
      "source_id": "doc_2521",
      "target_id": "concept_2582",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.8703392
    },
    "rel_2923": {
      "id": "rel_2923",
      "source_id": "doc_2521",
      "target_id": "concept_2497",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.870742
    },
    "rel_2924": {
      "id": "rel_2924",
      "source_id": "doc_2521",
      "target_id": "concept_2147",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.8711119
    },
    "rel_2925": {
      "id": "rel_2925",
      "source_id": "doc_2521",
      "target_id": "concept_2583",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.871526
    },
    "rel_2926": {
      "id": "rel_2926",
      "source_id": "doc_2521",
      "target_id": "concept_2584",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.871938
    },
    "rel_2927": {
      "id": "rel_2927",
      "source_id": "doc_2521",
      "target_id": "concept_2585",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.872352
    },
    "rel_2928": {
      "id": "rel_2928",
      "source_id": "doc_2521",
      "target_id": "concept_2586",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.8727648
    },
    "rel_2929": {
      "id": "rel_2929",
      "source_id": "doc_2521",
      "target_id": "concept_2148",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.873133
    },
    "rel_2930": {
      "id": "rel_2930",
      "source_id": "doc_2521",
      "target_id": "concept_2587",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.873539
    },
    "rel_2931": {
      "id": "rel_2931",
      "source_id": "doc_2521",
      "target_id": "concept_2498",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.873929
    },
    "rel_2932": {
      "id": "rel_2932",
      "source_id": "doc_2521",
      "target_id": "concept_2588",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.874316
    },
    "rel_2933": {
      "id": "rel_2933",
      "source_id": "doc_2521",
      "target_id": "concept_2499",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.8747342
    },
    "rel_2934": {
      "id": "rel_2934",
      "source_id": "doc_2521",
      "target_id": "concept_2589",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.875117
    },
    "rel_2935": {
      "id": "rel_2935",
      "source_id": "doc_2521",
      "target_id": "concept_2590",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.87551
    },
    "rel_2936": {
      "id": "rel_2936",
      "source_id": "doc_2521",
      "target_id": "concept_2591",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.8759181
    },
    "rel_2937": {
      "id": "rel_2937",
      "source_id": "doc_2521",
      "target_id": "concept_2592",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.8763158
    },
    "rel_2938": {
      "id": "rel_2938",
      "source_id": "doc_2521",
      "target_id": "concept_2593",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.876699
    },
    "rel_2939": {
      "id": "rel_2939",
      "source_id": "doc_2521",
      "target_id": "concept_2500",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.8770728
    },
    "rel_2940": {
      "id": "rel_2940",
      "source_id": "doc_2521",
      "target_id": "concept_2153",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.877415
    },
    "rel_2941": {
      "id": "rel_2941",
      "source_id": "doc_2521",
      "target_id": "concept_2501",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.877811
    },
    "rel_2942": {
      "id": "rel_2942",
      "source_id": "doc_2521",
      "target_id": "concept_2154",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.878151
    },
    "rel_2943": {
      "id": "rel_2943",
      "source_id": "doc_2521",
      "target_id": "concept_2594",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.8785439
    },
    "rel_2944": {
      "id": "rel_2944",
      "source_id": "doc_2521",
      "target_id": "concept_2595",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.878958
    },
    "rel_2945": {
      "id": "rel_2945",
      "source_id": "doc_2521",
      "target_id": "concept_2502",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.87935
    },
    "rel_2946": {
      "id": "rel_2946",
      "source_id": "doc_2521",
      "target_id": "concept_2075",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.879683
    },
    "rel_2947": {
      "id": "rel_2947",
      "source_id": "doc_2521",
      "target_id": "concept_2160",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.8800251
    },
    "rel_2948": {
      "id": "rel_2948",
      "source_id": "doc_2521",
      "target_id": "concept_2596",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.880407
    },
    "rel_2949": {
      "id": "rel_2949",
      "source_id": "doc_2521",
      "target_id": "concept_2597",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.880812
    },
    "rel_2950": {
      "id": "rel_2950",
      "source_id": "doc_2521",
      "target_id": "concept_2598",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.881226
    },
    "rel_2951": {
      "id": "rel_2951",
      "source_id": "doc_2521",
      "target_id": "concept_2599",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.881651
    },
    "rel_2952": {
      "id": "rel_2952",
      "source_id": "doc_2521",
      "target_id": "concept_2600",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.88204
    },
    "rel_2953": {
      "id": "rel_2953",
      "source_id": "doc_2521",
      "target_id": "concept_2503",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.882424
    },
    "rel_2954": {
      "id": "rel_2954",
      "source_id": "doc_2521",
      "target_id": "concept_2601",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.882817
    },
    "rel_2955": {
      "id": "rel_2955",
      "source_id": "doc_2521",
      "target_id": "concept_2504",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.883344
    },
    "rel_2956": {
      "id": "rel_2956",
      "source_id": "doc_2521",
      "target_id": "concept_2505",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.883866
    },
    "rel_2957": {
      "id": "rel_2957",
      "source_id": "doc_2521",
      "target_id": "concept_2602",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.8843079
    },
    "rel_2958": {
      "id": "rel_2958",
      "source_id": "doc_2521",
      "target_id": "concept_2337",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.884685
    },
    "rel_2959": {
      "id": "rel_2959",
      "source_id": "doc_2521",
      "target_id": "concept_2506",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.885154
    },
    "rel_2960": {
      "id": "rel_2960",
      "source_id": "doc_2521",
      "target_id": "concept_2603",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.8855512
    },
    "rel_2961": {
      "id": "rel_2961",
      "source_id": "doc_2521",
      "target_id": "concept_2604",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.885937
    },
    "rel_2962": {
      "id": "rel_2962",
      "source_id": "doc_2521",
      "target_id": "concept_475",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.8860328
    },
    "rel_2963": {
      "id": "rel_2963",
      "source_id": "doc_2521",
      "target_id": "concept_2171",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.886378
    },
    "rel_2964": {
      "id": "rel_2964",
      "source_id": "doc_2521",
      "target_id": "concept_2605",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.886771
    },
    "rel_2965": {
      "id": "rel_2965",
      "source_id": "doc_2521",
      "target_id": "concept_2461",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.8871481
    },
    "rel_2966": {
      "id": "rel_2966",
      "source_id": "doc_2521",
      "target_id": "concept_2507",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.887537
    },
    "rel_2967": {
      "id": "rel_2967",
      "source_id": "doc_2521",
      "target_id": "concept_2606",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.8879201
    },
    "rel_2968": {
      "id": "rel_2968",
      "source_id": "doc_2521",
      "target_id": "concept_2607",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.888312
    },
    "rel_2969": {
      "id": "rel_2969",
      "source_id": "doc_2521",
      "target_id": "concept_2177",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.8886569
    },
    "rel_2970": {
      "id": "rel_2970",
      "source_id": "doc_2521",
      "target_id": "concept_2508",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.889069
    },
    "rel_2971": {
      "id": "rel_2971",
      "source_id": "doc_2521",
      "target_id": "concept_2178",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.889429
    },
    "rel_2972": {
      "id": "rel_2972",
      "source_id": "doc_2521",
      "target_id": "concept_2509",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.8898392
    },
    "rel_2973": {
      "id": "rel_2973",
      "source_id": "doc_2521",
      "target_id": "concept_2608",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.89027
    },
    "rel_2974": {
      "id": "rel_2974",
      "source_id": "doc_2521",
      "target_id": "concept_2609",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.890683
    },
    "rel_2975": {
      "id": "rel_2975",
      "source_id": "doc_2521",
      "target_id": "concept_2510",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.891084
    },
    "rel_2976": {
      "id": "rel_2976",
      "source_id": "doc_2521",
      "target_id": "concept_2610",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.8915
    },
    "rel_2977": {
      "id": "rel_2977",
      "source_id": "doc_2521",
      "target_id": "concept_2611",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.891905
    },
    "rel_2978": {
      "id": "rel_2978",
      "source_id": "doc_2521",
      "target_id": "concept_2612",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.892308
    },
    "rel_2979": {
      "id": "rel_2979",
      "source_id": "doc_2521",
      "target_id": "concept_2184",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.892664
    },
    "rel_2980": {
      "id": "rel_2980",
      "source_id": "doc_2521",
      "target_id": "concept_2183",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.893016
    },
    "rel_2981": {
      "id": "rel_2981",
      "source_id": "doc_2521",
      "target_id": "concept_2511",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.893482
    },
    "rel_2982": {
      "id": "rel_2982",
      "source_id": "doc_2521",
      "target_id": "concept_2185",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.8938298
    },
    "rel_2983": {
      "id": "rel_2983",
      "source_id": "doc_2521",
      "target_id": "concept_2465",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.894203
    },
    "rel_2984": {
      "id": "rel_2984",
      "source_id": "doc_2521",
      "target_id": "concept_2613",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.894612
    },
    "rel_2985": {
      "id": "rel_2985",
      "source_id": "doc_2521",
      "target_id": "concept_2614",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.895018
    },
    "rel_2986": {
      "id": "rel_2986",
      "source_id": "doc_2521",
      "target_id": "concept_2512",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.8954072
    },
    "rel_2987": {
      "id": "rel_2987",
      "source_id": "doc_2521",
      "target_id": "concept_2615",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.895827
    },
    "rel_2988": {
      "id": "rel_2988",
      "source_id": "doc_2521",
      "target_id": "concept_2513",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.896224
    },
    "rel_2989": {
      "id": "rel_2989",
      "source_id": "doc_2521",
      "target_id": "concept_2616",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.8966122
    },
    "rel_2990": {
      "id": "rel_2990",
      "source_id": "doc_2521",
      "target_id": "concept_2196",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.896966
    },
    "rel_2991": {
      "id": "rel_2991",
      "source_id": "doc_2521",
      "target_id": "concept_2617",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.8973792
    },
    "rel_2992": {
      "id": "rel_2992",
      "source_id": "doc_2521",
      "target_id": "concept_2202",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.89773
    },
    "rel_2993": {
      "id": "rel_2993",
      "source_id": "doc_2521",
      "target_id": "concept_2203",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.8980842
    },
    "rel_2994": {
      "id": "rel_2994",
      "source_id": "doc_2521",
      "target_id": "concept_2514",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.898479
    },
    "rel_2995": {
      "id": "rel_2995",
      "source_id": "doc_2521",
      "target_id": "concept_2618",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.89887
    },
    "rel_2996": {
      "id": "rel_2996",
      "source_id": "doc_2521",
      "target_id": "concept_2515",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.8992698
    },
    "rel_2997": {
      "id": "rel_2997",
      "source_id": "doc_2521",
      "target_id": "concept_2209",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.8996239
    },
    "rel_2998": {
      "id": "rel_2998",
      "source_id": "doc_2521",
      "target_id": "concept_2619",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.900031
    },
    "rel_2999": {
      "id": "rel_2999",
      "source_id": "doc_2521",
      "target_id": "concept_2620",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.9004421
    },
    "rel_3000": {
      "id": "rel_3000",
      "source_id": "doc_2521",
      "target_id": "concept_2621",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.9008372
    },
    "rel_3001": {
      "id": "rel_3001",
      "source_id": "doc_2521",
      "target_id": "concept_2622",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.901244
    },
    "rel_3002": {
      "id": "rel_3002",
      "source_id": "doc_2521",
      "target_id": "concept_2623",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.901634
    },
    "rel_3003": {
      "id": "rel_3003",
      "source_id": "doc_2521",
      "target_id": "concept_2624",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.9020412
    },
    "rel_3004": {
      "id": "rel_3004",
      "source_id": "doc_2521",
      "target_id": "concept_2625",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.902433
    },
    "rel_3005": {
      "id": "rel_3005",
      "source_id": "doc_2521",
      "target_id": "concept_2626",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.902847
    },
    "rel_3006": {
      "id": "rel_3006",
      "source_id": "doc_2521",
      "target_id": "concept_2516",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.9033432
    },
    "rel_3007": {
      "id": "rel_3007",
      "source_id": "doc_2521",
      "target_id": "concept_2517",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.9038668
    },
    "rel_3008": {
      "id": "rel_3008",
      "source_id": "doc_2521",
      "target_id": "concept_2215",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.9042518
    },
    "rel_3009": {
      "id": "rel_3009",
      "source_id": "doc_2521",
      "target_id": "concept_2627",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.9046772
    },
    "rel_3010": {
      "id": "rel_3010",
      "source_id": "doc_2521",
      "target_id": "concept_2518",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.905096
    },
    "rel_3011": {
      "id": "rel_3011",
      "source_id": "doc_2521",
      "target_id": "concept_2628",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.905529
    },
    "rel_3012": {
      "id": "rel_3012",
      "source_id": "doc_2521",
      "target_id": "concept_2629",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.9059572
    },
    "rel_3013": {
      "id": "rel_3013",
      "source_id": "doc_2521",
      "target_id": "concept_2630",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.906395
    },
    "rel_3014": {
      "id": "rel_3014",
      "source_id": "doc_2521",
      "target_id": "concept_2519",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.9068859
    },
    "rel_3015": {
      "id": "rel_3015",
      "source_id": "doc_2521",
      "target_id": "concept_2520",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.907493
    },
    "rel_3016": {
      "id": "rel_3016",
      "source_id": "doc_2632",
      "target_id": "concept_2633",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.914158
    },
    "rel_3017": {
      "id": "rel_3017",
      "source_id": "doc_2632",
      "target_id": "concept_2634",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.914544
    },
    "rel_3018": {
      "id": "rel_3018",
      "source_id": "doc_2632",
      "target_id": "concept_2635",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.91495
    },
    "rel_3019": {
      "id": "rel_3019",
      "source_id": "doc_2632",
      "target_id": "concept_2636",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.915339
    },
    "rel_3020": {
      "id": "rel_3020",
      "source_id": "doc_2632",
      "target_id": "concept_2637",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.915731
    },
    "rel_3021": {
      "id": "rel_3021",
      "source_id": "doc_2632",
      "target_id": "concept_2638",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.916215
    },
    "rel_3022": {
      "id": "rel_3022",
      "source_id": "doc_2632",
      "target_id": "concept_2639",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.916627
    },
    "rel_3023": {
      "id": "rel_3023",
      "source_id": "doc_2632",
      "target_id": "concept_2083",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.9170508
    },
    "rel_3024": {
      "id": "rel_3024",
      "source_id": "doc_2632",
      "target_id": "concept_2391",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.9174101
    },
    "rel_3025": {
      "id": "rel_3025",
      "source_id": "doc_2632",
      "target_id": "concept_236",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.917463
    },
    "rel_3026": {
      "id": "rel_3026",
      "source_id": "doc_2632",
      "target_id": "concept_2640",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.917875
    },
    "rel_3027": {
      "id": "rel_3027",
      "source_id": "doc_2632",
      "target_id": "concept_2641",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.918261
    },
    "rel_3028": {
      "id": "rel_3028",
      "source_id": "doc_2632",
      "target_id": "concept_2642",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.918674
    },
    "rel_3029": {
      "id": "rel_3029",
      "source_id": "doc_2632",
      "target_id": "concept_2643",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.919071
    },
    "rel_3030": {
      "id": "rel_3030",
      "source_id": "doc_2632",
      "target_id": "concept_2097",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.9194071
    },
    "rel_3031": {
      "id": "rel_3031",
      "source_id": "doc_2632",
      "target_id": "concept_2644",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.919799
    },
    "rel_3032": {
      "id": "rel_3032",
      "source_id": "doc_2632",
      "target_id": "concept_2645",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.920183
    },
    "rel_3033": {
      "id": "rel_3033",
      "source_id": "doc_2632",
      "target_id": "concept_2102",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.920545
    },
    "rel_3034": {
      "id": "rel_3034",
      "source_id": "doc_2632",
      "target_id": "concept_2646",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.920974
    },
    "rel_3035": {
      "id": "rel_3035",
      "source_id": "doc_2632",
      "target_id": "concept_2103",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.921314
    },
    "rel_3036": {
      "id": "rel_3036",
      "source_id": "doc_2632",
      "target_id": "concept_2647",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.921706
    },
    "rel_3037": {
      "id": "rel_3037",
      "source_id": "doc_2632",
      "target_id": "concept_2648",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.922101
    },
    "rel_3038": {
      "id": "rel_3038",
      "source_id": "doc_2632",
      "target_id": "concept_2649",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.9224901
    },
    "rel_3039": {
      "id": "rel_3039",
      "source_id": "doc_2632",
      "target_id": "concept_2110",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.922834
    },
    "rel_3040": {
      "id": "rel_3040",
      "source_id": "doc_2632",
      "target_id": "concept_2650",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.92326
    },
    "rel_3041": {
      "id": "rel_3041",
      "source_id": "doc_2632",
      "target_id": "concept_2116",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.923636
    },
    "rel_3042": {
      "id": "rel_3042",
      "source_id": "doc_2632",
      "target_id": "concept_2556",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.924041
    },
    "rel_3043": {
      "id": "rel_3043",
      "source_id": "doc_2632",
      "target_id": "concept_2651",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.9244428
    },
    "rel_3044": {
      "id": "rel_3044",
      "source_id": "doc_2632",
      "target_id": "concept_2558",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.924819
    },
    "rel_3045": {
      "id": "rel_3045",
      "source_id": "doc_2632",
      "target_id": "concept_2652",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.925211
    },
    "rel_3046": {
      "id": "rel_3046",
      "source_id": "doc_2632",
      "target_id": "concept_2653",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.925597
    },
    "rel_3047": {
      "id": "rel_3047",
      "source_id": "doc_2632",
      "target_id": "concept_2654",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.926004
    },
    "rel_3048": {
      "id": "rel_3048",
      "source_id": "doc_2632",
      "target_id": "concept_2655",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.926413
    },
    "rel_3049": {
      "id": "rel_3049",
      "source_id": "doc_2632",
      "target_id": "concept_2656",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.926809
    },
    "rel_3050": {
      "id": "rel_3050",
      "source_id": "doc_2632",
      "target_id": "concept_2131",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.927161
    },
    "rel_3051": {
      "id": "rel_3051",
      "source_id": "doc_2632",
      "target_id": "concept_2657",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.927562
    },
    "rel_3052": {
      "id": "rel_3052",
      "source_id": "doc_2632",
      "target_id": "concept_2658",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.927957
    },
    "rel_3053": {
      "id": "rel_3053",
      "source_id": "doc_2632",
      "target_id": "concept_2659",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.9283562
    },
    "rel_3054": {
      "id": "rel_3054",
      "source_id": "doc_2632",
      "target_id": "concept_2660",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.9287648
    },
    "rel_3055": {
      "id": "rel_3055",
      "source_id": "doc_2632",
      "target_id": "concept_2661",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.929151
    },
    "rel_3056": {
      "id": "rel_3056",
      "source_id": "doc_2632",
      "target_id": "concept_2662",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.929544
    },
    "rel_3057": {
      "id": "rel_3057",
      "source_id": "doc_2632",
      "target_id": "concept_2663",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.929949
    },
    "rel_3058": {
      "id": "rel_3058",
      "source_id": "doc_2632",
      "target_id": "concept_2664",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.9303522
    },
    "rel_3059": {
      "id": "rel_3059",
      "source_id": "doc_2632",
      "target_id": "concept_2665",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.930748
    },
    "rel_3060": {
      "id": "rel_3060",
      "source_id": "doc_2632",
      "target_id": "concept_2666",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.9311411
    },
    "rel_3061": {
      "id": "rel_3061",
      "source_id": "doc_2632",
      "target_id": "concept_2153",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.9315012
    },
    "rel_3062": {
      "id": "rel_3062",
      "source_id": "doc_2632",
      "target_id": "concept_2667",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.931903
    },
    "rel_3063": {
      "id": "rel_3063",
      "source_id": "doc_2632",
      "target_id": "concept_2668",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.9322948
    },
    "rel_3064": {
      "id": "rel_3064",
      "source_id": "doc_2632",
      "target_id": "concept_2075",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.932632
    },
    "rel_3065": {
      "id": "rel_3065",
      "source_id": "doc_2632",
      "target_id": "concept_2669",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.9330518
    },
    "rel_3066": {
      "id": "rel_3066",
      "source_id": "doc_2632",
      "target_id": "concept_2670",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.933585
    },
    "rel_3067": {
      "id": "rel_3067",
      "source_id": "doc_2632",
      "target_id": "concept_2160",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.934101
    },
    "rel_3068": {
      "id": "rel_3068",
      "source_id": "doc_2632",
      "target_id": "concept_2671",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.9345942
    },
    "rel_3069": {
      "id": "rel_3069",
      "source_id": "doc_2632",
      "target_id": "concept_2672",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.935064
    },
    "rel_3070": {
      "id": "rel_3070",
      "source_id": "doc_2632",
      "target_id": "concept_2335",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.935432
    },
    "rel_3071": {
      "id": "rel_3071",
      "source_id": "doc_2632",
      "target_id": "concept_2673",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.935831
    },
    "rel_3072": {
      "id": "rel_3072",
      "source_id": "doc_2632",
      "target_id": "concept_475",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.935928
    },
    "rel_3073": {
      "id": "rel_3073",
      "source_id": "doc_2632",
      "target_id": "concept_2674",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.936332
    },
    "rel_3074": {
      "id": "rel_3074",
      "source_id": "doc_2632",
      "target_id": "concept_2419",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.936706
    },
    "rel_3075": {
      "id": "rel_3075",
      "source_id": "doc_2632",
      "target_id": "concept_2675",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.937102
    },
    "rel_3076": {
      "id": "rel_3076",
      "source_id": "doc_2632",
      "target_id": "concept_2676",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.9375129
    },
    "rel_3077": {
      "id": "rel_3077",
      "source_id": "doc_2632",
      "target_id": "concept_2677",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.937931
    },
    "rel_3078": {
      "id": "rel_3078",
      "source_id": "doc_2632",
      "target_id": "concept_2678",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.938344
    },
    "rel_3079": {
      "id": "rel_3079",
      "source_id": "doc_2632",
      "target_id": "concept_2679",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.93874
    },
    "rel_3080": {
      "id": "rel_3080",
      "source_id": "doc_2632",
      "target_id": "concept_2680",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.939167
    },
    "rel_3081": {
      "id": "rel_3081",
      "source_id": "doc_2632",
      "target_id": "concept_2183",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.939522
    },
    "rel_3082": {
      "id": "rel_3082",
      "source_id": "doc_2632",
      "target_id": "concept_2681",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.93999
    },
    "rel_3083": {
      "id": "rel_3083",
      "source_id": "doc_2632",
      "target_id": "concept_2682",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.940416
    },
    "rel_3084": {
      "id": "rel_3084",
      "source_id": "doc_2632",
      "target_id": "concept_2683",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.940819
    },
    "rel_3085": {
      "id": "rel_3085",
      "source_id": "doc_2632",
      "target_id": "concept_2684",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.9412239
    },
    "rel_3086": {
      "id": "rel_3086",
      "source_id": "doc_2632",
      "target_id": "concept_2685",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.941616
    },
    "rel_3087": {
      "id": "rel_3087",
      "source_id": "doc_2632",
      "target_id": "concept_2686",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.942039
    },
    "rel_3088": {
      "id": "rel_3088",
      "source_id": "doc_2632",
      "target_id": "concept_2687",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.942433
    },
    "rel_3089": {
      "id": "rel_3089",
      "source_id": "doc_2632",
      "target_id": "concept_2202",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.94278
    },
    "rel_3090": {
      "id": "rel_3090",
      "source_id": "doc_2632",
      "target_id": "concept_2688",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.943192
    },
    "rel_3091": {
      "id": "rel_3091",
      "source_id": "doc_2632",
      "target_id": "concept_2689",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.943747
    },
    "rel_3092": {
      "id": "rel_3092",
      "source_id": "doc_2632",
      "target_id": "concept_2690",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.9442828
    },
    "rel_3093": {
      "id": "rel_3093",
      "source_id": "doc_2632",
      "target_id": "concept_2691",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.944675
    },
    "rel_3094": {
      "id": "rel_3094",
      "source_id": "doc_2632",
      "target_id": "concept_2692",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.9450638
    },
    "rel_3095": {
      "id": "rel_3095",
      "source_id": "doc_2632",
      "target_id": "concept_638",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.945185
    },
    "rel_3096": {
      "id": "rel_3096",
      "source_id": "doc_2632",
      "target_id": "concept_2210",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.9455428
    },
    "rel_3097": {
      "id": "rel_3097",
      "source_id": "doc_2632",
      "target_id": "concept_2693",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.9459531
    },
    "rel_3098": {
      "id": "rel_3098",
      "source_id": "doc_2632",
      "target_id": "concept_2694",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.946374
    },
    "rel_3099": {
      "id": "rel_3099",
      "source_id": "doc_2632",
      "target_id": "concept_2695",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.946805
    },
    "rel_3100": {
      "id": "rel_3100",
      "source_id": "doc_2632",
      "target_id": "concept_2696",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.947233
    },
    "rel_3101": {
      "id": "rel_3101",
      "source_id": "doc_2632",
      "target_id": "concept_2697",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.947659
    },
    "rel_3102": {
      "id": "rel_3102",
      "source_id": "doc_2632",
      "target_id": "concept_2698",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.948061
    },
    "rel_3103": {
      "id": "rel_3103",
      "source_id": "doc_2632",
      "target_id": "concept_2699",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.948478
    },
    "rel_3104": {
      "id": "rel_3104",
      "source_id": "doc_2632",
      "target_id": "concept_2700",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.948884
    },
    "rel_3105": {
      "id": "rel_3105",
      "source_id": "doc_2632",
      "target_id": "concept_2701",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.949285
    },
    "rel_3106": {
      "id": "rel_3106",
      "source_id": "doc_2632",
      "target_id": "concept_2702",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.949701
    },
    "rel_3107": {
      "id": "rel_3107",
      "source_id": "doc_2632",
      "target_id": "concept_2220",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.9500532
    },
    "rel_3108": {
      "id": "rel_3108",
      "source_id": "doc_2703",
      "target_id": "concept_2704",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.950978
    },
    "rel_3109": {
      "id": "rel_3109",
      "source_id": "doc_2703",
      "target_id": "concept_2262",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.951332
    },
    "rel_3110": {
      "id": "rel_3110",
      "source_id": "doc_2703",
      "target_id": "concept_2705",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.9517472
    },
    "rel_3111": {
      "id": "rel_3111",
      "source_id": "doc_2703",
      "target_id": "concept_2216",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.952105
    },
    "rel_3112": {
      "id": "rel_3112",
      "source_id": "doc_2703",
      "target_id": "concept_2706",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.952506
    },
    "rel_3113": {
      "id": "rel_3113",
      "source_id": "doc_2703",
      "target_id": "concept_2185",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.9528599
    },
    "rel_3114": {
      "id": "rel_3114",
      "source_id": "doc_2703",
      "target_id": "concept_2154",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.953203
    },
    "rel_3115": {
      "id": "rel_3115",
      "source_id": "doc_2703",
      "target_id": "concept_2707",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.953739
    },
    "rel_3116": {
      "id": "rel_3116",
      "source_id": "doc_2703",
      "target_id": "concept_2122",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.954141
    },
    "rel_3117": {
      "id": "rel_3117",
      "source_id": "doc_2703",
      "target_id": "concept_2708",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.954585
    },
    "rel_3118": {
      "id": "rel_3118",
      "source_id": "doc_2703",
      "target_id": "concept_2709",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.955029
    },
    "rel_3119": {
      "id": "rel_3119",
      "source_id": "doc_2703",
      "target_id": "concept_2230",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.955412
    },
    "rel_3120": {
      "id": "rel_3120",
      "source_id": "doc_2703",
      "target_id": "concept_2085",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.955762
    },
    "rel_3121": {
      "id": "rel_3121",
      "source_id": "doc_2703",
      "target_id": "concept_2394",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.9562728
    },
    "rel_3122": {
      "id": "rel_3122",
      "source_id": "doc_2710",
      "target_id": "concept_2711",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.968246
    },
    "rel_3123": {
      "id": "rel_3123",
      "source_id": "doc_2710",
      "target_id": "concept_2712",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.968658
    },
    "rel_3124": {
      "id": "rel_3124",
      "source_id": "doc_2710",
      "target_id": "concept_2713",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.969053
    },
    "rel_3125": {
      "id": "rel_3125",
      "source_id": "doc_2710",
      "target_id": "concept_2714",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.969461
    },
    "rel_3126": {
      "id": "rel_3126",
      "source_id": "doc_2710",
      "target_id": "concept_2715",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.969861
    },
    "rel_3127": {
      "id": "rel_3127",
      "source_id": "doc_2710",
      "target_id": "concept_2716",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.970287
    },
    "rel_3128": {
      "id": "rel_3128",
      "source_id": "doc_2710",
      "target_id": "concept_2717",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.9706812
    },
    "rel_3129": {
      "id": "rel_3129",
      "source_id": "doc_2710",
      "target_id": "concept_2718",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.9710941
    },
    "rel_3130": {
      "id": "rel_3130",
      "source_id": "doc_2710",
      "target_id": "concept_2719",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.971488
    },
    "rel_3131": {
      "id": "rel_3131",
      "source_id": "doc_2710",
      "target_id": "concept_2720",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.9718862
    },
    "rel_3132": {
      "id": "rel_3132",
      "source_id": "doc_2710",
      "target_id": "concept_2721",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.9722838
    },
    "rel_3133": {
      "id": "rel_3133",
      "source_id": "doc_2710",
      "target_id": "concept_2722",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.972687
    },
    "rel_3134": {
      "id": "rel_3134",
      "source_id": "doc_2710",
      "target_id": "concept_2723",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.9730968
    },
    "rel_3135": {
      "id": "rel_3135",
      "source_id": "doc_2710",
      "target_id": "concept_2724",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.973566
    },
    "rel_3136": {
      "id": "rel_3136",
      "source_id": "doc_2710",
      "target_id": "concept_2725",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.974009
    },
    "rel_3137": {
      "id": "rel_3137",
      "source_id": "doc_2710",
      "target_id": "concept_2286",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.974375
    },
    "rel_3138": {
      "id": "rel_3138",
      "source_id": "doc_2710",
      "target_id": "concept_2726",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.9748108
    },
    "rel_3139": {
      "id": "rel_3139",
      "source_id": "doc_2710",
      "target_id": "concept_2391",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.975169
    },
    "rel_3140": {
      "id": "rel_3140",
      "source_id": "doc_2710",
      "target_id": "concept_2727",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.9755719
    },
    "rel_3141": {
      "id": "rel_3141",
      "source_id": "doc_2710",
      "target_id": "concept_2728",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.97598
    },
    "rel_3142": {
      "id": "rel_3142",
      "source_id": "doc_2710",
      "target_id": "concept_2729",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.976373
    },
    "rel_3143": {
      "id": "rel_3143",
      "source_id": "doc_2710",
      "target_id": "concept_2230",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.97673
    },
    "rel_3144": {
      "id": "rel_3144",
      "source_id": "doc_2710",
      "target_id": "concept_2085",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.97707
    },
    "rel_3145": {
      "id": "rel_3145",
      "source_id": "doc_2710",
      "target_id": "concept_2394",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.977428
    },
    "rel_3146": {
      "id": "rel_3146",
      "source_id": "doc_2710",
      "target_id": "concept_2730",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.978005
    },
    "rel_3147": {
      "id": "rel_3147",
      "source_id": "doc_2710",
      "target_id": "concept_2731",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.978404
    },
    "rel_3148": {
      "id": "rel_3148",
      "source_id": "doc_2710",
      "target_id": "concept_2732",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.978821
    },
    "rel_3149": {
      "id": "rel_3149",
      "source_id": "doc_2710",
      "target_id": "concept_2733",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.9792461
    },
    "rel_3150": {
      "id": "rel_3150",
      "source_id": "doc_2710",
      "target_id": "concept_2734",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.979667
    },
    "rel_3151": {
      "id": "rel_3151",
      "source_id": "doc_2710",
      "target_id": "concept_2735",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.980119
    },
    "rel_3152": {
      "id": "rel_3152",
      "source_id": "doc_2710",
      "target_id": "concept_2095",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.980455
    },
    "rel_3153": {
      "id": "rel_3153",
      "source_id": "doc_2710",
      "target_id": "concept_2736",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.980854
    },
    "rel_3154": {
      "id": "rel_3154",
      "source_id": "doc_2710",
      "target_id": "concept_2097",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.981197
    },
    "rel_3155": {
      "id": "rel_3155",
      "source_id": "doc_2710",
      "target_id": "concept_2737",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.981602
    },
    "rel_3156": {
      "id": "rel_3156",
      "source_id": "doc_2710",
      "target_id": "concept_2428",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.9819782
    },
    "rel_3157": {
      "id": "rel_3157",
      "source_id": "doc_2710",
      "target_id": "concept_2738",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.982403
    },
    "rel_3158": {
      "id": "rel_3158",
      "source_id": "doc_2710",
      "target_id": "concept_2739",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.982819
    },
    "rel_3159": {
      "id": "rel_3159",
      "source_id": "doc_2710",
      "target_id": "concept_2740",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.9832242
    },
    "rel_3160": {
      "id": "rel_3160",
      "source_id": "doc_2710",
      "target_id": "concept_2741",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.9837031
    },
    "rel_3161": {
      "id": "rel_3161",
      "source_id": "doc_2710",
      "target_id": "concept_2742",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.9841762
    },
    "rel_3162": {
      "id": "rel_3162",
      "source_id": "doc_2710",
      "target_id": "concept_2743",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.984628
    },
    "rel_3163": {
      "id": "rel_3163",
      "source_id": "doc_2710",
      "target_id": "concept_2744",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.985059
    },
    "rel_3164": {
      "id": "rel_3164",
      "source_id": "doc_2710",
      "target_id": "concept_2745",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.985513
    },
    "rel_3165": {
      "id": "rel_3165",
      "source_id": "doc_2710",
      "target_id": "concept_2746",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.985952
    },
    "rel_3166": {
      "id": "rel_3166",
      "source_id": "doc_2710",
      "target_id": "concept_2747",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.986387
    },
    "rel_3167": {
      "id": "rel_3167",
      "source_id": "doc_2710",
      "target_id": "concept_2103",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.986742
    },
    "rel_3168": {
      "id": "rel_3168",
      "source_id": "doc_2710",
      "target_id": "concept_2748",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.9871948
    },
    "rel_3169": {
      "id": "rel_3169",
      "source_id": "doc_2710",
      "target_id": "concept_2749",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.987607
    },
    "rel_3170": {
      "id": "rel_3170",
      "source_id": "doc_2710",
      "target_id": "concept_2750",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.9880462
    },
    "rel_3171": {
      "id": "rel_3171",
      "source_id": "doc_2710",
      "target_id": "concept_2546",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.988439
    },
    "rel_3172": {
      "id": "rel_3172",
      "source_id": "doc_2710",
      "target_id": "concept_2751",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.9888709
    },
    "rel_3173": {
      "id": "rel_3173",
      "source_id": "doc_2710",
      "target_id": "concept_2752",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.989301
    },
    "rel_3174": {
      "id": "rel_3174",
      "source_id": "doc_2710",
      "target_id": "concept_2753",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.989701
    },
    "rel_3175": {
      "id": "rel_3175",
      "source_id": "doc_2710",
      "target_id": "concept_2301",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.990241
    },
    "rel_3176": {
      "id": "rel_3176",
      "source_id": "doc_2710",
      "target_id": "concept_2238",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.990601
    },
    "rel_3177": {
      "id": "rel_3177",
      "source_id": "doc_2710",
      "target_id": "concept_2754",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.991018
    },
    "rel_3178": {
      "id": "rel_3178",
      "source_id": "doc_2710",
      "target_id": "concept_2755",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.991424
    },
    "rel_3179": {
      "id": "rel_3179",
      "source_id": "doc_2710",
      "target_id": "concept_2756",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.991829
    },
    "rel_3180": {
      "id": "rel_3180",
      "source_id": "doc_2710",
      "target_id": "concept_2757",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.9922402
    },
    "rel_3181": {
      "id": "rel_3181",
      "source_id": "doc_2710",
      "target_id": "concept_2758",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.992661
    },
    "rel_3182": {
      "id": "rel_3182",
      "source_id": "doc_2710",
      "target_id": "concept_2759",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.9930859
    },
    "rel_3183": {
      "id": "rel_3183",
      "source_id": "doc_2710",
      "target_id": "concept_2116",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.993428
    },
    "rel_3184": {
      "id": "rel_3184",
      "source_id": "doc_2710",
      "target_id": "concept_2760",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.993975
    },
    "rel_3185": {
      "id": "rel_3185",
      "source_id": "doc_2710",
      "target_id": "concept_2761",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.994442
    },
    "rel_3186": {
      "id": "rel_3186",
      "source_id": "doc_2710",
      "target_id": "concept_2762",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.994866
    },
    "rel_3187": {
      "id": "rel_3187",
      "source_id": "doc_2710",
      "target_id": "concept_2763",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.9953668
    },
    "rel_3188": {
      "id": "rel_3188",
      "source_id": "doc_2710",
      "target_id": "concept_2764",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.995816
    },
    "rel_3189": {
      "id": "rel_3189",
      "source_id": "doc_2710",
      "target_id": "concept_2765",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.996404
    },
    "rel_3190": {
      "id": "rel_3190",
      "source_id": "doc_2710",
      "target_id": "concept_2243",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.996768
    },
    "rel_3191": {
      "id": "rel_3191",
      "source_id": "doc_2710",
      "target_id": "concept_2766",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.997189
    },
    "rel_3192": {
      "id": "rel_3192",
      "source_id": "doc_2710",
      "target_id": "concept_2767",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.9976041
    },
    "rel_3193": {
      "id": "rel_3193",
      "source_id": "doc_2710",
      "target_id": "concept_2768",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.9980779
    },
    "rel_3194": {
      "id": "rel_3194",
      "source_id": "doc_2710",
      "target_id": "concept_2769",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.9985
    },
    "rel_3195": {
      "id": "rel_3195",
      "source_id": "doc_2710",
      "target_id": "concept_2770",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.9989
    },
    "rel_3196": {
      "id": "rel_3196",
      "source_id": "doc_2710",
      "target_id": "concept_2771",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.99931
    },
    "rel_3197": {
      "id": "rel_3197",
      "source_id": "doc_2710",
      "target_id": "concept_2772",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957551.999733
    },
    "rel_3198": {
      "id": "rel_3198",
      "source_id": "doc_2710",
      "target_id": "concept_2773",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.000128
    },
    "rel_3199": {
      "id": "rel_3199",
      "source_id": "doc_2710",
      "target_id": "concept_2774",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.000523
    },
    "rel_3200": {
      "id": "rel_3200",
      "source_id": "doc_2710",
      "target_id": "concept_2775",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.000926
    },
    "rel_3201": {
      "id": "rel_3201",
      "source_id": "doc_2710",
      "target_id": "concept_2776",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.001336
    },
    "rel_3202": {
      "id": "rel_3202",
      "source_id": "doc_2710",
      "target_id": "concept_2777",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.001739
    },
    "rel_3203": {
      "id": "rel_3203",
      "source_id": "doc_2710",
      "target_id": "concept_2778",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.002152
    },
    "rel_3204": {
      "id": "rel_3204",
      "source_id": "doc_2710",
      "target_id": "concept_2779",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.002602
    },
    "rel_3205": {
      "id": "rel_3205",
      "source_id": "doc_2710",
      "target_id": "concept_2780",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.003001
    },
    "rel_3206": {
      "id": "rel_3206",
      "source_id": "doc_2710",
      "target_id": "concept_2398",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.003367
    },
    "rel_3207": {
      "id": "rel_3207",
      "source_id": "doc_2710",
      "target_id": "concept_2781",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.0039198
    },
    "rel_3208": {
      "id": "rel_3208",
      "source_id": "doc_2710",
      "target_id": "concept_2782",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.0044281
    },
    "rel_3209": {
      "id": "rel_3209",
      "source_id": "doc_2710",
      "target_id": "concept_2783",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.0048819
    },
    "rel_3210": {
      "id": "rel_3210",
      "source_id": "doc_2710",
      "target_id": "concept_2784",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.005375
    },
    "rel_3211": {
      "id": "rel_3211",
      "source_id": "doc_2710",
      "target_id": "concept_2785",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.005812
    },
    "rel_3212": {
      "id": "rel_3212",
      "source_id": "doc_2710",
      "target_id": "concept_2786",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.006219
    },
    "rel_3213": {
      "id": "rel_3213",
      "source_id": "doc_2710",
      "target_id": "concept_2787",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.006717
    },
    "rel_3214": {
      "id": "rel_3214",
      "source_id": "doc_2710",
      "target_id": "concept_2788",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.007146
    },
    "rel_3215": {
      "id": "rel_3215",
      "source_id": "doc_2710",
      "target_id": "concept_2789",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.00755
    },
    "rel_3216": {
      "id": "rel_3216",
      "source_id": "doc_2710",
      "target_id": "concept_2790",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.007953
    },
    "rel_3217": {
      "id": "rel_3217",
      "source_id": "doc_2710",
      "target_id": "concept_2791",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.008358
    },
    "rel_3218": {
      "id": "rel_3218",
      "source_id": "doc_2710",
      "target_id": "concept_2792",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.008765
    },
    "rel_3219": {
      "id": "rel_3219",
      "source_id": "doc_2710",
      "target_id": "concept_2573",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.00914
    },
    "rel_3220": {
      "id": "rel_3220",
      "source_id": "doc_2710",
      "target_id": "concept_2793",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.009541
    },
    "rel_3221": {
      "id": "rel_3221",
      "source_id": "doc_2710",
      "target_id": "concept_2794",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.0099552
    },
    "rel_3222": {
      "id": "rel_3222",
      "source_id": "doc_2710",
      "target_id": "concept_2795",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.010388
    },
    "rel_3223": {
      "id": "rel_3223",
      "source_id": "doc_2710",
      "target_id": "concept_2796",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.0107892
    },
    "rel_3224": {
      "id": "rel_3224",
      "source_id": "doc_2710",
      "target_id": "concept_2138",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.01113
    },
    "rel_3225": {
      "id": "rel_3225",
      "source_id": "doc_2710",
      "target_id": "concept_2446",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.011497
    },
    "rel_3226": {
      "id": "rel_3226",
      "source_id": "doc_2710",
      "target_id": "concept_2797",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.011891
    },
    "rel_3227": {
      "id": "rel_3227",
      "source_id": "doc_2710",
      "target_id": "concept_2798",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.012291
    },
    "rel_3228": {
      "id": "rel_3228",
      "source_id": "doc_2710",
      "target_id": "concept_2799",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.012693
    },
    "rel_3229": {
      "id": "rel_3229",
      "source_id": "doc_2710",
      "target_id": "concept_2800",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.0131001
    },
    "rel_3230": {
      "id": "rel_3230",
      "source_id": "doc_2710",
      "target_id": "concept_2801",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.0135171
    },
    "rel_3231": {
      "id": "rel_3231",
      "source_id": "doc_2710",
      "target_id": "concept_2802",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.014079
    },
    "rel_3232": {
      "id": "rel_3232",
      "source_id": "doc_2710",
      "target_id": "concept_2803",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.0145159
    },
    "rel_3233": {
      "id": "rel_3233",
      "source_id": "doc_2710",
      "target_id": "concept_2804",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.0150442
    },
    "rel_3234": {
      "id": "rel_3234",
      "source_id": "doc_2710",
      "target_id": "concept_2805",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.015469
    },
    "rel_3235": {
      "id": "rel_3235",
      "source_id": "doc_2710",
      "target_id": "concept_2806",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.0160089
    },
    "rel_3236": {
      "id": "rel_3236",
      "source_id": "doc_2710",
      "target_id": "concept_2807",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.016455
    },
    "rel_3237": {
      "id": "rel_3237",
      "source_id": "doc_2710",
      "target_id": "concept_2808",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.0168781
    },
    "rel_3238": {
      "id": "rel_3238",
      "source_id": "doc_2710",
      "target_id": "concept_2809",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.017291
    },
    "rel_3239": {
      "id": "rel_3239",
      "source_id": "doc_2710",
      "target_id": "concept_2810",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.017706
    },
    "rel_3240": {
      "id": "rel_3240",
      "source_id": "doc_2710",
      "target_id": "concept_2811",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.018108
    },
    "rel_3241": {
      "id": "rel_3241",
      "source_id": "doc_2710",
      "target_id": "concept_2812",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.018538
    },
    "rel_3242": {
      "id": "rel_3242",
      "source_id": "doc_2710",
      "target_id": "concept_2813",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.018962
    },
    "rel_3243": {
      "id": "rel_3243",
      "source_id": "doc_2710",
      "target_id": "concept_2814",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.0195289
    },
    "rel_3244": {
      "id": "rel_3244",
      "source_id": "doc_2710",
      "target_id": "concept_2815",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.019935
    },
    "rel_3245": {
      "id": "rel_3245",
      "source_id": "doc_2710",
      "target_id": "concept_2816",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.0203469
    },
    "rel_3246": {
      "id": "rel_3246",
      "source_id": "doc_2710",
      "target_id": "concept_2817",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.020753
    },
    "rel_3247": {
      "id": "rel_3247",
      "source_id": "doc_2710",
      "target_id": "concept_2818",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.021188
    },
    "rel_3248": {
      "id": "rel_3248",
      "source_id": "doc_2710",
      "target_id": "concept_2819",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.02161
    },
    "rel_3249": {
      "id": "rel_3249",
      "source_id": "doc_2710",
      "target_id": "concept_2820",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.022132
    },
    "rel_3250": {
      "id": "rel_3250",
      "source_id": "doc_2710",
      "target_id": "concept_2821",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.022538
    },
    "rel_3251": {
      "id": "rel_3251",
      "source_id": "doc_2710",
      "target_id": "concept_2379",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.0229042
    },
    "rel_3252": {
      "id": "rel_3252",
      "source_id": "doc_2710",
      "target_id": "concept_2822",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.023336
    },
    "rel_3253": {
      "id": "rel_3253",
      "source_id": "doc_2710",
      "target_id": "concept_2823",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.023828
    },
    "rel_3254": {
      "id": "rel_3254",
      "source_id": "doc_2710",
      "target_id": "concept_2085",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.024252
    },
    "rel_3255": {
      "id": "rel_3255",
      "source_id": "doc_2710",
      "target_id": "concept_2824",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.024748
    },
    "rel_3256": {
      "id": "rel_3256",
      "source_id": "doc_2710",
      "target_id": "concept_2825",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.025153
    },
    "rel_3257": {
      "id": "rel_3257",
      "source_id": "doc_2710",
      "target_id": "concept_2826",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.025561
    },
    "rel_3258": {
      "id": "rel_3258",
      "source_id": "doc_2710",
      "target_id": "concept_2827",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.02597
    },
    "rel_3259": {
      "id": "rel_3259",
      "source_id": "doc_2710",
      "target_id": "concept_2828",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.026405
    },
    "rel_3260": {
      "id": "rel_3260",
      "source_id": "doc_2710",
      "target_id": "concept_2829",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.026808
    },
    "rel_3261": {
      "id": "rel_3261",
      "source_id": "doc_2710",
      "target_id": "concept_2153",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.027149
    },
    "rel_3262": {
      "id": "rel_3262",
      "source_id": "doc_2710",
      "target_id": "concept_2830",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.027552
    },
    "rel_3263": {
      "id": "rel_3263",
      "source_id": "doc_2710",
      "target_id": "concept_2831",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.0279748
    },
    "rel_3264": {
      "id": "rel_3264",
      "source_id": "doc_2710",
      "target_id": "concept_2154",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.0283148
    },
    "rel_3265": {
      "id": "rel_3265",
      "source_id": "doc_2710",
      "target_id": "concept_2832",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.028724
    },
    "rel_3266": {
      "id": "rel_3266",
      "source_id": "doc_2710",
      "target_id": "concept_2075",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.029063
    },
    "rel_3267": {
      "id": "rel_3267",
      "source_id": "doc_2710",
      "target_id": "concept_2160",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.0294101
    },
    "rel_3268": {
      "id": "rel_3268",
      "source_id": "doc_2710",
      "target_id": "concept_2833",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.02983
    },
    "rel_3269": {
      "id": "rel_3269",
      "source_id": "doc_2710",
      "target_id": "concept_2834",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.030248
    },
    "rel_3270": {
      "id": "rel_3270",
      "source_id": "doc_2710",
      "target_id": "concept_2672",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.030645
    },
    "rel_3271": {
      "id": "rel_3271",
      "source_id": "doc_2710",
      "target_id": "concept_2835",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.031091
    },
    "rel_3272": {
      "id": "rel_3272",
      "source_id": "doc_2710",
      "target_id": "concept_2836",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.0314949
    },
    "rel_3273": {
      "id": "rel_3273",
      "source_id": "doc_2710",
      "target_id": "concept_2837",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.0319092
    },
    "rel_3274": {
      "id": "rel_3274",
      "source_id": "doc_2710",
      "target_id": "concept_2838",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.0323179
    },
    "rel_3275": {
      "id": "rel_3275",
      "source_id": "doc_2710",
      "target_id": "concept_2839",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.0327208
    },
    "rel_3276": {
      "id": "rel_3276",
      "source_id": "doc_2710",
      "target_id": "concept_2840",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.03312
    },
    "rel_3277": {
      "id": "rel_3277",
      "source_id": "doc_2710",
      "target_id": "concept_2841",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.0335228
    },
    "rel_3278": {
      "id": "rel_3278",
      "source_id": "doc_2710",
      "target_id": "concept_2842",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.034144
    },
    "rel_3279": {
      "id": "rel_3279",
      "source_id": "doc_2710",
      "target_id": "concept_2843",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.034587
    },
    "rel_3280": {
      "id": "rel_3280",
      "source_id": "doc_2710",
      "target_id": "concept_2844",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.03505
    },
    "rel_3281": {
      "id": "rel_3281",
      "source_id": "doc_2710",
      "target_id": "concept_2845",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.0354922
    },
    "rel_3282": {
      "id": "rel_3282",
      "source_id": "doc_2710",
      "target_id": "concept_2846",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.035928
    },
    "rel_3283": {
      "id": "rel_3283",
      "source_id": "doc_2710",
      "target_id": "concept_2847",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.036352
    },
    "rel_3284": {
      "id": "rel_3284",
      "source_id": "doc_2710",
      "target_id": "concept_2848",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.036797
    },
    "rel_3285": {
      "id": "rel_3285",
      "source_id": "doc_2710",
      "target_id": "concept_2849",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.0373409
    },
    "rel_3286": {
      "id": "rel_3286",
      "source_id": "doc_2710",
      "target_id": "concept_2168",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.037697
    },
    "rel_3287": {
      "id": "rel_3287",
      "source_id": "doc_2710",
      "target_id": "concept_2850",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.0381382
    },
    "rel_3288": {
      "id": "rel_3288",
      "source_id": "doc_2710",
      "target_id": "concept_2851",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.038569
    },
    "rel_3289": {
      "id": "rel_3289",
      "source_id": "doc_2710",
      "target_id": "concept_2852",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.03899
    },
    "rel_3290": {
      "id": "rel_3290",
      "source_id": "doc_2710",
      "target_id": "concept_2337",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.03936
    },
    "rel_3291": {
      "id": "rel_3291",
      "source_id": "doc_2710",
      "target_id": "concept_2853",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.039787
    },
    "rel_3292": {
      "id": "rel_3292",
      "source_id": "doc_2710",
      "target_id": "concept_2854",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.0401962
    },
    "rel_3293": {
      "id": "rel_3293",
      "source_id": "doc_2710",
      "target_id": "concept_475",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.040291
    },
    "rel_3294": {
      "id": "rel_3294",
      "source_id": "doc_2710",
      "target_id": "concept_2855",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.040731
    },
    "rel_3295": {
      "id": "rel_3295",
      "source_id": "doc_2710",
      "target_id": "concept_2856",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.04118
    },
    "rel_3296": {
      "id": "rel_3296",
      "source_id": "doc_2710",
      "target_id": "concept_2857",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.0416179
    },
    "rel_3297": {
      "id": "rel_3297",
      "source_id": "doc_2710",
      "target_id": "concept_2858",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.04208
    },
    "rel_3298": {
      "id": "rel_3298",
      "source_id": "doc_2710",
      "target_id": "concept_2859",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.0425038
    },
    "rel_3299": {
      "id": "rel_3299",
      "source_id": "doc_2710",
      "target_id": "concept_2860",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.042933
    },
    "rel_3300": {
      "id": "rel_3300",
      "source_id": "doc_2710",
      "target_id": "concept_2861",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.043353
    },
    "rel_3301": {
      "id": "rel_3301",
      "source_id": "doc_2710",
      "target_id": "concept_2862",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.043844
    },
    "rel_3302": {
      "id": "rel_3302",
      "source_id": "doc_2710",
      "target_id": "concept_2863",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.044511
    },
    "rel_3303": {
      "id": "rel_3303",
      "source_id": "doc_2710",
      "target_id": "concept_2461",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.044893
    },
    "rel_3304": {
      "id": "rel_3304",
      "source_id": "doc_2710",
      "target_id": "concept_2174",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.0452569
    },
    "rel_3305": {
      "id": "rel_3305",
      "source_id": "doc_2710",
      "target_id": "concept_2864",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.045849
    },
    "rel_3306": {
      "id": "rel_3306",
      "source_id": "doc_2710",
      "target_id": "concept_2865",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.046277
    },
    "rel_3307": {
      "id": "rel_3307",
      "source_id": "doc_2710",
      "target_id": "concept_2419",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.046703
    },
    "rel_3308": {
      "id": "rel_3308",
      "source_id": "doc_2710",
      "target_id": "concept_2866",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.0471308
    },
    "rel_3309": {
      "id": "rel_3309",
      "source_id": "doc_2710",
      "target_id": "concept_2867",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.047555
    },
    "rel_3310": {
      "id": "rel_3310",
      "source_id": "doc_2710",
      "target_id": "concept_2868",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.0479648
    },
    "rel_3311": {
      "id": "rel_3311",
      "source_id": "doc_2710",
      "target_id": "concept_2262",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.048417
    },
    "rel_3312": {
      "id": "rel_3312",
      "source_id": "doc_2710",
      "target_id": "concept_2869",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.04888
    },
    "rel_3313": {
      "id": "rel_3313",
      "source_id": "doc_2710",
      "target_id": "concept_2870",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.049303
    },
    "rel_3314": {
      "id": "rel_3314",
      "source_id": "doc_2710",
      "target_id": "concept_2871",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.0497391
    },
    "rel_3315": {
      "id": "rel_3315",
      "source_id": "doc_2710",
      "target_id": "concept_2872",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.050156
    },
    "rel_3316": {
      "id": "rel_3316",
      "source_id": "doc_2710",
      "target_id": "concept_2873",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.050572
    },
    "rel_3317": {
      "id": "rel_3317",
      "source_id": "doc_2710",
      "target_id": "concept_2185",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.0509188
    },
    "rel_3318": {
      "id": "rel_3318",
      "source_id": "doc_2710",
      "target_id": "concept_2874",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.0513349
    },
    "rel_3319": {
      "id": "rel_3319",
      "source_id": "doc_2710",
      "target_id": "concept_2875",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.051737
    },
    "rel_3320": {
      "id": "rel_3320",
      "source_id": "doc_2710",
      "target_id": "concept_2465",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.052117
    },
    "rel_3321": {
      "id": "rel_3321",
      "source_id": "doc_2710",
      "target_id": "concept_2876",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.052555
    },
    "rel_3322": {
      "id": "rel_3322",
      "source_id": "doc_2710",
      "target_id": "concept_2877",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.0529659
    },
    "rel_3323": {
      "id": "rel_3323",
      "source_id": "doc_2710",
      "target_id": "concept_2878",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.053377
    },
    "rel_3324": {
      "id": "rel_3324",
      "source_id": "doc_2710",
      "target_id": "concept_2879",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.0538712
    },
    "rel_3325": {
      "id": "rel_3325",
      "source_id": "doc_2710",
      "target_id": "concept_2880",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.054392
    },
    "rel_3326": {
      "id": "rel_3326",
      "source_id": "doc_2710",
      "target_id": "concept_2881",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.054827
    },
    "rel_3327": {
      "id": "rel_3327",
      "source_id": "doc_2710",
      "target_id": "concept_2882",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.055264
    },
    "rel_3328": {
      "id": "rel_3328",
      "source_id": "doc_2710",
      "target_id": "concept_2883",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.055702
    },
    "rel_3329": {
      "id": "rel_3329",
      "source_id": "doc_2710",
      "target_id": "concept_2884",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.056145
    },
    "rel_3330": {
      "id": "rel_3330",
      "source_id": "doc_2710",
      "target_id": "concept_2885",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.0566678
    },
    "rel_3331": {
      "id": "rel_3331",
      "source_id": "doc_2710",
      "target_id": "concept_2383",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.057069
    },
    "rel_3332": {
      "id": "rel_3332",
      "source_id": "doc_2710",
      "target_id": "concept_2886",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.0576682
    },
    "rel_3333": {
      "id": "rel_3333",
      "source_id": "doc_2710",
      "target_id": "concept_2887",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.058091
    },
    "rel_3334": {
      "id": "rel_3334",
      "source_id": "doc_2710",
      "target_id": "concept_2888",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.0585039
    },
    "rel_3335": {
      "id": "rel_3335",
      "source_id": "doc_2710",
      "target_id": "concept_2889",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.058928
    },
    "rel_3336": {
      "id": "rel_3336",
      "source_id": "doc_2710",
      "target_id": "concept_2890",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.059353
    },
    "rel_3337": {
      "id": "rel_3337",
      "source_id": "doc_2710",
      "target_id": "concept_2891",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.0597801
    },
    "rel_3338": {
      "id": "rel_3338",
      "source_id": "doc_2710",
      "target_id": "concept_2892",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.06033
    },
    "rel_3339": {
      "id": "rel_3339",
      "source_id": "doc_2710",
      "target_id": "concept_2893",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.060776
    },
    "rel_3340": {
      "id": "rel_3340",
      "source_id": "doc_2710",
      "target_id": "concept_2894",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.061404
    },
    "rel_3341": {
      "id": "rel_3341",
      "source_id": "doc_2710",
      "target_id": "concept_2895",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.061846
    },
    "rel_3342": {
      "id": "rel_3342",
      "source_id": "doc_2710",
      "target_id": "concept_2896",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.062283
    },
    "rel_3343": {
      "id": "rel_3343",
      "source_id": "doc_2710",
      "target_id": "concept_2202",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.0626318
    },
    "rel_3344": {
      "id": "rel_3344",
      "source_id": "doc_2710",
      "target_id": "concept_2897",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.0630531
    },
    "rel_3345": {
      "id": "rel_3345",
      "source_id": "doc_2710",
      "target_id": "concept_2898",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.063476
    },
    "rel_3346": {
      "id": "rel_3346",
      "source_id": "doc_2710",
      "target_id": "concept_2899",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.064002
    },
    "rel_3347": {
      "id": "rel_3347",
      "source_id": "doc_2710",
      "target_id": "concept_2900",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.0644832
    },
    "rel_3348": {
      "id": "rel_3348",
      "source_id": "doc_2710",
      "target_id": "concept_2901",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.065054
    },
    "rel_3349": {
      "id": "rel_3349",
      "source_id": "doc_2710",
      "target_id": "concept_2902",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.0655339
    },
    "rel_3350": {
      "id": "rel_3350",
      "source_id": "doc_2710",
      "target_id": "concept_2903",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.0659552
    },
    "rel_3351": {
      "id": "rel_3351",
      "source_id": "doc_2710",
      "target_id": "concept_2904",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.066369
    },
    "rel_3352": {
      "id": "rel_3352",
      "source_id": "doc_2710",
      "target_id": "concept_2905",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.0668201
    },
    "rel_3353": {
      "id": "rel_3353",
      "source_id": "doc_2710",
      "target_id": "concept_2906",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.067265
    },
    "rel_3354": {
      "id": "rel_3354",
      "source_id": "doc_2710",
      "target_id": "concept_2907",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.067766
    },
    "rel_3355": {
      "id": "rel_3355",
      "source_id": "doc_2710",
      "target_id": "concept_2908",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.068188
    },
    "rel_3356": {
      "id": "rel_3356",
      "source_id": "doc_2710",
      "target_id": "concept_2909",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.068608
    },
    "rel_3357": {
      "id": "rel_3357",
      "source_id": "doc_2710",
      "target_id": "concept_2910",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.069025
    },
    "rel_3358": {
      "id": "rel_3358",
      "source_id": "doc_2710",
      "target_id": "concept_2911",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.069442
    },
    "rel_3359": {
      "id": "rel_3359",
      "source_id": "doc_2710",
      "target_id": "concept_2912",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.0698528
    },
    "rel_3360": {
      "id": "rel_3360",
      "source_id": "doc_2710",
      "target_id": "concept_2913",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.070291
    },
    "rel_3361": {
      "id": "rel_3361",
      "source_id": "doc_2710",
      "target_id": "concept_2914",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.070709
    },
    "rel_3362": {
      "id": "rel_3362",
      "source_id": "doc_2710",
      "target_id": "concept_2214",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.071063
    },
    "rel_3363": {
      "id": "rel_3363",
      "source_id": "doc_2710",
      "target_id": "concept_2915",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.0714839
    },
    "rel_3364": {
      "id": "rel_3364",
      "source_id": "doc_2710",
      "target_id": "concept_2916",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.0719008
    },
    "rel_3365": {
      "id": "rel_3365",
      "source_id": "doc_2710",
      "target_id": "concept_2917",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.072323
    },
    "rel_3366": {
      "id": "rel_3366",
      "source_id": "doc_2710",
      "target_id": "concept_2918",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.07282
    },
    "rel_3367": {
      "id": "rel_3367",
      "source_id": "doc_2710",
      "target_id": "concept_2919",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.07324
    },
    "rel_3368": {
      "id": "rel_3368",
      "source_id": "doc_2710",
      "target_id": "concept_2920",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.0736918
    },
    "rel_3369": {
      "id": "rel_3369",
      "source_id": "doc_2710",
      "target_id": "concept_2921",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.074257
    },
    "rel_3370": {
      "id": "rel_3370",
      "source_id": "doc_2710",
      "target_id": "concept_2922",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.074751
    },
    "rel_3371": {
      "id": "rel_3371",
      "source_id": "doc_2710",
      "target_id": "concept_2923",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.075169
    },
    "rel_3372": {
      "id": "rel_3372",
      "source_id": "concept_2797",
      "target_id": "doc_2710",
      "relationship_type": "extends",
      "strength": 0.7,
      "metadata": {},
      "created_at": 1754957552.0755851
    },
    "rel_3373": {
      "id": "rel_3373",
      "source_id": "doc_2924",
      "target_id": "concept_2925",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.07901
    },
    "rel_3374": {
      "id": "rel_3374",
      "source_id": "doc_2924",
      "target_id": "concept_2926",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.079421
    },
    "rel_3375": {
      "id": "rel_3375",
      "source_id": "doc_2924",
      "target_id": "concept_2927",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.0798311
    },
    "rel_3376": {
      "id": "rel_3376",
      "source_id": "doc_2924",
      "target_id": "concept_2262",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.080181
    },
    "rel_3377": {
      "id": "rel_3377",
      "source_id": "doc_2924",
      "target_id": "concept_2928",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.0806139
    },
    "rel_3378": {
      "id": "rel_3378",
      "source_id": "doc_2924",
      "target_id": "concept_2929",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.08104
    },
    "rel_3379": {
      "id": "rel_3379",
      "source_id": "doc_2924",
      "target_id": "concept_2930",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.0814762
    },
    "rel_3380": {
      "id": "rel_3380",
      "source_id": "doc_2924",
      "target_id": "concept_2931",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.0818949
    },
    "rel_3381": {
      "id": "rel_3381",
      "source_id": "doc_2924",
      "target_id": "concept_2183",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.082288
    },
    "rel_3382": {
      "id": "rel_3382",
      "source_id": "doc_2924",
      "target_id": "concept_2932",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.0827541
    },
    "rel_3383": {
      "id": "rel_3383",
      "source_id": "doc_2924",
      "target_id": "concept_2933",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.0831769
    },
    "rel_3384": {
      "id": "rel_3384",
      "source_id": "doc_2924",
      "target_id": "concept_2116",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.0835168
    },
    "rel_3385": {
      "id": "rel_3385",
      "source_id": "doc_2924",
      "target_id": "concept_2934",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.083928
    },
    "rel_3386": {
      "id": "rel_3386",
      "source_id": "doc_2924",
      "target_id": "concept_2935",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.0843468
    },
    "rel_3387": {
      "id": "rel_3387",
      "source_id": "doc_2924",
      "target_id": "concept_2556",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.084717
    },
    "rel_3388": {
      "id": "rel_3388",
      "source_id": "doc_2924",
      "target_id": "concept_2936",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.085172
    },
    "rel_3389": {
      "id": "rel_3389",
      "source_id": "doc_2924",
      "target_id": "concept_2937",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.085588
    },
    "rel_3390": {
      "id": "rel_3390",
      "source_id": "doc_2924",
      "target_id": "concept_2938",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.086068
    },
    "rel_3391": {
      "id": "rel_3391",
      "source_id": "doc_2924",
      "target_id": "concept_2939",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.086603
    },
    "rel_3392": {
      "id": "rel_3392",
      "source_id": "doc_2924",
      "target_id": "concept_2558",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.08703
    },
    "rel_3393": {
      "id": "rel_3393",
      "source_id": "doc_2924",
      "target_id": "concept_2940",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.087523
    },
    "rel_3394": {
      "id": "rel_3394",
      "source_id": "doc_2924",
      "target_id": "concept_2941",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.0879948
    },
    "rel_3395": {
      "id": "rel_3395",
      "source_id": "doc_2924",
      "target_id": "concept_2942",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.0884218
    },
    "rel_3396": {
      "id": "rel_3396",
      "source_id": "doc_2924",
      "target_id": "concept_2153",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.088763
    },
    "rel_3397": {
      "id": "rel_3397",
      "source_id": "doc_2924",
      "target_id": "concept_2943",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.0891771
    },
    "rel_3398": {
      "id": "rel_3398",
      "source_id": "doc_2924",
      "target_id": "concept_2391",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.089539
    },
    "rel_3399": {
      "id": "rel_3399",
      "source_id": "doc_2924",
      "target_id": "concept_2944",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.089972
    },
    "rel_3400": {
      "id": "rel_3400",
      "source_id": "doc_2924",
      "target_id": "concept_2075",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.0903099
    },
    "rel_3401": {
      "id": "rel_3401",
      "source_id": "doc_2924",
      "target_id": "concept_2945",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.090762
    },
    "rel_3402": {
      "id": "rel_3402",
      "source_id": "doc_2924",
      "target_id": "concept_2946",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.091174
    },
    "rel_3403": {
      "id": "rel_3403",
      "source_id": "doc_2924",
      "target_id": "concept_2947",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.091594
    },
    "rel_3404": {
      "id": "rel_3404",
      "source_id": "doc_2924",
      "target_id": "concept_236",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.091647
    },
    "rel_3405": {
      "id": "rel_3405",
      "source_id": "doc_2924",
      "target_id": "concept_2160",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.091997
    },
    "rel_3406": {
      "id": "rel_3406",
      "source_id": "doc_2924",
      "target_id": "concept_2332",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.0923562
    },
    "rel_3407": {
      "id": "rel_3407",
      "source_id": "doc_2924",
      "target_id": "concept_2925",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.092762
    },
    "rel_3408": {
      "id": "rel_3408",
      "source_id": "doc_2924",
      "target_id": "concept_2948",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.093183
    },
    "rel_3409": {
      "id": "rel_3409",
      "source_id": "doc_2924",
      "target_id": "concept_2949",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.09361
    },
    "rel_3410": {
      "id": "rel_3410",
      "source_id": "doc_2924",
      "target_id": "concept_2950",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.094034
    },
    "rel_3411": {
      "id": "rel_3411",
      "source_id": "doc_2924",
      "target_id": "concept_2951",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.0944462
    },
    "rel_3412": {
      "id": "rel_3412",
      "source_id": "doc_2924",
      "target_id": "concept_2952",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.0948548
    },
    "rel_3413": {
      "id": "rel_3413",
      "source_id": "doc_2924",
      "target_id": "concept_2335",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.095211
    },
    "rel_3414": {
      "id": "rel_3414",
      "source_id": "doc_2924",
      "target_id": "concept_2953",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.0956202
    },
    "rel_3415": {
      "id": "rel_3415",
      "source_id": "doc_2924",
      "target_id": "concept_2954",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.096118
    },
    "rel_3416": {
      "id": "rel_3416",
      "source_id": "doc_2924",
      "target_id": "concept_2955",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.096638
    },
    "rel_3417": {
      "id": "rel_3417",
      "source_id": "doc_2924",
      "target_id": "concept_2956",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.097067
    },
    "rel_3418": {
      "id": "rel_3418",
      "source_id": "doc_2924",
      "target_id": "concept_2097",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.09742
    },
    "rel_3419": {
      "id": "rel_3419",
      "source_id": "doc_2924",
      "target_id": "concept_2957",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.097842
    },
    "rel_3420": {
      "id": "rel_3420",
      "source_id": "doc_2924",
      "target_id": "concept_2958",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.098371
    },
    "rel_3421": {
      "id": "rel_3421",
      "source_id": "doc_2924",
      "target_id": "concept_2959",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.098885
    },
    "rel_3422": {
      "id": "rel_3422",
      "source_id": "doc_2924",
      "target_id": "concept_2960",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.0993311
    },
    "rel_3423": {
      "id": "rel_3423",
      "source_id": "doc_2924",
      "target_id": "concept_2961",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.0997388
    },
    "rel_3424": {
      "id": "rel_3424",
      "source_id": "doc_2924",
      "target_id": "concept_2962",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.100153
    },
    "rel_3425": {
      "id": "rel_3425",
      "source_id": "doc_2924",
      "target_id": "concept_2963",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.100568
    },
    "rel_3426": {
      "id": "rel_3426",
      "source_id": "doc_2924",
      "target_id": "concept_475",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.100662
    },
    "rel_3427": {
      "id": "rel_3427",
      "source_id": "doc_2924",
      "target_id": "concept_2964",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.101074
    },
    "rel_3428": {
      "id": "rel_3428",
      "source_id": "doc_2924",
      "target_id": "concept_2103",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.1014242
    },
    "rel_3429": {
      "id": "rel_3429",
      "source_id": "doc_2924",
      "target_id": "concept_2965",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.101846
    },
    "rel_3430": {
      "id": "rel_3430",
      "source_id": "doc_2924",
      "target_id": "concept_2966",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.1022651
    },
    "rel_3431": {
      "id": "rel_3431",
      "source_id": "doc_2924",
      "target_id": "concept_2967",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.102693
    },
    "rel_3432": {
      "id": "rel_3432",
      "source_id": "doc_2924",
      "target_id": "concept_2968",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.103105
    },
    "rel_3433": {
      "id": "rel_3433",
      "source_id": "doc_2924",
      "target_id": "concept_2969",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.1035461
    },
    "rel_3434": {
      "id": "rel_3434",
      "source_id": "doc_2924",
      "target_id": "concept_2970",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.103955
    },
    "rel_3435": {
      "id": "rel_3435",
      "source_id": "doc_2924",
      "target_id": "concept_2971",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.1043699
    },
    "rel_3436": {
      "id": "rel_3436",
      "source_id": "doc_2924",
      "target_id": "concept_2972",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.104796
    },
    "rel_3437": {
      "id": "rel_3437",
      "source_id": "doc_2973",
      "target_id": "concept_2974",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.129641
    },
    "rel_3438": {
      "id": "rel_3438",
      "source_id": "doc_2973",
      "target_id": "concept_2975",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.130095
    },
    "rel_3439": {
      "id": "rel_3439",
      "source_id": "doc_2973",
      "target_id": "concept_2976",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.130532
    },
    "rel_3440": {
      "id": "rel_3440",
      "source_id": "doc_2973",
      "target_id": "concept_2977",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.131029
    },
    "rel_3441": {
      "id": "rel_3441",
      "source_id": "doc_2973",
      "target_id": "concept_2978",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.131588
    },
    "rel_3442": {
      "id": "rel_3442",
      "source_id": "doc_2973",
      "target_id": "concept_2979",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.132096
    },
    "rel_3443": {
      "id": "rel_3443",
      "source_id": "doc_2973",
      "target_id": "concept_2980",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.132648
    },
    "rel_3444": {
      "id": "rel_3444",
      "source_id": "doc_2973",
      "target_id": "concept_2981",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.1330628
    },
    "rel_3445": {
      "id": "rel_3445",
      "source_id": "doc_2973",
      "target_id": "concept_2982",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.133606
    },
    "rel_3446": {
      "id": "rel_3446",
      "source_id": "doc_2973",
      "target_id": "concept_2983",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.13403
    },
    "rel_3447": {
      "id": "rel_3447",
      "source_id": "doc_2973",
      "target_id": "concept_1961",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.1343749
    },
    "rel_3448": {
      "id": "rel_3448",
      "source_id": "doc_2973",
      "target_id": "concept_2984",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.134815
    },
    "rel_3449": {
      "id": "rel_3449",
      "source_id": "doc_2973",
      "target_id": "concept_2985",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.135251
    },
    "rel_3450": {
      "id": "rel_3450",
      "source_id": "doc_2973",
      "target_id": "concept_2986",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.135707
    },
    "rel_3451": {
      "id": "rel_3451",
      "source_id": "doc_2973",
      "target_id": "concept_2987",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.13625
    },
    "rel_3452": {
      "id": "rel_3452",
      "source_id": "doc_2973",
      "target_id": "concept_2988",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.1368089
    },
    "rel_3453": {
      "id": "rel_3453",
      "source_id": "doc_2973",
      "target_id": "concept_2286",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.137202
    },
    "rel_3454": {
      "id": "rel_3454",
      "source_id": "doc_2973",
      "target_id": "concept_2989",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.137692
    },
    "rel_3455": {
      "id": "rel_3455",
      "source_id": "doc_2973",
      "target_id": "concept_2990",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.13813
    },
    "rel_3456": {
      "id": "rel_3456",
      "source_id": "doc_2973",
      "target_id": "concept_2991",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.1385999
    },
    "rel_3457": {
      "id": "rel_3457",
      "source_id": "doc_2973",
      "target_id": "concept_2083",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.1389492
    },
    "rel_3458": {
      "id": "rel_3458",
      "source_id": "doc_2973",
      "target_id": "concept_2992",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.1393762
    },
    "rel_3459": {
      "id": "rel_3459",
      "source_id": "doc_2973",
      "target_id": "concept_2993",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.139864
    },
    "rel_3460": {
      "id": "rel_3460",
      "source_id": "doc_2973",
      "target_id": "concept_2994",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.1403751
    },
    "rel_3461": {
      "id": "rel_3461",
      "source_id": "doc_2973",
      "target_id": "concept_2946",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.140783
    },
    "rel_3462": {
      "id": "rel_3462",
      "source_id": "doc_2973",
      "target_id": "concept_2995",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.141234
    },
    "rel_3463": {
      "id": "rel_3463",
      "source_id": "doc_2973",
      "target_id": "concept_2996",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.141711
    },
    "rel_3464": {
      "id": "rel_3464",
      "source_id": "doc_2973",
      "target_id": "concept_2997",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.142155
    },
    "rel_3465": {
      "id": "rel_3465",
      "source_id": "doc_2973",
      "target_id": "concept_2998",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.142657
    },
    "rel_3466": {
      "id": "rel_3466",
      "source_id": "doc_2973",
      "target_id": "concept_2999",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.143094
    },
    "rel_3467": {
      "id": "rel_3467",
      "source_id": "doc_2973",
      "target_id": "concept_3000",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.143522
    },
    "rel_3468": {
      "id": "rel_3468",
      "source_id": "doc_2973",
      "target_id": "concept_3001",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.144614
    },
    "rel_3469": {
      "id": "rel_3469",
      "source_id": "doc_2973",
      "target_id": "concept_3002",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.145065
    },
    "rel_3470": {
      "id": "rel_3470",
      "source_id": "doc_2973",
      "target_id": "concept_3003",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.145577
    },
    "rel_3471": {
      "id": "rel_3471",
      "source_id": "doc_2973",
      "target_id": "concept_3004",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.1459992
    },
    "rel_3472": {
      "id": "rel_3472",
      "source_id": "doc_2973",
      "target_id": "concept_3005",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.146629
    },
    "rel_3473": {
      "id": "rel_3473",
      "source_id": "doc_2973",
      "target_id": "concept_3006",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.147136
    },
    "rel_3474": {
      "id": "rel_3474",
      "source_id": "doc_2973",
      "target_id": "concept_3007",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.147638
    },
    "rel_3475": {
      "id": "rel_3475",
      "source_id": "doc_2973",
      "target_id": "concept_2428",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.1480162
    },
    "rel_3476": {
      "id": "rel_3476",
      "source_id": "doc_2973",
      "target_id": "concept_3008",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.148889
    },
    "rel_3477": {
      "id": "rel_3477",
      "source_id": "doc_2973",
      "target_id": "concept_3009",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.149441
    },
    "rel_3478": {
      "id": "rel_3478",
      "source_id": "doc_2973",
      "target_id": "concept_3010",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.1499488
    },
    "rel_3479": {
      "id": "rel_3479",
      "source_id": "doc_2973",
      "target_id": "concept_3011",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.150406
    },
    "rel_3480": {
      "id": "rel_3480",
      "source_id": "doc_2973",
      "target_id": "concept_3012",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.150849
    },
    "rel_3481": {
      "id": "rel_3481",
      "source_id": "doc_2973",
      "target_id": "concept_3013",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.15132
    },
    "rel_3482": {
      "id": "rel_3482",
      "source_id": "doc_2973",
      "target_id": "concept_3014",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.151804
    },
    "rel_3483": {
      "id": "rel_3483",
      "source_id": "doc_2973",
      "target_id": "concept_3015",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.1523619
    },
    "rel_3484": {
      "id": "rel_3484",
      "source_id": "doc_2973",
      "target_id": "concept_3016",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.152808
    },
    "rel_3485": {
      "id": "rel_3485",
      "source_id": "doc_2973",
      "target_id": "concept_3017",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.1532722
    },
    "rel_3486": {
      "id": "rel_3486",
      "source_id": "doc_2973",
      "target_id": "concept_3018",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.153717
    },
    "rel_3487": {
      "id": "rel_3487",
      "source_id": "doc_2973",
      "target_id": "concept_3019",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.15416
    },
    "rel_3488": {
      "id": "rel_3488",
      "source_id": "doc_2973",
      "target_id": "concept_3020",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.154602
    },
    "rel_3489": {
      "id": "rel_3489",
      "source_id": "doc_2973",
      "target_id": "concept_3021",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.155046
    },
    "rel_3490": {
      "id": "rel_3490",
      "source_id": "doc_2973",
      "target_id": "concept_3022",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.155482
    },
    "rel_3491": {
      "id": "rel_3491",
      "source_id": "doc_2973",
      "target_id": "concept_2303",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.155849
    },
    "rel_3492": {
      "id": "rel_3492",
      "source_id": "doc_2973",
      "target_id": "concept_2396",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.1562638
    },
    "rel_3493": {
      "id": "rel_3493",
      "source_id": "doc_2973",
      "target_id": "concept_3023",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.15681
    },
    "rel_3494": {
      "id": "rel_3494",
      "source_id": "doc_2973",
      "target_id": "concept_3024",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.157255
    },
    "rel_3495": {
      "id": "rel_3495",
      "source_id": "doc_2973",
      "target_id": "concept_3025",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.158346
    },
    "rel_3496": {
      "id": "rel_3496",
      "source_id": "doc_2973",
      "target_id": "concept_3026",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.158845
    },
    "rel_3497": {
      "id": "rel_3497",
      "source_id": "doc_2973",
      "target_id": "concept_3027",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.159313
    },
    "rel_3498": {
      "id": "rel_3498",
      "source_id": "doc_2973",
      "target_id": "concept_3028",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.159746
    },
    "rel_3499": {
      "id": "rel_3499",
      "source_id": "doc_2973",
      "target_id": "concept_3029",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.1601658
    },
    "rel_3500": {
      "id": "rel_3500",
      "source_id": "doc_2973",
      "target_id": "concept_3030",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.161128
    },
    "rel_3501": {
      "id": "rel_3501",
      "source_id": "doc_2973",
      "target_id": "concept_3031",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.161568
    },
    "rel_3502": {
      "id": "rel_3502",
      "source_id": "doc_2973",
      "target_id": "concept_3032",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.162007
    },
    "rel_3503": {
      "id": "rel_3503",
      "source_id": "doc_2973",
      "target_id": "concept_3033",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.162456
    },
    "rel_3504": {
      "id": "rel_3504",
      "source_id": "doc_2973",
      "target_id": "concept_3034",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.162889
    },
    "rel_3505": {
      "id": "rel_3505",
      "source_id": "doc_2973",
      "target_id": "concept_3035",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.163358
    },
    "rel_3506": {
      "id": "rel_3506",
      "source_id": "doc_2973",
      "target_id": "concept_3036",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.1637812
    },
    "rel_3507": {
      "id": "rel_3507",
      "source_id": "doc_2973",
      "target_id": "concept_3037",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.164783
    },
    "rel_3508": {
      "id": "rel_3508",
      "source_id": "doc_2973",
      "target_id": "concept_3038",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.165691
    },
    "rel_3509": {
      "id": "rel_3509",
      "source_id": "doc_2973",
      "target_id": "concept_3039",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.1662452
    },
    "rel_3510": {
      "id": "rel_3510",
      "source_id": "doc_2973",
      "target_id": "concept_3040",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.167186
    },
    "rel_3511": {
      "id": "rel_3511",
      "source_id": "doc_2973",
      "target_id": "concept_3041",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.167676
    },
    "rel_3512": {
      "id": "rel_3512",
      "source_id": "doc_2973",
      "target_id": "concept_2310",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.168064
    },
    "rel_3513": {
      "id": "rel_3513",
      "source_id": "doc_2973",
      "target_id": "concept_3042",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.168545
    },
    "rel_3514": {
      "id": "rel_3514",
      "source_id": "doc_2973",
      "target_id": "concept_3043",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.168996
    },
    "rel_3515": {
      "id": "rel_3515",
      "source_id": "doc_2973",
      "target_id": "concept_2014",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.1693451
    },
    "rel_3516": {
      "id": "rel_3516",
      "source_id": "doc_2973",
      "target_id": "concept_3044",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.169852
    },
    "rel_3517": {
      "id": "rel_3517",
      "source_id": "doc_2973",
      "target_id": "concept_3045",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.170434
    },
    "rel_3518": {
      "id": "rel_3518",
      "source_id": "doc_2973",
      "target_id": "concept_3046",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.170922
    },
    "rel_3519": {
      "id": "rel_3519",
      "source_id": "doc_2973",
      "target_id": "concept_3047",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.1714299
    },
    "rel_3520": {
      "id": "rel_3520",
      "source_id": "doc_2973",
      "target_id": "concept_3048",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.1718888
    },
    "rel_3521": {
      "id": "rel_3521",
      "source_id": "doc_2973",
      "target_id": "concept_2317",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.172271
    },
    "rel_3522": {
      "id": "rel_3522",
      "source_id": "doc_2973",
      "target_id": "concept_3049",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.17336
    },
    "rel_3523": {
      "id": "rel_3523",
      "source_id": "doc_2973",
      "target_id": "concept_3050",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.173803
    },
    "rel_3524": {
      "id": "rel_3524",
      "source_id": "doc_2973",
      "target_id": "concept_3051",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.1742542
    },
    "rel_3525": {
      "id": "rel_3525",
      "source_id": "doc_2973",
      "target_id": "concept_3052",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.175191
    },
    "rel_3526": {
      "id": "rel_3526",
      "source_id": "doc_2973",
      "target_id": "concept_3053",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.176147
    },
    "rel_3527": {
      "id": "rel_3527",
      "source_id": "doc_2973",
      "target_id": "concept_3054",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.176848
    },
    "rel_3528": {
      "id": "rel_3528",
      "source_id": "doc_2973",
      "target_id": "concept_3055",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.1773481
    },
    "rel_3529": {
      "id": "rel_3529",
      "source_id": "doc_2973",
      "target_id": "concept_3056",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.1784582
    },
    "rel_3530": {
      "id": "rel_3530",
      "source_id": "doc_2973",
      "target_id": "concept_3057",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.1789382
    },
    "rel_3531": {
      "id": "rel_3531",
      "source_id": "doc_2973",
      "target_id": "concept_3058",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.1793768
    },
    "rel_3532": {
      "id": "rel_3532",
      "source_id": "doc_2973",
      "target_id": "concept_3059",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.179818
    },
    "rel_3533": {
      "id": "rel_3533",
      "source_id": "doc_2973",
      "target_id": "concept_3060",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.180374
    },
    "rel_3534": {
      "id": "rel_3534",
      "source_id": "doc_2973",
      "target_id": "concept_3061",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.180862
    },
    "rel_3535": {
      "id": "rel_3535",
      "source_id": "doc_2973",
      "target_id": "concept_3062",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.181343
    },
    "rel_3536": {
      "id": "rel_3536",
      "source_id": "doc_2973",
      "target_id": "concept_3063",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.181949
    },
    "rel_3537": {
      "id": "rel_3537",
      "source_id": "doc_2973",
      "target_id": "concept_2154",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.182302
    },
    "rel_3538": {
      "id": "rel_3538",
      "source_id": "doc_2973",
      "target_id": "concept_3064",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.182755
    },
    "rel_3539": {
      "id": "rel_3539",
      "source_id": "doc_2973",
      "target_id": "concept_3065",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.1831849
    },
    "rel_3540": {
      "id": "rel_3540",
      "source_id": "doc_2973",
      "target_id": "concept_3066",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.183637
    },
    "rel_3541": {
      "id": "rel_3541",
      "source_id": "doc_2973",
      "target_id": "concept_3067",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.1840901
    },
    "rel_3542": {
      "id": "rel_3542",
      "source_id": "doc_2973",
      "target_id": "concept_3068",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.184586
    },
    "rel_3543": {
      "id": "rel_3543",
      "source_id": "doc_2973",
      "target_id": "concept_3069",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.185062
    },
    "rel_3544": {
      "id": "rel_3544",
      "source_id": "doc_2973",
      "target_id": "concept_3070",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.185531
    },
    "rel_3545": {
      "id": "rel_3545",
      "source_id": "doc_2973",
      "target_id": "concept_3071",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.185956
    },
    "rel_3546": {
      "id": "rel_3546",
      "source_id": "doc_2973",
      "target_id": "concept_2335",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.186354
    },
    "rel_3547": {
      "id": "rel_3547",
      "source_id": "doc_2973",
      "target_id": "concept_3072",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.1869109
    },
    "rel_3548": {
      "id": "rel_3548",
      "source_id": "doc_2973",
      "target_id": "concept_3073",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.187405
    },
    "rel_3549": {
      "id": "rel_3549",
      "source_id": "doc_2973",
      "target_id": "concept_3074",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.187855
    },
    "rel_3550": {
      "id": "rel_3550",
      "source_id": "doc_2973",
      "target_id": "concept_3075",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.188321
    },
    "rel_3551": {
      "id": "rel_3551",
      "source_id": "doc_2973",
      "target_id": "concept_280",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.1883788
    },
    "rel_3552": {
      "id": "rel_3552",
      "source_id": "doc_2973",
      "target_id": "concept_3076",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.1888561
    },
    "rel_3553": {
      "id": "rel_3553",
      "source_id": "doc_2973",
      "target_id": "concept_2704",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.18926
    },
    "rel_3554": {
      "id": "rel_3554",
      "source_id": "doc_2973",
      "target_id": "concept_3077",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.1897101
    },
    "rel_3555": {
      "id": "rel_3555",
      "source_id": "doc_2973",
      "target_id": "concept_3078",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.190218
    },
    "rel_3556": {
      "id": "rel_3556",
      "source_id": "doc_2973",
      "target_id": "concept_475",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.1903129
    },
    "rel_3557": {
      "id": "rel_3557",
      "source_id": "doc_2973",
      "target_id": "concept_3079",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.190787
    },
    "rel_3558": {
      "id": "rel_3558",
      "source_id": "doc_2973",
      "target_id": "concept_3080",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.1912289
    },
    "rel_3559": {
      "id": "rel_3559",
      "source_id": "doc_2973",
      "target_id": "concept_3081",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.1917
    },
    "rel_3560": {
      "id": "rel_3560",
      "source_id": "doc_2973",
      "target_id": "concept_3082",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.192242
    },
    "rel_3561": {
      "id": "rel_3561",
      "source_id": "doc_2973",
      "target_id": "concept_3083",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.192687
    },
    "rel_3562": {
      "id": "rel_3562",
      "source_id": "doc_2973",
      "target_id": "concept_3084",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.193749
    },
    "rel_3563": {
      "id": "rel_3563",
      "source_id": "doc_2973",
      "target_id": "concept_3085",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.19419
    },
    "rel_3564": {
      "id": "rel_3564",
      "source_id": "doc_2973",
      "target_id": "concept_3086",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.1946502
    },
    "rel_3565": {
      "id": "rel_3565",
      "source_id": "doc_2973",
      "target_id": "concept_3087",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.195096
    },
    "rel_3566": {
      "id": "rel_3566",
      "source_id": "doc_2973",
      "target_id": "concept_2927",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.195508
    },
    "rel_3567": {
      "id": "rel_3567",
      "source_id": "doc_2973",
      "target_id": "concept_3088",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.196714
    },
    "rel_3568": {
      "id": "rel_3568",
      "source_id": "doc_2973",
      "target_id": "concept_3089",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.19734
    },
    "rel_3569": {
      "id": "rel_3569",
      "source_id": "doc_2973",
      "target_id": "concept_3090",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.197841
    },
    "rel_3570": {
      "id": "rel_3570",
      "source_id": "doc_2973",
      "target_id": "concept_3091",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.198396
    },
    "rel_3571": {
      "id": "rel_3571",
      "source_id": "doc_2973",
      "target_id": "concept_3092",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.198878
    },
    "rel_3572": {
      "id": "rel_3572",
      "source_id": "doc_2973",
      "target_id": "concept_3093",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.1993432
    },
    "rel_3573": {
      "id": "rel_3573",
      "source_id": "doc_2973",
      "target_id": "concept_3094",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.199771
    },
    "rel_3574": {
      "id": "rel_3574",
      "source_id": "doc_2973",
      "target_id": "concept_3095",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.2002711
    },
    "rel_3575": {
      "id": "rel_3575",
      "source_id": "doc_2973",
      "target_id": "concept_3096",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.2012658
    },
    "rel_3576": {
      "id": "rel_3576",
      "source_id": "doc_2973",
      "target_id": "concept_3097",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.2017212
    },
    "rel_3577": {
      "id": "rel_3577",
      "source_id": "doc_2973",
      "target_id": "concept_3098",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.2027562
    },
    "rel_3578": {
      "id": "rel_3578",
      "source_id": "doc_2973",
      "target_id": "concept_2465",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.20313
    },
    "rel_3579": {
      "id": "rel_3579",
      "source_id": "doc_2973",
      "target_id": "concept_3099",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.203625
    },
    "rel_3580": {
      "id": "rel_3580",
      "source_id": "doc_2973",
      "target_id": "concept_3100",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.2040598
    },
    "rel_3581": {
      "id": "rel_3581",
      "source_id": "doc_2973",
      "target_id": "concept_3101",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.2045069
    },
    "rel_3582": {
      "id": "rel_3582",
      "source_id": "doc_2973",
      "target_id": "concept_3102",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.204971
    },
    "rel_3583": {
      "id": "rel_3583",
      "source_id": "doc_2973",
      "target_id": "concept_3103",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.205984
    },
    "rel_3584": {
      "id": "rel_3584",
      "source_id": "doc_2973",
      "target_id": "concept_3104",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.206557
    },
    "rel_3585": {
      "id": "rel_3585",
      "source_id": "doc_2973",
      "target_id": "concept_3105",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.2075222
    },
    "rel_3586": {
      "id": "rel_3586",
      "source_id": "doc_2973",
      "target_id": "concept_3106",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.207979
    },
    "rel_3587": {
      "id": "rel_3587",
      "source_id": "doc_2973",
      "target_id": "concept_3107",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.208462
    },
    "rel_3588": {
      "id": "rel_3588",
      "source_id": "doc_2973",
      "target_id": "concept_3108",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.208912
    },
    "rel_3589": {
      "id": "rel_3589",
      "source_id": "doc_2973",
      "target_id": "concept_3109",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.20936
    },
    "rel_3590": {
      "id": "rel_3590",
      "source_id": "doc_2973",
      "target_id": "concept_3110",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.209841
    },
    "rel_3591": {
      "id": "rel_3591",
      "source_id": "doc_2973",
      "target_id": "concept_3111",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.210283
    },
    "rel_3592": {
      "id": "rel_3592",
      "source_id": "doc_2973",
      "target_id": "concept_3112",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.2108328
    },
    "rel_3593": {
      "id": "rel_3593",
      "source_id": "doc_2973",
      "target_id": "concept_3113",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.2112598
    },
    "rel_3594": {
      "id": "rel_3594",
      "source_id": "doc_2973",
      "target_id": "concept_3114",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.211762
    },
    "rel_3595": {
      "id": "rel_3595",
      "source_id": "doc_2973",
      "target_id": "concept_3115",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.2122061
    },
    "rel_3596": {
      "id": "rel_3596",
      "source_id": "doc_2973",
      "target_id": "concept_3116",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.212898
    },
    "rel_3597": {
      "id": "rel_3597",
      "source_id": "doc_2973",
      "target_id": "concept_3117",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.213357
    },
    "rel_3598": {
      "id": "rel_3598",
      "source_id": "doc_2973",
      "target_id": "concept_3118",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.2138
    },
    "rel_3599": {
      "id": "rel_3599",
      "source_id": "doc_2973",
      "target_id": "concept_3119",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.214239
    },
    "rel_3600": {
      "id": "rel_3600",
      "source_id": "doc_2973",
      "target_id": "concept_3120",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.214725
    },
    "rel_3601": {
      "id": "rel_3601",
      "source_id": "doc_2973",
      "target_id": "concept_3121",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.2152052
    },
    "rel_3602": {
      "id": "rel_3602",
      "source_id": "doc_2973",
      "target_id": "concept_3122",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.215643
    },
    "rel_3603": {
      "id": "rel_3603",
      "source_id": "doc_2973",
      "target_id": "concept_3123",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.2160819
    },
    "rel_3604": {
      "id": "rel_3604",
      "source_id": "doc_2973",
      "target_id": "concept_3124",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.216609
    },
    "rel_3605": {
      "id": "rel_3605",
      "source_id": "doc_2973",
      "target_id": "concept_3125",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.217171
    },
    "rel_3606": {
      "id": "rel_3606",
      "source_id": "doc_2973",
      "target_id": "concept_3126",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.217695
    },
    "rel_3607": {
      "id": "rel_3607",
      "source_id": "doc_2973",
      "target_id": "concept_3127",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.2182028
    },
    "rel_3608": {
      "id": "rel_3608",
      "source_id": "doc_2973",
      "target_id": "concept_3128",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.219079
    },
    "rel_3609": {
      "id": "rel_3609",
      "source_id": "doc_2973",
      "target_id": "concept_3129",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.219554
    },
    "rel_3610": {
      "id": "rel_3610",
      "source_id": "doc_2973",
      "target_id": "concept_3130",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.220038
    },
    "rel_3611": {
      "id": "rel_3611",
      "source_id": "doc_2973",
      "target_id": "concept_2220",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.220482
    },
    "rel_3612": {
      "id": "rel_3612",
      "source_id": "doc_2973",
      "target_id": "concept_3131",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.220994
    },
    "rel_3613": {
      "id": "rel_3613",
      "source_id": "doc_2973",
      "target_id": "concept_3132",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.221482
    },
    "rel_3614": {
      "id": "rel_3614",
      "source_id": "doc_2973",
      "target_id": "concept_3133",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.221948
    },
    "rel_3615": {
      "id": "rel_3615",
      "source_id": "doc_2973",
      "target_id": "concept_3134",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.222398
    },
    "rel_3616": {
      "id": "rel_3616",
      "source_id": "doc_2973",
      "target_id": "concept_3135",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.2228422
    },
    "rel_3617": {
      "id": "rel_3617",
      "source_id": "doc_2973",
      "target_id": "concept_2634",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.223238
    },
    "rel_3618": {
      "id": "rel_3618",
      "source_id": "doc_2973",
      "target_id": "concept_3136",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.2236958
    },
    "rel_3619": {
      "id": "rel_3619",
      "source_id": "doc_2973",
      "target_id": "concept_3137",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.224193
    },
    "rel_3620": {
      "id": "rel_3620",
      "source_id": "doc_2973",
      "target_id": "concept_3138",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.224677
    },
    "rel_3621": {
      "id": "rel_3621",
      "source_id": "doc_2973",
      "target_id": "concept_3139",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.225125
    },
    "rel_3622": {
      "id": "rel_3622",
      "source_id": "doc_2973",
      "target_id": "concept_3140",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.225594
    },
    "rel_3623": {
      "id": "rel_3623",
      "source_id": "doc_2973",
      "target_id": "concept_3141",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.226105
    },
    "rel_3624": {
      "id": "rel_3624",
      "source_id": "doc_2973",
      "target_id": "concept_3142",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.226679
    },
    "rel_3625": {
      "id": "rel_3625",
      "source_id": "doc_2973",
      "target_id": "concept_3143",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.2272
    },
    "rel_3626": {
      "id": "rel_3626",
      "source_id": "doc_2973",
      "target_id": "concept_3144",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.227695
    },
    "rel_3627": {
      "id": "rel_3627",
      "source_id": "doc_2973",
      "target_id": "concept_3145",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.2288818
    },
    "rel_3628": {
      "id": "rel_3628",
      "source_id": "doc_2973",
      "target_id": "concept_3146",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.2294478
    },
    "rel_3629": {
      "id": "rel_3629",
      "source_id": "doc_2973",
      "target_id": "concept_3147",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.229913
    },
    "rel_3630": {
      "id": "rel_3630",
      "source_id": "doc_2973",
      "target_id": "concept_3148",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.2303889
    },
    "rel_3631": {
      "id": "rel_3631",
      "source_id": "doc_2973",
      "target_id": "concept_3149",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.2308538
    },
    "rel_3632": {
      "id": "rel_3632",
      "source_id": "doc_2973",
      "target_id": "concept_3150",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.231331
    },
    "rel_3633": {
      "id": "rel_3633",
      "source_id": "doc_2973",
      "target_id": "concept_3151",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.2318678
    },
    "rel_3634": {
      "id": "rel_3634",
      "source_id": "doc_2973",
      "target_id": "concept_2085",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.2322292
    },
    "rel_3635": {
      "id": "rel_3635",
      "source_id": "doc_2973",
      "target_id": "concept_3152",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.232734
    },
    "rel_3636": {
      "id": "rel_3636",
      "source_id": "doc_2973",
      "target_id": "concept_3153",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.2331781
    },
    "rel_3637": {
      "id": "rel_3637",
      "source_id": "doc_2973",
      "target_id": "concept_3154",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.233639
    },
    "rel_3638": {
      "id": "rel_3638",
      "source_id": "doc_2973",
      "target_id": "concept_3155",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.2340941
    },
    "rel_3639": {
      "id": "rel_3639",
      "source_id": "doc_2973",
      "target_id": "concept_3156",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.234626
    },
    "rel_3640": {
      "id": "rel_3640",
      "source_id": "doc_2973",
      "target_id": "concept_3157",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.2356238
    },
    "rel_3641": {
      "id": "rel_3641",
      "source_id": "doc_2973",
      "target_id": "concept_3158",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.236096
    },
    "rel_3642": {
      "id": "rel_3642",
      "source_id": "doc_2973",
      "target_id": "concept_3159",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.236623
    },
    "rel_3643": {
      "id": "rel_3643",
      "source_id": "doc_2973",
      "target_id": "concept_3160",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.237202
    },
    "rel_3644": {
      "id": "rel_3644",
      "source_id": "doc_2973",
      "target_id": "concept_3161",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.237694
    },
    "rel_3645": {
      "id": "rel_3645",
      "source_id": "doc_2973",
      "target_id": "concept_3162",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.238164
    },
    "rel_3646": {
      "id": "rel_3646",
      "source_id": "doc_2973",
      "target_id": "concept_3163",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.23867
    },
    "rel_3647": {
      "id": "rel_3647",
      "source_id": "doc_2973",
      "target_id": "concept_3164",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.239153
    },
    "rel_3648": {
      "id": "rel_3648",
      "source_id": "doc_2973",
      "target_id": "concept_3165",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.2396102
    },
    "rel_3649": {
      "id": "rel_3649",
      "source_id": "doc_2973",
      "target_id": "concept_3166",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.240234
    },
    "rel_3650": {
      "id": "rel_3650",
      "source_id": "doc_2973",
      "target_id": "concept_3167",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.240727
    },
    "rel_3651": {
      "id": "rel_3651",
      "source_id": "doc_2973",
      "target_id": "concept_3168",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.2412422
    },
    "rel_3652": {
      "id": "rel_3652",
      "source_id": "doc_2973",
      "target_id": "concept_3169",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.241716
    },
    "rel_3653": {
      "id": "rel_3653",
      "source_id": "doc_2973",
      "target_id": "concept_3170",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.242178
    },
    "rel_3654": {
      "id": "rel_3654",
      "source_id": "doc_2973",
      "target_id": "concept_2295",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.2425432
    },
    "rel_3655": {
      "id": "rel_3655",
      "source_id": "doc_2973",
      "target_id": "concept_3171",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.243032
    },
    "rel_3656": {
      "id": "rel_3656",
      "source_id": "doc_2973",
      "target_id": "concept_3172",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.243526
    },
    "rel_3657": {
      "id": "rel_3657",
      "source_id": "doc_2973",
      "target_id": "concept_3173",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.243965
    },
    "rel_3658": {
      "id": "rel_3658",
      "source_id": "doc_2973",
      "target_id": "concept_3174",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.244433
    },
    "rel_3659": {
      "id": "rel_3659",
      "source_id": "doc_2973",
      "target_id": "concept_3175",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.244905
    },
    "rel_3660": {
      "id": "rel_3660",
      "source_id": "doc_2973",
      "target_id": "concept_3176",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.245375
    },
    "rel_3661": {
      "id": "rel_3661",
      "source_id": "doc_2973",
      "target_id": "concept_3177",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.2458508
    },
    "rel_3662": {
      "id": "rel_3662",
      "source_id": "doc_2973",
      "target_id": "concept_3178",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.246293
    },
    "rel_3663": {
      "id": "rel_3663",
      "source_id": "doc_2973",
      "target_id": "concept_2109",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.2467551
    },
    "rel_3664": {
      "id": "rel_3664",
      "source_id": "doc_2973",
      "target_id": "concept_3179",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.247296
    },
    "rel_3665": {
      "id": "rel_3665",
      "source_id": "doc_2973",
      "target_id": "concept_3180",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.248607
    },
    "rel_3666": {
      "id": "rel_3666",
      "source_id": "doc_2973",
      "target_id": "concept_3181",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.2491431
    },
    "rel_3667": {
      "id": "rel_3667",
      "source_id": "doc_2973",
      "target_id": "concept_3182",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.250195
    },
    "rel_3668": {
      "id": "rel_3668",
      "source_id": "doc_2973",
      "target_id": "concept_3183",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.2507331
    },
    "rel_3669": {
      "id": "rel_3669",
      "source_id": "doc_2973",
      "target_id": "concept_3184",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.251679
    },
    "rel_3670": {
      "id": "rel_3670",
      "source_id": "doc_2973",
      "target_id": "concept_3185",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.2521658
    },
    "rel_3671": {
      "id": "rel_3671",
      "source_id": "doc_2973",
      "target_id": "concept_3186",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.2526531
    },
    "rel_3672": {
      "id": "rel_3672",
      "source_id": "doc_2973",
      "target_id": "concept_3187",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.253105
    },
    "rel_3673": {
      "id": "rel_3673",
      "source_id": "doc_2973",
      "target_id": "concept_3188",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.253576
    },
    "rel_3674": {
      "id": "rel_3674",
      "source_id": "doc_2973",
      "target_id": "concept_3189",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.254076
    },
    "rel_3675": {
      "id": "rel_3675",
      "source_id": "doc_2973",
      "target_id": "concept_3190",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.254546
    },
    "rel_3676": {
      "id": "rel_3676",
      "source_id": "doc_2973",
      "target_id": "concept_3191",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.255009
    },
    "rel_3677": {
      "id": "rel_3677",
      "source_id": "doc_2973",
      "target_id": "concept_3192",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.256047
    },
    "rel_3678": {
      "id": "rel_3678",
      "source_id": "doc_2973",
      "target_id": "concept_3193",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.256523
    },
    "rel_3679": {
      "id": "rel_3679",
      "source_id": "doc_2973",
      "target_id": "concept_3194",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.257077
    },
    "rel_3680": {
      "id": "rel_3680",
      "source_id": "doc_2973",
      "target_id": "concept_3195",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.257699
    },
    "rel_3681": {
      "id": "rel_3681",
      "source_id": "doc_2973",
      "target_id": "concept_3196",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.2581608
    },
    "rel_3682": {
      "id": "rel_3682",
      "source_id": "doc_2973",
      "target_id": "concept_3197",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.2586172
    },
    "rel_3683": {
      "id": "rel_3683",
      "source_id": "doc_2973",
      "target_id": "concept_3198",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.2590961
    },
    "rel_3684": {
      "id": "rel_3684",
      "source_id": "doc_2973",
      "target_id": "concept_3199",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.259588
    },
    "rel_3685": {
      "id": "rel_3685",
      "source_id": "doc_2973",
      "target_id": "concept_3200",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.260088
    },
    "rel_3686": {
      "id": "rel_3686",
      "source_id": "doc_2973",
      "target_id": "concept_3201",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.2606049
    },
    "rel_3687": {
      "id": "rel_3687",
      "source_id": "doc_2973",
      "target_id": "concept_3202",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.261111
    },
    "rel_3688": {
      "id": "rel_3688",
      "source_id": "doc_2973",
      "target_id": "concept_3203",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.261596
    },
    "rel_3689": {
      "id": "rel_3689",
      "source_id": "doc_2973",
      "target_id": "concept_3204",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.2621708
    },
    "rel_3690": {
      "id": "rel_3690",
      "source_id": "doc_2973",
      "target_id": "concept_3205",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.262669
    },
    "rel_3691": {
      "id": "rel_3691",
      "source_id": "doc_2973",
      "target_id": "concept_3206",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.263716
    },
    "rel_3692": {
      "id": "rel_3692",
      "source_id": "doc_2973",
      "target_id": "concept_3207",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.264199
    },
    "rel_3693": {
      "id": "rel_3693",
      "source_id": "doc_2973",
      "target_id": "concept_2311",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.264561
    },
    "rel_3694": {
      "id": "rel_3694",
      "source_id": "doc_2973",
      "target_id": "concept_3208",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.265195
    },
    "rel_3695": {
      "id": "rel_3695",
      "source_id": "doc_2973",
      "target_id": "concept_3209",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.265791
    },
    "rel_3696": {
      "id": "rel_3696",
      "source_id": "doc_2973",
      "target_id": "concept_2446",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.2662358
    },
    "rel_3697": {
      "id": "rel_3697",
      "source_id": "doc_2973",
      "target_id": "concept_3210",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.266711
    },
    "rel_3698": {
      "id": "rel_3698",
      "source_id": "doc_2973",
      "target_id": "concept_3211",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.26723
    },
    "rel_3699": {
      "id": "rel_3699",
      "source_id": "doc_2973",
      "target_id": "concept_3212",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.268345
    },
    "rel_3700": {
      "id": "rel_3700",
      "source_id": "doc_2973",
      "target_id": "concept_3213",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.2688498
    },
    "rel_3701": {
      "id": "rel_3701",
      "source_id": "doc_2973",
      "target_id": "concept_3214",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.270006
    },
    "rel_3702": {
      "id": "rel_3702",
      "source_id": "doc_2973",
      "target_id": "concept_3215",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.27053
    },
    "rel_3703": {
      "id": "rel_3703",
      "source_id": "doc_2973",
      "target_id": "concept_3216",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.271146
    },
    "rel_3704": {
      "id": "rel_3704",
      "source_id": "doc_2973",
      "target_id": "concept_3217",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.271613
    },
    "rel_3705": {
      "id": "rel_3705",
      "source_id": "doc_2973",
      "target_id": "concept_3218",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.2720819
    },
    "rel_3706": {
      "id": "rel_3706",
      "source_id": "doc_2973",
      "target_id": "concept_3219",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.272636
    },
    "rel_3707": {
      "id": "rel_3707",
      "source_id": "doc_2973",
      "target_id": "concept_3220",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.2732291
    },
    "rel_3708": {
      "id": "rel_3708",
      "source_id": "doc_2973",
      "target_id": "concept_3221",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.2739909
    },
    "rel_3709": {
      "id": "rel_3709",
      "source_id": "doc_2973",
      "target_id": "concept_3222",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.27456
    },
    "rel_3710": {
      "id": "rel_3710",
      "source_id": "doc_2973",
      "target_id": "concept_2939",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.2749922
    },
    "rel_3711": {
      "id": "rel_3711",
      "source_id": "doc_2973",
      "target_id": "concept_3223",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.2754471
    },
    "rel_3712": {
      "id": "rel_3712",
      "source_id": "doc_2973",
      "target_id": "concept_3224",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.275934
    },
    "rel_3713": {
      "id": "rel_3713",
      "source_id": "doc_2973",
      "target_id": "concept_3225",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.2763891
    },
    "rel_3714": {
      "id": "rel_3714",
      "source_id": "doc_2973",
      "target_id": "concept_3226",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.276889
    },
    "rel_3715": {
      "id": "rel_3715",
      "source_id": "doc_2973",
      "target_id": "concept_2075",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.277241
    },
    "rel_3716": {
      "id": "rel_3716",
      "source_id": "doc_2973",
      "target_id": "concept_3227",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.277747
    },
    "rel_3717": {
      "id": "rel_3717",
      "source_id": "doc_2973",
      "target_id": "concept_3228",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.278274
    },
    "rel_3718": {
      "id": "rel_3718",
      "source_id": "doc_2973",
      "target_id": "concept_3229",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.278771
    },
    "rel_3719": {
      "id": "rel_3719",
      "source_id": "doc_2973",
      "target_id": "concept_3230",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.279476
    },
    "rel_3720": {
      "id": "rel_3720",
      "source_id": "doc_2973",
      "target_id": "concept_3231",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.279993
    },
    "rel_3721": {
      "id": "rel_3721",
      "source_id": "doc_2973",
      "target_id": "concept_3232",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.280502
    },
    "rel_3722": {
      "id": "rel_3722",
      "source_id": "doc_2973",
      "target_id": "concept_3233",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.2810009
    },
    "rel_3723": {
      "id": "rel_3723",
      "source_id": "doc_2973",
      "target_id": "concept_3234",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.281709
    },
    "rel_3724": {
      "id": "rel_3724",
      "source_id": "doc_2973",
      "target_id": "concept_3235",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.282388
    },
    "rel_3725": {
      "id": "rel_3725",
      "source_id": "doc_2973",
      "target_id": "concept_3236",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.282933
    },
    "rel_3726": {
      "id": "rel_3726",
      "source_id": "doc_2973",
      "target_id": "concept_3237",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.283444
    },
    "rel_3727": {
      "id": "rel_3727",
      "source_id": "doc_2973",
      "target_id": "concept_3238",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.283913
    },
    "rel_3728": {
      "id": "rel_3728",
      "source_id": "doc_2973",
      "target_id": "concept_3239",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.284418
    },
    "rel_3729": {
      "id": "rel_3729",
      "source_id": "doc_2973",
      "target_id": "concept_3240",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.2849689
    },
    "rel_3730": {
      "id": "rel_3730",
      "source_id": "doc_2973",
      "target_id": "concept_3241",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.285459
    },
    "rel_3731": {
      "id": "rel_3731",
      "source_id": "doc_2973",
      "target_id": "concept_3242",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.285982
    },
    "rel_3732": {
      "id": "rel_3732",
      "source_id": "doc_2973",
      "target_id": "concept_3243",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.286463
    },
    "rel_3733": {
      "id": "rel_3733",
      "source_id": "doc_2973",
      "target_id": "concept_2171",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.286826
    },
    "rel_3734": {
      "id": "rel_3734",
      "source_id": "doc_2973",
      "target_id": "concept_3244",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.287383
    },
    "rel_3735": {
      "id": "rel_3735",
      "source_id": "doc_2973",
      "target_id": "concept_3245",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.287924
    },
    "rel_3736": {
      "id": "rel_3736",
      "source_id": "doc_2973",
      "target_id": "concept_3246",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.288463
    },
    "rel_3737": {
      "id": "rel_3737",
      "source_id": "doc_2973",
      "target_id": "concept_3247",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.2890182
    },
    "rel_3738": {
      "id": "rel_3738",
      "source_id": "doc_2973",
      "target_id": "concept_3248",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.289502
    },
    "rel_3739": {
      "id": "rel_3739",
      "source_id": "doc_2973",
      "target_id": "concept_3249",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.290317
    },
    "rel_3740": {
      "id": "rel_3740",
      "source_id": "doc_2973",
      "target_id": "concept_3250",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.290921
    },
    "rel_3741": {
      "id": "rel_3741",
      "source_id": "doc_2973",
      "target_id": "concept_3251",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.2914429
    },
    "rel_3742": {
      "id": "rel_3742",
      "source_id": "doc_2973",
      "target_id": "concept_3252",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.29195
    },
    "rel_3743": {
      "id": "rel_3743",
      "source_id": "doc_2973",
      "target_id": "concept_3253",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.293073
    },
    "rel_3744": {
      "id": "rel_3744",
      "source_id": "doc_2973",
      "target_id": "concept_3254",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.293586
    },
    "rel_3745": {
      "id": "rel_3745",
      "source_id": "doc_2973",
      "target_id": "concept_3255",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.294102
    },
    "rel_3746": {
      "id": "rel_3746",
      "source_id": "doc_2973",
      "target_id": "concept_3256",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.294605
    },
    "rel_3747": {
      "id": "rel_3747",
      "source_id": "doc_2973",
      "target_id": "concept_3257",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.295114
    },
    "rel_3748": {
      "id": "rel_3748",
      "source_id": "doc_2973",
      "target_id": "concept_3258",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.2956421
    },
    "rel_3749": {
      "id": "rel_3749",
      "source_id": "doc_2973",
      "target_id": "concept_3259",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.296098
    },
    "rel_3750": {
      "id": "rel_3750",
      "source_id": "doc_2973",
      "target_id": "concept_3260",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.296593
    },
    "rel_3751": {
      "id": "rel_3751",
      "source_id": "doc_2973",
      "target_id": "concept_3261",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.297139
    },
    "rel_3752": {
      "id": "rel_3752",
      "source_id": "doc_2973",
      "target_id": "concept_3262",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.29789
    },
    "rel_3753": {
      "id": "rel_3753",
      "source_id": "doc_2973",
      "target_id": "concept_3263",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.2984629
    },
    "rel_3754": {
      "id": "rel_3754",
      "source_id": "doc_2973",
      "target_id": "concept_3264",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.298928
    },
    "rel_3755": {
      "id": "rel_3755",
      "source_id": "doc_2973",
      "target_id": "concept_3265",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.299412
    },
    "rel_3756": {
      "id": "rel_3756",
      "source_id": "doc_2973",
      "target_id": "concept_3266",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.299996
    },
    "rel_3757": {
      "id": "rel_3757",
      "source_id": "doc_2973",
      "target_id": "concept_3267",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.3011682
    },
    "rel_3758": {
      "id": "rel_3758",
      "source_id": "doc_2973",
      "target_id": "concept_3268",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.3016498
    },
    "rel_3759": {
      "id": "rel_3759",
      "source_id": "doc_2973",
      "target_id": "concept_2946",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.302057
    },
    "rel_3760": {
      "id": "rel_3760",
      "source_id": "doc_2973",
      "target_id": "concept_3269",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.302578
    },
    "rel_3761": {
      "id": "rel_3761",
      "source_id": "doc_2973",
      "target_id": "concept_3270",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.303096
    },
    "rel_3762": {
      "id": "rel_3762",
      "source_id": "doc_2973",
      "target_id": "concept_2396",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.303461
    },
    "rel_3763": {
      "id": "rel_3763",
      "source_id": "doc_2973",
      "target_id": "concept_3271",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.304126
    },
    "rel_3764": {
      "id": "rel_3764",
      "source_id": "doc_2973",
      "target_id": "concept_3272",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.304621
    },
    "rel_3765": {
      "id": "rel_3765",
      "source_id": "doc_2973",
      "target_id": "concept_3273",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.305155
    },
    "rel_3766": {
      "id": "rel_3766",
      "source_id": "doc_2973",
      "target_id": "concept_3274",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.305737
    },
    "rel_3767": {
      "id": "rel_3767",
      "source_id": "doc_2973",
      "target_id": "concept_3275",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.306279
    },
    "rel_3768": {
      "id": "rel_3768",
      "source_id": "doc_2973",
      "target_id": "concept_2470",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.3068988
    },
    "rel_3769": {
      "id": "rel_3769",
      "source_id": "doc_2973",
      "target_id": "concept_3276",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.30744
    },
    "rel_3770": {
      "id": "rel_3770",
      "source_id": "doc_2973",
      "target_id": "concept_3277",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.307979
    },
    "rel_3771": {
      "id": "rel_3771",
      "source_id": "doc_2973",
      "target_id": "concept_3278",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.309039
    },
    "rel_3772": {
      "id": "rel_3772",
      "source_id": "doc_2973",
      "target_id": "concept_3279",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.3095338
    },
    "rel_3773": {
      "id": "rel_3773",
      "source_id": "doc_2973",
      "target_id": "concept_3280",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.3100328
    },
    "rel_3774": {
      "id": "rel_3774",
      "source_id": "doc_2973",
      "target_id": "concept_3281",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.310524
    },
    "rel_3775": {
      "id": "rel_3775",
      "source_id": "doc_2973",
      "target_id": "concept_3282",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.310984
    },
    "rel_3776": {
      "id": "rel_3776",
      "source_id": "doc_2973",
      "target_id": "concept_3283",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.311507
    },
    "rel_3777": {
      "id": "rel_3777",
      "source_id": "doc_2973",
      "target_id": "concept_3284",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.3120818
    },
    "rel_3778": {
      "id": "rel_3778",
      "source_id": "doc_2973",
      "target_id": "concept_3285",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.312555
    },
    "rel_3779": {
      "id": "rel_3779",
      "source_id": "doc_2973",
      "target_id": "concept_3286",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.313069
    },
    "rel_3780": {
      "id": "rel_3780",
      "source_id": "doc_2973",
      "target_id": "concept_3287",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.313637
    },
    "rel_3781": {
      "id": "rel_3781",
      "source_id": "doc_2973",
      "target_id": "concept_3288",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.3141131
    },
    "rel_3782": {
      "id": "rel_3782",
      "source_id": "doc_2973",
      "target_id": "concept_518",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.314276
    },
    "rel_3783": {
      "id": "rel_3783",
      "source_id": "doc_2973",
      "target_id": "concept_3289",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.314789
    },
    "rel_3784": {
      "id": "rel_3784",
      "source_id": "doc_2973",
      "target_id": "concept_3290",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.315416
    },
    "rel_3785": {
      "id": "rel_3785",
      "source_id": "doc_2973",
      "target_id": "concept_3291",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.315996
    },
    "rel_3786": {
      "id": "rel_3786",
      "source_id": "doc_2973",
      "target_id": "concept_3292",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.316564
    },
    "rel_3787": {
      "id": "rel_3787",
      "source_id": "doc_2973",
      "target_id": "concept_3293",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.317058
    },
    "rel_3788": {
      "id": "rel_3788",
      "source_id": "doc_2973",
      "target_id": "concept_3294",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.3175418
    },
    "rel_3789": {
      "id": "rel_3789",
      "source_id": "doc_2973",
      "target_id": "concept_3295",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.318004
    },
    "rel_3790": {
      "id": "rel_3790",
      "source_id": "doc_2973",
      "target_id": "concept_3296",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.318464
    },
    "rel_3791": {
      "id": "rel_3791",
      "source_id": "doc_2973",
      "target_id": "concept_3297",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.3189492
    },
    "rel_3792": {
      "id": "rel_3792",
      "source_id": "doc_2973",
      "target_id": "concept_3298",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.320121
    },
    "rel_3793": {
      "id": "rel_3793",
      "source_id": "doc_2973",
      "target_id": "concept_3299",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.320655
    },
    "rel_3794": {
      "id": "rel_3794",
      "source_id": "doc_2973",
      "target_id": "concept_3300",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.321323
    },
    "rel_3795": {
      "id": "rel_3795",
      "source_id": "doc_2973",
      "target_id": "concept_3301",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.321841
    },
    "rel_3796": {
      "id": "rel_3796",
      "source_id": "doc_2973",
      "target_id": "concept_3302",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.322315
    },
    "rel_3797": {
      "id": "rel_3797",
      "source_id": "doc_2973",
      "target_id": "concept_3303",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.322803
    },
    "rel_3798": {
      "id": "rel_3798",
      "source_id": "doc_2973",
      "target_id": "concept_3304",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.32345
    },
    "rel_3799": {
      "id": "rel_3799",
      "source_id": "doc_2973",
      "target_id": "concept_3305",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.3239748
    },
    "rel_3800": {
      "id": "rel_3800",
      "source_id": "doc_2973",
      "target_id": "concept_3306",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.324533
    },
    "rel_3801": {
      "id": "rel_3801",
      "source_id": "doc_2973",
      "target_id": "concept_3307",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.3250382
    },
    "rel_3802": {
      "id": "rel_3802",
      "source_id": "doc_2973",
      "target_id": "concept_2288",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.325403
    },
    "rel_3803": {
      "id": "rel_3803",
      "source_id": "doc_2973",
      "target_id": "concept_3308",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.326071
    },
    "rel_3804": {
      "id": "rel_3804",
      "source_id": "doc_2973",
      "target_id": "concept_3309",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.326613
    },
    "rel_3805": {
      "id": "rel_3805",
      "source_id": "doc_2973",
      "target_id": "concept_3310",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.327117
    },
    "rel_3806": {
      "id": "rel_3806",
      "source_id": "doc_2973",
      "target_id": "concept_3311",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.3276532
    },
    "rel_3807": {
      "id": "rel_3807",
      "source_id": "doc_2973",
      "target_id": "concept_3312",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.328148
    },
    "rel_3808": {
      "id": "rel_3808",
      "source_id": "doc_2973",
      "target_id": "concept_3313",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.328705
    },
    "rel_3809": {
      "id": "rel_3809",
      "source_id": "doc_2973",
      "target_id": "concept_3314",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.329207
    },
    "rel_3810": {
      "id": "rel_3810",
      "source_id": "doc_2973",
      "target_id": "concept_3315",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.32971
    },
    "rel_3811": {
      "id": "rel_3811",
      "source_id": "doc_2973",
      "target_id": "concept_3316",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.330841
    },
    "rel_3812": {
      "id": "rel_3812",
      "source_id": "doc_2973",
      "target_id": "concept_3317",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.331352
    },
    "rel_3813": {
      "id": "rel_3813",
      "source_id": "doc_2973",
      "target_id": "concept_3318",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.331945
    },
    "rel_3814": {
      "id": "rel_3814",
      "source_id": "doc_2973",
      "target_id": "concept_3319",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.332459
    },
    "rel_3815": {
      "id": "rel_3815",
      "source_id": "doc_2973",
      "target_id": "concept_3320",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.3329222
    },
    "rel_3816": {
      "id": "rel_3816",
      "source_id": "doc_2973",
      "target_id": "concept_3321",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.333396
    },
    "rel_3817": {
      "id": "rel_3817",
      "source_id": "doc_2973",
      "target_id": "concept_3322",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.333848
    },
    "rel_3818": {
      "id": "rel_3818",
      "source_id": "doc_2973",
      "target_id": "concept_2103",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.334195
    },
    "rel_3819": {
      "id": "rel_3819",
      "source_id": "doc_2973",
      "target_id": "concept_3323",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.334692
    },
    "rel_3820": {
      "id": "rel_3820",
      "source_id": "doc_2973",
      "target_id": "concept_3324",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.335179
    },
    "rel_3821": {
      "id": "rel_3821",
      "source_id": "doc_2973",
      "target_id": "concept_2647",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.33564
    },
    "rel_3822": {
      "id": "rel_3822",
      "source_id": "doc_2973",
      "target_id": "concept_3325",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.336163
    },
    "rel_3823": {
      "id": "rel_3823",
      "source_id": "doc_2973",
      "target_id": "concept_3326",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.3366241
    },
    "rel_3824": {
      "id": "rel_3824",
      "source_id": "doc_2973",
      "target_id": "concept_3327",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.337114
    },
    "rel_3825": {
      "id": "rel_3825",
      "source_id": "doc_2973",
      "target_id": "concept_3328",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.337883
    },
    "rel_3826": {
      "id": "rel_3826",
      "source_id": "doc_2973",
      "target_id": "concept_3329",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.338356
    },
    "rel_3827": {
      "id": "rel_3827",
      "source_id": "doc_2973",
      "target_id": "concept_3330",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.338839
    },
    "rel_3828": {
      "id": "rel_3828",
      "source_id": "doc_2973",
      "target_id": "concept_3331",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.339391
    },
    "rel_3829": {
      "id": "rel_3829",
      "source_id": "doc_2973",
      "target_id": "concept_2302",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.3400671
    },
    "rel_3830": {
      "id": "rel_3830",
      "source_id": "doc_2973",
      "target_id": "concept_3332",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.3407319
    },
    "rel_3831": {
      "id": "rel_3831",
      "source_id": "doc_2973",
      "target_id": "concept_3333",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.341258
    },
    "rel_3832": {
      "id": "rel_3832",
      "source_id": "doc_2973",
      "target_id": "concept_2556",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.341642
    },
    "rel_3833": {
      "id": "rel_3833",
      "source_id": "doc_2973",
      "target_id": "concept_3334",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.3421419
    },
    "rel_3834": {
      "id": "rel_3834",
      "source_id": "doc_2973",
      "target_id": "concept_3335",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.342706
    },
    "rel_3835": {
      "id": "rel_3835",
      "source_id": "doc_2973",
      "target_id": "concept_3336",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.343907
    },
    "rel_3836": {
      "id": "rel_3836",
      "source_id": "doc_2973",
      "target_id": "concept_2558",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.344306
    },
    "rel_3837": {
      "id": "rel_3837",
      "source_id": "doc_2973",
      "target_id": "concept_3337",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.344843
    },
    "rel_3838": {
      "id": "rel_3838",
      "source_id": "doc_2973",
      "target_id": "concept_3338",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.345345
    },
    "rel_3839": {
      "id": "rel_3839",
      "source_id": "doc_2973",
      "target_id": "concept_3339",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.3459468
    },
    "rel_3840": {
      "id": "rel_3840",
      "source_id": "doc_2973",
      "target_id": "concept_3340",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.346455
    },
    "rel_3841": {
      "id": "rel_3841",
      "source_id": "doc_2973",
      "target_id": "concept_3341",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.346982
    },
    "rel_3842": {
      "id": "rel_3842",
      "source_id": "doc_2973",
      "target_id": "concept_3342",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.3480692
    },
    "rel_3843": {
      "id": "rel_3843",
      "source_id": "doc_2973",
      "target_id": "concept_2131",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.348535
    },
    "rel_3844": {
      "id": "rel_3844",
      "source_id": "doc_2973",
      "target_id": "concept_3343",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.3491929
    },
    "rel_3845": {
      "id": "rel_3845",
      "source_id": "doc_2973",
      "target_id": "concept_3344",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.3496692
    },
    "rel_3846": {
      "id": "rel_3846",
      "source_id": "doc_2973",
      "target_id": "concept_3345",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.350152
    },
    "rel_3847": {
      "id": "rel_3847",
      "source_id": "doc_2973",
      "target_id": "concept_3346",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.350731
    },
    "rel_3848": {
      "id": "rel_3848",
      "source_id": "doc_2973",
      "target_id": "concept_2442",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.351105
    },
    "rel_3849": {
      "id": "rel_3849",
      "source_id": "doc_2973",
      "target_id": "concept_3347",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.351628
    },
    "rel_3850": {
      "id": "rel_3850",
      "source_id": "doc_2973",
      "target_id": "concept_3348",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.352143
    },
    "rel_3851": {
      "id": "rel_3851",
      "source_id": "doc_2973",
      "target_id": "concept_3349",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.3526459
    },
    "rel_3852": {
      "id": "rel_3852",
      "source_id": "doc_2973",
      "target_id": "concept_3350",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.353707
    },
    "rel_3853": {
      "id": "rel_3853",
      "source_id": "doc_2973",
      "target_id": "concept_3351",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.354251
    },
    "rel_3854": {
      "id": "rel_3854",
      "source_id": "doc_2973",
      "target_id": "concept_3352",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.3547719
    },
    "rel_3855": {
      "id": "rel_3855",
      "source_id": "doc_2973",
      "target_id": "concept_3353",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.3552508
    },
    "rel_3856": {
      "id": "rel_3856",
      "source_id": "doc_2973",
      "target_id": "concept_3354",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.355788
    },
    "rel_3857": {
      "id": "rel_3857",
      "source_id": "doc_2973",
      "target_id": "concept_3355",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.3564749
    },
    "rel_3858": {
      "id": "rel_3858",
      "source_id": "doc_2973",
      "target_id": "concept_3356",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.3570838
    },
    "rel_3859": {
      "id": "rel_3859",
      "source_id": "doc_2973",
      "target_id": "concept_3357",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.35757
    },
    "rel_3860": {
      "id": "rel_3860",
      "source_id": "doc_2973",
      "target_id": "concept_3358",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.358049
    },
    "rel_3861": {
      "id": "rel_3861",
      "source_id": "doc_2973",
      "target_id": "concept_3359",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.3585439
    },
    "rel_3862": {
      "id": "rel_3862",
      "source_id": "doc_2973",
      "target_id": "concept_3360",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.359064
    },
    "rel_3863": {
      "id": "rel_3863",
      "source_id": "doc_2973",
      "target_id": "concept_3361",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.3595362
    },
    "rel_3864": {
      "id": "rel_3864",
      "source_id": "doc_2973",
      "target_id": "concept_3362",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.36
    },
    "rel_3865": {
      "id": "rel_3865",
      "source_id": "doc_2973",
      "target_id": "concept_3363",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.360529
    },
    "rel_3866": {
      "id": "rel_3866",
      "source_id": "doc_2973",
      "target_id": "concept_2935",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.360956
    },
    "rel_3867": {
      "id": "rel_3867",
      "source_id": "doc_2973",
      "target_id": "concept_3364",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.361515
    },
    "rel_3868": {
      "id": "rel_3868",
      "source_id": "doc_2973",
      "target_id": "concept_3365",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.361998
    },
    "rel_3869": {
      "id": "rel_3869",
      "source_id": "doc_2973",
      "target_id": "concept_3366",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.362464
    },
    "rel_3870": {
      "id": "rel_3870",
      "source_id": "doc_2973",
      "target_id": "concept_3367",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.3629692
    },
    "rel_3871": {
      "id": "rel_3871",
      "source_id": "doc_2973",
      "target_id": "concept_3368",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.3634691
    },
    "rel_3872": {
      "id": "rel_3872",
      "source_id": "doc_2973",
      "target_id": "concept_3369",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.363931
    },
    "rel_3873": {
      "id": "rel_3873",
      "source_id": "doc_2973",
      "target_id": "concept_3370",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.3644328
    },
    "rel_3874": {
      "id": "rel_3874",
      "source_id": "doc_2973",
      "target_id": "concept_3371",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.364925
    },
    "rel_3875": {
      "id": "rel_3875",
      "source_id": "doc_2973",
      "target_id": "concept_3372",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.3655522
    },
    "rel_3876": {
      "id": "rel_3876",
      "source_id": "doc_2973",
      "target_id": "concept_2153",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.3660018
    },
    "rel_3877": {
      "id": "rel_3877",
      "source_id": "doc_2973",
      "target_id": "concept_3373",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.366555
    },
    "rel_3878": {
      "id": "rel_3878",
      "source_id": "doc_2973",
      "target_id": "concept_3374",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.367071
    },
    "rel_3879": {
      "id": "rel_3879",
      "source_id": "doc_2973",
      "target_id": "concept_2159",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.367429
    },
    "rel_3880": {
      "id": "rel_3880",
      "source_id": "doc_2973",
      "target_id": "concept_440",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.367564
    },
    "rel_3881": {
      "id": "rel_3881",
      "source_id": "doc_2973",
      "target_id": "concept_2160",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.367908
    },
    "rel_3882": {
      "id": "rel_3882",
      "source_id": "doc_2973",
      "target_id": "concept_3375",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.368417
    },
    "rel_3883": {
      "id": "rel_3883",
      "source_id": "doc_2973",
      "target_id": "concept_3376",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.3690538
    },
    "rel_3884": {
      "id": "rel_3884",
      "source_id": "doc_2973",
      "target_id": "concept_3377",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.369545
    },
    "rel_3885": {
      "id": "rel_3885",
      "source_id": "doc_2973",
      "target_id": "concept_3378",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.3701
    },
    "rel_3886": {
      "id": "rel_3886",
      "source_id": "doc_2973",
      "target_id": "concept_3379",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.3706229
    },
    "rel_3887": {
      "id": "rel_3887",
      "source_id": "doc_2973",
      "target_id": "concept_3380",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.371138
    },
    "rel_3888": {
      "id": "rel_3888",
      "source_id": "doc_2973",
      "target_id": "concept_3381",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.371674
    },
    "rel_3889": {
      "id": "rel_3889",
      "source_id": "doc_2973",
      "target_id": "concept_3382",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.372128
    },
    "rel_3890": {
      "id": "rel_3890",
      "source_id": "doc_2973",
      "target_id": "concept_3383",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.3725939
    },
    "rel_3891": {
      "id": "rel_3891",
      "source_id": "doc_2973",
      "target_id": "concept_3384",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.373097
    },
    "rel_3892": {
      "id": "rel_3892",
      "source_id": "doc_2973",
      "target_id": "concept_3385",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.374248
    },
    "rel_3893": {
      "id": "rel_3893",
      "source_id": "doc_2973",
      "target_id": "concept_3386",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.3747609
    },
    "rel_3894": {
      "id": "rel_3894",
      "source_id": "doc_2973",
      "target_id": "concept_3387",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.3752651
    },
    "rel_3895": {
      "id": "rel_3895",
      "source_id": "doc_2973",
      "target_id": "concept_2173",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.375618
    },
    "rel_3896": {
      "id": "rel_3896",
      "source_id": "doc_2973",
      "target_id": "concept_3388",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.3762372
    },
    "rel_3897": {
      "id": "rel_3897",
      "source_id": "doc_2973",
      "target_id": "concept_3389",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.376917
    },
    "rel_3898": {
      "id": "rel_3898",
      "source_id": "doc_2973",
      "target_id": "concept_3390",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.377503
    },
    "rel_3899": {
      "id": "rel_3899",
      "source_id": "doc_2973",
      "target_id": "concept_3391",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.3781629
    },
    "rel_3900": {
      "id": "rel_3900",
      "source_id": "doc_2973",
      "target_id": "concept_3392",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.378727
    },
    "rel_3901": {
      "id": "rel_3901",
      "source_id": "doc_2973",
      "target_id": "concept_3393",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.379317
    },
    "rel_3902": {
      "id": "rel_3902",
      "source_id": "doc_2973",
      "target_id": "concept_2175",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.379694
    },
    "rel_3903": {
      "id": "rel_3903",
      "source_id": "doc_2973",
      "target_id": "concept_3394",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.380209
    },
    "rel_3904": {
      "id": "rel_3904",
      "source_id": "doc_2973",
      "target_id": "concept_3395",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.3806772
    },
    "rel_3905": {
      "id": "rel_3905",
      "source_id": "doc_2973",
      "target_id": "concept_2262",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.3810391
    },
    "rel_3906": {
      "id": "rel_3906",
      "source_id": "doc_2973",
      "target_id": "concept_3396",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.38157
    },
    "rel_3907": {
      "id": "rel_3907",
      "source_id": "doc_2973",
      "target_id": "concept_3397",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.382035
    },
    "rel_3908": {
      "id": "rel_3908",
      "source_id": "doc_2973",
      "target_id": "concept_2183",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.382386
    },
    "rel_3909": {
      "id": "rel_3909",
      "source_id": "doc_2973",
      "target_id": "concept_3398",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.3828669
    },
    "rel_3910": {
      "id": "rel_3910",
      "source_id": "doc_2973",
      "target_id": "concept_3399",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.383353
    },
    "rel_3911": {
      "id": "rel_3911",
      "source_id": "doc_2973",
      "target_id": "concept_3400",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.383853
    },
    "rel_3912": {
      "id": "rel_3912",
      "source_id": "doc_2973",
      "target_id": "concept_3401",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.384468
    },
    "rel_3913": {
      "id": "rel_3913",
      "source_id": "doc_2973",
      "target_id": "concept_3402",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.385661
    },
    "rel_3914": {
      "id": "rel_3914",
      "source_id": "doc_2973",
      "target_id": "concept_3403",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.387222
    },
    "rel_3915": {
      "id": "rel_3915",
      "source_id": "doc_2973",
      "target_id": "concept_2194",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.387624
    },
    "rel_3916": {
      "id": "rel_3916",
      "source_id": "doc_2973",
      "target_id": "concept_3404",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.388183
    },
    "rel_3917": {
      "id": "rel_3917",
      "source_id": "doc_2973",
      "target_id": "concept_2195",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.388554
    },
    "rel_3918": {
      "id": "rel_3918",
      "source_id": "doc_2973",
      "target_id": "concept_3405",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.389088
    },
    "rel_3919": {
      "id": "rel_3919",
      "source_id": "doc_2973",
      "target_id": "concept_3406",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.3895712
    },
    "rel_3920": {
      "id": "rel_3920",
      "source_id": "doc_2973",
      "target_id": "concept_3407",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.3901892
    },
    "rel_3921": {
      "id": "rel_3921",
      "source_id": "doc_2973",
      "target_id": "concept_3408",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.3907452
    },
    "rel_3922": {
      "id": "rel_3922",
      "source_id": "doc_2973",
      "target_id": "concept_3409",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.391283
    },
    "rel_3923": {
      "id": "rel_3923",
      "source_id": "doc_2973",
      "target_id": "concept_2202",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.391637
    },
    "rel_3924": {
      "id": "rel_3924",
      "source_id": "doc_2973",
      "target_id": "concept_3410",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.39218
    },
    "rel_3925": {
      "id": "rel_3925",
      "source_id": "doc_2973",
      "target_id": "concept_496",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.3923368
    },
    "rel_3926": {
      "id": "rel_3926",
      "source_id": "doc_2973",
      "target_id": "concept_3411",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.392831
    },
    "rel_3927": {
      "id": "rel_3927",
      "source_id": "doc_2973",
      "target_id": "concept_3412",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.393365
    },
    "rel_3928": {
      "id": "rel_3928",
      "source_id": "doc_2973",
      "target_id": "concept_3413",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.393871
    },
    "rel_3929": {
      "id": "rel_3929",
      "source_id": "doc_2973",
      "target_id": "concept_3414",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.394356
    },
    "rel_3930": {
      "id": "rel_3930",
      "source_id": "doc_2973",
      "target_id": "concept_3415",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.394864
    },
    "rel_3931": {
      "id": "rel_3931",
      "source_id": "doc_2973",
      "target_id": "concept_3416",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.395396
    },
    "rel_3932": {
      "id": "rel_3932",
      "source_id": "doc_2973",
      "target_id": "concept_3417",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.3959181
    },
    "rel_3933": {
      "id": "rel_3933",
      "source_id": "doc_2973",
      "target_id": "concept_3418",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.3965251
    },
    "rel_3934": {
      "id": "rel_3934",
      "source_id": "doc_2973",
      "target_id": "concept_3419",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.397079
    },
    "rel_3935": {
      "id": "rel_3935",
      "source_id": "doc_2973",
      "target_id": "concept_3420",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.397653
    },
    "rel_3936": {
      "id": "rel_3936",
      "source_id": "doc_2973",
      "target_id": "concept_3421",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.398957
    },
    "rel_3937": {
      "id": "rel_3937",
      "source_id": "doc_2973",
      "target_id": "concept_3422",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.399455
    },
    "rel_3938": {
      "id": "rel_3938",
      "source_id": "doc_2973",
      "target_id": "concept_3423",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.399988
    },
    "rel_3939": {
      "id": "rel_3939",
      "source_id": "doc_2973",
      "target_id": "concept_3424",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.400479
    },
    "rel_3940": {
      "id": "rel_3940",
      "source_id": "doc_2973",
      "target_id": "concept_3425",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.401024
    },
    "rel_3941": {
      "id": "rel_3941",
      "source_id": "doc_2973",
      "target_id": "concept_3426",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.4015229
    },
    "rel_3942": {
      "id": "rel_3942",
      "source_id": "doc_2973",
      "target_id": "concept_3427",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.402047
    },
    "rel_3943": {
      "id": "rel_3943",
      "source_id": "doc_2973",
      "target_id": "concept_3428",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.403318
    },
    "rel_3944": {
      "id": "rel_3944",
      "source_id": "doc_2973",
      "target_id": "concept_3429",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.403841
    },
    "rel_3945": {
      "id": "rel_3945",
      "source_id": "doc_2973",
      "target_id": "concept_3430",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.404319
    },
    "rel_3946": {
      "id": "rel_3946",
      "source_id": "doc_2973",
      "target_id": "concept_3431",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.404813
    },
    "rel_3947": {
      "id": "rel_3947",
      "source_id": "doc_2973",
      "target_id": "concept_3432",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.405376
    },
    "rel_3948": {
      "id": "rel_3948",
      "source_id": "doc_2973",
      "target_id": "concept_3433",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.4058602
    },
    "rel_3949": {
      "id": "rel_3949",
      "source_id": "doc_2973",
      "target_id": "concept_3434",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.4070961
    },
    "rel_3950": {
      "id": "rel_3950",
      "source_id": "doc_2973",
      "target_id": "concept_3435",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.407639
    },
    "rel_3951": {
      "id": "rel_3951",
      "source_id": "doc_2973",
      "target_id": "concept_3436",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.408143
    },
    "rel_3952": {
      "id": "rel_3952",
      "source_id": "doc_2973",
      "target_id": "concept_3437",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.408659
    },
    "rel_3953": {
      "id": "rel_3953",
      "source_id": "doc_2973",
      "target_id": "concept_3438",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.4091818
    },
    "rel_3954": {
      "id": "rel_3954",
      "source_id": "doc_2973",
      "target_id": "concept_3439",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.409701
    },
    "rel_3955": {
      "id": "rel_3955",
      "source_id": "doc_2973",
      "target_id": "concept_3440",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.410232
    },
    "rel_3956": {
      "id": "rel_3956",
      "source_id": "doc_2973",
      "target_id": "concept_3441",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.410773
    },
    "rel_3957": {
      "id": "rel_3957",
      "source_id": "doc_2973",
      "target_id": "concept_3442",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.4113228
    },
    "rel_3958": {
      "id": "rel_3958",
      "source_id": "doc_2973",
      "target_id": "concept_3443",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.4119208
    },
    "rel_3959": {
      "id": "rel_3959",
      "source_id": "doc_2973",
      "target_id": "concept_3444",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.412433
    },
    "rel_3960": {
      "id": "rel_3960",
      "source_id": "doc_2973",
      "target_id": "concept_3445",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.4129431
    },
    "rel_3961": {
      "id": "rel_3961",
      "source_id": "doc_2973",
      "target_id": "concept_3446",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.41347
    },
    "rel_3962": {
      "id": "rel_3962",
      "source_id": "doc_2973",
      "target_id": "concept_3447",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.4140759
    },
    "rel_3963": {
      "id": "rel_3963",
      "source_id": "doc_2973",
      "target_id": "concept_3448",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.415384
    },
    "rel_3964": {
      "id": "rel_3964",
      "source_id": "doc_2973",
      "target_id": "concept_3449",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.4158988
    },
    "rel_3965": {
      "id": "rel_3965",
      "source_id": "doc_2973",
      "target_id": "concept_2941",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.416435
    },
    "rel_3966": {
      "id": "rel_3966",
      "source_id": "doc_2973",
      "target_id": "concept_3450",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.4171531
    },
    "rel_3967": {
      "id": "rel_3967",
      "source_id": "doc_2973",
      "target_id": "concept_3451",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.4177642
    },
    "rel_3968": {
      "id": "rel_3968",
      "source_id": "doc_2973",
      "target_id": "concept_3452",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.4183402
    },
    "rel_3969": {
      "id": "rel_3969",
      "source_id": "doc_2973",
      "target_id": "concept_3453",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.418839
    },
    "rel_3970": {
      "id": "rel_3970",
      "source_id": "doc_2973",
      "target_id": "concept_236",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.4189
    },
    "rel_3971": {
      "id": "rel_3971",
      "source_id": "doc_2973",
      "target_id": "concept_3454",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.419383
    },
    "rel_3972": {
      "id": "rel_3972",
      "source_id": "doc_2973",
      "target_id": "concept_3455",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.4205718
    },
    "rel_3973": {
      "id": "rel_3973",
      "source_id": "doc_2973",
      "target_id": "concept_3456",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.421098
    },
    "rel_3974": {
      "id": "rel_3974",
      "source_id": "doc_2973",
      "target_id": "concept_3457",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.421668
    },
    "rel_3975": {
      "id": "rel_3975",
      "source_id": "doc_2973",
      "target_id": "concept_3458",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.422343
    },
    "rel_3976": {
      "id": "rel_3976",
      "source_id": "doc_2973",
      "target_id": "concept_3459",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.422864
    },
    "rel_3977": {
      "id": "rel_3977",
      "source_id": "doc_2973",
      "target_id": "concept_3460",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.4233642
    },
    "rel_3978": {
      "id": "rel_3978",
      "source_id": "doc_2973",
      "target_id": "concept_3461",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.424541
    },
    "rel_3979": {
      "id": "rel_3979",
      "source_id": "doc_2973",
      "target_id": "concept_3462",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.42509
    },
    "rel_3980": {
      "id": "rel_3980",
      "source_id": "doc_2973",
      "target_id": "concept_2097",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.4254541
    },
    "rel_3981": {
      "id": "rel_3981",
      "source_id": "doc_2973",
      "target_id": "concept_3463",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.425984
    },
    "rel_3982": {
      "id": "rel_3982",
      "source_id": "doc_2973",
      "target_id": "concept_3464",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.4266958
    },
    "rel_3983": {
      "id": "rel_3983",
      "source_id": "doc_2973",
      "target_id": "concept_3465",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.4272692
    },
    "rel_3984": {
      "id": "rel_3984",
      "source_id": "doc_2973",
      "target_id": "concept_3466",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.42785
    },
    "rel_3985": {
      "id": "rel_3985",
      "source_id": "doc_2973",
      "target_id": "concept_3467",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.428385
    },
    "rel_3986": {
      "id": "rel_3986",
      "source_id": "doc_2973",
      "target_id": "concept_3468",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.428916
    },
    "rel_3987": {
      "id": "rel_3987",
      "source_id": "doc_2973",
      "target_id": "concept_3469",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.430393
    },
    "rel_3988": {
      "id": "rel_3988",
      "source_id": "doc_2973",
      "target_id": "concept_3470",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.4309309
    },
    "rel_3989": {
      "id": "rel_3989",
      "source_id": "doc_2973",
      "target_id": "concept_3471",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.431508
    },
    "rel_3990": {
      "id": "rel_3990",
      "source_id": "doc_2973",
      "target_id": "concept_3472",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.432069
    },
    "rel_3991": {
      "id": "rel_3991",
      "source_id": "doc_2973",
      "target_id": "concept_2925",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.432502
    },
    "rel_3992": {
      "id": "rel_3992",
      "source_id": "doc_2973",
      "target_id": "concept_3473",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.433027
    },
    "rel_3993": {
      "id": "rel_3993",
      "source_id": "doc_2973",
      "target_id": "concept_3474",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.4335392
    },
    "rel_3994": {
      "id": "rel_3994",
      "source_id": "doc_2973",
      "target_id": "concept_3475",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.434048
    },
    "rel_3995": {
      "id": "rel_3995",
      "source_id": "doc_2973",
      "target_id": "concept_3476",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.4345322
    },
    "rel_3996": {
      "id": "rel_3996",
      "source_id": "doc_2973",
      "target_id": "concept_2755",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.4349551
    },
    "rel_3997": {
      "id": "rel_3997",
      "source_id": "doc_2973",
      "target_id": "concept_3477",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.435466
    },
    "rel_3998": {
      "id": "rel_3998",
      "source_id": "doc_2973",
      "target_id": "concept_2116",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.435839
    },
    "rel_3999": {
      "id": "rel_3999",
      "source_id": "doc_2973",
      "target_id": "concept_3478",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.436405
    },
    "rel_4000": {
      "id": "rel_4000",
      "source_id": "doc_2973",
      "target_id": "concept_3479",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.43705
    },
    "rel_4001": {
      "id": "rel_4001",
      "source_id": "doc_2973",
      "target_id": "concept_3480",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.437707
    },
    "rel_4002": {
      "id": "rel_4002",
      "source_id": "doc_2973",
      "target_id": "concept_3481",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.438227
    },
    "rel_4003": {
      "id": "rel_4003",
      "source_id": "doc_2973",
      "target_id": "concept_3482",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.4387798
    },
    "rel_4004": {
      "id": "rel_4004",
      "source_id": "doc_2973",
      "target_id": "concept_3483",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.4393091
    },
    "rel_4005": {
      "id": "rel_4005",
      "source_id": "doc_2973",
      "target_id": "concept_3484",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.439839
    },
    "rel_4006": {
      "id": "rel_4006",
      "source_id": "doc_2973",
      "target_id": "concept_2656",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.440246
    },
    "rel_4007": {
      "id": "rel_4007",
      "source_id": "doc_2973",
      "target_id": "concept_3485",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.4407449
    },
    "rel_4008": {
      "id": "rel_4008",
      "source_id": "doc_2973",
      "target_id": "concept_3486",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.4412842
    },
    "rel_4009": {
      "id": "rel_4009",
      "source_id": "doc_2973",
      "target_id": "concept_3487",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.4418209
    },
    "rel_4010": {
      "id": "rel_4010",
      "source_id": "doc_2973",
      "target_id": "concept_3488",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.4423559
    },
    "rel_4011": {
      "id": "rel_4011",
      "source_id": "doc_2973",
      "target_id": "concept_3489",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.44298
    },
    "rel_4012": {
      "id": "rel_4012",
      "source_id": "doc_2973",
      "target_id": "concept_3490",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.443569
    },
    "rel_4013": {
      "id": "rel_4013",
      "source_id": "doc_2973",
      "target_id": "concept_3491",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.4440699
    },
    "rel_4014": {
      "id": "rel_4014",
      "source_id": "doc_2973",
      "target_id": "concept_3492",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.444581
    },
    "rel_4015": {
      "id": "rel_4015",
      "source_id": "doc_2973",
      "target_id": "concept_3493",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.445087
    },
    "rel_4016": {
      "id": "rel_4016",
      "source_id": "doc_2973",
      "target_id": "concept_3494",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.4455948
    },
    "rel_4017": {
      "id": "rel_4017",
      "source_id": "doc_2973",
      "target_id": "concept_3495",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.446079
    },
    "rel_4018": {
      "id": "rel_4018",
      "source_id": "doc_2973",
      "target_id": "concept_3496",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.446583
    },
    "rel_4019": {
      "id": "rel_4019",
      "source_id": "doc_2973",
      "target_id": "concept_3497",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.447891
    },
    "rel_4020": {
      "id": "rel_4020",
      "source_id": "doc_2973",
      "target_id": "concept_3498",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.4485471
    },
    "rel_4021": {
      "id": "rel_4021",
      "source_id": "doc_2973",
      "target_id": "concept_3499",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.4491122
    },
    "rel_4022": {
      "id": "rel_4022",
      "source_id": "doc_2973",
      "target_id": "concept_3500",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.4496279
    },
    "rel_4023": {
      "id": "rel_4023",
      "source_id": "doc_2973",
      "target_id": "concept_3501",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.450121
    },
    "rel_4024": {
      "id": "rel_4024",
      "source_id": "doc_2973",
      "target_id": "concept_3502",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.451218
    },
    "rel_4025": {
      "id": "rel_4025",
      "source_id": "doc_2973",
      "target_id": "concept_3503",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.4517708
    },
    "rel_4026": {
      "id": "rel_4026",
      "source_id": "doc_2973",
      "target_id": "concept_3504",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.4522932
    },
    "rel_4027": {
      "id": "rel_4027",
      "source_id": "doc_2973",
      "target_id": "concept_3505",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.452807
    },
    "rel_4028": {
      "id": "rel_4028",
      "source_id": "doc_2973",
      "target_id": "concept_3506",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.453346
    },
    "rel_4029": {
      "id": "rel_4029",
      "source_id": "doc_2973",
      "target_id": "concept_3507",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.453836
    },
    "rel_4030": {
      "id": "rel_4030",
      "source_id": "doc_2973",
      "target_id": "concept_3508",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.4543512
    },
    "rel_4031": {
      "id": "rel_4031",
      "source_id": "doc_2973",
      "target_id": "concept_3509",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.4549959
    },
    "rel_4032": {
      "id": "rel_4032",
      "source_id": "doc_2973",
      "target_id": "concept_3510",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.455512
    },
    "rel_4033": {
      "id": "rel_4033",
      "source_id": "doc_2973",
      "target_id": "concept_3511",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.456048
    },
    "rel_4034": {
      "id": "rel_4034",
      "source_id": "doc_2973",
      "target_id": "concept_3512",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.456542
    },
    "rel_4035": {
      "id": "rel_4035",
      "source_id": "doc_2973",
      "target_id": "concept_3513",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.457067
    },
    "rel_4036": {
      "id": "rel_4036",
      "source_id": "doc_2973",
      "target_id": "concept_3514",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.457556
    },
    "rel_4037": {
      "id": "rel_4037",
      "source_id": "doc_2973",
      "target_id": "concept_3515",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.458216
    },
    "rel_4038": {
      "id": "rel_4038",
      "source_id": "doc_2973",
      "target_id": "concept_3516",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.4587579
    },
    "rel_4039": {
      "id": "rel_4039",
      "source_id": "doc_2973",
      "target_id": "concept_2500",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.459142
    },
    "rel_4040": {
      "id": "rel_4040",
      "source_id": "doc_2973",
      "target_id": "concept_3517",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.4596999
    },
    "rel_4041": {
      "id": "rel_4041",
      "source_id": "doc_2973",
      "target_id": "concept_3518",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.4602501
    },
    "rel_4042": {
      "id": "rel_4042",
      "source_id": "doc_2973",
      "target_id": "concept_3519",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.460809
    },
    "rel_4043": {
      "id": "rel_4043",
      "source_id": "doc_2973",
      "target_id": "concept_3520",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.4616141
    },
    "rel_4044": {
      "id": "rel_4044",
      "source_id": "doc_2973",
      "target_id": "concept_3521",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.462205
    },
    "rel_4045": {
      "id": "rel_4045",
      "source_id": "doc_2973",
      "target_id": "concept_3522",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.462798
    },
    "rel_4046": {
      "id": "rel_4046",
      "source_id": "doc_2973",
      "target_id": "concept_3523",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.463329
    },
    "rel_4047": {
      "id": "rel_4047",
      "source_id": "doc_2973",
      "target_id": "concept_3524",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.463874
    },
    "rel_4048": {
      "id": "rel_4048",
      "source_id": "doc_2973",
      "target_id": "concept_3525",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.464555
    },
    "rel_4049": {
      "id": "rel_4049",
      "source_id": "doc_2973",
      "target_id": "concept_3526",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.465139
    },
    "rel_4050": {
      "id": "rel_4050",
      "source_id": "doc_2973",
      "target_id": "concept_3527",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.465732
    },
    "rel_4051": {
      "id": "rel_4051",
      "source_id": "doc_2973",
      "target_id": "concept_3528",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.466248
    },
    "rel_4052": {
      "id": "rel_4052",
      "source_id": "doc_2973",
      "target_id": "concept_3529",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.4667258
    },
    "rel_4053": {
      "id": "rel_4053",
      "source_id": "doc_2973",
      "target_id": "concept_3530",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.467807
    },
    "rel_4054": {
      "id": "rel_4054",
      "source_id": "doc_2973",
      "target_id": "concept_2092",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.468243
    },
    "rel_4055": {
      "id": "rel_4055",
      "source_id": "doc_2973",
      "target_id": "concept_3531",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.468818
    },
    "rel_4056": {
      "id": "rel_4056",
      "source_id": "doc_2973",
      "target_id": "concept_3532",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.469446
    },
    "rel_4057": {
      "id": "rel_4057",
      "source_id": "doc_2973",
      "target_id": "concept_3533",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.46995
    },
    "rel_4058": {
      "id": "rel_4058",
      "source_id": "doc_2973",
      "target_id": "concept_3534",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.470479
    },
    "rel_4059": {
      "id": "rel_4059",
      "source_id": "doc_2973",
      "target_id": "concept_3535",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.471049
    },
    "rel_4060": {
      "id": "rel_4060",
      "source_id": "doc_2973",
      "target_id": "concept_3536",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.471806
    },
    "rel_4061": {
      "id": "rel_4061",
      "source_id": "doc_2973",
      "target_id": "concept_3537",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.4722838
    },
    "rel_4062": {
      "id": "rel_4062",
      "source_id": "doc_2973",
      "target_id": "concept_3538",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.4727948
    },
    "rel_4063": {
      "id": "rel_4063",
      "source_id": "doc_2973",
      "target_id": "concept_3539",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.473346
    },
    "rel_4064": {
      "id": "rel_4064",
      "source_id": "doc_2973",
      "target_id": "concept_3540",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.473846
    },
    "rel_4065": {
      "id": "rel_4065",
      "source_id": "doc_2973",
      "target_id": "concept_3541",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.474325
    },
    "rel_4066": {
      "id": "rel_4066",
      "source_id": "doc_2973",
      "target_id": "concept_3542",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.4748921
    },
    "rel_4067": {
      "id": "rel_4067",
      "source_id": "doc_2973",
      "target_id": "concept_3543",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.47541
    },
    "rel_4068": {
      "id": "rel_4068",
      "source_id": "doc_2973",
      "target_id": "concept_3544",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.475942
    },
    "rel_4069": {
      "id": "rel_4069",
      "source_id": "doc_2973",
      "target_id": "concept_2174",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.476293
    },
    "rel_4070": {
      "id": "rel_4070",
      "source_id": "doc_2973",
      "target_id": "concept_3545",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.4768488
    },
    "rel_4071": {
      "id": "rel_4071",
      "source_id": "doc_2973",
      "target_id": "concept_3546",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.477364
    },
    "rel_4072": {
      "id": "rel_4072",
      "source_id": "doc_2973",
      "target_id": "concept_2344",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.47777
    },
    "rel_4073": {
      "id": "rel_4073",
      "source_id": "doc_2973",
      "target_id": "concept_3547",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.478393
    },
    "rel_4074": {
      "id": "rel_4074",
      "source_id": "doc_2973",
      "target_id": "concept_3548",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.479095
    },
    "rel_4075": {
      "id": "rel_4075",
      "source_id": "doc_2973",
      "target_id": "concept_3549",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.479638
    },
    "rel_4076": {
      "id": "rel_4076",
      "source_id": "doc_2973",
      "target_id": "concept_3550",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.480155
    },
    "rel_4077": {
      "id": "rel_4077",
      "source_id": "doc_2973",
      "target_id": "concept_3551",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.480682
    },
    "rel_4078": {
      "id": "rel_4078",
      "source_id": "doc_2973",
      "target_id": "concept_2185",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.4810472
    },
    "rel_4079": {
      "id": "rel_4079",
      "source_id": "doc_2973",
      "target_id": "concept_3552",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.4815629
    },
    "rel_4080": {
      "id": "rel_4080",
      "source_id": "doc_2973",
      "target_id": "concept_3553",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.4820569
    },
    "rel_4081": {
      "id": "rel_4081",
      "source_id": "doc_2973",
      "target_id": "concept_3554",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.48259
    },
    "rel_4082": {
      "id": "rel_4082",
      "source_id": "doc_2973",
      "target_id": "concept_3555",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.483084
    },
    "rel_4083": {
      "id": "rel_4083",
      "source_id": "doc_2973",
      "target_id": "concept_2880",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.4834921
    },
    "rel_4084": {
      "id": "rel_4084",
      "source_id": "doc_2973",
      "target_id": "concept_3556",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.484024
    },
    "rel_4085": {
      "id": "rel_4085",
      "source_id": "doc_2973",
      "target_id": "concept_3557",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.48454
    },
    "rel_4086": {
      "id": "rel_4086",
      "source_id": "doc_2973",
      "target_id": "concept_3558",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.485057
    },
    "rel_4087": {
      "id": "rel_4087",
      "source_id": "doc_2973",
      "target_id": "concept_3559",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.485541
    },
    "rel_4088": {
      "id": "rel_4088",
      "source_id": "doc_2973",
      "target_id": "concept_3560",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.486033
    },
    "rel_4089": {
      "id": "rel_4089",
      "source_id": "doc_2973",
      "target_id": "concept_3561",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.4871979
    },
    "rel_4090": {
      "id": "rel_4090",
      "source_id": "doc_2973",
      "target_id": "concept_3562",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.488068
    },
    "rel_4091": {
      "id": "rel_4091",
      "source_id": "doc_2973",
      "target_id": "concept_2353",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.488564
    },
    "rel_4092": {
      "id": "rel_4092",
      "source_id": "doc_2973",
      "target_id": "concept_3563",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.4890938
    },
    "rel_4093": {
      "id": "rel_4093",
      "source_id": "doc_2973",
      "target_id": "concept_3564",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.489598
    },
    "rel_4094": {
      "id": "rel_4094",
      "source_id": "doc_2973",
      "target_id": "concept_3565",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.490231
    },
    "rel_4095": {
      "id": "rel_4095",
      "source_id": "doc_2973",
      "target_id": "concept_3566",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.490753
    },
    "rel_4096": {
      "id": "rel_4096",
      "source_id": "doc_2973",
      "target_id": "concept_2210",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.491115
    },
    "rel_4097": {
      "id": "rel_4097",
      "source_id": "doc_2973",
      "target_id": "concept_3567",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.4916391
    },
    "rel_4098": {
      "id": "rel_4098",
      "source_id": "doc_2973",
      "target_id": "concept_3568",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.492196
    },
    "rel_4099": {
      "id": "rel_4099",
      "source_id": "doc_2973",
      "target_id": "concept_3569",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.4927628
    },
    "rel_4100": {
      "id": "rel_4100",
      "source_id": "doc_2973",
      "target_id": "concept_3570",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.4932501
    },
    "rel_4101": {
      "id": "rel_4101",
      "source_id": "doc_2973",
      "target_id": "concept_3571",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.4937768
    },
    "rel_4102": {
      "id": "rel_4102",
      "source_id": "doc_2973",
      "target_id": "concept_3572",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.494265
    },
    "rel_4103": {
      "id": "rel_4103",
      "source_id": "doc_2973",
      "target_id": "concept_2210",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.494615
    },
    "rel_4104": {
      "id": "rel_4104",
      "source_id": "doc_2973",
      "target_id": "concept_3573",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.495133
    },
    "rel_4105": {
      "id": "rel_4105",
      "source_id": "doc_2973",
      "target_id": "concept_3574",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.495615
    },
    "rel_4106": {
      "id": "rel_4106",
      "source_id": "doc_2973",
      "target_id": "concept_3575",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.4961128
    },
    "rel_4107": {
      "id": "rel_4107",
      "source_id": "doc_2973",
      "target_id": "concept_3576",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.496647
    },
    "rel_4108": {
      "id": "rel_4108",
      "source_id": "doc_2973",
      "target_id": "concept_3577",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.497164
    },
    "rel_4109": {
      "id": "rel_4109",
      "source_id": "doc_2973",
      "target_id": "concept_3578",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.497668
    },
    "rel_4110": {
      "id": "rel_4110",
      "source_id": "doc_2973",
      "target_id": "concept_3579",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.498343
    },
    "rel_4111": {
      "id": "rel_4111",
      "source_id": "doc_2973",
      "target_id": "concept_3580",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.498948
    },
    "rel_4112": {
      "id": "rel_4112",
      "source_id": "doc_2973",
      "target_id": "concept_3581",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.499535
    },
    "rel_4113": {
      "id": "rel_4113",
      "source_id": "doc_3586",
      "target_id": "concept_3587",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.5240052
    },
    "rel_4114": {
      "id": "rel_4114",
      "source_id": "doc_3586",
      "target_id": "concept_3588",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.524641
    },
    "rel_4115": {
      "id": "rel_4115",
      "source_id": "doc_3586",
      "target_id": "concept_3589",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.5252008
    },
    "rel_4116": {
      "id": "rel_4116",
      "source_id": "doc_3586",
      "target_id": "concept_3590",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.52569
    },
    "rel_4117": {
      "id": "rel_4117",
      "source_id": "doc_3586",
      "target_id": "concept_2372",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.526051
    },
    "rel_4118": {
      "id": "rel_4118",
      "source_id": "doc_3586",
      "target_id": "concept_3591",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.526556
    },
    "rel_4119": {
      "id": "rel_4119",
      "source_id": "doc_3586",
      "target_id": "concept_2719",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.5269482
    },
    "rel_4120": {
      "id": "rel_4120",
      "source_id": "doc_3586",
      "target_id": "concept_3592",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.527436
    },
    "rel_4121": {
      "id": "rel_4121",
      "source_id": "doc_3586",
      "target_id": "concept_3593",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.527974
    },
    "rel_4122": {
      "id": "rel_4122",
      "source_id": "doc_3586",
      "target_id": "concept_3594",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.528469
    },
    "rel_4123": {
      "id": "rel_4123",
      "source_id": "doc_3586",
      "target_id": "concept_3595",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.528961
    },
    "rel_4124": {
      "id": "rel_4124",
      "source_id": "doc_3586",
      "target_id": "concept_2224",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.5293179
    },
    "rel_4125": {
      "id": "rel_4125",
      "source_id": "doc_3586",
      "target_id": "concept_3596",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.5297952
    },
    "rel_4126": {
      "id": "rel_4126",
      "source_id": "doc_3586",
      "target_id": "concept_2380",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.530163
    },
    "rel_4127": {
      "id": "rel_4127",
      "source_id": "doc_3586",
      "target_id": "concept_3597",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.5307882
    },
    "rel_4128": {
      "id": "rel_4128",
      "source_id": "doc_3586",
      "target_id": "concept_3598",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.531311
    },
    "rel_4129": {
      "id": "rel_4129",
      "source_id": "doc_3586",
      "target_id": "concept_3599",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.531828
    },
    "rel_4130": {
      "id": "rel_4130",
      "source_id": "doc_3586",
      "target_id": "concept_3600",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.532361
    },
    "rel_4131": {
      "id": "rel_4131",
      "source_id": "doc_3586",
      "target_id": "concept_3601",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.5329149
    },
    "rel_4132": {
      "id": "rel_4132",
      "source_id": "doc_3586",
      "target_id": "concept_3602",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.53344
    },
    "rel_4133": {
      "id": "rel_4133",
      "source_id": "doc_3586",
      "target_id": "concept_3603",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.533938
    },
    "rel_4134": {
      "id": "rel_4134",
      "source_id": "doc_3586",
      "target_id": "concept_3604",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.534411
    },
    "rel_4135": {
      "id": "rel_4135",
      "source_id": "doc_3586",
      "target_id": "concept_3605",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.535071
    },
    "rel_4136": {
      "id": "rel_4136",
      "source_id": "doc_3586",
      "target_id": "concept_2286",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.535424
    },
    "rel_4137": {
      "id": "rel_4137",
      "source_id": "doc_3586",
      "target_id": "concept_3606",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.535912
    },
    "rel_4138": {
      "id": "rel_4138",
      "source_id": "doc_3586",
      "target_id": "concept_3607",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.536389
    },
    "rel_4139": {
      "id": "rel_4139",
      "source_id": "doc_3586",
      "target_id": "concept_2390",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.536756
    },
    "rel_4140": {
      "id": "rel_4140",
      "source_id": "doc_3586",
      "target_id": "concept_3608",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.53724
    },
    "rel_4141": {
      "id": "rel_4141",
      "source_id": "doc_3586",
      "target_id": "concept_3609",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.537768
    },
    "rel_4142": {
      "id": "rel_4142",
      "source_id": "doc_3586",
      "target_id": "concept_3610",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.538257
    },
    "rel_4143": {
      "id": "rel_4143",
      "source_id": "doc_3586",
      "target_id": "concept_2391",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.538615
    },
    "rel_4144": {
      "id": "rel_4144",
      "source_id": "doc_3586",
      "target_id": "concept_3611",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.5391092
    },
    "rel_4145": {
      "id": "rel_4145",
      "source_id": "doc_3586",
      "target_id": "concept_3612",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.539642
    },
    "rel_4146": {
      "id": "rel_4146",
      "source_id": "doc_3586",
      "target_id": "concept_3613",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.540237
    },
    "rel_4147": {
      "id": "rel_4147",
      "source_id": "doc_3586",
      "target_id": "concept_2230",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.540728
    },
    "rel_4148": {
      "id": "rel_4148",
      "source_id": "doc_3586",
      "target_id": "concept_3614",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.5412428
    },
    "rel_4149": {
      "id": "rel_4149",
      "source_id": "doc_3586",
      "target_id": "concept_2085",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.541586
    },
    "rel_4150": {
      "id": "rel_4150",
      "source_id": "doc_3586",
      "target_id": "concept_2394",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.541951
    },
    "rel_4151": {
      "id": "rel_4151",
      "source_id": "doc_3586",
      "target_id": "concept_3615",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.542604
    },
    "rel_4152": {
      "id": "rel_4152",
      "source_id": "doc_3586",
      "target_id": "concept_3616",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.5431092
    },
    "rel_4153": {
      "id": "rel_4153",
      "source_id": "doc_3586",
      "target_id": "concept_3617",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.543635
    },
    "rel_4154": {
      "id": "rel_4154",
      "source_id": "doc_3586",
      "target_id": "concept_3618",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.544157
    },
    "rel_4155": {
      "id": "rel_4155",
      "source_id": "doc_3586",
      "target_id": "concept_3619",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.544641
    },
    "rel_4156": {
      "id": "rel_4156",
      "source_id": "doc_3586",
      "target_id": "concept_3620",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.545131
    },
    "rel_4157": {
      "id": "rel_4157",
      "source_id": "doc_3586",
      "target_id": "concept_3621",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.545621
    },
    "rel_4158": {
      "id": "rel_4158",
      "source_id": "doc_3586",
      "target_id": "concept_3622",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.546096
    },
    "rel_4159": {
      "id": "rel_4159",
      "source_id": "doc_3586",
      "target_id": "concept_3623",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.5466099
    },
    "rel_4160": {
      "id": "rel_4160",
      "source_id": "doc_3586",
      "target_id": "concept_3624",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.547091
    },
    "rel_4161": {
      "id": "rel_4161",
      "source_id": "doc_3586",
      "target_id": "concept_3625",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.547609
    },
    "rel_4162": {
      "id": "rel_4162",
      "source_id": "doc_3586",
      "target_id": "concept_3626",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.548086
    },
    "rel_4163": {
      "id": "rel_4163",
      "source_id": "doc_3586",
      "target_id": "concept_3627",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.5485709
    },
    "rel_4164": {
      "id": "rel_4164",
      "source_id": "doc_3586",
      "target_id": "concept_3628",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.549099
    },
    "rel_4165": {
      "id": "rel_4165",
      "source_id": "doc_3586",
      "target_id": "concept_3629",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.54959
    },
    "rel_4166": {
      "id": "rel_4166",
      "source_id": "doc_3586",
      "target_id": "concept_3630",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.550116
    },
    "rel_4167": {
      "id": "rel_4167",
      "source_id": "doc_3586",
      "target_id": "concept_2095",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.5504498
    },
    "rel_4168": {
      "id": "rel_4168",
      "source_id": "doc_3586",
      "target_id": "concept_3631",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.5512269
    },
    "rel_4169": {
      "id": "rel_4169",
      "source_id": "doc_3586",
      "target_id": "concept_3632",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.55182
    },
    "rel_4170": {
      "id": "rel_4170",
      "source_id": "doc_3586",
      "target_id": "concept_2097",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.552236
    },
    "rel_4171": {
      "id": "rel_4171",
      "source_id": "doc_3586",
      "target_id": "concept_3633",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.552785
    },
    "rel_4172": {
      "id": "rel_4172",
      "source_id": "doc_3586",
      "target_id": "concept_2428",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.553149
    },
    "rel_4173": {
      "id": "rel_4173",
      "source_id": "doc_3586",
      "target_id": "concept_3634",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.553653
    },
    "rel_4174": {
      "id": "rel_4174",
      "source_id": "doc_3586",
      "target_id": "concept_2740",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.554058
    },
    "rel_4175": {
      "id": "rel_4175",
      "source_id": "doc_3586",
      "target_id": "concept_2788",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.5544589
    },
    "rel_4176": {
      "id": "rel_4176",
      "source_id": "doc_3586",
      "target_id": "concept_2102",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.5547972
    },
    "rel_4177": {
      "id": "rel_4177",
      "source_id": "doc_3586",
      "target_id": "concept_3635",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.555281
    },
    "rel_4178": {
      "id": "rel_4178",
      "source_id": "doc_3586",
      "target_id": "concept_2103",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.555619
    },
    "rel_4179": {
      "id": "rel_4179",
      "source_id": "doc_3586",
      "target_id": "concept_3636",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.556111
    },
    "rel_4180": {
      "id": "rel_4180",
      "source_id": "doc_3586",
      "target_id": "concept_3637",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.5566342
    },
    "rel_4181": {
      "id": "rel_4181",
      "source_id": "doc_3586",
      "target_id": "concept_2415",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.5570219
    },
    "rel_4182": {
      "id": "rel_4182",
      "source_id": "doc_3586",
      "target_id": "concept_3638",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.557523
    },
    "rel_4183": {
      "id": "rel_4183",
      "source_id": "doc_3586",
      "target_id": "concept_2418",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.557889
    },
    "rel_4184": {
      "id": "rel_4184",
      "source_id": "doc_3586",
      "target_id": "concept_2546",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.558262
    },
    "rel_4185": {
      "id": "rel_4185",
      "source_id": "doc_3586",
      "target_id": "concept_3639",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.5587368
    },
    "rel_4186": {
      "id": "rel_4186",
      "source_id": "doc_3586",
      "target_id": "concept_3640",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.559248
    },
    "rel_4187": {
      "id": "rel_4187",
      "source_id": "doc_3586",
      "target_id": "concept_2416",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.5596108
    },
    "rel_4188": {
      "id": "rel_4188",
      "source_id": "doc_3586",
      "target_id": "concept_3641",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.5601091
    },
    "rel_4189": {
      "id": "rel_4189",
      "source_id": "doc_3586",
      "target_id": "concept_3642",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.560674
    },
    "rel_4190": {
      "id": "rel_4190",
      "source_id": "doc_3586",
      "target_id": "concept_3643",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.561387
    },
    "rel_4191": {
      "id": "rel_4191",
      "source_id": "doc_3586",
      "target_id": "concept_3644",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.562007
    },
    "rel_4192": {
      "id": "rel_4192",
      "source_id": "doc_3586",
      "target_id": "concept_3645",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.562624
    },
    "rel_4193": {
      "id": "rel_4193",
      "source_id": "doc_3586",
      "target_id": "concept_3646",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.563157
    },
    "rel_4194": {
      "id": "rel_4194",
      "source_id": "doc_3586",
      "target_id": "concept_2753",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.563549
    },
    "rel_4195": {
      "id": "rel_4195",
      "source_id": "doc_3586",
      "target_id": "concept_2301",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.5639098
    },
    "rel_4196": {
      "id": "rel_4196",
      "source_id": "doc_3586",
      "target_id": "concept_2756",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.56432
    },
    "rel_4197": {
      "id": "rel_4197",
      "source_id": "doc_3586",
      "target_id": "concept_3647",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.5648582
    },
    "rel_4198": {
      "id": "rel_4198",
      "source_id": "doc_3586",
      "target_id": "concept_3648",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.5653791
    },
    "rel_4199": {
      "id": "rel_4199",
      "source_id": "doc_3586",
      "target_id": "concept_2116",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.56572
    },
    "rel_4200": {
      "id": "rel_4200",
      "source_id": "doc_3586",
      "target_id": "concept_3649",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.5662148
    },
    "rel_4201": {
      "id": "rel_4201",
      "source_id": "doc_3586",
      "target_id": "concept_3650",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.5668569
    },
    "rel_4202": {
      "id": "rel_4202",
      "source_id": "doc_3586",
      "target_id": "concept_3651",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.567341
    },
    "rel_4203": {
      "id": "rel_4203",
      "source_id": "doc_3586",
      "target_id": "concept_2243",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.5676951
    },
    "rel_4204": {
      "id": "rel_4204",
      "source_id": "doc_3586",
      "target_id": "concept_3652",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.5682151
    },
    "rel_4205": {
      "id": "rel_4205",
      "source_id": "doc_3586",
      "target_id": "concept_3653",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.568712
    },
    "rel_4206": {
      "id": "rel_4206",
      "source_id": "doc_3586",
      "target_id": "concept_3654",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.569241
    },
    "rel_4207": {
      "id": "rel_4207",
      "source_id": "doc_3586",
      "target_id": "concept_3655",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.56975
    },
    "rel_4208": {
      "id": "rel_4208",
      "source_id": "doc_3586",
      "target_id": "concept_3656",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.570328
    },
    "rel_4209": {
      "id": "rel_4209",
      "source_id": "doc_3586",
      "target_id": "concept_3657",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.570952
    },
    "rel_4210": {
      "id": "rel_4210",
      "source_id": "doc_3586",
      "target_id": "concept_3658",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.5715258
    },
    "rel_4211": {
      "id": "rel_4211",
      "source_id": "doc_3586",
      "target_id": "concept_3659",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.5720682
    },
    "rel_4212": {
      "id": "rel_4212",
      "source_id": "doc_3586",
      "target_id": "concept_3660",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.572594
    },
    "rel_4213": {
      "id": "rel_4213",
      "source_id": "doc_3586",
      "target_id": "concept_3661",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.573178
    },
    "rel_4214": {
      "id": "rel_4214",
      "source_id": "doc_3586",
      "target_id": "concept_3662",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.573783
    },
    "rel_4215": {
      "id": "rel_4215",
      "source_id": "doc_3586",
      "target_id": "concept_2398",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.5742059
    },
    "rel_4216": {
      "id": "rel_4216",
      "source_id": "doc_3586",
      "target_id": "concept_3663",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.574742
    },
    "rel_4217": {
      "id": "rel_4217",
      "source_id": "doc_3586",
      "target_id": "concept_2397",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.575125
    },
    "rel_4218": {
      "id": "rel_4218",
      "source_id": "doc_3586",
      "target_id": "concept_3664",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.5756412
    },
    "rel_4219": {
      "id": "rel_4219",
      "source_id": "doc_3586",
      "target_id": "concept_3665",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.576183
    },
    "rel_4220": {
      "id": "rel_4220",
      "source_id": "doc_3586",
      "target_id": "concept_3666",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.576693
    },
    "rel_4221": {
      "id": "rel_4221",
      "source_id": "doc_3586",
      "target_id": "concept_3667",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.577234
    },
    "rel_4222": {
      "id": "rel_4222",
      "source_id": "doc_3586",
      "target_id": "concept_3668",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.577757
    },
    "rel_4223": {
      "id": "rel_4223",
      "source_id": "doc_3586",
      "target_id": "concept_3669",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.578298
    },
    "rel_4224": {
      "id": "rel_4224",
      "source_id": "doc_3586",
      "target_id": "concept_3670",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.57878
    },
    "rel_4225": {
      "id": "rel_4225",
      "source_id": "doc_3586",
      "target_id": "concept_3671",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.579264
    },
    "rel_4226": {
      "id": "rel_4226",
      "source_id": "doc_3586",
      "target_id": "concept_3672",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.579745
    },
    "rel_4227": {
      "id": "rel_4227",
      "source_id": "doc_3586",
      "target_id": "concept_3673",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.580224
    },
    "rel_4228": {
      "id": "rel_4228",
      "source_id": "doc_3586",
      "target_id": "concept_3674",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.58085
    },
    "rel_4229": {
      "id": "rel_4229",
      "source_id": "doc_3586",
      "target_id": "concept_2789",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.581434
    },
    "rel_4230": {
      "id": "rel_4230",
      "source_id": "doc_3586",
      "target_id": "concept_3675",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.5820851
    },
    "rel_4231": {
      "id": "rel_4231",
      "source_id": "doc_3586",
      "target_id": "concept_3676",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.5825841
    },
    "rel_4232": {
      "id": "rel_4232",
      "source_id": "doc_3586",
      "target_id": "concept_2407",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.5829499
    },
    "rel_4233": {
      "id": "rel_4233",
      "source_id": "doc_3586",
      "target_id": "concept_2573",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.583322
    },
    "rel_4234": {
      "id": "rel_4234",
      "source_id": "doc_3586",
      "target_id": "concept_3677",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.583852
    },
    "rel_4235": {
      "id": "rel_4235",
      "source_id": "doc_3586",
      "target_id": "concept_3678",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.584339
    },
    "rel_4236": {
      "id": "rel_4236",
      "source_id": "doc_3586",
      "target_id": "concept_3679",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.5848398
    },
    "rel_4237": {
      "id": "rel_4237",
      "source_id": "doc_3586",
      "target_id": "concept_3680",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.58534
    },
    "rel_4238": {
      "id": "rel_4238",
      "source_id": "doc_3586",
      "target_id": "concept_3681",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.58587
    },
    "rel_4239": {
      "id": "rel_4239",
      "source_id": "doc_3586",
      "target_id": "concept_3682",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.586365
    },
    "rel_4240": {
      "id": "rel_4240",
      "source_id": "doc_3586",
      "target_id": "concept_3683",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.586853
    },
    "rel_4241": {
      "id": "rel_4241",
      "source_id": "doc_3586",
      "target_id": "concept_2138",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.587192
    },
    "rel_4242": {
      "id": "rel_4242",
      "source_id": "doc_3586",
      "target_id": "concept_3684",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.587685
    },
    "rel_4243": {
      "id": "rel_4243",
      "source_id": "doc_3586",
      "target_id": "concept_3685",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.588191
    },
    "rel_4244": {
      "id": "rel_4244",
      "source_id": "doc_3586",
      "target_id": "concept_2797",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.588583
    },
    "rel_4245": {
      "id": "rel_4245",
      "source_id": "doc_3586",
      "target_id": "concept_3686",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.589066
    },
    "rel_4246": {
      "id": "rel_4246",
      "source_id": "doc_3586",
      "target_id": "concept_3687",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.5895889
    },
    "rel_4247": {
      "id": "rel_4247",
      "source_id": "doc_3586",
      "target_id": "concept_3688",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.5901198
    },
    "rel_4248": {
      "id": "rel_4248",
      "source_id": "doc_3586",
      "target_id": "concept_3689",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.590683
    },
    "rel_4249": {
      "id": "rel_4249",
      "source_id": "doc_3586",
      "target_id": "concept_3690",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.591178
    },
    "rel_4250": {
      "id": "rel_4250",
      "source_id": "doc_3586",
      "target_id": "concept_3691",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.591836
    },
    "rel_4251": {
      "id": "rel_4251",
      "source_id": "doc_3586",
      "target_id": "concept_3692",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.59233
    },
    "rel_4252": {
      "id": "rel_4252",
      "source_id": "doc_3586",
      "target_id": "concept_3693",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.5928168
    },
    "rel_4253": {
      "id": "rel_4253",
      "source_id": "doc_3586",
      "target_id": "concept_3694",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.593346
    },
    "rel_4254": {
      "id": "rel_4254",
      "source_id": "doc_3586",
      "target_id": "concept_2805",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.593736
    },
    "rel_4255": {
      "id": "rel_4255",
      "source_id": "doc_3586",
      "target_id": "concept_3695",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.594218
    },
    "rel_4256": {
      "id": "rel_4256",
      "source_id": "doc_3586",
      "target_id": "concept_3696",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.594711
    },
    "rel_4257": {
      "id": "rel_4257",
      "source_id": "doc_3586",
      "target_id": "concept_3697",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.595207
    },
    "rel_4258": {
      "id": "rel_4258",
      "source_id": "doc_3586",
      "target_id": "concept_3698",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.5956979
    },
    "rel_4259": {
      "id": "rel_4259",
      "source_id": "doc_3586",
      "target_id": "concept_2815",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.5960908
    },
    "rel_4260": {
      "id": "rel_4260",
      "source_id": "doc_3586",
      "target_id": "concept_3699",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.596608
    },
    "rel_4261": {
      "id": "rel_4261",
      "source_id": "doc_3586",
      "target_id": "concept_3700",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.5970922
    },
    "rel_4262": {
      "id": "rel_4262",
      "source_id": "doc_3586",
      "target_id": "concept_3701",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.5975811
    },
    "rel_4263": {
      "id": "rel_4263",
      "source_id": "doc_3586",
      "target_id": "concept_1080",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.597769
    },
    "rel_4264": {
      "id": "rel_4264",
      "source_id": "doc_3586",
      "target_id": "concept_2821",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.598185
    },
    "rel_4265": {
      "id": "rel_4265",
      "source_id": "doc_3586",
      "target_id": "concept_3702",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.59869
    },
    "rel_4266": {
      "id": "rel_4266",
      "source_id": "doc_3586",
      "target_id": "concept_2379",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.599051
    },
    "rel_4267": {
      "id": "rel_4267",
      "source_id": "doc_3586",
      "target_id": "concept_3703",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.599583
    },
    "rel_4268": {
      "id": "rel_4268",
      "source_id": "doc_3586",
      "target_id": "concept_3704",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.6002402
    },
    "rel_4269": {
      "id": "rel_4269",
      "source_id": "doc_3586",
      "target_id": "concept_3705",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.600868
    },
    "rel_4270": {
      "id": "rel_4270",
      "source_id": "doc_3586",
      "target_id": "concept_3706",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.6015291
    },
    "rel_4271": {
      "id": "rel_4271",
      "source_id": "doc_3586",
      "target_id": "concept_3707",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.602061
    },
    "rel_4272": {
      "id": "rel_4272",
      "source_id": "doc_3586",
      "target_id": "concept_2085",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.602437
    },
    "rel_4273": {
      "id": "rel_4273",
      "source_id": "doc_3586",
      "target_id": "concept_3708",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.602974
    },
    "rel_4274": {
      "id": "rel_4274",
      "source_id": "doc_3586",
      "target_id": "concept_3709",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.603787
    },
    "rel_4275": {
      "id": "rel_4275",
      "source_id": "doc_3586",
      "target_id": "concept_3710",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.604349
    },
    "rel_4276": {
      "id": "rel_4276",
      "source_id": "doc_3586",
      "target_id": "concept_3711",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.604861
    },
    "rel_4277": {
      "id": "rel_4277",
      "source_id": "doc_3586",
      "target_id": "concept_3712",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.6053739
    },
    "rel_4278": {
      "id": "rel_4278",
      "source_id": "doc_3586",
      "target_id": "concept_3713",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.605865
    },
    "rel_4279": {
      "id": "rel_4279",
      "source_id": "doc_3586",
      "target_id": "concept_3714",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.6063528
    },
    "rel_4280": {
      "id": "rel_4280",
      "source_id": "doc_3586",
      "target_id": "concept_2153",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.606715
    },
    "rel_4281": {
      "id": "rel_4281",
      "source_id": "doc_3586",
      "target_id": "concept_3715",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.607237
    },
    "rel_4282": {
      "id": "rel_4282",
      "source_id": "doc_3586",
      "target_id": "concept_2154",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.607575
    },
    "rel_4283": {
      "id": "rel_4283",
      "source_id": "doc_3586",
      "target_id": "concept_3716",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.608052
    },
    "rel_4284": {
      "id": "rel_4284",
      "source_id": "doc_3586",
      "target_id": "concept_3717",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.6085372
    },
    "rel_4285": {
      "id": "rel_4285",
      "source_id": "doc_3586",
      "target_id": "concept_3718",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.609063
    },
    "rel_4286": {
      "id": "rel_4286",
      "source_id": "doc_3586",
      "target_id": "concept_2075",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.609395
    },
    "rel_4287": {
      "id": "rel_4287",
      "source_id": "doc_3586",
      "target_id": "concept_3719",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.609885
    },
    "rel_4288": {
      "id": "rel_4288",
      "source_id": "doc_3586",
      "target_id": "concept_3720",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.610389
    },
    "rel_4289": {
      "id": "rel_4289",
      "source_id": "doc_3586",
      "target_id": "concept_3721",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.611001
    },
    "rel_4290": {
      "id": "rel_4290",
      "source_id": "doc_3586",
      "target_id": "concept_3722",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.611636
    },
    "rel_4291": {
      "id": "rel_4291",
      "source_id": "doc_3586",
      "target_id": "concept_3723",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.6122649
    },
    "rel_4292": {
      "id": "rel_4292",
      "source_id": "doc_3586",
      "target_id": "concept_3724",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.612826
    },
    "rel_4293": {
      "id": "rel_4293",
      "source_id": "doc_3586",
      "target_id": "concept_2836",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.613222
    },
    "rel_4294": {
      "id": "rel_4294",
      "source_id": "doc_3586",
      "target_id": "concept_3725",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.613718
    },
    "rel_4295": {
      "id": "rel_4295",
      "source_id": "doc_3586",
      "target_id": "concept_3726",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.6142411
    },
    "rel_4296": {
      "id": "rel_4296",
      "source_id": "doc_3586",
      "target_id": "concept_3727",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.614741
    },
    "rel_4297": {
      "id": "rel_4297",
      "source_id": "doc_3586",
      "target_id": "concept_3728",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.615293
    },
    "rel_4298": {
      "id": "rel_4298",
      "source_id": "doc_3586",
      "target_id": "concept_3729",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.6160069
    },
    "rel_4299": {
      "id": "rel_4299",
      "source_id": "doc_3586",
      "target_id": "concept_3730",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.616502
    },
    "rel_4300": {
      "id": "rel_4300",
      "source_id": "doc_3586",
      "target_id": "concept_3731",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.6170182
    },
    "rel_4301": {
      "id": "rel_4301",
      "source_id": "doc_3586",
      "target_id": "concept_3732",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.617526
    },
    "rel_4302": {
      "id": "rel_4302",
      "source_id": "doc_3586",
      "target_id": "concept_3733",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.618197
    },
    "rel_4303": {
      "id": "rel_4303",
      "source_id": "doc_3586",
      "target_id": "concept_3734",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.6187031
    },
    "rel_4304": {
      "id": "rel_4304",
      "source_id": "doc_3586",
      "target_id": "concept_3735",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.6192021
    },
    "rel_4305": {
      "id": "rel_4305",
      "source_id": "doc_3586",
      "target_id": "concept_2337",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.6195579
    },
    "rel_4306": {
      "id": "rel_4306",
      "source_id": "doc_3586",
      "target_id": "concept_475",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.6196532
    },
    "rel_4307": {
      "id": "rel_4307",
      "source_id": "doc_3586",
      "target_id": "concept_3736",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.620182
    },
    "rel_4308": {
      "id": "rel_4308",
      "source_id": "doc_3586",
      "target_id": "concept_3737",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.620697
    },
    "rel_4309": {
      "id": "rel_4309",
      "source_id": "doc_3586",
      "target_id": "concept_2172",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.6211789
    },
    "rel_4310": {
      "id": "rel_4310",
      "source_id": "doc_3586",
      "target_id": "concept_3738",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.6217868
    },
    "rel_4311": {
      "id": "rel_4311",
      "source_id": "doc_3586",
      "target_id": "concept_2857",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.622258
    },
    "rel_4312": {
      "id": "rel_4312",
      "source_id": "doc_3586",
      "target_id": "concept_3739",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.623072
    },
    "rel_4313": {
      "id": "rel_4313",
      "source_id": "doc_3586",
      "target_id": "concept_3740",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.623747
    },
    "rel_4314": {
      "id": "rel_4314",
      "source_id": "doc_3586",
      "target_id": "concept_2417",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.624135
    },
    "rel_4315": {
      "id": "rel_4315",
      "source_id": "doc_3586",
      "target_id": "concept_2461",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.624504
    },
    "rel_4316": {
      "id": "rel_4316",
      "source_id": "doc_3586",
      "target_id": "concept_2174",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.6248488
    },
    "rel_4317": {
      "id": "rel_4317",
      "source_id": "doc_3586",
      "target_id": "concept_3741",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.6253572
    },
    "rel_4318": {
      "id": "rel_4318",
      "source_id": "doc_3586",
      "target_id": "concept_3742",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.625855
    },
    "rel_4319": {
      "id": "rel_4319",
      "source_id": "doc_3586",
      "target_id": "concept_3743",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.6266031
    },
    "rel_4320": {
      "id": "rel_4320",
      "source_id": "doc_3586",
      "target_id": "concept_2606",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.626987
    },
    "rel_4321": {
      "id": "rel_4321",
      "source_id": "doc_3586",
      "target_id": "concept_2419",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.627352
    },
    "rel_4322": {
      "id": "rel_4322",
      "source_id": "doc_3586",
      "target_id": "concept_2867",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.6277509
    },
    "rel_4323": {
      "id": "rel_4323",
      "source_id": "doc_3586",
      "target_id": "concept_2868",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.628156
    },
    "rel_4324": {
      "id": "rel_4324",
      "source_id": "doc_3586",
      "target_id": "concept_2262",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.62851
    },
    "rel_4325": {
      "id": "rel_4325",
      "source_id": "doc_3586",
      "target_id": "concept_3744",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.629025
    },
    "rel_4326": {
      "id": "rel_4326",
      "source_id": "doc_3586",
      "target_id": "concept_3745",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.629569
    },
    "rel_4327": {
      "id": "rel_4327",
      "source_id": "doc_3586",
      "target_id": "concept_3746",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.63007
    },
    "rel_4328": {
      "id": "rel_4328",
      "source_id": "doc_3586",
      "target_id": "concept_3747",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.630562
    },
    "rel_4329": {
      "id": "rel_4329",
      "source_id": "doc_3586",
      "target_id": "concept_3748",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.631221
    },
    "rel_4330": {
      "id": "rel_4330",
      "source_id": "doc_3586",
      "target_id": "concept_3749",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.632155
    },
    "rel_4331": {
      "id": "rel_4331",
      "source_id": "doc_3586",
      "target_id": "concept_1098",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.632361
    },
    "rel_4332": {
      "id": "rel_4332",
      "source_id": "doc_3586",
      "target_id": "concept_3750",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.6328719
    },
    "rel_4333": {
      "id": "rel_4333",
      "source_id": "doc_3586",
      "target_id": "concept_3751",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.6333702
    },
    "rel_4334": {
      "id": "rel_4334",
      "source_id": "doc_3586",
      "target_id": "concept_3752",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.633875
    },
    "rel_4335": {
      "id": "rel_4335",
      "source_id": "doc_3586",
      "target_id": "concept_3753",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.63457
    },
    "rel_4336": {
      "id": "rel_4336",
      "source_id": "doc_3586",
      "target_id": "concept_3754",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.635097
    },
    "rel_4337": {
      "id": "rel_4337",
      "source_id": "doc_3586",
      "target_id": "concept_2185",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.635443
    },
    "rel_4338": {
      "id": "rel_4338",
      "source_id": "doc_3586",
      "target_id": "concept_2874",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.635854
    },
    "rel_4339": {
      "id": "rel_4339",
      "source_id": "doc_3586",
      "target_id": "concept_2875",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.6362538
    },
    "rel_4340": {
      "id": "rel_4340",
      "source_id": "doc_3586",
      "target_id": "concept_3755",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.63678
    },
    "rel_4341": {
      "id": "rel_4341",
      "source_id": "doc_3586",
      "target_id": "concept_2884",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.637198
    },
    "rel_4342": {
      "id": "rel_4342",
      "source_id": "doc_3586",
      "target_id": "concept_3756",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.6376882
    },
    "rel_4343": {
      "id": "rel_4343",
      "source_id": "doc_3586",
      "target_id": "concept_3757",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.638209
    },
    "rel_4344": {
      "id": "rel_4344",
      "source_id": "doc_3586",
      "target_id": "concept_3758",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.6387022
    },
    "rel_4345": {
      "id": "rel_4345",
      "source_id": "doc_3586",
      "target_id": "concept_1104",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.638891
    },
    "rel_4346": {
      "id": "rel_4346",
      "source_id": "doc_3586",
      "target_id": "concept_3759",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.639395
    },
    "rel_4347": {
      "id": "rel_4347",
      "source_id": "doc_3586",
      "target_id": "concept_2383",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.639764
    },
    "rel_4348": {
      "id": "rel_4348",
      "source_id": "doc_3586",
      "target_id": "concept_3760",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.640321
    },
    "rel_4349": {
      "id": "rel_4349",
      "source_id": "doc_3586",
      "target_id": "concept_3761",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.6409311
    },
    "rel_4350": {
      "id": "rel_4350",
      "source_id": "doc_3586",
      "target_id": "concept_327",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.641024
    },
    "rel_4351": {
      "id": "rel_4351",
      "source_id": "doc_3586",
      "target_id": "concept_3762",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.641747
    },
    "rel_4352": {
      "id": "rel_4352",
      "source_id": "doc_3586",
      "target_id": "concept_3763",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.642375
    },
    "rel_4353": {
      "id": "rel_4353",
      "source_id": "doc_3586",
      "target_id": "concept_3764",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.6430058
    },
    "rel_4354": {
      "id": "rel_4354",
      "source_id": "doc_3586",
      "target_id": "concept_3765",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.6435971
    },
    "rel_4355": {
      "id": "rel_4355",
      "source_id": "doc_3586",
      "target_id": "concept_3766",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.644189
    },
    "rel_4356": {
      "id": "rel_4356",
      "source_id": "doc_3586",
      "target_id": "concept_3767",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.644734
    },
    "rel_4357": {
      "id": "rel_4357",
      "source_id": "doc_3586",
      "target_id": "concept_3768",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.645246
    },
    "rel_4358": {
      "id": "rel_4358",
      "source_id": "doc_3586",
      "target_id": "concept_3769",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.645733
    },
    "rel_4359": {
      "id": "rel_4359",
      "source_id": "doc_3586",
      "target_id": "concept_3770",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.646229
    },
    "rel_4360": {
      "id": "rel_4360",
      "source_id": "doc_3586",
      "target_id": "concept_2202",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.6465752
    },
    "rel_4361": {
      "id": "rel_4361",
      "source_id": "doc_3586",
      "target_id": "concept_3771",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.6470761
    },
    "rel_4362": {
      "id": "rel_4362",
      "source_id": "doc_3586",
      "target_id": "concept_3772",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.647569
    },
    "rel_4363": {
      "id": "rel_4363",
      "source_id": "doc_3586",
      "target_id": "concept_3773",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.648061
    },
    "rel_4364": {
      "id": "rel_4364",
      "source_id": "doc_3586",
      "target_id": "concept_2208",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.648441
    },
    "rel_4365": {
      "id": "rel_4365",
      "source_id": "doc_3586",
      "target_id": "concept_3774",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.6489651
    },
    "rel_4366": {
      "id": "rel_4366",
      "source_id": "doc_3586",
      "target_id": "concept_3775",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.649479
    },
    "rel_4367": {
      "id": "rel_4367",
      "source_id": "doc_3586",
      "target_id": "concept_3776",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.6499689
    },
    "rel_4368": {
      "id": "rel_4368",
      "source_id": "doc_3586",
      "target_id": "concept_3777",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.65046
    },
    "rel_4369": {
      "id": "rel_4369",
      "source_id": "doc_3586",
      "target_id": "concept_2910",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.650929
    },
    "rel_4370": {
      "id": "rel_4370",
      "source_id": "doc_3586",
      "target_id": "concept_3778",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.6516879
    },
    "rel_4371": {
      "id": "rel_4371",
      "source_id": "doc_3586",
      "target_id": "concept_3779",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.652287
    },
    "rel_4372": {
      "id": "rel_4372",
      "source_id": "doc_3586",
      "target_id": "concept_3780",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.652991
    },
    "rel_4373": {
      "id": "rel_4373",
      "source_id": "doc_3586",
      "target_id": "concept_3781",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.6535308
    },
    "rel_4374": {
      "id": "rel_4374",
      "source_id": "doc_3586",
      "target_id": "concept_3782",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.6540291
    },
    "rel_4375": {
      "id": "rel_4375",
      "source_id": "doc_3586",
      "target_id": "concept_3783",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.654527
    },
    "rel_4376": {
      "id": "rel_4376",
      "source_id": "doc_3586",
      "target_id": "concept_2214",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.6548722
    },
    "rel_4377": {
      "id": "rel_4377",
      "source_id": "doc_3586",
      "target_id": "concept_3784",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.655401
    },
    "rel_4378": {
      "id": "rel_4378",
      "source_id": "doc_3586",
      "target_id": "concept_3785",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.655922
    },
    "rel_4379": {
      "id": "rel_4379",
      "source_id": "doc_3586",
      "target_id": "concept_2923",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.656325
    },
    "rel_4380": {
      "id": "rel_4380",
      "source_id": "doc_3586",
      "target_id": "concept_3786",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.656847
    },
    "rel_4381": {
      "id": "rel_4381",
      "source_id": "doc_3586",
      "target_id": "concept_3787",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.657366
    },
    "rel_4382": {
      "id": "rel_4382",
      "source_id": "doc_3586",
      "target_id": "concept_3788",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.657896
    },
    "rel_4383": {
      "id": "rel_4383",
      "source_id": "doc_3586",
      "target_id": "concept_3789",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.658392
    },
    "rel_4384": {
      "id": "rel_4384",
      "source_id": "doc_3586",
      "target_id": "concept_3790",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.658896
    },
    "rel_4385": {
      "id": "rel_4385",
      "source_id": "doc_3586",
      "target_id": "concept_3791",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.6594272
    },
    "rel_4386": {
      "id": "rel_4386",
      "source_id": "doc_3586",
      "target_id": "concept_3792",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.659957
    },
    "rel_4387": {
      "id": "rel_4387",
      "source_id": "doc_3795",
      "target_id": "concept_608",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.662432
    },
    "rel_4388": {
      "id": "rel_4388",
      "source_id": "doc_3795",
      "target_id": "concept_2262",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.662805
    },
    "rel_4389": {
      "id": "rel_4389",
      "source_id": "doc_3795",
      "target_id": "concept_2450",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.663168
    },
    "rel_4390": {
      "id": "rel_4390",
      "source_id": "doc_3795",
      "target_id": "concept_3796",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.663682
    },
    "rel_4391": {
      "id": "rel_4391",
      "source_id": "doc_3795",
      "target_id": "concept_2681",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.6640708
    },
    "rel_4392": {
      "id": "rel_4392",
      "source_id": "doc_3795",
      "target_id": "concept_3797",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.6645708
    },
    "rel_4393": {
      "id": "rel_4393",
      "source_id": "doc_3795",
      "target_id": "concept_2194",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.66493
    },
    "rel_4394": {
      "id": "rel_4394",
      "source_id": "doc_3795",
      "target_id": "concept_2685",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.66533
    },
    "rel_4395": {
      "id": "rel_4395",
      "source_id": "doc_3795",
      "target_id": "concept_2391",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.665698
    },
    "rel_4396": {
      "id": "rel_4396",
      "source_id": "doc_3795",
      "target_id": "concept_3798",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.666209
    },
    "rel_4397": {
      "id": "rel_4397",
      "source_id": "doc_3795",
      "target_id": "concept_2230",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.666571
    },
    "rel_4398": {
      "id": "rel_4398",
      "source_id": "doc_3795",
      "target_id": "concept_3799",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.667072
    },
    "rel_4399": {
      "id": "rel_4399",
      "source_id": "doc_3795",
      "target_id": "concept_2160",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.667416
    },
    "rel_4400": {
      "id": "rel_4400",
      "source_id": "doc_3795",
      "target_id": "concept_3800",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.667934
    },
    "rel_4401": {
      "id": "rel_4401",
      "source_id": "doc_3795",
      "target_id": "concept_2089",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.668274
    },
    "rel_4402": {
      "id": "rel_4402",
      "source_id": "doc_3795",
      "target_id": "concept_3801",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.668792
    },
    "rel_4403": {
      "id": "rel_4403",
      "source_id": "doc_3795",
      "target_id": "concept_3802",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.669291
    },
    "rel_4404": {
      "id": "rel_4404",
      "source_id": "doc_3795",
      "target_id": "concept_3803",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.669827
    },
    "rel_4405": {
      "id": "rel_4405",
      "source_id": "doc_3795",
      "target_id": "concept_2335",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.670186
    },
    "rel_4406": {
      "id": "rel_4406",
      "source_id": "doc_3795",
      "target_id": "concept_3804",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.670759
    },
    "rel_4407": {
      "id": "rel_4407",
      "source_id": "doc_3795",
      "target_id": "concept_3805",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.6714199
    },
    "rel_4408": {
      "id": "rel_4408",
      "source_id": "doc_3795",
      "target_id": "concept_3806",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.671999
    },
    "rel_4409": {
      "id": "rel_4409",
      "source_id": "doc_3795",
      "target_id": "concept_3807",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.672588
    },
    "rel_4410": {
      "id": "rel_4410",
      "source_id": "doc_3795",
      "target_id": "concept_3808",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.6732512
    },
    "rel_4411": {
      "id": "rel_4411",
      "source_id": "doc_3795",
      "target_id": "concept_3809",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.67381
    },
    "rel_4412": {
      "id": "rel_4412",
      "source_id": "doc_3795",
      "target_id": "concept_3810",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.674402
    },
    "rel_4413": {
      "id": "rel_4413",
      "source_id": "doc_3811",
      "target_id": "concept_608",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.6766348
    },
    "rel_4414": {
      "id": "rel_4414",
      "source_id": "doc_3811",
      "target_id": "concept_2262",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.677005
    },
    "rel_4415": {
      "id": "rel_4415",
      "source_id": "doc_3811",
      "target_id": "concept_2450",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.677372
    },
    "rel_4416": {
      "id": "rel_4416",
      "source_id": "doc_3811",
      "target_id": "concept_3796",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.6778839
    },
    "rel_4417": {
      "id": "rel_4417",
      "source_id": "doc_3811",
      "target_id": "concept_2681",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.678269
    },
    "rel_4418": {
      "id": "rel_4418",
      "source_id": "doc_3811",
      "target_id": "concept_3797",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.678775
    },
    "rel_4419": {
      "id": "rel_4419",
      "source_id": "doc_3811",
      "target_id": "concept_2194",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.679115
    },
    "rel_4420": {
      "id": "rel_4420",
      "source_id": "doc_3811",
      "target_id": "concept_3812",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.67961
    },
    "rel_4421": {
      "id": "rel_4421",
      "source_id": "doc_3811",
      "target_id": "concept_3813",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.680125
    },
    "rel_4422": {
      "id": "rel_4422",
      "source_id": "doc_3811",
      "target_id": "concept_3814",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.680631
    },
    "rel_4423": {
      "id": "rel_4423",
      "source_id": "doc_3811",
      "target_id": "concept_2685",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.681081
    },
    "rel_4424": {
      "id": "rel_4424",
      "source_id": "doc_3811",
      "target_id": "concept_3815",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.681792
    },
    "rel_4425": {
      "id": "rel_4425",
      "source_id": "doc_3811",
      "target_id": "concept_2391",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.6822112
    },
    "rel_4426": {
      "id": "rel_4426",
      "source_id": "doc_3811",
      "target_id": "concept_3798",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.682859
    },
    "rel_4427": {
      "id": "rel_4427",
      "source_id": "doc_3811",
      "target_id": "concept_2230",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.683289
    },
    "rel_4428": {
      "id": "rel_4428",
      "source_id": "doc_3811",
      "target_id": "concept_3816",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.683794
    },
    "rel_4429": {
      "id": "rel_4429",
      "source_id": "doc_3811",
      "target_id": "concept_3799",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.684295
    },
    "rel_4430": {
      "id": "rel_4430",
      "source_id": "doc_3811",
      "target_id": "concept_3817",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.684793
    },
    "rel_4431": {
      "id": "rel_4431",
      "source_id": "doc_3811",
      "target_id": "concept_2160",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.685138
    },
    "rel_4432": {
      "id": "rel_4432",
      "source_id": "doc_3811",
      "target_id": "concept_3800",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.685649
    },
    "rel_4433": {
      "id": "rel_4433",
      "source_id": "doc_3811",
      "target_id": "concept_2335",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.686004
    },
    "rel_4434": {
      "id": "rel_4434",
      "source_id": "doc_3811",
      "target_id": "concept_3818",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.686499
    },
    "rel_4435": {
      "id": "rel_4435",
      "source_id": "doc_3811",
      "target_id": "concept_3805",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.687017
    },
    "rel_4436": {
      "id": "rel_4436",
      "source_id": "doc_3811",
      "target_id": "concept_3806",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.687518
    },
    "rel_4437": {
      "id": "rel_4437",
      "source_id": "doc_3811",
      "target_id": "concept_3819",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.6880372
    },
    "rel_4438": {
      "id": "rel_4438",
      "source_id": "doc_3811",
      "target_id": "concept_3807",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.6885839
    },
    "rel_4439": {
      "id": "rel_4439",
      "source_id": "doc_3811",
      "target_id": "concept_3820",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.689111
    },
    "rel_4440": {
      "id": "rel_4440",
      "source_id": "doc_3811",
      "target_id": "concept_3808",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.689624
    },
    "rel_4441": {
      "id": "rel_4441",
      "source_id": "doc_3811",
      "target_id": "concept_3810",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.6901371
    },
    "rel_4442": {
      "id": "rel_4442",
      "source_id": "doc_3821",
      "target_id": "concept_3822",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.695796
    },
    "rel_4443": {
      "id": "rel_4443",
      "source_id": "doc_3821",
      "target_id": "concept_2262",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.6961448
    },
    "rel_4444": {
      "id": "rel_4444",
      "source_id": "doc_3821",
      "target_id": "concept_3823",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.6966689
    },
    "rel_4445": {
      "id": "rel_4445",
      "source_id": "doc_3821",
      "target_id": "concept_3824",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.697207
    },
    "rel_4446": {
      "id": "rel_4446",
      "source_id": "doc_3821",
      "target_id": "concept_3825",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.6977348
    },
    "rel_4447": {
      "id": "rel_4447",
      "source_id": "doc_3821",
      "target_id": "concept_3826",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.6982558
    },
    "rel_4448": {
      "id": "rel_4448",
      "source_id": "doc_3821",
      "target_id": "concept_2301",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.6986141
    },
    "rel_4449": {
      "id": "rel_4449",
      "source_id": "doc_3821",
      "target_id": "concept_3827",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.699183
    },
    "rel_4450": {
      "id": "rel_4450",
      "source_id": "doc_3821",
      "target_id": "concept_3828",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.699733
    },
    "rel_4451": {
      "id": "rel_4451",
      "source_id": "doc_3821",
      "target_id": "concept_3829",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.7002282
    },
    "rel_4452": {
      "id": "rel_4452",
      "source_id": "doc_3821",
      "target_id": "concept_2884",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.700642
    },
    "rel_4453": {
      "id": "rel_4453",
      "source_id": "doc_3821",
      "target_id": "concept_3830",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.7012181
    },
    "rel_4454": {
      "id": "rel_4454",
      "source_id": "doc_3821",
      "target_id": "concept_3831",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.701879
    },
    "rel_4455": {
      "id": "rel_4455",
      "source_id": "doc_3821",
      "target_id": "concept_3832",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.702441
    },
    "rel_4456": {
      "id": "rel_4456",
      "source_id": "doc_3821",
      "target_id": "concept_3833",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.7030241
    },
    "rel_4457": {
      "id": "rel_4457",
      "source_id": "doc_3821",
      "target_id": "concept_3834",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.703701
    },
    "rel_4458": {
      "id": "rel_4458",
      "source_id": "doc_3821",
      "target_id": "concept_3835",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.7042491
    },
    "rel_4459": {
      "id": "rel_4459",
      "source_id": "doc_3821",
      "target_id": "concept_3836",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.7047522
    },
    "rel_4460": {
      "id": "rel_4460",
      "source_id": "doc_3821",
      "target_id": "concept_2243",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.705097
    },
    "rel_4461": {
      "id": "rel_4461",
      "source_id": "doc_3821",
      "target_id": "concept_2286",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.705446
    },
    "rel_4462": {
      "id": "rel_4462",
      "source_id": "doc_3821",
      "target_id": "concept_3837",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.7059672
    },
    "rel_4463": {
      "id": "rel_4463",
      "source_id": "doc_3821",
      "target_id": "concept_3838",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.706492
    },
    "rel_4464": {
      "id": "rel_4464",
      "source_id": "doc_3821",
      "target_id": "concept_3839",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.70708
    },
    "rel_4465": {
      "id": "rel_4465",
      "source_id": "doc_3821",
      "target_id": "concept_3840",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.7076359
    },
    "rel_4466": {
      "id": "rel_4466",
      "source_id": "doc_3821",
      "target_id": "concept_3841",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.708161
    },
    "rel_4467": {
      "id": "rel_4467",
      "source_id": "doc_3821",
      "target_id": "concept_2153",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.708501
    },
    "rel_4468": {
      "id": "rel_4468",
      "source_id": "doc_3821",
      "target_id": "concept_3842",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.709207
    },
    "rel_4469": {
      "id": "rel_4469",
      "source_id": "doc_3821",
      "target_id": "concept_3843",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.709708
    },
    "rel_4470": {
      "id": "rel_4470",
      "source_id": "doc_3821",
      "target_id": "concept_2391",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.710065
    },
    "rel_4471": {
      "id": "rel_4471",
      "source_id": "doc_3821",
      "target_id": "concept_3844",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.7105868
    },
    "rel_4472": {
      "id": "rel_4472",
      "source_id": "doc_3821",
      "target_id": "concept_3845",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.7111092
    },
    "rel_4473": {
      "id": "rel_4473",
      "source_id": "doc_3821",
      "target_id": "concept_2075",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.711576
    },
    "rel_4474": {
      "id": "rel_4474",
      "source_id": "doc_3821",
      "target_id": "concept_3846",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.71223
    },
    "rel_4475": {
      "id": "rel_4475",
      "source_id": "doc_3821",
      "target_id": "concept_2202",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.7126558
    },
    "rel_4476": {
      "id": "rel_4476",
      "source_id": "doc_3821",
      "target_id": "concept_3847",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.713273
    },
    "rel_4477": {
      "id": "rel_4477",
      "source_id": "doc_3821",
      "target_id": "concept_3848",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.713768
    },
    "rel_4478": {
      "id": "rel_4478",
      "source_id": "doc_3821",
      "target_id": "concept_2230",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.714122
    },
    "rel_4479": {
      "id": "rel_4479",
      "source_id": "doc_3821",
      "target_id": "concept_2332",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.7144818
    },
    "rel_4480": {
      "id": "rel_4480",
      "source_id": "doc_3821",
      "target_id": "concept_3849",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.715446
    },
    "rel_4481": {
      "id": "rel_4481",
      "source_id": "doc_3821",
      "target_id": "concept_2672",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.7158551
    },
    "rel_4482": {
      "id": "rel_4482",
      "source_id": "doc_3821",
      "target_id": "concept_3850",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.716377
    },
    "rel_4483": {
      "id": "rel_4483",
      "source_id": "doc_3821",
      "target_id": "concept_3851",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.716908
    },
    "rel_4484": {
      "id": "rel_4484",
      "source_id": "doc_3821",
      "target_id": "concept_3852",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.717428
    },
    "rel_4485": {
      "id": "rel_4485",
      "source_id": "doc_3821",
      "target_id": "concept_3853",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.717939
    },
    "rel_4486": {
      "id": "rel_4486",
      "source_id": "doc_3821",
      "target_id": "concept_3854",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.7184489
    },
    "rel_4487": {
      "id": "rel_4487",
      "source_id": "doc_3821",
      "target_id": "concept_2398",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.71881
    },
    "rel_4488": {
      "id": "rel_4488",
      "source_id": "doc_3821",
      "target_id": "concept_3855",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.7193239
    },
    "rel_4489": {
      "id": "rel_4489",
      "source_id": "doc_3821",
      "target_id": "concept_3856",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.7198532
    },
    "rel_4490": {
      "id": "rel_4490",
      "source_id": "doc_3821",
      "target_id": "concept_3857",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.720387
    },
    "rel_4491": {
      "id": "rel_4491",
      "source_id": "doc_3821",
      "target_id": "concept_3858",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.7211819
    },
    "rel_4492": {
      "id": "rel_4492",
      "source_id": "doc_3821",
      "target_id": "concept_2335",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.721704
    },
    "rel_4493": {
      "id": "rel_4493",
      "source_id": "doc_3821",
      "target_id": "concept_3859",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.722306
    },
    "rel_4494": {
      "id": "rel_4494",
      "source_id": "doc_3821",
      "target_id": "concept_2097",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.722655
    },
    "rel_4495": {
      "id": "rel_4495",
      "source_id": "doc_3821",
      "target_id": "concept_3860",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.723242
    },
    "rel_4496": {
      "id": "rel_4496",
      "source_id": "doc_3821",
      "target_id": "concept_3861",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.723849
    },
    "rel_4497": {
      "id": "rel_4497",
      "source_id": "doc_3821",
      "target_id": "concept_3862",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.724353
    },
    "rel_4498": {
      "id": "rel_4498",
      "source_id": "doc_3821",
      "target_id": "concept_3863",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.7248828
    },
    "rel_4499": {
      "id": "rel_4499",
      "source_id": "doc_3821",
      "target_id": "concept_475",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.7249799
    },
    "rel_4500": {
      "id": "rel_4500",
      "source_id": "doc_3821",
      "target_id": "concept_2103",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.725316
    },
    "rel_4501": {
      "id": "rel_4501",
      "source_id": "doc_3821",
      "target_id": "concept_2446",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.7256901
    },
    "rel_4502": {
      "id": "rel_4502",
      "source_id": "doc_3821",
      "target_id": "concept_3864",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.726209
    },
    "rel_4503": {
      "id": "rel_4503",
      "source_id": "doc_3821",
      "target_id": "concept_3865",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.7267468
    },
    "rel_4504": {
      "id": "rel_4504",
      "source_id": "doc_3821",
      "target_id": "concept_3866",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.727262
    },
    "rel_4505": {
      "id": "rel_4505",
      "source_id": "doc_3821",
      "target_id": "concept_3867",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.727791
    },
    "rel_4506": {
      "id": "rel_4506",
      "source_id": "doc_3821",
      "target_id": "concept_2580",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.728169
    },
    "rel_4507": {
      "id": "rel_4507",
      "source_id": "doc_3821",
      "target_id": "concept_3868",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.728689
    },
    "rel_4508": {
      "id": "rel_4508",
      "source_id": "doc_3821",
      "target_id": "concept_2419",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.7290509
    },
    "rel_4509": {
      "id": "rel_4509",
      "source_id": "doc_3869",
      "target_id": "concept_3870",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.73391
    },
    "rel_4510": {
      "id": "rel_4510",
      "source_id": "doc_3869",
      "target_id": "concept_3871",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.734423
    },
    "rel_4511": {
      "id": "rel_4511",
      "source_id": "doc_3869",
      "target_id": "concept_3872",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.73498
    },
    "rel_4512": {
      "id": "rel_4512",
      "source_id": "doc_3869",
      "target_id": "concept_3873",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.7354932
    },
    "rel_4513": {
      "id": "rel_4513",
      "source_id": "doc_3869",
      "target_id": "concept_3827",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.7360792
    },
    "rel_4514": {
      "id": "rel_4514",
      "source_id": "doc_3869",
      "target_id": "concept_3874",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.736608
    },
    "rel_4515": {
      "id": "rel_4515",
      "source_id": "doc_3869",
      "target_id": "concept_3829",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.737118
    },
    "rel_4516": {
      "id": "rel_4516",
      "source_id": "doc_3869",
      "target_id": "concept_3875",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.7376509
    },
    "rel_4517": {
      "id": "rel_4517",
      "source_id": "doc_3869",
      "target_id": "concept_2286",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.7380009
    },
    "rel_4518": {
      "id": "rel_4518",
      "source_id": "doc_3869",
      "target_id": "concept_3837",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.738542
    },
    "rel_4519": {
      "id": "rel_4519",
      "source_id": "doc_3869",
      "target_id": "concept_2391",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.7389
    },
    "rel_4520": {
      "id": "rel_4520",
      "source_id": "doc_3869",
      "target_id": "concept_2230",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.7392561
    },
    "rel_4521": {
      "id": "rel_4521",
      "source_id": "doc_3869",
      "target_id": "concept_3846",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.7397602
    },
    "rel_4522": {
      "id": "rel_4522",
      "source_id": "doc_3869",
      "target_id": "concept_3876",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.740282
    },
    "rel_4523": {
      "id": "rel_4523",
      "source_id": "doc_3869",
      "target_id": "concept_3877",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.740928
    },
    "rel_4524": {
      "id": "rel_4524",
      "source_id": "doc_3869",
      "target_id": "concept_2394",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.741469
    },
    "rel_4525": {
      "id": "rel_4525",
      "source_id": "doc_3869",
      "target_id": "concept_3878",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.7421079
    },
    "rel_4526": {
      "id": "rel_4526",
      "source_id": "doc_3869",
      "target_id": "concept_3859",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.742707
    },
    "rel_4527": {
      "id": "rel_4527",
      "source_id": "doc_3869",
      "target_id": "concept_2097",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.743059
    },
    "rel_4528": {
      "id": "rel_4528",
      "source_id": "doc_3869",
      "target_id": "concept_3879",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.743567
    },
    "rel_4529": {
      "id": "rel_4529",
      "source_id": "doc_3869",
      "target_id": "concept_3862",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.744071
    },
    "rel_4530": {
      "id": "rel_4530",
      "source_id": "doc_3869",
      "target_id": "concept_2103",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.744412
    },
    "rel_4531": {
      "id": "rel_4531",
      "source_id": "doc_3869",
      "target_id": "concept_3864",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.744938
    },
    "rel_4532": {
      "id": "rel_4532",
      "source_id": "doc_3869",
      "target_id": "concept_3867",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.7454998
    },
    "rel_4533": {
      "id": "rel_4533",
      "source_id": "doc_3869",
      "target_id": "concept_2301",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.745862
    },
    "rel_4534": {
      "id": "rel_4534",
      "source_id": "doc_3869",
      "target_id": "concept_2113",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.7461991
    },
    "rel_4535": {
      "id": "rel_4535",
      "source_id": "doc_3869",
      "target_id": "concept_3880",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.746737
    },
    "rel_4536": {
      "id": "rel_4536",
      "source_id": "doc_3869",
      "target_id": "concept_3881",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.747251
    },
    "rel_4537": {
      "id": "rel_4537",
      "source_id": "doc_3869",
      "target_id": "concept_2243",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.7475998
    },
    "rel_4538": {
      "id": "rel_4538",
      "source_id": "doc_3869",
      "target_id": "concept_3882",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.7481349
    },
    "rel_4539": {
      "id": "rel_4539",
      "source_id": "doc_3869",
      "target_id": "concept_3840",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.748661
    },
    "rel_4540": {
      "id": "rel_4540",
      "source_id": "doc_3869",
      "target_id": "concept_3883",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.750803
    },
    "rel_4541": {
      "id": "rel_4541",
      "source_id": "doc_3869",
      "target_id": "concept_3884",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.7514849
    },
    "rel_4542": {
      "id": "rel_4542",
      "source_id": "doc_3869",
      "target_id": "concept_2947",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.751956
    },
    "rel_4543": {
      "id": "rel_4543",
      "source_id": "doc_3869",
      "target_id": "concept_3848",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.7525692
    },
    "rel_4544": {
      "id": "rel_4544",
      "source_id": "doc_3869",
      "target_id": "concept_2398",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.752958
    },
    "rel_4545": {
      "id": "rel_4545",
      "source_id": "doc_3869",
      "target_id": "concept_3885",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.753519
    },
    "rel_4546": {
      "id": "rel_4546",
      "source_id": "doc_3869",
      "target_id": "concept_3857",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.754068
    },
    "rel_4547": {
      "id": "rel_4547",
      "source_id": "doc_3869",
      "target_id": "concept_3886",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.754591
    },
    "rel_4548": {
      "id": "rel_4548",
      "source_id": "doc_3869",
      "target_id": "concept_3887",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.7551339
    },
    "rel_4549": {
      "id": "rel_4549",
      "source_id": "doc_3869",
      "target_id": "concept_3888",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.75573
    },
    "rel_4550": {
      "id": "rel_4550",
      "source_id": "doc_3869",
      "target_id": "concept_3889",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.756278
    },
    "rel_4551": {
      "id": "rel_4551",
      "source_id": "doc_3869",
      "target_id": "concept_3861",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.7568169
    },
    "rel_4552": {
      "id": "rel_4552",
      "source_id": "doc_3869",
      "target_id": "concept_2446",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.757184
    },
    "rel_4553": {
      "id": "rel_4553",
      "source_id": "doc_3869",
      "target_id": "concept_3890",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.758085
    },
    "rel_4554": {
      "id": "rel_4554",
      "source_id": "doc_3869",
      "target_id": "concept_2580",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.7584698
    },
    "rel_4555": {
      "id": "rel_4555",
      "source_id": "doc_3869",
      "target_id": "concept_3868",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.758993
    },
    "rel_4556": {
      "id": "rel_4556",
      "source_id": "doc_3869",
      "target_id": "concept_3891",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.759511
    },
    "rel_4557": {
      "id": "rel_4557",
      "source_id": "doc_3869",
      "target_id": "concept_3892",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.760025
    },
    "rel_4558": {
      "id": "rel_4558",
      "source_id": "doc_3869",
      "target_id": "concept_3826",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.760538
    },
    "rel_4559": {
      "id": "rel_4559",
      "source_id": "doc_3869",
      "target_id": "concept_3893",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.7610729
    },
    "rel_4560": {
      "id": "rel_4560",
      "source_id": "doc_3869",
      "target_id": "concept_3894",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.761597
    },
    "rel_4561": {
      "id": "rel_4561",
      "source_id": "doc_3869",
      "target_id": "concept_3895",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.762143
    },
    "rel_4562": {
      "id": "rel_4562",
      "source_id": "doc_3869",
      "target_id": "concept_3896",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.7626922
    },
    "rel_4563": {
      "id": "rel_4563",
      "source_id": "doc_3869",
      "target_id": "concept_3832",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.763194
    },
    "rel_4564": {
      "id": "rel_4564",
      "source_id": "doc_3869",
      "target_id": "concept_3897",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.763725
    },
    "rel_4565": {
      "id": "rel_4565",
      "source_id": "doc_3869",
      "target_id": "concept_3898",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.764263
    },
    "rel_4566": {
      "id": "rel_4566",
      "source_id": "doc_3869",
      "target_id": "concept_2153",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.7646148
    },
    "rel_4567": {
      "id": "rel_4567",
      "source_id": "doc_3869",
      "target_id": "concept_3899",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.765169
    },
    "rel_4568": {
      "id": "rel_4568",
      "source_id": "doc_3869",
      "target_id": "concept_3900",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.765733
    },
    "rel_4569": {
      "id": "rel_4569",
      "source_id": "doc_3869",
      "target_id": "concept_2075",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.766091
    },
    "rel_4570": {
      "id": "rel_4570",
      "source_id": "doc_3869",
      "target_id": "concept_3901",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.766594
    },
    "rel_4571": {
      "id": "rel_4571",
      "source_id": "doc_3869",
      "target_id": "concept_2332",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.766948
    },
    "rel_4572": {
      "id": "rel_4572",
      "source_id": "doc_3869",
      "target_id": "concept_2672",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.76734
    },
    "rel_4573": {
      "id": "rel_4573",
      "source_id": "doc_3869",
      "target_id": "concept_3854",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.7678568
    },
    "rel_4574": {
      "id": "rel_4574",
      "source_id": "doc_3869",
      "target_id": "concept_3856",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.768388
    },
    "rel_4575": {
      "id": "rel_4575",
      "source_id": "doc_3869",
      "target_id": "concept_3902",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.7689102
    },
    "rel_4576": {
      "id": "rel_4576",
      "source_id": "doc_3869",
      "target_id": "concept_3903",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.769435
    },
    "rel_4577": {
      "id": "rel_4577",
      "source_id": "doc_3869",
      "target_id": "concept_2335",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.7697961
    },
    "rel_4578": {
      "id": "rel_4578",
      "source_id": "doc_3869",
      "target_id": "concept_3904",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.77031
    },
    "rel_4579": {
      "id": "rel_4579",
      "source_id": "doc_3869",
      "target_id": "concept_3905",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.7708328
    },
    "rel_4580": {
      "id": "rel_4580",
      "source_id": "doc_3869",
      "target_id": "concept_475",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.7709281
    },
    "rel_4581": {
      "id": "rel_4581",
      "source_id": "doc_3869",
      "target_id": "concept_3906",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.771452
    },
    "rel_4582": {
      "id": "rel_4582",
      "source_id": "doc_3869",
      "target_id": "concept_3907",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.7719831
    },
    "rel_4583": {
      "id": "rel_4583",
      "source_id": "doc_3869",
      "target_id": "concept_3908",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.772651
    },
    "rel_4584": {
      "id": "rel_4584",
      "source_id": "doc_3869",
      "target_id": "concept_3909",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.773432
    },
    "rel_4585": {
      "id": "rel_4585",
      "source_id": "doc_3869",
      "target_id": "concept_3910",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.7740211
    },
    "rel_4586": {
      "id": "rel_4586",
      "source_id": "doc_3869",
      "target_id": "concept_2419",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.774406
    },
    "rel_4587": {
      "id": "rel_4587",
      "source_id": "doc_3869",
      "target_id": "concept_2262",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.7747588
    },
    "rel_4588": {
      "id": "rel_4588",
      "source_id": "doc_3869",
      "target_id": "concept_3911",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.775302
    },
    "rel_4589": {
      "id": "rel_4589",
      "source_id": "doc_3869",
      "target_id": "concept_3912",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.7758331
    },
    "rel_4590": {
      "id": "rel_4590",
      "source_id": "doc_3869",
      "target_id": "concept_3913",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.7763488
    },
    "rel_4591": {
      "id": "rel_4591",
      "source_id": "doc_3869",
      "target_id": "concept_3914",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.776893
    },
    "rel_4592": {
      "id": "rel_4592",
      "source_id": "doc_3869",
      "target_id": "concept_2884",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.7773051
    },
    "rel_4593": {
      "id": "rel_4593",
      "source_id": "doc_3869",
      "target_id": "concept_3915",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.777844
    },
    "rel_4594": {
      "id": "rel_4594",
      "source_id": "doc_3869",
      "target_id": "concept_3916",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.7783601
    },
    "rel_4595": {
      "id": "rel_4595",
      "source_id": "doc_3869",
      "target_id": "concept_3831",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.7788632
    },
    "rel_4596": {
      "id": "rel_4596",
      "source_id": "doc_3869",
      "target_id": "concept_3917",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.779383
    },
    "rel_4597": {
      "id": "rel_4597",
      "source_id": "doc_3869",
      "target_id": "concept_3836",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.7799082
    },
    "rel_4598": {
      "id": "rel_4598",
      "source_id": "doc_3869",
      "target_id": "concept_3918",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.780432
    },
    "rel_4599": {
      "id": "rel_4599",
      "source_id": "doc_3869",
      "target_id": "concept_3842",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.781177
    },
    "rel_4600": {
      "id": "rel_4600",
      "source_id": "doc_3869",
      "target_id": "concept_3843",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.781713
    },
    "rel_4601": {
      "id": "rel_4601",
      "source_id": "doc_3869",
      "target_id": "concept_3919",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.782235
    },
    "rel_4602": {
      "id": "rel_4602",
      "source_id": "doc_3869",
      "target_id": "concept_3920",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.782987
    },
    "rel_4603": {
      "id": "rel_4603",
      "source_id": "doc_3869",
      "target_id": "concept_2202",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.7834291
    },
    "rel_4604": {
      "id": "rel_4604",
      "source_id": "doc_3869",
      "target_id": "concept_3921",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.78401
    },
    "rel_4605": {
      "id": "rel_4605",
      "source_id": "doc_3869",
      "target_id": "concept_3922",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.7845829
    },
    "rel_4606": {
      "id": "rel_4606",
      "source_id": "doc_3869",
      "target_id": "concept_2470",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.785053
    },
    "rel_4607": {
      "id": "rel_4607",
      "source_id": "doc_3869",
      "target_id": "concept_3923",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.78607
    },
    "rel_4608": {
      "id": "rel_4608",
      "source_id": "doc_3869",
      "target_id": "concept_3924",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.786655
    },
    "rel_4609": {
      "id": "rel_4609",
      "source_id": "doc_3869",
      "target_id": "concept_3925",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.787342
    },
    "rel_4610": {
      "id": "rel_4610",
      "source_id": "doc_3869",
      "target_id": "concept_3926",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.787901
    },
    "rel_4611": {
      "id": "rel_4611",
      "source_id": "doc_3869",
      "target_id": "concept_3866",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.788418
    },
    "rel_4612": {
      "id": "rel_4612",
      "source_id": "doc_3869",
      "target_id": "concept_3927",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.788946
    },
    "rel_4613": {
      "id": "rel_4613",
      "source_id": "doc_3928",
      "target_id": "concept_2262",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.790515
    },
    "rel_4614": {
      "id": "rel_4614",
      "source_id": "doc_3928",
      "target_id": "concept_2113",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.790852
    },
    "rel_4615": {
      "id": "rel_4615",
      "source_id": "doc_3928",
      "target_id": "concept_3929",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.791389
    },
    "rel_4616": {
      "id": "rel_4616",
      "source_id": "doc_3928",
      "target_id": "concept_3930",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.791902
    },
    "rel_4617": {
      "id": "rel_4617",
      "source_id": "doc_3928",
      "target_id": "concept_3931",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.792435
    },
    "rel_4618": {
      "id": "rel_4618",
      "source_id": "doc_3928",
      "target_id": "concept_2243",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.792937
    },
    "rel_4619": {
      "id": "rel_4619",
      "source_id": "doc_3928",
      "target_id": "concept_3932",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.793567
    },
    "rel_4620": {
      "id": "rel_4620",
      "source_id": "doc_3928",
      "target_id": "concept_2685",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.7939699
    },
    "rel_4621": {
      "id": "rel_4621",
      "source_id": "doc_3928",
      "target_id": "concept_2230",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.7943292
    },
    "rel_4622": {
      "id": "rel_4622",
      "source_id": "doc_3928",
      "target_id": "concept_2947",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.79474
    },
    "rel_4623": {
      "id": "rel_4623",
      "source_id": "doc_3928",
      "target_id": "concept_3799",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.795242
    },
    "rel_4624": {
      "id": "rel_4624",
      "source_id": "doc_3928",
      "target_id": "concept_2160",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.7955909
    },
    "rel_4625": {
      "id": "rel_4625",
      "source_id": "doc_3928",
      "target_id": "concept_3933",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.796119
    },
    "rel_4626": {
      "id": "rel_4626",
      "source_id": "doc_3928",
      "target_id": "concept_2394",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.796478
    },
    "rel_4627": {
      "id": "rel_4627",
      "source_id": "doc_3928",
      "target_id": "concept_3934",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.79702
    },
    "rel_4628": {
      "id": "rel_4628",
      "source_id": "doc_3928",
      "target_id": "concept_3935",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.797538
    },
    "rel_4629": {
      "id": "rel_4629",
      "source_id": "doc_3928",
      "target_id": "concept_3903",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.7980642
    },
    "rel_4630": {
      "id": "rel_4630",
      "source_id": "doc_3928",
      "target_id": "concept_3904",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.798605
    },
    "rel_4631": {
      "id": "rel_4631",
      "source_id": "doc_3928",
      "target_id": "concept_3936",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.7991512
    },
    "rel_4632": {
      "id": "rel_4632",
      "source_id": "doc_3937",
      "target_id": "concept_3938",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.80078
    },
    "rel_4633": {
      "id": "rel_4633",
      "source_id": "doc_3937",
      "target_id": "concept_3395",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.801249
    },
    "rel_4634": {
      "id": "rel_4634",
      "source_id": "doc_3937",
      "target_id": "concept_2262",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.801604
    },
    "rel_4635": {
      "id": "rel_4635",
      "source_id": "doc_3937",
      "target_id": "concept_2422",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.8019688
    },
    "rel_4636": {
      "id": "rel_4636",
      "source_id": "doc_3937",
      "target_id": "concept_3939",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.802513
    },
    "rel_4637": {
      "id": "rel_4637",
      "source_id": "doc_3937",
      "target_id": "concept_2185",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.803118
    },
    "rel_4638": {
      "id": "rel_4638",
      "source_id": "doc_3937",
      "target_id": "concept_2681",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.803592
    },
    "rel_4639": {
      "id": "rel_4639",
      "source_id": "doc_3937",
      "target_id": "concept_2465",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.804012
    },
    "rel_4640": {
      "id": "rel_4640",
      "source_id": "doc_3937",
      "target_id": "concept_3940",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.804651
    },
    "rel_4641": {
      "id": "rel_4641",
      "source_id": "doc_3937",
      "target_id": "concept_3941",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.805182
    },
    "rel_4642": {
      "id": "rel_4642",
      "source_id": "doc_3937",
      "target_id": "concept_2500",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.805553
    },
    "rel_4643": {
      "id": "rel_4643",
      "source_id": "doc_3937",
      "target_id": "concept_2685",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.805938
    },
    "rel_4644": {
      "id": "rel_4644",
      "source_id": "doc_3937",
      "target_id": "concept_2154",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.806317
    },
    "rel_4645": {
      "id": "rel_4645",
      "source_id": "doc_3937",
      "target_id": "concept_3942",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.806879
    },
    "rel_4646": {
      "id": "rel_4646",
      "source_id": "doc_3937",
      "target_id": "concept_2230",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.8073962
    },
    "rel_4647": {
      "id": "rel_4647",
      "source_id": "doc_3937",
      "target_id": "concept_2085",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.8078249
    },
    "rel_4648": {
      "id": "rel_4648",
      "source_id": "doc_3937",
      "target_id": "concept_3943",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.808501
    },
    "rel_4649": {
      "id": "rel_4649",
      "source_id": "doc_3937",
      "target_id": "concept_2093",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.8089
    },
    "rel_4650": {
      "id": "rel_4650",
      "source_id": "doc_3937",
      "target_id": "concept_3944",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.809505
    },
    "rel_4651": {
      "id": "rel_4651",
      "source_id": "doc_3937",
      "target_id": "concept_3945",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.8100932
    },
    "rel_4652": {
      "id": "rel_4652",
      "source_id": "doc_3937",
      "target_id": "concept_2427",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.810504
    },
    "rel_4653": {
      "id": "rel_4653",
      "source_id": "doc_3937",
      "target_id": "concept_3318",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.81108
    },
    "rel_4654": {
      "id": "rel_4654",
      "source_id": "doc_3937",
      "target_id": "concept_2428",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.811454
    },
    "rel_4655": {
      "id": "rel_4655",
      "source_id": "doc_3937",
      "target_id": "concept_3946",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.811978
    },
    "rel_4656": {
      "id": "rel_4656",
      "source_id": "doc_3937",
      "target_id": "concept_3947",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.812494
    },
    "rel_4657": {
      "id": "rel_4657",
      "source_id": "doc_3937",
      "target_id": "concept_3948",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.813184
    },
    "rel_4658": {
      "id": "rel_4658",
      "source_id": "doc_3937",
      "target_id": "concept_3949",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.813801
    },
    "rel_4659": {
      "id": "rel_4659",
      "source_id": "doc_3937",
      "target_id": "concept_3950",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.81433
    },
    "rel_4660": {
      "id": "rel_4660",
      "source_id": "doc_3937",
      "target_id": "concept_3951",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.814962
    },
    "rel_4661": {
      "id": "rel_4661",
      "source_id": "doc_3937",
      "target_id": "concept_3952",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.81568
    },
    "rel_4662": {
      "id": "rel_4662",
      "source_id": "doc_3937",
      "target_id": "concept_3953",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.816309
    },
    "rel_4663": {
      "id": "rel_4663",
      "source_id": "doc_3937",
      "target_id": "concept_3954",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.81687
    },
    "rel_4664": {
      "id": "rel_4664",
      "source_id": "doc_3937",
      "target_id": "concept_3955",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.817416
    },
    "rel_4665": {
      "id": "rel_4665",
      "source_id": "doc_3956",
      "target_id": "concept_3395",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.818976
    },
    "rel_4666": {
      "id": "rel_4666",
      "source_id": "doc_3956",
      "target_id": "concept_3957",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.819499
    },
    "rel_4667": {
      "id": "rel_4667",
      "source_id": "doc_3956",
      "target_id": "concept_3958",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.820024
    },
    "rel_4668": {
      "id": "rel_4668",
      "source_id": "doc_3956",
      "target_id": "concept_3959",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.82063
    },
    "rel_4669": {
      "id": "rel_4669",
      "source_id": "doc_3956",
      "target_id": "concept_3960",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.821183
    },
    "rel_4670": {
      "id": "rel_4670",
      "source_id": "doc_3956",
      "target_id": "concept_3961",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.821697
    },
    "rel_4671": {
      "id": "rel_4671",
      "source_id": "doc_3956",
      "target_id": "concept_2194",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.82204
    },
    "rel_4672": {
      "id": "rel_4672",
      "source_id": "doc_3956",
      "target_id": "concept_3962",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.822565
    },
    "rel_4673": {
      "id": "rel_4673",
      "source_id": "doc_3956",
      "target_id": "concept_2195",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.823057
    },
    "rel_4674": {
      "id": "rel_4674",
      "source_id": "doc_3956",
      "target_id": "concept_3963",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.823854
    },
    "rel_4675": {
      "id": "rel_4675",
      "source_id": "doc_3956",
      "target_id": "concept_3964",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.824415
    },
    "rel_4676": {
      "id": "rel_4676",
      "source_id": "doc_3956",
      "target_id": "concept_2153",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.82478
    },
    "rel_4677": {
      "id": "rel_4677",
      "source_id": "doc_3956",
      "target_id": "concept_3965",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.825344
    },
    "rel_4678": {
      "id": "rel_4678",
      "source_id": "doc_3956",
      "target_id": "concept_2075",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.825679
    },
    "rel_4679": {
      "id": "rel_4679",
      "source_id": "doc_3956",
      "target_id": "concept_2230",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.826041
    },
    "rel_4680": {
      "id": "rel_4680",
      "source_id": "doc_3956",
      "target_id": "concept_3966",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.8265688
    },
    "rel_4681": {
      "id": "rel_4681",
      "source_id": "doc_3956",
      "target_id": "concept_2097",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.826907
    },
    "rel_4682": {
      "id": "rel_4682",
      "source_id": "doc_3956",
      "target_id": "concept_3318",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.8273568
    },
    "rel_4683": {
      "id": "rel_4683",
      "source_id": "doc_3956",
      "target_id": "concept_3967",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.827897
    },
    "rel_4684": {
      "id": "rel_4684",
      "source_id": "doc_3956",
      "target_id": "concept_3947",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.8284109
    },
    "rel_4685": {
      "id": "rel_4685",
      "source_id": "doc_3956",
      "target_id": "concept_475",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.828506
    },
    "rel_4686": {
      "id": "rel_4686",
      "source_id": "doc_3956",
      "target_id": "concept_2103",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.828852
    },
    "rel_4687": {
      "id": "rel_4687",
      "source_id": "doc_3956",
      "target_id": "concept_3968",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.829395
    },
    "rel_4688": {
      "id": "rel_4688",
      "source_id": "doc_3956",
      "target_id": "concept_3969",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.829947
    },
    "rel_4689": {
      "id": "rel_4689",
      "source_id": "doc_3956",
      "target_id": "concept_3970",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.8304691
    },
    "rel_4690": {
      "id": "rel_4690",
      "source_id": "doc_3956",
      "target_id": "concept_3971",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.831039
    },
    "rel_4691": {
      "id": "rel_4691",
      "source_id": "doc_3956",
      "target_id": "concept_3972",
      "relationship_type": "contains",
      "strength": 0.8,
      "metadata": {},
      "created_at": 1754957552.8316128
    }
  },
  "concepts": {
    "CLEANUP_COMPLETE.md": [
      "1. **cleanup_project.py** (One-time use)",
      "bash\n# Edit crontab\ncrontab -e\n\n# Add this line for Monday at 9 AM\n0 9 * * 1 cd /path/to/your/project && ./scripts/maintain.sh",
      ".pyc/.pyo",
      "bash\n# Run maintenance script\npython3 scripts/maintain_project.py\n\n# Or use the shell wrapper\n./scripts/maintain.sh",
      "\u274c Python cache files cluttering the project",
      "### \ud83d\udee0\ufe0f New Maintenance Tools\n\n#### 1. **cleanup_project.py** (One-time use)\n\n- Removes Python cache files\n- Consolidates Docker configurations\n- Organizes documentation\n- Creates clean project structure\n\n#### 2. **maintain_project.py** (Regular use)\n\n- Checks for new cache files\n- Verifies directory structure\n- Monitors documentation organization\n- Generates maintenance reports\n\n#### 3. **maintain.sh** (Shell wrapper)\n\n- Easy-to-use shell script\n- Automatically detects Python version\n- Can be added to crontab for automation\n\n## \ud83d\ude80 How to Use Going Forward\n\n### Regular Maintenance",
      "\u274c Difficult to maintain",
      "Before Cleanup",
      "Monitors documentation organization",
      "Or use the shell wrapper",
      "- Regular maintenance script\n-",
      "Can be added to crontab for automation",
      "Checks for new cache files",
      "**Scripts**: Place in `scripts/` directory",
      "directory\n- **Scripts**: Place in",
      "Automatically detects Python version",
      "3. **maintain.sh** (Shell wrapper)",
      "Regular Maintenance",
      "- One-time cleanup script\n-",
      "\u2705 **Maintenance tools added** - Scripts to keep the project organized going forward",
      "memory-context-manager_v2/\n\u251c\u2500\u2500 \ud83d\udcc1 docs/                    # All documentation organized here\n\u251c\u2500\u2500 \ud83d\udcc1 scripts/                 # Maintenance and utility scripts\n\u2502   \u251c\u2500\u2500 cleanup_project.py      # One-time cleanup script\n\u2502   \u2514\u2500\u2500 maintain_project.py     # Regular maintenance script\n\u251c\u2500\u2500 \ud83d\udcc1 tests/                   # Test files and suites\n\u251c\u2500\u2500 \ud83d\udcc1 config/                  # Configuration files\n\u251c\u2500\u2500 \ud83d\udcc1 plugins/                 # Plugin system (existing)\n\u251c\u2500\u2500 \ud83d\udcc1 database/                # Database components (existing)\n\u251c\u2500\u2500 \ud83d\udcc1 src/                     # Source code (existing)\n\u251c\u2500\u2500 \ud83d\udcc1 brain_memory_store/      # Brain memory storage (existing)\n\u251c\u2500\u2500 \ud83d\udc33 docker-compose.yml       # Single, optimized Docker config\n\u251c\u2500\u2500 \ud83d\udc33 Dockerfile               # Production-ready container\n\u251c\u2500\u2500 \ud83d\udcd6 README.md                # Main project documentation\n\u251c\u2500\u2500 \ud83d\udce6 pyproject.toml           # Project configuration\n\u2514\u2500\u2500 \ud83d\udd27 .cursorrules             # Cursor IDE configuration",
      "\u2705 Maintenance tools for ongoing organization",
      "Adding New Files",
      "\u274c No clear organization structure",
      "directory\n- **Configs**: Place in",
      "docs/",
      "Consolidates Docker configurations",
      "Dockerfile",
      "directory\n- \u2705 Clean project structure with clear purposes\n- \u2705 Maintenance tools for ongoing organization\n- \u2705 Easy to navigate and maintain\n\n## \ud83c\udfaf Benefits of the Cleanup\n\n1. **Better Organization** - Clear separation of concerns\n2. **Easier Maintenance** - Automated tools to keep things clean\n3. **Improved Development** - Faster to find what you need\n4. **Professional Appearance** - Clean, organized codebase\n5. **Team Collaboration** - Clear structure for multiple developers\n\n## \ud83d\udd2e Future Recommendations\n\n1. **Run maintenance weekly** - Keep the project organized\n2. **Follow the structure** - Place new files in appropriate directories\n3. **Update documentation** - Keep docs current with code changes\n4. **Use the tools** - Leverage the maintenance scripts\n5. **Share the structure** - Help team members understand the organization\n\n## \ud83d\udcdd Files Created During Cleanup\n\n-",
      "Automatic Maintenance (Optional)",
      "### Adding New Files\n\n- **Documentation**: Place in",
      "`PROJECT_ORGANIZATION.md` - Organization guidelines",
      "\ud83d\udee0\ufe0f New Maintenance Tools",
      "Run maintenance script",
      "Easy-to-use shell script",
      "- Detailed cleanup process\n-",
      "Verifies directory structure",
      "\u2705 Easy to navigate and maintain",
      "\u2705 **Python cache files removed** - All `__pycache__/` directories and `.pyc/.pyo` files cleaned up",
      "\ud83e\uddf9 Cleanup Actions",
      "**Documentation**: Place in `docs/` directory",
      "What Was Accomplished",
      "**Tests**: Place in `tests/` directory",
      "- Organization guidelines\n-",
      "- This summary document\n-",
      "Removes Python cache files",
      "directory\n\n## \ud83d\udcca Before vs After\n\n### Before Cleanup\n\n- \u274c Multiple Docker configurations (confusing)\n- \u274c Documentation scattered in root directory\n- \u274c Python cache files cluttering the project\n- \u274c No clear organization structure\n- \u274c Difficult to maintain\n\n### After Cleanup\n\n- \u2705 Single, optimized Docker configuration\n- \u2705 All documentation organized in",
      "`CLEANUP_SUMMARY.md` - Detailed cleanup process",
      "\u2705 **Docker files consolidated** - Removed duplicate configurations, kept main `docker-compose.yml` and `Dockerfile`",
      "\ud83d\udcca Before vs After",
      "After Cleanup",
      "\u2705 Single, optimized Docker configuration",
      "2. **maintain_project.py** (Regular use)",
      "\u2705 Clean project structure with clear purposes",
      "docker-compose.yml",
      "\u274c Documentation scattered in root directory",
      "\u274c Multiple Docker configurations (confusing)",
      "`scripts/cleanup_project.py` - One-time cleanup script",
      "Edit crontab",
      "Generates maintenance reports",
      "directory\n- **Tests**: Place in",
      "\ud83d\ude80 How to Use Going Forward",
      "\ud83d\udcc1 New Project Structure",
      "\ud83d\udcdd Files Created During Cleanup",
      "`scripts/maintain.sh` - Shell wrapper script",
      "Creates clean project structure",
      "Organizes documentation",
      "\ud83d\udd2e Future Recommendations",
      "\u2705 All documentation organized in `docs/` directory",
      "\ud83c\udfaf Benefits of the Cleanup",
      "\u2705 **Project structure created** - New organized directory structure with clear purposes",
      "Add this line for Monday at 9 AM",
      "\u2705 **Documentation organized** - All documentation moved to `docs/` directory for better organization",
      "**Configs**: Place in `config/` directory",
      "\ud83c\udf89 Project Cleanup Complete!",
      "`CLEANUP_COMPLETE.md` - This summary document",
      "### Automatic Maintenance (Optional)\n\nAdd to your crontab for weekly automatic maintenance:",
      "`scripts/maintain_project.py` - Regular maintenance script",
      "__pycache__/",
      "1. **cleanup_project.py** (One-time use)",
      "bash\n# Edit crontab\ncrontab -e\n\n# Add this line for Monday at 9 AM\n0 9 * * 1 cd /path/to/your/project && ./scripts/maintain.sh",
      ".pyc/.pyo",
      "bash\n# Run maintenance script\npython3 scripts/maintain_project.py\n\n# Or use the shell wrapper\n./scripts/maintain.sh",
      "\u274c Python cache files cluttering the project",
      "### \ud83d\udee0\ufe0f New Maintenance Tools\n\n#### 1. **cleanup_project.py** (One-time use)\n\n- Removes Python cache files\n- Consolidates Docker configurations\n- Organizes documentation\n- Creates clean project structure\n\n#### 2. **maintain_project.py** (Regular use)\n\n- Checks for new cache files\n- Verifies directory structure\n- Monitors documentation organization\n- Generates maintenance reports\n\n#### 3. **maintain.sh** (Shell wrapper)\n\n- Easy-to-use shell script\n- Automatically detects Python version\n- Can be added to crontab for automation\n\n## \ud83d\ude80 How to Use Going Forward\n\n### Regular Maintenance",
      "\u274c Difficult to maintain",
      "Before Cleanup",
      "Monitors documentation organization",
      "Or use the shell wrapper",
      "- Regular maintenance script\n-",
      "Can be added to crontab for automation",
      "Checks for new cache files",
      "**Scripts**: Place in `scripts/` directory",
      "directory\n- **Scripts**: Place in",
      "Automatically detects Python version",
      "3. **maintain.sh** (Shell wrapper)",
      "Regular Maintenance",
      "- One-time cleanup script\n-",
      "\u2705 **Maintenance tools added** - Scripts to keep the project organized going forward",
      "memory-context-manager_v2/\n\u251c\u2500\u2500 \ud83d\udcc1 docs/                    # All documentation organized here\n\u251c\u2500\u2500 \ud83d\udcc1 scripts/                 # Maintenance and utility scripts\n\u2502   \u251c\u2500\u2500 cleanup_project.py      # One-time cleanup script\n\u2502   \u2514\u2500\u2500 maintain_project.py     # Regular maintenance script\n\u251c\u2500\u2500 \ud83d\udcc1 tests/                   # Test files and suites\n\u251c\u2500\u2500 \ud83d\udcc1 config/                  # Configuration files\n\u251c\u2500\u2500 \ud83d\udcc1 plugins/                 # Plugin system (existing)\n\u251c\u2500\u2500 \ud83d\udcc1 database/                # Database components (existing)\n\u251c\u2500\u2500 \ud83d\udcc1 src/                     # Source code (existing)\n\u251c\u2500\u2500 \ud83d\udcc1 brain_memory_store/      # Brain memory storage (existing)\n\u251c\u2500\u2500 \ud83d\udc33 docker-compose.yml       # Single, optimized Docker config\n\u251c\u2500\u2500 \ud83d\udc33 Dockerfile               # Production-ready container\n\u251c\u2500\u2500 \ud83d\udcd6 README.md                # Main project documentation\n\u251c\u2500\u2500 \ud83d\udce6 pyproject.toml           # Project configuration\n\u2514\u2500\u2500 \ud83d\udd27 .cursorrules             # Cursor IDE configuration",
      "\u2705 Maintenance tools for ongoing organization",
      "Adding New Files",
      "\u274c No clear organization structure",
      "directory\n- **Configs**: Place in",
      "docs/",
      "Consolidates Docker configurations",
      "Dockerfile",
      "directory\n- \u2705 Clean project structure with clear purposes\n- \u2705 Maintenance tools for ongoing organization\n- \u2705 Easy to navigate and maintain\n\n## \ud83c\udfaf Benefits of the Cleanup\n\n1. **Better Organization** - Clear separation of concerns\n2. **Easier Maintenance** - Automated tools to keep things clean\n3. **Improved Development** - Faster to find what you need\n4. **Professional Appearance** - Clean, organized codebase\n5. **Team Collaboration** - Clear structure for multiple developers\n\n## \ud83d\udd2e Future Recommendations\n\n1. **Run maintenance weekly** - Keep the project organized\n2. **Follow the structure** - Place new files in appropriate directories\n3. **Update documentation** - Keep docs current with code changes\n4. **Use the tools** - Leverage the maintenance scripts\n5. **Share the structure** - Help team members understand the organization\n\n## \ud83d\udcdd Files Created During Cleanup\n\n-",
      "Automatic Maintenance (Optional)",
      "### Adding New Files\n\n- **Documentation**: Place in",
      "`PROJECT_ORGANIZATION.md` - Organization guidelines",
      "\ud83d\udee0\ufe0f New Maintenance Tools",
      "Run maintenance script",
      "Easy-to-use shell script",
      "- Detailed cleanup process\n-",
      "Verifies directory structure",
      "\u2705 Easy to navigate and maintain",
      "\u2705 **Python cache files removed** - All `__pycache__/` directories and `.pyc/.pyo` files cleaned up",
      "\ud83e\uddf9 Cleanup Actions",
      "**Documentation**: Place in `docs/` directory",
      "What Was Accomplished",
      "**Tests**: Place in `tests/` directory",
      "- Organization guidelines\n-",
      "- This summary document\n-",
      "Removes Python cache files",
      "directory\n\n## \ud83d\udcca Before vs After\n\n### Before Cleanup\n\n- \u274c Multiple Docker configurations (confusing)\n- \u274c Documentation scattered in root directory\n- \u274c Python cache files cluttering the project\n- \u274c No clear organization structure\n- \u274c Difficult to maintain\n\n### After Cleanup\n\n- \u2705 Single, optimized Docker configuration\n- \u2705 All documentation organized in",
      "`CLEANUP_SUMMARY.md` - Detailed cleanup process",
      "\u2705 **Docker files consolidated** - Removed duplicate configurations, kept main `docker-compose.yml` and `Dockerfile`",
      "\ud83d\udcca Before vs After",
      "After Cleanup",
      "\u2705 Single, optimized Docker configuration",
      "2. **maintain_project.py** (Regular use)",
      "\u2705 Clean project structure with clear purposes",
      "docker-compose.yml",
      "\u274c Documentation scattered in root directory",
      "\u274c Multiple Docker configurations (confusing)",
      "`scripts/cleanup_project.py` - One-time cleanup script",
      "Edit crontab",
      "Generates maintenance reports",
      "directory\n- **Tests**: Place in",
      "\ud83d\ude80 How to Use Going Forward",
      "\ud83d\udcc1 New Project Structure",
      "\ud83d\udcdd Files Created During Cleanup",
      "`scripts/maintain.sh` - Shell wrapper script",
      "Creates clean project structure",
      "Organizes documentation",
      "\ud83d\udd2e Future Recommendations",
      "\u2705 All documentation organized in `docs/` directory",
      "\ud83c\udfaf Benefits of the Cleanup",
      "\u2705 **Project structure created** - New organized directory structure with clear purposes",
      "Add this line for Monday at 9 AM",
      "\u2705 **Documentation organized** - All documentation moved to `docs/` directory for better organization",
      "**Configs**: Place in `config/` directory",
      "\ud83c\udf89 Project Cleanup Complete!",
      "`CLEANUP_COMPLETE.md` - This summary document",
      "### Automatic Maintenance (Optional)\n\nAdd to your crontab for weekly automatic maintenance:",
      "`scripts/maintain_project.py` - Regular maintenance script",
      "__pycache__/",
      "1. **cleanup_project.py** (One-time use)",
      "bash\n# Edit crontab\ncrontab -e\n\n# Add this line for Monday at 9 AM\n0 9 * * 1 cd /path/to/your/project && ./scripts/maintain.sh",
      ".pyc/.pyo",
      "bash\n# Run maintenance script\npython3 scripts/maintain_project.py\n\n# Or use the shell wrapper\n./scripts/maintain.sh",
      "\u274c Python cache files cluttering the project",
      "### \ud83d\udee0\ufe0f New Maintenance Tools\n\n#### 1. **cleanup_project.py** (One-time use)\n\n- Removes Python cache files\n- Consolidates Docker configurations\n- Organizes documentation\n- Creates clean project structure\n\n#### 2. **maintain_project.py** (Regular use)\n\n- Checks for new cache files\n- Verifies directory structure\n- Monitors documentation organization\n- Generates maintenance reports\n\n#### 3. **maintain.sh** (Shell wrapper)\n\n- Easy-to-use shell script\n- Automatically detects Python version\n- Can be added to crontab for automation\n\n## \ud83d\ude80 How to Use Going Forward\n\n### Regular Maintenance",
      "\u274c Difficult to maintain",
      "Before Cleanup",
      "Monitors documentation organization",
      "Or use the shell wrapper",
      "- Regular maintenance script\n-",
      "Can be added to crontab for automation",
      "Checks for new cache files",
      "**Scripts**: Place in `scripts/` directory",
      "directory\n- **Scripts**: Place in",
      "Automatically detects Python version",
      "3. **maintain.sh** (Shell wrapper)",
      "Regular Maintenance",
      "- One-time cleanup script\n-",
      "\u2705 **Maintenance tools added** - Scripts to keep the project organized going forward",
      "memory-context-manager_v2/\n\u251c\u2500\u2500 \ud83d\udcc1 docs/                    # All documentation organized here\n\u251c\u2500\u2500 \ud83d\udcc1 scripts/                 # Maintenance and utility scripts\n\u2502   \u251c\u2500\u2500 cleanup_project.py      # One-time cleanup script\n\u2502   \u2514\u2500\u2500 maintain_project.py     # Regular maintenance script\n\u251c\u2500\u2500 \ud83d\udcc1 tests/                   # Test files and suites\n\u251c\u2500\u2500 \ud83d\udcc1 config/                  # Configuration files\n\u251c\u2500\u2500 \ud83d\udcc1 plugins/                 # Plugin system (existing)\n\u251c\u2500\u2500 \ud83d\udcc1 database/                # Database components (existing)\n\u251c\u2500\u2500 \ud83d\udcc1 src/                     # Source code (existing)\n\u251c\u2500\u2500 \ud83d\udcc1 brain_memory_store/      # Brain memory storage (existing)\n\u251c\u2500\u2500 \ud83d\udc33 docker-compose.yml       # Single, optimized Docker config\n\u251c\u2500\u2500 \ud83d\udc33 Dockerfile               # Production-ready container\n\u251c\u2500\u2500 \ud83d\udcd6 README.md                # Main project documentation\n\u251c\u2500\u2500 \ud83d\udce6 pyproject.toml           # Project configuration\n\u2514\u2500\u2500 \ud83d\udd27 .cursorrules             # Cursor IDE configuration",
      "\u2705 Maintenance tools for ongoing organization",
      "Adding New Files",
      "\u274c No clear organization structure",
      "directory\n- **Configs**: Place in",
      "docs/",
      "Consolidates Docker configurations",
      "Dockerfile",
      "directory\n- \u2705 Clean project structure with clear purposes\n- \u2705 Maintenance tools for ongoing organization\n- \u2705 Easy to navigate and maintain\n\n## \ud83c\udfaf Benefits of the Cleanup\n\n1. **Better Organization** - Clear separation of concerns\n2. **Easier Maintenance** - Automated tools to keep things clean\n3. **Improved Development** - Faster to find what you need\n4. **Professional Appearance** - Clean, organized codebase\n5. **Team Collaboration** - Clear structure for multiple developers\n\n## \ud83d\udd2e Future Recommendations\n\n1. **Run maintenance weekly** - Keep the project organized\n2. **Follow the structure** - Place new files in appropriate directories\n3. **Update documentation** - Keep docs current with code changes\n4. **Use the tools** - Leverage the maintenance scripts\n5. **Share the structure** - Help team members understand the organization\n\n## \ud83d\udcdd Files Created During Cleanup\n\n-",
      "Automatic Maintenance (Optional)",
      "### Adding New Files\n\n- **Documentation**: Place in",
      "`PROJECT_ORGANIZATION.md` - Organization guidelines",
      "\ud83d\udee0\ufe0f New Maintenance Tools",
      "Run maintenance script",
      "Easy-to-use shell script",
      "- Detailed cleanup process\n-",
      "Verifies directory structure",
      "\u2705 Easy to navigate and maintain",
      "\u2705 **Python cache files removed** - All `__pycache__/` directories and `.pyc/.pyo` files cleaned up",
      "\ud83e\uddf9 Cleanup Actions",
      "**Documentation**: Place in `docs/` directory",
      "What Was Accomplished",
      "**Tests**: Place in `tests/` directory",
      "- Organization guidelines\n-",
      "- This summary document\n-",
      "Removes Python cache files",
      "directory\n\n## \ud83d\udcca Before vs After\n\n### Before Cleanup\n\n- \u274c Multiple Docker configurations (confusing)\n- \u274c Documentation scattered in root directory\n- \u274c Python cache files cluttering the project\n- \u274c No clear organization structure\n- \u274c Difficult to maintain\n\n### After Cleanup\n\n- \u2705 Single, optimized Docker configuration\n- \u2705 All documentation organized in",
      "`CLEANUP_SUMMARY.md` - Detailed cleanup process",
      "\u2705 **Docker files consolidated** - Removed duplicate configurations, kept main `docker-compose.yml` and `Dockerfile`",
      "\ud83d\udcca Before vs After",
      "After Cleanup",
      "\u2705 Single, optimized Docker configuration",
      "2. **maintain_project.py** (Regular use)",
      "\u2705 Clean project structure with clear purposes",
      "docker-compose.yml",
      "\u274c Documentation scattered in root directory",
      "\u274c Multiple Docker configurations (confusing)",
      "`scripts/cleanup_project.py` - One-time cleanup script",
      "Edit crontab",
      "Generates maintenance reports",
      "directory\n- **Tests**: Place in",
      "\ud83d\ude80 How to Use Going Forward",
      "\ud83d\udcc1 New Project Structure",
      "\ud83d\udcdd Files Created During Cleanup",
      "`scripts/maintain.sh` - Shell wrapper script",
      "Creates clean project structure",
      "Organizes documentation",
      "\ud83d\udd2e Future Recommendations",
      "\u2705 All documentation organized in `docs/` directory",
      "\ud83c\udfaf Benefits of the Cleanup",
      "\u2705 **Project structure created** - New organized directory structure with clear purposes",
      "Add this line for Monday at 9 AM",
      "\u2705 **Documentation organized** - All documentation moved to `docs/` directory for better organization",
      "**Configs**: Place in `config/` directory",
      "\ud83c\udf89 Project Cleanup Complete!",
      "`CLEANUP_COMPLETE.md` - This summary document",
      "### Automatic Maintenance (Optional)\n\nAdd to your crontab for weekly automatic maintenance:",
      "`scripts/maintain_project.py` - Regular maintenance script",
      "__pycache__/"
    ],
    "CLEANUP_SUMMARY.md": [
      "Project structure standardized",
      "*.pyc",
      "- Production-ready container\n\n## Getting Started\n\n1. **Install dependencies**:",
      "What Was Cleaned Up",
      "## Docker Configuration\n\nThe project now uses a single, optimized Docker configuration:\n-",
      "Cleanup Script",
      "Project Cleanup Summary",
      "`docker-compose.yml` - Main development setup",
      "- Main development setup\n-",
      "Getting Started",
      "\u2705 Removed",
      "Duplicate Docker configurations",
      "2. **Run with Docker**:",
      "Python cache files (`__pycache__/`, `*.pyc`, `*.pyo`)",
      "\ud83d\udcc1 Reorganized",
      "memory-context-manager_v2/\n\u251c\u2500\u2500 docs/           # All documentation files\n\u251c\u2500\u2500 scripts/        # Utility scripts\n\u251c\u2500\u2500 tests/          # Test files\n\u251c\u2500\u2500 config/         # Configuration files\n\u251c\u2500\u2500 plugins/        # Plugin system\n\u251c\u2500\u2500 database/       # Database components\n\u251c\u2500\u2500 src/           # Source code\n\u251c\u2500\u2500 docker-compose.yml  # Main Docker configuration\n\u251c\u2500\u2500 Dockerfile     # Main Dockerfile\n\u251c\u2500\u2500 README.md      # Main project README\n\u2514\u2500\u2500 pyproject.toml # Project configuration",
      "`Dockerfile` - Production-ready container",
      "3. **Run locally**:",
      "Temporary development files",
      "Documentation moved to `docs/` directory",
      "Docker Configuration",
      "## Cleanup Script\n\nTo re-run this cleanup:",
      "*.pyo",
      "Docker files consolidated",
      "\ud83c\udfd7\ufe0f  New Structure",
      "Project structure standardized",
      "*.pyc",
      "- Production-ready container\n\n## Getting Started\n\n1. **Install dependencies**:",
      "What Was Cleaned Up",
      "## Docker Configuration\n\nThe project now uses a single, optimized Docker configuration:\n-",
      "Cleanup Script",
      "Project Cleanup Summary",
      "`docker-compose.yml` - Main development setup",
      "- Main development setup\n-",
      "Getting Started",
      "\u2705 Removed",
      "Duplicate Docker configurations",
      "2. **Run with Docker**:",
      "Python cache files (`__pycache__/`, `*.pyc`, `*.pyo`)",
      "\ud83d\udcc1 Reorganized",
      "memory-context-manager_v2/\n\u251c\u2500\u2500 docs/           # All documentation files\n\u251c\u2500\u2500 scripts/        # Utility scripts\n\u251c\u2500\u2500 tests/          # Test files\n\u251c\u2500\u2500 config/         # Configuration files\n\u251c\u2500\u2500 plugins/        # Plugin system\n\u251c\u2500\u2500 database/       # Database components\n\u251c\u2500\u2500 src/           # Source code\n\u251c\u2500\u2500 docker-compose.yml  # Main Docker configuration\n\u251c\u2500\u2500 Dockerfile     # Main Dockerfile\n\u251c\u2500\u2500 README.md      # Main project README\n\u2514\u2500\u2500 pyproject.toml # Project configuration",
      "`Dockerfile` - Production-ready container",
      "3. **Run locally**:",
      "Temporary development files",
      "Documentation moved to `docs/` directory",
      "Docker Configuration",
      "## Cleanup Script\n\nTo re-run this cleanup:",
      "*.pyo",
      "Docker files consolidated",
      "\ud83c\udfd7\ufe0f  New Structure",
      "Project structure standardized",
      "*.pyc",
      "- Production-ready container\n\n## Getting Started\n\n1. **Install dependencies**:",
      "What Was Cleaned Up",
      "## Docker Configuration\n\nThe project now uses a single, optimized Docker configuration:\n-",
      "Cleanup Script",
      "Project Cleanup Summary",
      "`docker-compose.yml` - Main development setup",
      "- Main development setup\n-",
      "Getting Started",
      "\u2705 Removed",
      "Duplicate Docker configurations",
      "2. **Run with Docker**:",
      "Python cache files (`__pycache__/`, `*.pyc`, `*.pyo`)",
      "\ud83d\udcc1 Reorganized",
      "memory-context-manager_v2/\n\u251c\u2500\u2500 docs/           # All documentation files\n\u251c\u2500\u2500 scripts/        # Utility scripts\n\u251c\u2500\u2500 tests/          # Test files\n\u251c\u2500\u2500 config/         # Configuration files\n\u251c\u2500\u2500 plugins/        # Plugin system\n\u251c\u2500\u2500 database/       # Database components\n\u251c\u2500\u2500 src/           # Source code\n\u251c\u2500\u2500 docker-compose.yml  # Main Docker configuration\n\u251c\u2500\u2500 Dockerfile     # Main Dockerfile\n\u251c\u2500\u2500 README.md      # Main project README\n\u2514\u2500\u2500 pyproject.toml # Project configuration",
      "`Dockerfile` - Production-ready container",
      "3. **Run locally**:",
      "Temporary development files",
      "Documentation moved to `docs/` directory",
      "Docker Configuration",
      "## Cleanup Script\n\nTo re-run this cleanup:",
      "*.pyo",
      "Docker files consolidated",
      "\ud83c\udfd7\ufe0f  New Structure"
    ],
    "COGNITIVE_RESTRUCTURING_SUMMARY.md": [
      "**Short Term (Next 2 weeks)**",
      "** - Unified perception and analysis\n2. **",
      "**Easier Updates**: Changes affect entire cognitive domains",
      "python\n# 1. PERCEPTION: Analyze input and get context\ncontext = await perceive_and_analyze(\"Analyze system performance\")\nmemory_context = await enhanced_context_retrieval(\"system performance analysis\")\n\n# 2. MEMORY: Store and retrieve relevant information\nawait memory_operations(\"store\", \"System performance analysis requested\")\nstored_data = await memory_operations(\"retrieve\", \"\", \"system performance\")\n\n# 3. THINKING: Process and orchestrate tools\nthoughts = await think_deeply(\"How to analyze system performance\", \"technical\")\norchestration = await orchestrate_tools(memory_context, \"comprehensive_analysis\")\n\n# 4. LEARNING: Learn from the interaction\nawait learn_and_adapt(\"learn\", \"User requested system performance analysis\", \"technical\")\nlearning_cycle = await continuous_learning_cycle(interaction_data, \"performance_patterns\")\n\n# 5. ACTION: Execute the workflow\nworkflow_result = await execute_enhanced_workflow(\"Analyze system performance\", \"aggressive\")\n\n# 6. MONITORING: Check system health\nhealth_status = await self_monitor(\"comprehensive\", \"all\")\nperformance_metrics = await analyze_performance(\"comprehensive\", \"workflow\")",
      "- **Test Command**:",
      "**Before**: 48 scattered, overlapping tools",
      "| \u2705 100% Preserved       |\n| Context Building (4 tools)      |",
      "\ud83d\udcc1 **Files Created/Modified**",
      "**4. Enhanced User Experience**",
      "| \u2705 100% Preserved       |\n\n**Total Preservation: 100% \u2705**\n\n---\n\n## \ud83d\ude80 **Natural Cognitive Workflow**\n\n### **Complete Workflow Example**",
      "[ ] Production deployment",
      "\u274c Multiple overlapping memory management tools\n\u274c Redundant context building functions\n\u274c Scattered performance analysis tools\n\u274c Inconsistent naming conventions\n\u274c Complex tool discovery and usage\n\u274c No natural workflow progression\n\u274c Difficult to maintain and update",
      "** - Optimize workflows based on learning\n\n### **DOMAIN 5: OUTPUT & ACTION**\n\n13. **",
      "**Reduction**: 62.5% fewer tools with 100% functionality",
      "**After**: 18 organized, cognitive domain tools",
      "`demo_restructured_cognitive_system.py` - Demonstration script",
      "** - Comprehensive self-monitoring and health checks\n17. **",
      "Main MCP server continues to work with existing tools",
      "[x] Restructured cognitive brain plugin created",
      "`RESTRUCTURED_COGNITIVE_SYSTEM.md` - Comprehensive documentation",
      "Backward compatibility maintained",
      "1. PERCEPTION: Analyze input and get context",
      "### **After: 6 Natural Cognitive Domains**",
      "** - Cursor conversation context\n\n### **DOMAIN 2: MEMORY & STORAGE**\n\n4. **",
      "| \u2705 100% Preserved       |\n| AI Chat (2 tools)               |",
      "- This summary document\n\n### **Existing Files Preserved**\n\n- All original plugins remain intact for functionality preservation\n- Main MCP server continues to work with existing tools\n- Backward compatibility maintained\n\n---\n\n## \ud83c\udf89 **Success Metrics**\n\n| **Metric**            | **Before** | **After** | **Improvement**             |\n| --------------------- | ---------- | --------- | --------------------------- |\n| **Tool Count**        | 48         | 18        | **62.5% reduction**         |\n| **Cognitive Domains** | 0          | 6         | **New organization**        |\n| **Functionality**     | 100%       | 100%      | **Zero loss**               |\n| **User Experience**   | Scattered  | Organized | **Major improvement**       |\n| **Maintainability**   | Complex    | Simple    | **Significant improvement** |\n| **Workflow**          | Manual     | Natural   | **Cognitive progression**   |\n\n---\n\n## \ud83d\ude80 **Next Steps**\n\n### **Immediate (Ready Now)**\n\n1. **Deploy restructured plugin** alongside existing system\n2. **Start user migration** to new cognitive domain tools\n3. **Monitor performance** and user adoption\n\n### **Short Term (Next 2 weeks)**\n\n1. **Performance optimization** based on usage patterns\n2. **Advanced cognitive features** development\n3. **User training materials** creation\n\n### **Long Term (Next month)**\n\n1. **Full migration** to cognitive domain interface\n2. **Legacy tool deprecation** (with full functionality preserved)\n3. **Advanced cognitive capabilities** implementation\n\n---\n\n## \ud83c\udfaf **Conclusion**\n\nThe **Cognitive Brain Restructuring** represents a **major evolutionary breakthrough** in our system architecture:\n\n\u2705 **48 tools successfully consolidated into 18 cognitive domain tools**\n\u2705 **100% functionality preservation achieved**\n\u2705 **Human brain-focused organization implemented**\n\u2705 **Natural cognitive workflow progression created**\n\u2705 **Massive redundancy elimination accomplished**\n\u2705 **Significantly improved user experience and maintainability**\n\nThis restructuring transforms our system from a **collection of scattered tools** into a **coherent, intelligent cognitive system** that mirrors how the human brain naturally organizes and processes information.\n\n**The future of AI is cognitive, and our restructured system leads the way! \ud83e\udde0\u2728**\n\n---\n\n## \ud83d\udd17 **Quick Reference**\n\n- **Main Plugin**:",
      "**Logical Organization**: Related functions grouped together",
      "** - Track conversation for learning\n\n### **DOMAIN 3: PROCESSING & THINKING**\n\n7. **",
      "[x] Demonstration scripts ready",
      "**Demo Script**: `demo_restructured_cognitive_system.py`",
      "\ud83c\udfaf **Mission Accomplished**",
      "| \u2705 100% Preserved       |\n| Tool Orchestration (2 tools)    |",
      "** - Comprehensive workflow health check\n\n---\n\n## \ud83d\udd04 **Functionality Preservation Matrix**\n\n| **Original Functionality**      | **New Tool**                                                                        | **Preservation Status** |\n| ------------------------------- | ----------------------------------------------------------------------------------- | ----------------------- |\n| Memory Management (6 tools)     |",
      "[x] Natural cognitive workflow implemented",
      "\ud83c\udf89 **Success Metrics**",
      "** - Build comprehensive context\n\n### **DOMAIN 4: LEARNING & ADAPTATION**\n\n10. **",
      "\ud83e\udde0 **Complete Tool Mapping**",
      "**DOMAIN 6: SELF-MONITORING**",
      "| \u2705 100% Preserved       |\n| Content Analysis (3 tools)      |",
      "- Demonstration script\n-",
      "[x] 100% functionality preservation achieved",
      "| \u2705 100% Preserved       |\n| Self-Monitoring (4 tools)       |",
      "- **Demo Script**:",
      "**Better Testing**: Comprehensive testing per domain",
      "2. MEMORY: Store and retrieve relevant information",
      "\ud83d\ude80 **Next Steps**",
      "**Immediate (Ready Now)**",
      "**Documentation**: `RESTRUCTURED_COGNITIVE_SYSTEM.md`",
      "** - Enhanced context retrieval (Phase 1)\n3. **",
      "** - Intelligent tool orchestration (Phase 2)\n9. **",
      "** - Unified learning and adaptation system\n11. **",
      "**\u2705 Completed**",
      "**Reduced Confusion**: Clear tool categorization",
      "---\n\n## \ud83c\udfaf **Key Benefits Achieved**\n\n### **1. Cognitive Efficiency**\n\n- **Natural Workflow**: Tools follow human cognitive processes\n- **Intuitive Usage**: No need to remember scattered tool names\n- **Logical Organization**: Related functions grouped together\n\n### **2. Massive Redundancy Elimination**\n\n- **Before**: 48 scattered, overlapping tools\n- **After**: 18 organized, cognitive domain tools\n- **Reduction**: 62.5% fewer tools with 100% functionality\n\n### **3. Improved Maintainability**\n\n- **Centralized Logic**: All related functionality in one place\n- **Easier Updates**: Changes affect entire cognitive domains\n- **Better Testing**: Comprehensive testing per domain\n\n### **4. Enhanced User Experience**\n\n- **Faster Discovery**: Users find tools in logical domains\n- **Better Learning**: Natural cognitive progression\n- **Reduced Confusion**: Clear tool categorization\n\n---\n\n## \ud83d\udd27 **Implementation Status**\n\n### **\u2705 Completed**\n\n- [x] Restructured cognitive brain plugin created\n- [x] All 18 tools implemented and tested\n- [x] 100% functionality preservation achieved\n- [x] Natural cognitive workflow implemented\n- [x] Comprehensive documentation created\n- [x] Demonstration scripts ready\n- [x] Plugin integration tested\n\n### **\ud83d\ude80 Ready For**\n\n- [ ] Production deployment\n- [ ] User migration\n- [ ] Performance optimization\n- [ ] Advanced cognitive features\n\n---\n\n## \ud83d\udcc1 **Files Created/Modified**\n\n### **New Files**\n\n-",
      "\ud83d\udd17 **Quick Reference**",
      "** - Deep thinking with context analysis\n8. **",
      "3. THINKING: Process and orchestrate tools",
      "6. MONITORING: Check system health",
      "**Long Term (Next month)**",
      "\ud83d\udcca **Restructuring Results**",
      "| \u2705 100% Preserved       |\n| Learning & Adaptation (5 tools) |",
      "** - Continuous learning cycle (Phase 3)\n12. **",
      "`COGNITIVE_RESTRUCTURING_SUMMARY.md` - This summary document",
      "**DOMAIN 3: PROCESSING & THINKING**",
      "**3. Improved Maintainability**",
      "\ud83d\ude80 **Natural Cognitive Workflow**",
      "**Existing Files Preserved**",
      "| \u2705 100% Preserved       |\n| Workflow Management (3 tools)   |",
      "** - Unified memory operations (store, retrieve, search, clear)\n5. **",
      "** - Execute complete enhanced workflow\n14. **",
      "**Test Command**: `python demo_restructured_cognitive_system.py`",
      "\ud83e\udde0 **Cognitive Brain Restructuring - COMPLETE SUMMARY**",
      "| \u2705 100% Preserved       |\n| Cursor Integration (3 tools)    |",
      "**Main Plugin**: `plugins/cognitive_brain_restructured.py`",
      "4. LEARNING: Learn from the interaction",
      "[x] Plugin integration tested",
      "**Total: 18 consolidated tools with 100% functionality preservation**\n\n---\n\n## \ud83e\udde0 **Complete Tool Mapping**\n\n### **DOMAIN 1: PERCEPTION & INPUT**\n\n1. **",
      "[x] All 18 tools implemented and tested",
      "All original plugins remain intact for functionality preservation",
      "5. ACTION: Execute the workflow",
      "** - Auto-process and store message context\n6. **",
      "[x] Comprehensive documentation created",
      "**New Files**",
      "**Faster Discovery**: Users find tools in logical domains",
      "\ud83c\udfaf **Conclusion**",
      "**Natural Workflow**: Tools follow human cognitive processes",
      "**DOMAIN 4: LEARNING & ADAPTATION**",
      "- Main restructured plugin\n-",
      "\ud83d\udd04 **Functionality Preservation Matrix**",
      "** - AI chat with memory enhancement\n\n### **DOMAIN 6: SELF-MONITORING**\n\n16. **",
      "- Comprehensive documentation\n-",
      "\ud83d\udd27 **Implementation Status**",
      "** - Process multiple messages efficiently\n15. **",
      "[ ] Advanced cognitive features",
      "**Better Learning**: Natural cognitive progression",
      "[ ] User migration",
      "`plugins/cognitive_brain_restructured.py` - Main restructured plugin",
      "**Before: 48 Scattered Tools**",
      "[ ] Performance optimization",
      "**Complete Workflow Example**",
      "**DOMAIN 2: MEMORY & STORAGE**",
      "**DOMAIN 5: OUTPUT & ACTION**",
      "\ud83c\udfaf **Key Benefits Achieved**",
      "**1. Cognitive Efficiency**",
      "**After: 6 Natural Cognitive Domains**",
      "**Centralized Logic**: All related functionality in one place",
      "\u2705 PERCEPTION & INPUT (3 tools)\n\u2705 MEMORY & STORAGE (3 tools)\n\u2705 PROCESSING & THINKING (3 tools)\n\u2705 LEARNING & ADAPTATION (3 tools)\n\u2705 OUTPUT & ACTION (3 tools)\n\u2705 SELF-MONITORING (3 tools)",
      "**DOMAIN 1: PERCEPTION & INPUT**",
      "** - Analyze system and tool performance\n18. **",
      "- **Documentation**:",
      "**Intuitive Usage**: No need to remember scattered tool names",
      "| \u2705 100% Preserved       |\n| Performance Analysis (3 tools)  |",
      "**2. Massive Redundancy Elimination**",
      "**\ud83d\ude80 Ready For**",
      "**Short Term (Next 2 weeks)**",
      "** - Unified perception and analysis\n2. **",
      "**Easier Updates**: Changes affect entire cognitive domains",
      "python\n# 1. PERCEPTION: Analyze input and get context\ncontext = await perceive_and_analyze(\"Analyze system performance\")\nmemory_context = await enhanced_context_retrieval(\"system performance analysis\")\n\n# 2. MEMORY: Store and retrieve relevant information\nawait memory_operations(\"store\", \"System performance analysis requested\")\nstored_data = await memory_operations(\"retrieve\", \"\", \"system performance\")\n\n# 3. THINKING: Process and orchestrate tools\nthoughts = await think_deeply(\"How to analyze system performance\", \"technical\")\norchestration = await orchestrate_tools(memory_context, \"comprehensive_analysis\")\n\n# 4. LEARNING: Learn from the interaction\nawait learn_and_adapt(\"learn\", \"User requested system performance analysis\", \"technical\")\nlearning_cycle = await continuous_learning_cycle(interaction_data, \"performance_patterns\")\n\n# 5. ACTION: Execute the workflow\nworkflow_result = await execute_enhanced_workflow(\"Analyze system performance\", \"aggressive\")\n\n# 6. MONITORING: Check system health\nhealth_status = await self_monitor(\"comprehensive\", \"all\")\nperformance_metrics = await analyze_performance(\"comprehensive\", \"workflow\")",
      "- **Test Command**:",
      "**Before**: 48 scattered, overlapping tools",
      "| \u2705 100% Preserved       |\n| Context Building (4 tools)      |",
      "\ud83d\udcc1 **Files Created/Modified**",
      "**4. Enhanced User Experience**",
      "| \u2705 100% Preserved       |\n\n**Total Preservation: 100% \u2705**\n\n---\n\n## \ud83d\ude80 **Natural Cognitive Workflow**\n\n### **Complete Workflow Example**",
      "[ ] Production deployment",
      "\u274c Multiple overlapping memory management tools\n\u274c Redundant context building functions\n\u274c Scattered performance analysis tools\n\u274c Inconsistent naming conventions\n\u274c Complex tool discovery and usage\n\u274c No natural workflow progression\n\u274c Difficult to maintain and update",
      "** - Optimize workflows based on learning\n\n### **DOMAIN 5: OUTPUT & ACTION**\n\n13. **",
      "**Reduction**: 62.5% fewer tools with 100% functionality",
      "**After**: 18 organized, cognitive domain tools",
      "`demo_restructured_cognitive_system.py` - Demonstration script",
      "** - Comprehensive self-monitoring and health checks\n17. **",
      "Main MCP server continues to work with existing tools",
      "[x] Restructured cognitive brain plugin created",
      "`RESTRUCTURED_COGNITIVE_SYSTEM.md` - Comprehensive documentation",
      "Backward compatibility maintained",
      "1. PERCEPTION: Analyze input and get context",
      "### **After: 6 Natural Cognitive Domains**",
      "** - Cursor conversation context\n\n### **DOMAIN 2: MEMORY & STORAGE**\n\n4. **",
      "| \u2705 100% Preserved       |\n| AI Chat (2 tools)               |",
      "- This summary document\n\n### **Existing Files Preserved**\n\n- All original plugins remain intact for functionality preservation\n- Main MCP server continues to work with existing tools\n- Backward compatibility maintained\n\n---\n\n## \ud83c\udf89 **Success Metrics**\n\n| **Metric**            | **Before** | **After** | **Improvement**             |\n| --------------------- | ---------- | --------- | --------------------------- |\n| **Tool Count**        | 48         | 18        | **62.5% reduction**         |\n| **Cognitive Domains** | 0          | 6         | **New organization**        |\n| **Functionality**     | 100%       | 100%      | **Zero loss**               |\n| **User Experience**   | Scattered  | Organized | **Major improvement**       |\n| **Maintainability**   | Complex    | Simple    | **Significant improvement** |\n| **Workflow**          | Manual     | Natural   | **Cognitive progression**   |\n\n---\n\n## \ud83d\ude80 **Next Steps**\n\n### **Immediate (Ready Now)**\n\n1. **Deploy restructured plugin** alongside existing system\n2. **Start user migration** to new cognitive domain tools\n3. **Monitor performance** and user adoption\n\n### **Short Term (Next 2 weeks)**\n\n1. **Performance optimization** based on usage patterns\n2. **Advanced cognitive features** development\n3. **User training materials** creation\n\n### **Long Term (Next month)**\n\n1. **Full migration** to cognitive domain interface\n2. **Legacy tool deprecation** (with full functionality preserved)\n3. **Advanced cognitive capabilities** implementation\n\n---\n\n## \ud83c\udfaf **Conclusion**\n\nThe **Cognitive Brain Restructuring** represents a **major evolutionary breakthrough** in our system architecture:\n\n\u2705 **48 tools successfully consolidated into 18 cognitive domain tools**\n\u2705 **100% functionality preservation achieved**\n\u2705 **Human brain-focused organization implemented**\n\u2705 **Natural cognitive workflow progression created**\n\u2705 **Massive redundancy elimination accomplished**\n\u2705 **Significantly improved user experience and maintainability**\n\nThis restructuring transforms our system from a **collection of scattered tools** into a **coherent, intelligent cognitive system** that mirrors how the human brain naturally organizes and processes information.\n\n**The future of AI is cognitive, and our restructured system leads the way! \ud83e\udde0\u2728**\n\n---\n\n## \ud83d\udd17 **Quick Reference**\n\n- **Main Plugin**:",
      "**Logical Organization**: Related functions grouped together",
      "** - Track conversation for learning\n\n### **DOMAIN 3: PROCESSING & THINKING**\n\n7. **",
      "[x] Demonstration scripts ready",
      "**Demo Script**: `demo_restructured_cognitive_system.py`",
      "\ud83c\udfaf **Mission Accomplished**",
      "| \u2705 100% Preserved       |\n| Tool Orchestration (2 tools)    |",
      "** - Comprehensive workflow health check\n\n---\n\n## \ud83d\udd04 **Functionality Preservation Matrix**\n\n| **Original Functionality**      | **New Tool**                                                                        | **Preservation Status** |\n| ------------------------------- | ----------------------------------------------------------------------------------- | ----------------------- |\n| Memory Management (6 tools)     |",
      "[x] Natural cognitive workflow implemented",
      "\ud83c\udf89 **Success Metrics**",
      "** - Build comprehensive context\n\n### **DOMAIN 4: LEARNING & ADAPTATION**\n\n10. **",
      "\ud83e\udde0 **Complete Tool Mapping**",
      "**DOMAIN 6: SELF-MONITORING**",
      "| \u2705 100% Preserved       |\n| Content Analysis (3 tools)      |",
      "- Demonstration script\n-",
      "[x] 100% functionality preservation achieved",
      "| \u2705 100% Preserved       |\n| Self-Monitoring (4 tools)       |",
      "- **Demo Script**:",
      "**Better Testing**: Comprehensive testing per domain",
      "2. MEMORY: Store and retrieve relevant information",
      "\ud83d\ude80 **Next Steps**",
      "**Immediate (Ready Now)**",
      "**Documentation**: `RESTRUCTURED_COGNITIVE_SYSTEM.md`",
      "** - Enhanced context retrieval (Phase 1)\n3. **",
      "** - Intelligent tool orchestration (Phase 2)\n9. **",
      "** - Unified learning and adaptation system\n11. **",
      "**\u2705 Completed**",
      "**Reduced Confusion**: Clear tool categorization",
      "---\n\n## \ud83c\udfaf **Key Benefits Achieved**\n\n### **1. Cognitive Efficiency**\n\n- **Natural Workflow**: Tools follow human cognitive processes\n- **Intuitive Usage**: No need to remember scattered tool names\n- **Logical Organization**: Related functions grouped together\n\n### **2. Massive Redundancy Elimination**\n\n- **Before**: 48 scattered, overlapping tools\n- **After**: 18 organized, cognitive domain tools\n- **Reduction**: 62.5% fewer tools with 100% functionality\n\n### **3. Improved Maintainability**\n\n- **Centralized Logic**: All related functionality in one place\n- **Easier Updates**: Changes affect entire cognitive domains\n- **Better Testing**: Comprehensive testing per domain\n\n### **4. Enhanced User Experience**\n\n- **Faster Discovery**: Users find tools in logical domains\n- **Better Learning**: Natural cognitive progression\n- **Reduced Confusion**: Clear tool categorization\n\n---\n\n## \ud83d\udd27 **Implementation Status**\n\n### **\u2705 Completed**\n\n- [x] Restructured cognitive brain plugin created\n- [x] All 18 tools implemented and tested\n- [x] 100% functionality preservation achieved\n- [x] Natural cognitive workflow implemented\n- [x] Comprehensive documentation created\n- [x] Demonstration scripts ready\n- [x] Plugin integration tested\n\n### **\ud83d\ude80 Ready For**\n\n- [ ] Production deployment\n- [ ] User migration\n- [ ] Performance optimization\n- [ ] Advanced cognitive features\n\n---\n\n## \ud83d\udcc1 **Files Created/Modified**\n\n### **New Files**\n\n-",
      "\ud83d\udd17 **Quick Reference**",
      "** - Deep thinking with context analysis\n8. **",
      "3. THINKING: Process and orchestrate tools",
      "6. MONITORING: Check system health",
      "**Long Term (Next month)**",
      "\ud83d\udcca **Restructuring Results**",
      "| \u2705 100% Preserved       |\n| Learning & Adaptation (5 tools) |",
      "** - Continuous learning cycle (Phase 3)\n12. **",
      "`COGNITIVE_RESTRUCTURING_SUMMARY.md` - This summary document",
      "**DOMAIN 3: PROCESSING & THINKING**",
      "**3. Improved Maintainability**",
      "\ud83d\ude80 **Natural Cognitive Workflow**",
      "**Existing Files Preserved**",
      "| \u2705 100% Preserved       |\n| Workflow Management (3 tools)   |",
      "** - Unified memory operations (store, retrieve, search, clear)\n5. **",
      "** - Execute complete enhanced workflow\n14. **",
      "**Test Command**: `python demo_restructured_cognitive_system.py`",
      "\ud83e\udde0 **Cognitive Brain Restructuring - COMPLETE SUMMARY**",
      "| \u2705 100% Preserved       |\n| Cursor Integration (3 tools)    |",
      "**Main Plugin**: `plugins/cognitive_brain_restructured.py`",
      "4. LEARNING: Learn from the interaction",
      "[x] Plugin integration tested",
      "**Total: 18 consolidated tools with 100% functionality preservation**\n\n---\n\n## \ud83e\udde0 **Complete Tool Mapping**\n\n### **DOMAIN 1: PERCEPTION & INPUT**\n\n1. **",
      "[x] All 18 tools implemented and tested",
      "All original plugins remain intact for functionality preservation",
      "5. ACTION: Execute the workflow",
      "** - Auto-process and store message context\n6. **",
      "[x] Comprehensive documentation created",
      "**New Files**",
      "**Faster Discovery**: Users find tools in logical domains",
      "\ud83c\udfaf **Conclusion**",
      "**Natural Workflow**: Tools follow human cognitive processes",
      "**DOMAIN 4: LEARNING & ADAPTATION**",
      "- Main restructured plugin\n-",
      "\ud83d\udd04 **Functionality Preservation Matrix**",
      "** - AI chat with memory enhancement\n\n### **DOMAIN 6: SELF-MONITORING**\n\n16. **",
      "- Comprehensive documentation\n-",
      "\ud83d\udd27 **Implementation Status**",
      "** - Process multiple messages efficiently\n15. **",
      "[ ] Advanced cognitive features",
      "**Better Learning**: Natural cognitive progression",
      "[ ] User migration",
      "`plugins/cognitive_brain_restructured.py` - Main restructured plugin",
      "**Before: 48 Scattered Tools**",
      "[ ] Performance optimization",
      "**Complete Workflow Example**",
      "**DOMAIN 2: MEMORY & STORAGE**",
      "**DOMAIN 5: OUTPUT & ACTION**",
      "\ud83c\udfaf **Key Benefits Achieved**",
      "**1. Cognitive Efficiency**",
      "**After: 6 Natural Cognitive Domains**",
      "**Centralized Logic**: All related functionality in one place",
      "\u2705 PERCEPTION & INPUT (3 tools)\n\u2705 MEMORY & STORAGE (3 tools)\n\u2705 PROCESSING & THINKING (3 tools)\n\u2705 LEARNING & ADAPTATION (3 tools)\n\u2705 OUTPUT & ACTION (3 tools)\n\u2705 SELF-MONITORING (3 tools)",
      "**DOMAIN 1: PERCEPTION & INPUT**",
      "** - Analyze system and tool performance\n18. **",
      "- **Documentation**:",
      "**Intuitive Usage**: No need to remember scattered tool names",
      "| \u2705 100% Preserved       |\n| Performance Analysis (3 tools)  |",
      "**2. Massive Redundancy Elimination**",
      "**\ud83d\ude80 Ready For**",
      "**Short Term (Next 2 weeks)**",
      "** - Unified perception and analysis\n2. **",
      "**Easier Updates**: Changes affect entire cognitive domains",
      "python\n# 1. PERCEPTION: Analyze input and get context\ncontext = await perceive_and_analyze(\"Analyze system performance\")\nmemory_context = await enhanced_context_retrieval(\"system performance analysis\")\n\n# 2. MEMORY: Store and retrieve relevant information\nawait memory_operations(\"store\", \"System performance analysis requested\")\nstored_data = await memory_operations(\"retrieve\", \"\", \"system performance\")\n\n# 3. THINKING: Process and orchestrate tools\nthoughts = await think_deeply(\"How to analyze system performance\", \"technical\")\norchestration = await orchestrate_tools(memory_context, \"comprehensive_analysis\")\n\n# 4. LEARNING: Learn from the interaction\nawait learn_and_adapt(\"learn\", \"User requested system performance analysis\", \"technical\")\nlearning_cycle = await continuous_learning_cycle(interaction_data, \"performance_patterns\")\n\n# 5. ACTION: Execute the workflow\nworkflow_result = await execute_enhanced_workflow(\"Analyze system performance\", \"aggressive\")\n\n# 6. MONITORING: Check system health\nhealth_status = await self_monitor(\"comprehensive\", \"all\")\nperformance_metrics = await analyze_performance(\"comprehensive\", \"workflow\")",
      "- **Test Command**:",
      "**Before**: 48 scattered, overlapping tools",
      "| \u2705 100% Preserved       |\n| Context Building (4 tools)      |",
      "\ud83d\udcc1 **Files Created/Modified**",
      "**4. Enhanced User Experience**",
      "| \u2705 100% Preserved       |\n\n**Total Preservation: 100% \u2705**\n\n---\n\n## \ud83d\ude80 **Natural Cognitive Workflow**\n\n### **Complete Workflow Example**",
      "[ ] Production deployment",
      "\u274c Multiple overlapping memory management tools\n\u274c Redundant context building functions\n\u274c Scattered performance analysis tools\n\u274c Inconsistent naming conventions\n\u274c Complex tool discovery and usage\n\u274c No natural workflow progression\n\u274c Difficult to maintain and update",
      "** - Optimize workflows based on learning\n\n### **DOMAIN 5: OUTPUT & ACTION**\n\n13. **",
      "**Reduction**: 62.5% fewer tools with 100% functionality",
      "**After**: 18 organized, cognitive domain tools",
      "`demo_restructured_cognitive_system.py` - Demonstration script",
      "** - Comprehensive self-monitoring and health checks\n17. **",
      "Main MCP server continues to work with existing tools",
      "[x] Restructured cognitive brain plugin created",
      "`RESTRUCTURED_COGNITIVE_SYSTEM.md` - Comprehensive documentation",
      "Backward compatibility maintained",
      "1. PERCEPTION: Analyze input and get context",
      "### **After: 6 Natural Cognitive Domains**",
      "** - Cursor conversation context\n\n### **DOMAIN 2: MEMORY & STORAGE**\n\n4. **",
      "| \u2705 100% Preserved       |\n| AI Chat (2 tools)               |",
      "- This summary document\n\n### **Existing Files Preserved**\n\n- All original plugins remain intact for functionality preservation\n- Main MCP server continues to work with existing tools\n- Backward compatibility maintained\n\n---\n\n## \ud83c\udf89 **Success Metrics**\n\n| **Metric**            | **Before** | **After** | **Improvement**             |\n| --------------------- | ---------- | --------- | --------------------------- |\n| **Tool Count**        | 48         | 18        | **62.5% reduction**         |\n| **Cognitive Domains** | 0          | 6         | **New organization**        |\n| **Functionality**     | 100%       | 100%      | **Zero loss**               |\n| **User Experience**   | Scattered  | Organized | **Major improvement**       |\n| **Maintainability**   | Complex    | Simple    | **Significant improvement** |\n| **Workflow**          | Manual     | Natural   | **Cognitive progression**   |\n\n---\n\n## \ud83d\ude80 **Next Steps**\n\n### **Immediate (Ready Now)**\n\n1. **Deploy restructured plugin** alongside existing system\n2. **Start user migration** to new cognitive domain tools\n3. **Monitor performance** and user adoption\n\n### **Short Term (Next 2 weeks)**\n\n1. **Performance optimization** based on usage patterns\n2. **Advanced cognitive features** development\n3. **User training materials** creation\n\n### **Long Term (Next month)**\n\n1. **Full migration** to cognitive domain interface\n2. **Legacy tool deprecation** (with full functionality preserved)\n3. **Advanced cognitive capabilities** implementation\n\n---\n\n## \ud83c\udfaf **Conclusion**\n\nThe **Cognitive Brain Restructuring** represents a **major evolutionary breakthrough** in our system architecture:\n\n\u2705 **48 tools successfully consolidated into 18 cognitive domain tools**\n\u2705 **100% functionality preservation achieved**\n\u2705 **Human brain-focused organization implemented**\n\u2705 **Natural cognitive workflow progression created**\n\u2705 **Massive redundancy elimination accomplished**\n\u2705 **Significantly improved user experience and maintainability**\n\nThis restructuring transforms our system from a **collection of scattered tools** into a **coherent, intelligent cognitive system** that mirrors how the human brain naturally organizes and processes information.\n\n**The future of AI is cognitive, and our restructured system leads the way! \ud83e\udde0\u2728**\n\n---\n\n## \ud83d\udd17 **Quick Reference**\n\n- **Main Plugin**:",
      "**Logical Organization**: Related functions grouped together",
      "** - Track conversation for learning\n\n### **DOMAIN 3: PROCESSING & THINKING**\n\n7. **",
      "[x] Demonstration scripts ready",
      "**Demo Script**: `demo_restructured_cognitive_system.py`",
      "\ud83c\udfaf **Mission Accomplished**",
      "| \u2705 100% Preserved       |\n| Tool Orchestration (2 tools)    |",
      "** - Comprehensive workflow health check\n\n---\n\n## \ud83d\udd04 **Functionality Preservation Matrix**\n\n| **Original Functionality**      | **New Tool**                                                                        | **Preservation Status** |\n| ------------------------------- | ----------------------------------------------------------------------------------- | ----------------------- |\n| Memory Management (6 tools)     |",
      "[x] Natural cognitive workflow implemented",
      "\ud83c\udf89 **Success Metrics**",
      "** - Build comprehensive context\n\n### **DOMAIN 4: LEARNING & ADAPTATION**\n\n10. **",
      "\ud83e\udde0 **Complete Tool Mapping**",
      "**DOMAIN 6: SELF-MONITORING**",
      "| \u2705 100% Preserved       |\n| Content Analysis (3 tools)      |",
      "- Demonstration script\n-",
      "[x] 100% functionality preservation achieved",
      "| \u2705 100% Preserved       |\n| Self-Monitoring (4 tools)       |",
      "- **Demo Script**:",
      "**Better Testing**: Comprehensive testing per domain",
      "2. MEMORY: Store and retrieve relevant information",
      "\ud83d\ude80 **Next Steps**",
      "**Immediate (Ready Now)**",
      "**Documentation**: `RESTRUCTURED_COGNITIVE_SYSTEM.md`",
      "** - Enhanced context retrieval (Phase 1)\n3. **",
      "** - Intelligent tool orchestration (Phase 2)\n9. **",
      "** - Unified learning and adaptation system\n11. **",
      "**\u2705 Completed**",
      "**Reduced Confusion**: Clear tool categorization",
      "---\n\n## \ud83c\udfaf **Key Benefits Achieved**\n\n### **1. Cognitive Efficiency**\n\n- **Natural Workflow**: Tools follow human cognitive processes\n- **Intuitive Usage**: No need to remember scattered tool names\n- **Logical Organization**: Related functions grouped together\n\n### **2. Massive Redundancy Elimination**\n\n- **Before**: 48 scattered, overlapping tools\n- **After**: 18 organized, cognitive domain tools\n- **Reduction**: 62.5% fewer tools with 100% functionality\n\n### **3. Improved Maintainability**\n\n- **Centralized Logic**: All related functionality in one place\n- **Easier Updates**: Changes affect entire cognitive domains\n- **Better Testing**: Comprehensive testing per domain\n\n### **4. Enhanced User Experience**\n\n- **Faster Discovery**: Users find tools in logical domains\n- **Better Learning**: Natural cognitive progression\n- **Reduced Confusion**: Clear tool categorization\n\n---\n\n## \ud83d\udd27 **Implementation Status**\n\n### **\u2705 Completed**\n\n- [x] Restructured cognitive brain plugin created\n- [x] All 18 tools implemented and tested\n- [x] 100% functionality preservation achieved\n- [x] Natural cognitive workflow implemented\n- [x] Comprehensive documentation created\n- [x] Demonstration scripts ready\n- [x] Plugin integration tested\n\n### **\ud83d\ude80 Ready For**\n\n- [ ] Production deployment\n- [ ] User migration\n- [ ] Performance optimization\n- [ ] Advanced cognitive features\n\n---\n\n## \ud83d\udcc1 **Files Created/Modified**\n\n### **New Files**\n\n-",
      "\ud83d\udd17 **Quick Reference**",
      "** - Deep thinking with context analysis\n8. **",
      "3. THINKING: Process and orchestrate tools",
      "6. MONITORING: Check system health",
      "**Long Term (Next month)**",
      "\ud83d\udcca **Restructuring Results**",
      "| \u2705 100% Preserved       |\n| Learning & Adaptation (5 tools) |",
      "** - Continuous learning cycle (Phase 3)\n12. **",
      "`COGNITIVE_RESTRUCTURING_SUMMARY.md` - This summary document",
      "**DOMAIN 3: PROCESSING & THINKING**",
      "**3. Improved Maintainability**",
      "\ud83d\ude80 **Natural Cognitive Workflow**",
      "**Existing Files Preserved**",
      "| \u2705 100% Preserved       |\n| Workflow Management (3 tools)   |",
      "** - Unified memory operations (store, retrieve, search, clear)\n5. **",
      "** - Execute complete enhanced workflow\n14. **",
      "**Test Command**: `python demo_restructured_cognitive_system.py`",
      "\ud83e\udde0 **Cognitive Brain Restructuring - COMPLETE SUMMARY**",
      "| \u2705 100% Preserved       |\n| Cursor Integration (3 tools)    |",
      "**Main Plugin**: `plugins/cognitive_brain_restructured.py`",
      "4. LEARNING: Learn from the interaction",
      "[x] Plugin integration tested",
      "**Total: 18 consolidated tools with 100% functionality preservation**\n\n---\n\n## \ud83e\udde0 **Complete Tool Mapping**\n\n### **DOMAIN 1: PERCEPTION & INPUT**\n\n1. **",
      "[x] All 18 tools implemented and tested",
      "All original plugins remain intact for functionality preservation",
      "5. ACTION: Execute the workflow",
      "** - Auto-process and store message context\n6. **",
      "[x] Comprehensive documentation created",
      "**New Files**",
      "**Faster Discovery**: Users find tools in logical domains",
      "\ud83c\udfaf **Conclusion**",
      "**Natural Workflow**: Tools follow human cognitive processes",
      "**DOMAIN 4: LEARNING & ADAPTATION**",
      "- Main restructured plugin\n-",
      "\ud83d\udd04 **Functionality Preservation Matrix**",
      "** - AI chat with memory enhancement\n\n### **DOMAIN 6: SELF-MONITORING**\n\n16. **",
      "- Comprehensive documentation\n-",
      "\ud83d\udd27 **Implementation Status**",
      "** - Process multiple messages efficiently\n15. **",
      "[ ] Advanced cognitive features",
      "**Better Learning**: Natural cognitive progression",
      "[ ] User migration",
      "`plugins/cognitive_brain_restructured.py` - Main restructured plugin",
      "**Before: 48 Scattered Tools**",
      "[ ] Performance optimization",
      "**Complete Workflow Example**",
      "**DOMAIN 2: MEMORY & STORAGE**",
      "**DOMAIN 5: OUTPUT & ACTION**",
      "\ud83c\udfaf **Key Benefits Achieved**",
      "**1. Cognitive Efficiency**",
      "**After: 6 Natural Cognitive Domains**",
      "**Centralized Logic**: All related functionality in one place",
      "\u2705 PERCEPTION & INPUT (3 tools)\n\u2705 MEMORY & STORAGE (3 tools)\n\u2705 PROCESSING & THINKING (3 tools)\n\u2705 LEARNING & ADAPTATION (3 tools)\n\u2705 OUTPUT & ACTION (3 tools)\n\u2705 SELF-MONITORING (3 tools)",
      "**DOMAIN 1: PERCEPTION & INPUT**",
      "** - Analyze system and tool performance\n18. **",
      "- **Documentation**:",
      "**Intuitive Usage**: No need to remember scattered tool names",
      "| \u2705 100% Preserved       |\n| Performance Analysis (3 tools)  |",
      "**2. Massive Redundancy Elimination**",
      "**\ud83d\ude80 Ready For**"
    ],
    "CURRENT_TOOLS_ANALYSIS.md": [
      "Users can't directly access context analysis",
      "get_function_call_history",
      "cursor_auto_inject_context",
      "test_llm_connection",
      "get_cursor_context",
      "No more tool overwriting",
      "3. Cursor Integration",
      "system_info",
      "\ud83d\udcca Tool Count Summary",
      "learn_from",
      "Failing Plugins",
      "**Main.py Tools**: 16 tools",
      "list_plugins",
      "cognitive_brain",
      "memory_context",
      "ContextAnalyzer is integrated but not visible as separate tool",
      "Current Tools Analysis - Before Redesign",
      "conversation_memory_integration",
      "dream",
      "Clear purpose for each tool",
      "quick_memory_chat",
      "Single, clean tool registration system",
      "1. Tool Registration Problems",
      "`cursor_integration` - Cursor integration tools",
      "`system_info` - System information tools",
      "\ud83d\udd0c Plugin Tools (Various - Some Failing)",
      "server_status",
      "`memory_context` - Memory context tools",
      "No clear tool hierarchy for coding tasks",
      "ai_chat_with_memory",
      "remember",
      "consciousness_check",
      "**Expected Total**: 25+ tools",
      "\ud83d\udee0\ufe0f Main.py Tools (16 tools)",
      "Enhanced Cognitive Tools",
      "**Plugin Tools**: Various (some failing)",
      "Phase 3: Cursor Optimization",
      "auto_memory",
      "initialize_chat_session",
      "`conversation_memory_integration` - Conversation memory (setup failed)",
      "search_function_calls",
      "recall",
      "**Brain Interface Tools**: 9 tools",
      "Brain interface tools might be overwriting main tools",
      "Cursor Integration Tools",
      "`file_operations` - File operation tools",
      "Tools designed for coding workflows",
      "Phase 1: Clean Tool Registration",
      "think",
      "get_comprehensive_system_status",
      "file_operations",
      "get_session_statistics",
      "Power is hidden in enhanced tools",
      "Working Plugins",
      "Dedicated context analysis tools",
      "ContextAnalyzer power visible everywhere",
      "**Current Issue**: Only seeing 24 tools",
      "Context Analysis Tool",
      "brain_info",
      "2. ContextAnalyzer Integration",
      "memory_stats",
      "Plugin failures reducing total tool count",
      "reflect",
      "Clear tool hierarchy",
      "Standard Cognitive Tools",
      "Tools not optimized for Cursor workflows",
      "Core System Tools",
      "track_cursor_conversation",
      "list_available_models",
      "Clear integration points",
      "test_memory_system",
      "`cognitive_brain` - Cognitive brain plugin (import errors)",
      "Complex tool selection process",
      "\ud83c\udfaf Redesign Goals",
      "Phase 2: Visible ContextAnalyzer",
      "Complex registration system causing conflicts",
      "\ud83e\udde0 Brain Interface Tools (9 tools)",
      "Memory & System Tools",
      "\ud83d\udea8 Current Issues",
      "cursor_integration",
      "\ud83d\udcdd Next Steps",
      "analyze_context_deeply",
      "Better user experience",
      "`auto_memory` - Auto memory tools",
      "Users can't directly access context analysis",
      "get_function_call_history",
      "cursor_auto_inject_context",
      "test_llm_connection",
      "get_cursor_context",
      "No more tool overwriting",
      "3. Cursor Integration",
      "system_info",
      "\ud83d\udcca Tool Count Summary",
      "learn_from",
      "Failing Plugins",
      "**Main.py Tools**: 16 tools",
      "list_plugins",
      "cognitive_brain",
      "memory_context",
      "ContextAnalyzer is integrated but not visible as separate tool",
      "Current Tools Analysis - Before Redesign",
      "conversation_memory_integration",
      "dream",
      "Clear purpose for each tool",
      "quick_memory_chat",
      "Single, clean tool registration system",
      "1. Tool Registration Problems",
      "`cursor_integration` - Cursor integration tools",
      "`system_info` - System information tools",
      "\ud83d\udd0c Plugin Tools (Various - Some Failing)",
      "server_status",
      "`memory_context` - Memory context tools",
      "No clear tool hierarchy for coding tasks",
      "ai_chat_with_memory",
      "remember",
      "consciousness_check",
      "**Expected Total**: 25+ tools",
      "\ud83d\udee0\ufe0f Main.py Tools (16 tools)",
      "Enhanced Cognitive Tools",
      "**Plugin Tools**: Various (some failing)",
      "Phase 3: Cursor Optimization",
      "auto_memory",
      "initialize_chat_session",
      "`conversation_memory_integration` - Conversation memory (setup failed)",
      "search_function_calls",
      "recall",
      "**Brain Interface Tools**: 9 tools",
      "Brain interface tools might be overwriting main tools",
      "Cursor Integration Tools",
      "`file_operations` - File operation tools",
      "Tools designed for coding workflows",
      "Phase 1: Clean Tool Registration",
      "think",
      "get_comprehensive_system_status",
      "file_operations",
      "get_session_statistics",
      "Power is hidden in enhanced tools",
      "Working Plugins",
      "Dedicated context analysis tools",
      "ContextAnalyzer power visible everywhere",
      "**Current Issue**: Only seeing 24 tools",
      "Context Analysis Tool",
      "brain_info",
      "2. ContextAnalyzer Integration",
      "memory_stats",
      "Plugin failures reducing total tool count",
      "reflect",
      "Clear tool hierarchy",
      "Standard Cognitive Tools",
      "Tools not optimized for Cursor workflows",
      "Core System Tools",
      "track_cursor_conversation",
      "list_available_models",
      "Clear integration points",
      "test_memory_system",
      "`cognitive_brain` - Cognitive brain plugin (import errors)",
      "Complex tool selection process",
      "\ud83c\udfaf Redesign Goals",
      "Phase 2: Visible ContextAnalyzer",
      "Complex registration system causing conflicts",
      "\ud83e\udde0 Brain Interface Tools (9 tools)",
      "Memory & System Tools",
      "\ud83d\udea8 Current Issues",
      "cursor_integration",
      "\ud83d\udcdd Next Steps",
      "analyze_context_deeply",
      "Better user experience",
      "`auto_memory` - Auto memory tools",
      "Users can't directly access context analysis",
      "get_function_call_history",
      "cursor_auto_inject_context",
      "test_llm_connection",
      "get_cursor_context",
      "No more tool overwriting",
      "3. Cursor Integration",
      "system_info",
      "\ud83d\udcca Tool Count Summary",
      "learn_from",
      "Failing Plugins",
      "**Main.py Tools**: 16 tools",
      "list_plugins",
      "cognitive_brain",
      "memory_context",
      "ContextAnalyzer is integrated but not visible as separate tool",
      "Current Tools Analysis - Before Redesign",
      "conversation_memory_integration",
      "dream",
      "Clear purpose for each tool",
      "quick_memory_chat",
      "Single, clean tool registration system",
      "1. Tool Registration Problems",
      "`cursor_integration` - Cursor integration tools",
      "`system_info` - System information tools",
      "\ud83d\udd0c Plugin Tools (Various - Some Failing)",
      "server_status",
      "`memory_context` - Memory context tools",
      "No clear tool hierarchy for coding tasks",
      "ai_chat_with_memory",
      "remember",
      "consciousness_check",
      "**Expected Total**: 25+ tools",
      "\ud83d\udee0\ufe0f Main.py Tools (16 tools)",
      "Enhanced Cognitive Tools",
      "**Plugin Tools**: Various (some failing)",
      "Phase 3: Cursor Optimization",
      "auto_memory",
      "initialize_chat_session",
      "`conversation_memory_integration` - Conversation memory (setup failed)",
      "search_function_calls",
      "recall",
      "**Brain Interface Tools**: 9 tools",
      "Brain interface tools might be overwriting main tools",
      "Cursor Integration Tools",
      "`file_operations` - File operation tools",
      "Tools designed for coding workflows",
      "Phase 1: Clean Tool Registration",
      "think",
      "get_comprehensive_system_status",
      "file_operations",
      "get_session_statistics",
      "Power is hidden in enhanced tools",
      "Working Plugins",
      "Dedicated context analysis tools",
      "ContextAnalyzer power visible everywhere",
      "**Current Issue**: Only seeing 24 tools",
      "Context Analysis Tool",
      "brain_info",
      "2. ContextAnalyzer Integration",
      "memory_stats",
      "Plugin failures reducing total tool count",
      "reflect",
      "Clear tool hierarchy",
      "Standard Cognitive Tools",
      "Tools not optimized for Cursor workflows",
      "Core System Tools",
      "track_cursor_conversation",
      "list_available_models",
      "Clear integration points",
      "test_memory_system",
      "`cognitive_brain` - Cognitive brain plugin (import errors)",
      "Complex tool selection process",
      "\ud83c\udfaf Redesign Goals",
      "Phase 2: Visible ContextAnalyzer",
      "Complex registration system causing conflicts",
      "\ud83e\udde0 Brain Interface Tools (9 tools)",
      "Memory & System Tools",
      "\ud83d\udea8 Current Issues",
      "cursor_integration",
      "\ud83d\udcdd Next Steps",
      "analyze_context_deeply",
      "Better user experience",
      "`auto_memory` - Auto memory tools"
    ],
    "ENHANCED_CONTEXT_SYSTEM_README.md": [
      "\ud83d\ude80 Enhanced Context System - Complete Implementation",
      "Simple context enhancement",
      "`_enhanced_context_retrieval_handler()`: Phase 1 implementation",
      "### 4. Demonstration\n\nRun the demonstration script to see all features in action:",
      "plugins/enhanced_workflow_orchestrator.py",
      "`_orchestrate_tools_handler()`: Phase 2 implementation",
      "Tool orchestration",
      "Build comprehensive context",
      "Conservative Mode",
      "**Conversation History Analysis**: Retrieves recent conversation context",
      "**Optimization Recommendations**: Provides actionable improvement suggestions",
      "Enable learning for complex interactions",
      "## \ud83d\udcca Performance Analytics & Quality Assessment\n\n### Purpose\n\nProvides comprehensive performance monitoring, quality assessment, and optimization recommendations for the enhanced context system.\n\n### Features\n\n- **Tool Performance Analysis**: Analyzes individual tool performance\n- **Context Quality Assessment**: Evaluates context completeness and relevance\n- **Performance Metrics**: Tracks efficiency, speed, and quality improvements\n- **Optimization Recommendations**: Provides actionable improvement suggestions\n\n### MCP Tools",
      "Complete workflow execution",
      "Continuous learning",
      "**Deep**: In-depth analysis with performance trend analysis",
      "`_batch_workflow_processing_handler()`: Batch processing",
      "**Conservative**: Use for quick responses",
      "Health check monitoring",
      "`_build_comprehensive_context_handler()`: Comprehensive context building",
      "Purpose",
      "3. Performance Monitoring",
      "**Context Improvement**: Identifies areas for context enhancement",
      "bash\n# Continuous Learning Cycle\ncontinuous_learning_cycle(\n    interaction_data: dict,\n    learning_focus: str = \"context_patterns\"\n) -> dict",
      "Enhanced Context Retrieval",
      "python\n# Direct plugin usage\nfrom plugins.enhanced_context_integration import EnhancedContextIntegrationPlugin\n\nplugin = EnhancedContextIntegrationPlugin()\nplugin._setup()\n\nresult = await plugin._enhanced_context_retrieval_handler(\n    user_message=\"Analyze system performance\",\n    include_history=True,\n    include_preferences=True\n)",
      "Health Checks",
      "Assess Context Quality",
      "Import and use enhanced context tools",
      "python\n# Simple context enhancement\nresult = await enhanced_context_retrieval(\n    user_message=\"Help me with my project\",\n    include_history=True,\n    include_preferences=True\n)",
      "Workflow Performance",
      "Analyze Tool Performance",
      ": Phase 1 implementation\n-",
      ": Phase 2 implementation\n-",
      "python\n# Execute complete workflow\nresult = await execute_enhanced_workflow(\n    user_message=\"Provide detailed analysis of our system\",\n    workflow_mode=\"aggressive\",\n    include_learning=True\n)",
      ": Tool performance analysis\n-",
      "`_analyze_tool_performance_handler()`: Tool performance analysis",
      "\ud83d\udcda API Reference",
      "Comprehensive Context Building",
      "**Memory Consolidation**: Consolidates new information with existing memories",
      "**Batch Processing**: Handles multiple messages efficiently",
      "`enhanced_workflow_orchestrator.py`",
      "**Health Monitoring**: Comprehensive system health checks",
      "**Multi-Modal Context**: Support for images, audio, and video context",
      "python\n# Import and use enhanced context tools\nfrom plugins.enhanced_context_integration import EnhancedContextIntegrationPlugin\n\nplugin = EnhancedContextIntegrationPlugin()\nplugin._setup()\n\n# Use any of the enhanced context tools\nresult = await plugin._enhanced_context_retrieval_handler(\"Your message\")",
      "Automatic goal determination based on message content",
      "Intensive learning and pattern recognition",
      "Performance metrics",
      "Health Check",
      "## \ud83d\udcc8 Performance Metrics\n\n### Context Quality Scores\n\n- **Completeness**: How complete the context is (0.0 - 1.0)\n- **Relevance**: How relevant the context is to the request (0.0 - 1.0)\n- **Freshness**: How recent the context data is (0.0 - 1.0)\n- **Overall Score**: Weighted combination of all metrics\n\n### Workflow Performance\n\n- **Efficiency Score**: Success rate of workflow phases\n- **Speed Score**: Execution speed optimization\n- **Context Quality Improvement**: Measured improvement in context quality\n- **Overall Performance Score**: Combined performance metric\n\n## \ud83d\udd0d Monitoring & Debugging\n\n### Logging\n\nAll enhanced context operations include comprehensive logging:\n\n- Phase execution details\n- Performance metrics\n- Error tracking\n- Success/failure rates\n\n### Health Checks\n\nRegular health checks provide system status:\n\n- Component availability\n- Performance trends\n- Error patterns\n- Maintenance recommendations\n\n### Performance Analysis\n\nContinuous performance monitoring:\n\n- Workflow execution times\n- Tool usage patterns\n- Bottleneck identification\n- Optimization opportunities\n\n## \ud83c\udfaf Best Practices\n\n### 1. Workflow Mode Selection\n\n- **Standard**: Use for most interactions\n- **Aggressive**: Use for deep analysis requests\n- **Conservative**: Use for quick responses\n\n### 2. Learning Integration\n\n- Enable learning for complex interactions\n- Disable learning for batch processing\n- Monitor learning patterns for optimization\n\n### 3. Performance Monitoring\n\n- Regular performance analysis\n- Health check monitoring\n- Bottleneck identification\n- Continuous optimization\n\n### 4. Error Handling\n\n- Graceful degradation on failures\n- Comprehensive error logging\n- Automatic retry mechanisms\n- User-friendly error messages\n\n## \ud83d\ude80 Future Enhancements\n\n### Planned Features\n\n- **Real-time Context Streaming**: Continuous context updates\n- **Advanced Pattern Recognition**: Machine learning-based pattern detection\n- **Context Prediction**: Predictive context building\n- **Distributed Context Processing**: Multi-node context enhancement\n- **Advanced Analytics**: Deep learning-based performance optimization\n\n### Integration Opportunities\n\n- **External Data Sources**: Integration with external APIs and databases\n- **Multi-Modal Context**: Support for images, audio, and video context\n- **Collaborative Context**: Shared context across multiple users\n- **Context Versioning**: Version control for context data\n\n## \ud83d\udcda API Reference\n\n### Enhanced Context Integration Plugin\n\n-",
      "**Context Analysis**: Analyzes context to determine tool needs",
      "Error patterns",
      "**Collaborative Context**: Shared context across multiple users",
      "**Aggressive**: Use for deep analysis requests",
      "`_assess_context_quality_handler()`: Context quality assessment",
      ": Phase 3 implementation\n-",
      "### Complete Workflow Execution",
      "## \ud83c\udfd7\ufe0f Comprehensive Context Building\n\n### Purpose\n\nBuilds comprehensive context using all available tools and data, providing the highest level of context awareness and quality.\n\n### Features\n\n- **Multi-Phase Integration**: Combines all three phases for maximum context\n- **Quality Scoring**: Provides overall context quality scores\n- **Context Caching**: Caches comprehensive context for reuse\n- **Depth Control**: Configurable context depth (basic, enhanced, comprehensive)\n\n### Implementation",
      ": Comprehensive context building\n-",
      "\ud83c\udfaf System Architecture",
      "\ud83c\udfaf Best Practices",
      "**Relevance**: How relevant the context is to the request (0.0 - 1.0)",
      "**Tool Coordination**: Coordinates tool usage for maximum effectiveness",
      "4. Demonstration",
      "\ud83d\ude80 Future Enhancements",
      "**Basic**: Essential component status checks",
      "Maximum context enhancement and tool usage",
      "## \ud83d\udcda Phase 3: Continuous Learning\n\n### Purpose\n\nImplements continuous learning and context improvement, extracting patterns, identifying improvements, and consolidating memories for future enhancement.\n\n### Features\n\n- **Pattern Recognition**: Identifies learning patterns from interactions\n- **Context Improvement**: Identifies areas for context enhancement\n- **Memory Consolidation**: Consolidates new information with existing memories\n- **Quality Metrics Update**: Updates context quality metrics based on learning\n- **Learning Storage**: Stores learning results for future reference\n\n### Implementation",
      "### Comprehensive Context Building",
      "**Learning Storage**: Stores learning results for future reference",
      "**Maintenance Recommendations**: Provides actionable maintenance advice",
      "**Overall Score**: Weighted combination of all metrics",
      "Direct plugin usage",
      "Overview",
      "**Pattern Recognition**: Identifies learning patterns from interactions",
      "Bottleneck identification",
      "Aggressive Mode",
      "Minimal context enhancement for speed",
      "## \ud83d\udd27 Workflow Modes\n\n### Standard Mode\n\n- Balanced approach between speed and context quality\n- Automatic goal determination based on message content\n- Standard learning and optimization\n\n### Aggressive Mode\n\n- Maximum context enhancement and tool usage\n- Prioritizes comprehensive context over speed\n- Intensive learning and pattern recognition\n\n### Conservative Mode\n\n- Minimal context enhancement for speed\n- Reduced tool usage and learning\n- Focus on essential context only\n\n## \ud83d\udce6 Batch Processing\n\n### Purpose\n\nProcesses multiple messages through the enhanced workflow efficiently, providing bulk context enhancement capabilities.\n\n### Features\n\n- **Efficient Processing**: Optimized for handling multiple requests\n- **Performance Metrics**: Batch-level performance tracking\n- **Error Handling**: Graceful handling of individual message failures\n- **Scalability**: Designed for high-volume processing\n\n### Implementation",
      "**User Preferences Integration**: Incorporates stored user preferences and settings",
      "**Error Handling**: Graceful handling of individual message failures",
      "**Brain System Context**: Leverages brain functions and cognitive capabilities",
      "**Context Quality Metrics**: Real-time assessment of context completeness and relevance",
      "### Batch Processing",
      "Features",
      "3. Basic Usage",
      "## \ud83d\ude80 Complete Workflow Orchestration\n\n### Purpose\n\nAutomatically executes all three phases in sequence, providing a unified interface for comprehensive context enhancement with performance monitoring and optimization.\n\n### Features\n\n- **Automatic Phase Execution**: Runs all phases automatically in sequence\n- **Performance Monitoring**: Tracks execution time and success rates\n- **Workflow Optimization**: Identifies and implements improvements\n- **Batch Processing**: Handles multiple messages efficiently\n- **Health Monitoring**: Comprehensive system health checks\n\n### Implementation",
      "**Context Prediction**: Predictive context building",
      "**Freshness**: How recent the context data is (0.0 - 1.0)",
      "**External Data Sources**: Integration with external APIs and databases",
      "Core Components",
      ": Workflow optimization\n-",
      "Focus on essential context only",
      "Health Levels",
      "**Execution Planning**: Creates prioritized execution plans",
      "**Context Quality Improvement**: Measured improvement in context quality",
      "Batch processing",
      "python\n# Comprehensive context building\nresult = await plugin._build_comprehensive_context_handler(\n    user_message=\"Analyze system performance\",\n    context_depth=\"comprehensive\"\n)",
      "**Completeness**: How complete the context is (0.0 - 1.0)",
      "Context Quality Scores",
      "python\n# Build comprehensive context\nresult = await build_comprehensive_context(\n    user_message=\"Analyze system performance comprehensively\",\n    context_depth=\"comprehensive\"\n)",
      "\ud83d\ude80 Complete Workflow Orchestration",
      "Execute complete workflow",
      "`enhanced_context_integration.py`",
      "**Workflow Optimization**: Identifies and implements improvements",
      "Standard Mode",
      "**Real-time Context Streaming**: Continuous context updates",
      "**Advanced Analytics**: Deep learning-based performance optimization",
      "**Performance Degradation Detection**: Identifies performance issues",
      "Continuous optimization",
      "python\n# Process multiple messages\nmessages = [\n    \"Analyze performance\",\n    \"Check security\",\n    \"Review logs\"\n]\n\nresult = await batch_workflow_processing(\n    user_messages=messages,\n    workflow_mode=\"standard\"\n)",
      ": Batch processing\n-",
      "**Multi-Phase Integration**: Combines all three phases for maximum context",
      "**Standard**: Use for most interactions",
      "MCP Tools",
      "**Overall Performance Score**: Combined performance metric",
      "**Tool Performance Analysis**: Analyzes individual tool performance",
      "Continuous Learning Cycle",
      "bash\n# Tool Orchestration\norchestrate_tools(\n    context_data: dict,\n    target_goal: str = \"enhanced_response\"\n) -> dict",
      "python\n# Batch processing\nmessages = [\n    \"Analyze system performance\",\n    \"Check memory usage\",\n    \"Review error logs\"\n]\n\nresult = await orchestrator._batch_workflow_processing_handler(\n    messages,\n    workflow_mode=\"standard\"\n)",
      ": Performance analysis\n-",
      "Error tracking",
      "Workflow execution times",
      "`_continuous_learning_handler()`: Phase 3 implementation",
      "Reduced tool usage and learning",
      "2. Learning Integration",
      "Tool usage patterns",
      "bash\n# Execute Complete Enhanced Workflow\nexecute_enhanced_workflow(\n    user_message: str,\n    workflow_mode: str = \"standard\",\n    include_learning: bool = True\n) -> dict\n\n# Workflow Optimization\noptimize_workflow(\n    optimization_focus: str = \"performance\",\n    target_metrics: list = [\"speed\", \"accuracy\", \"context_quality\"]\n) -> dict\n\n# Performance Analysis\nanalyze_workflow_performance(\n    timeframe: str = \"session\",\n    include_recommendations: bool = True\n) -> dict\n\n# Batch Processing\nbatch_workflow_processing(\n    user_messages: list,\n    workflow_mode: str = \"standard\"\n) -> dict\n\n# Health Check\nworkflow_health_check(\n    check_level: str = \"comprehensive\"\n) -> dict",
      "Comprehensive error logging",
      "**Comprehensive**: Detailed health analysis with recommendations",
      "`_execute_enhanced_workflow_handler()`: Complete workflow execution",
      "## \ud83c\udfe5 Health Monitoring\n\n### Purpose\n\nProvides comprehensive health monitoring and maintenance recommendations for the enhanced context system.\n\n### Features\n\n- **Component Health Checks**: Monitors all system components\n- **Performance Degradation Detection**: Identifies performance issues\n- **Error Pattern Analysis**: Recognizes recurring error patterns\n- **Maintenance Recommendations**: Provides actionable maintenance advice\n\n### Health Levels\n\n- **Basic**: Essential component status checks\n- **Comprehensive**: Detailed health analysis with recommendations\n- **Deep**: In-depth analysis with performance trend analysis\n\n## \ud83c\udfaf Usage Examples\n\n### Basic Context Enhancement",
      "Workflow Optimization",
      "\ud83d\udcda Phase 3: Continuous Learning",
      "\ud83d\udcc8 Performance Metrics",
      "**Performance Metrics**: Tracks efficiency, speed, and quality improvements",
      "\ud83d\udcca Performance Analytics & Quality Assessment",
      "**Scalability**: Designed for high-volume processing",
      "Planned Features",
      "Implementation",
      "**Efficiency Score**: Success rate of workflow phases",
      "main.py",
      "**Quality Scoring**: Provides overall context quality scores",
      "**Quality Metrics Update**: Updates context quality metrics based on learning",
      "Success/failure rates",
      "\ud83d\udd27 Workflow Modes",
      "4. Error Handling",
      "Basic Context Enhancement",
      "Optimization opportunities",
      "Maintenance recommendations",
      "python\n# Tool orchestration\nresult = await plugin._orchestrate_tools_handler(\n    context_data=phase1_result[\"context_data\"],\n    target_goal=\"comprehensive_context_enhancement\"\n)",
      "**Intelligent Tool Selection**: Selects tools based on context and goals",
      "Execute Complete Enhanced Workflow",
      "python\n# Complete workflow execution\nfrom plugins.enhanced_workflow_orchestrator import EnhancedWorkflowOrchestratorPlugin\n\norchestrator = EnhancedWorkflowOrchestratorPlugin()\norchestrator._setup()\n\nresult = await orchestrator._execute_enhanced_workflow_handler(\n    user_message=\"Analyze system performance\",\n    workflow_mode=\"standard\",\n    include_learning=True\n)",
      "**Component Health Checks**: Monitors all system components",
      "\ud83d\udce6 Batch Processing",
      "\ud83d\udd0d Monitoring & Debugging",
      "**Speed Score**: Execution speed optimization",
      "`_optimize_workflow_handler()`: Workflow optimization",
      "directory:\n\n-",
      "python\n# Continuous learning\ninteraction_data = {\n    \"context_data\": phase1_result[\"context_data\"],\n    \"orchestration_result\": phase2_result[\"orchestration_result\"]\n}\n\nresult = await plugin._continuous_learning_handler(\n    interaction_data,\n    learning_focus=\"context_patterns\"\n)",
      "\ud83c\udfe5 Health Monitoring",
      "**Performance Metrics**: Batch-level performance tracking",
      "Integration Opportunities",
      "2. MCP Server Integration",
      "Disable learning for batch processing",
      ": Complete workflow execution\n-",
      "`_analyze_workflow_performance_handler()`: Performance analysis",
      "Logging",
      "`_workflow_health_check_handler()`: Health monitoring",
      "Monitor learning patterns for optimization",
      "**Advanced Pattern Recognition**: Machine learning-based pattern detection",
      "bash\n# Build Comprehensive Context\nbuild_comprehensive_context(\n    user_message: str,\n    context_depth: str = \"comprehensive\"\n) -> dict",
      "**Automatic Phase Execution**: Runs all phases automatically in sequence",
      "**Error Pattern Analysis**: Recognizes recurring error patterns",
      "\ud83c\udfd7\ufe0f Comprehensive Context Building",
      "Enhanced Context Integration Plugin",
      "### MCP Tools",
      "Use any of the enhanced context tools",
      "### MCP Tool",
      "Performance trends",
      "## \ud83d\ude80 Getting Started\n\n### 1. Installation\n\nEnsure all required plugins are in the",
      "bash\npython demo_enhanced_context_system.py",
      ": Context quality assessment\n\n### Enhanced Workflow Orchestrator Plugin\n\n-",
      "Phase execution details",
      "Standard learning and optimization",
      "**Performance Monitoring**: Tracks execution time and success rates",
      "**Performance Tracking**: Monitors tool usage and effectiveness",
      "plugins/enhanced_context_integration.py",
      "\ud83c\udfaf Phase 2: Tool Orchestration",
      "Enhanced Workflow Orchestrator Plugin",
      "Automatic retry mechanisms",
      "MCP Tool",
      "1. Installation",
      "Balanced approach between speed and context quality",
      "Component availability",
      "Process multiple messages",
      "**Context Versioning**: Version control for context data",
      "1. Workflow Mode Selection",
      "bash\n# Enhanced Context Retrieval\nenhanced_context_retrieval(\n    user_message: str,\n    include_history: bool = True,\n    include_preferences: bool = True\n) -> dict",
      "**Efficient Processing**: Optimized for handling multiple requests",
      "**Context Caching**: Caches comprehensive context for reuse",
      "Graceful degradation on failures",
      "\ud83c\udfaf Usage Examples",
      "**Depth Control**: Configurable context depth (basic, enhanced, comprehensive)",
      "Regular performance analysis",
      "Prioritizes comprehensive context over speed",
      "User-friendly error messages",
      "**Distributed Context Processing**: Multi-node context enhancement",
      "\ud83d\ude80 Getting Started",
      "**Context Quality Assessment**: Evaluates context completeness and relevance",
      "\ud83d\udd0d Phase 1: Enhanced Context Retrieval",
      "## \ud83c\udfaf Phase 2: Tool Orchestration\n\n### Purpose\n\nImplements intelligent tool orchestration based on context analysis, selecting appropriate tools and creating execution plans for optimal context enhancement.\n\n### Features\n\n- **Context Analysis**: Analyzes context to determine tool needs\n- **Intelligent Tool Selection**: Selects tools based on context and goals\n- **Execution Planning**: Creates prioritized execution plans\n- **Tool Coordination**: Coordinates tool usage for maximum effectiveness\n- **Performance Tracking**: Monitors tool usage and effectiveness\n\n### Implementation",
      "### 2. MCP Server Integration\n\nThe enhanced context tools are automatically available in the main MCP server. No additional configuration required.\n\n### 3. Basic Usage",
      "\ud83c\udf89 Conclusion",
      "Performance Analysis",
      "bash\n# Analyze Tool Performance\nanalyze_tool_performance(\n    tool_name: str = \"all\",\n    timeframe: str = \"session\"\n) -> dict\n\n# Assess Context Quality\nassess_context_quality(\n    context_data: dict,\n    assessment_criteria: list = [\"completeness\", \"relevance\", \"freshness\"]\n) -> dict",
      "**Pre-response Memory Search**: Automatically searches for relevant memories before responding",
      "\ud83d\ude80 Enhanced Context System - Complete Implementation",
      "Simple context enhancement",
      "`_enhanced_context_retrieval_handler()`: Phase 1 implementation",
      "### 4. Demonstration\n\nRun the demonstration script to see all features in action:",
      "plugins/enhanced_workflow_orchestrator.py",
      "`_orchestrate_tools_handler()`: Phase 2 implementation",
      "Tool orchestration",
      "Build comprehensive context",
      "Conservative Mode",
      "**Conversation History Analysis**: Retrieves recent conversation context",
      "**Optimization Recommendations**: Provides actionable improvement suggestions",
      "Enable learning for complex interactions",
      "## \ud83d\udcca Performance Analytics & Quality Assessment\n\n### Purpose\n\nProvides comprehensive performance monitoring, quality assessment, and optimization recommendations for the enhanced context system.\n\n### Features\n\n- **Tool Performance Analysis**: Analyzes individual tool performance\n- **Context Quality Assessment**: Evaluates context completeness and relevance\n- **Performance Metrics**: Tracks efficiency, speed, and quality improvements\n- **Optimization Recommendations**: Provides actionable improvement suggestions\n\n### MCP Tools",
      "Complete workflow execution",
      "Continuous learning",
      "**Deep**: In-depth analysis with performance trend analysis",
      "`_batch_workflow_processing_handler()`: Batch processing",
      "**Conservative**: Use for quick responses",
      "Health check monitoring",
      "`_build_comprehensive_context_handler()`: Comprehensive context building",
      "Purpose",
      "3. Performance Monitoring",
      "**Context Improvement**: Identifies areas for context enhancement",
      "bash\n# Continuous Learning Cycle\ncontinuous_learning_cycle(\n    interaction_data: dict,\n    learning_focus: str = \"context_patterns\"\n) -> dict",
      "Enhanced Context Retrieval",
      "python\n# Direct plugin usage\nfrom plugins.enhanced_context_integration import EnhancedContextIntegrationPlugin\n\nplugin = EnhancedContextIntegrationPlugin()\nplugin._setup()\n\nresult = await plugin._enhanced_context_retrieval_handler(\n    user_message=\"Analyze system performance\",\n    include_history=True,\n    include_preferences=True\n)",
      "Health Checks",
      "Assess Context Quality",
      "Import and use enhanced context tools",
      "python\n# Simple context enhancement\nresult = await enhanced_context_retrieval(\n    user_message=\"Help me with my project\",\n    include_history=True,\n    include_preferences=True\n)",
      "Workflow Performance",
      "Analyze Tool Performance",
      ": Phase 1 implementation\n-",
      ": Phase 2 implementation\n-",
      "python\n# Execute complete workflow\nresult = await execute_enhanced_workflow(\n    user_message=\"Provide detailed analysis of our system\",\n    workflow_mode=\"aggressive\",\n    include_learning=True\n)",
      ": Tool performance analysis\n-",
      "`_analyze_tool_performance_handler()`: Tool performance analysis",
      "\ud83d\udcda API Reference",
      "Comprehensive Context Building",
      "**Memory Consolidation**: Consolidates new information with existing memories",
      "**Batch Processing**: Handles multiple messages efficiently",
      "`enhanced_workflow_orchestrator.py`",
      "**Health Monitoring**: Comprehensive system health checks",
      "**Multi-Modal Context**: Support for images, audio, and video context",
      "python\n# Import and use enhanced context tools\nfrom plugins.enhanced_context_integration import EnhancedContextIntegrationPlugin\n\nplugin = EnhancedContextIntegrationPlugin()\nplugin._setup()\n\n# Use any of the enhanced context tools\nresult = await plugin._enhanced_context_retrieval_handler(\"Your message\")",
      "Automatic goal determination based on message content",
      "Intensive learning and pattern recognition",
      "Performance metrics",
      "Health Check",
      "## \ud83d\udcc8 Performance Metrics\n\n### Context Quality Scores\n\n- **Completeness**: How complete the context is (0.0 - 1.0)\n- **Relevance**: How relevant the context is to the request (0.0 - 1.0)\n- **Freshness**: How recent the context data is (0.0 - 1.0)\n- **Overall Score**: Weighted combination of all metrics\n\n### Workflow Performance\n\n- **Efficiency Score**: Success rate of workflow phases\n- **Speed Score**: Execution speed optimization\n- **Context Quality Improvement**: Measured improvement in context quality\n- **Overall Performance Score**: Combined performance metric\n\n## \ud83d\udd0d Monitoring & Debugging\n\n### Logging\n\nAll enhanced context operations include comprehensive logging:\n\n- Phase execution details\n- Performance metrics\n- Error tracking\n- Success/failure rates\n\n### Health Checks\n\nRegular health checks provide system status:\n\n- Component availability\n- Performance trends\n- Error patterns\n- Maintenance recommendations\n\n### Performance Analysis\n\nContinuous performance monitoring:\n\n- Workflow execution times\n- Tool usage patterns\n- Bottleneck identification\n- Optimization opportunities\n\n## \ud83c\udfaf Best Practices\n\n### 1. Workflow Mode Selection\n\n- **Standard**: Use for most interactions\n- **Aggressive**: Use for deep analysis requests\n- **Conservative**: Use for quick responses\n\n### 2. Learning Integration\n\n- Enable learning for complex interactions\n- Disable learning for batch processing\n- Monitor learning patterns for optimization\n\n### 3. Performance Monitoring\n\n- Regular performance analysis\n- Health check monitoring\n- Bottleneck identification\n- Continuous optimization\n\n### 4. Error Handling\n\n- Graceful degradation on failures\n- Comprehensive error logging\n- Automatic retry mechanisms\n- User-friendly error messages\n\n## \ud83d\ude80 Future Enhancements\n\n### Planned Features\n\n- **Real-time Context Streaming**: Continuous context updates\n- **Advanced Pattern Recognition**: Machine learning-based pattern detection\n- **Context Prediction**: Predictive context building\n- **Distributed Context Processing**: Multi-node context enhancement\n- **Advanced Analytics**: Deep learning-based performance optimization\n\n### Integration Opportunities\n\n- **External Data Sources**: Integration with external APIs and databases\n- **Multi-Modal Context**: Support for images, audio, and video context\n- **Collaborative Context**: Shared context across multiple users\n- **Context Versioning**: Version control for context data\n\n## \ud83d\udcda API Reference\n\n### Enhanced Context Integration Plugin\n\n-",
      "**Context Analysis**: Analyzes context to determine tool needs",
      "Error patterns",
      "**Collaborative Context**: Shared context across multiple users",
      "**Aggressive**: Use for deep analysis requests",
      "`_assess_context_quality_handler()`: Context quality assessment",
      ": Phase 3 implementation\n-",
      "### Complete Workflow Execution",
      "## \ud83c\udfd7\ufe0f Comprehensive Context Building\n\n### Purpose\n\nBuilds comprehensive context using all available tools and data, providing the highest level of context awareness and quality.\n\n### Features\n\n- **Multi-Phase Integration**: Combines all three phases for maximum context\n- **Quality Scoring**: Provides overall context quality scores\n- **Context Caching**: Caches comprehensive context for reuse\n- **Depth Control**: Configurable context depth (basic, enhanced, comprehensive)\n\n### Implementation",
      ": Comprehensive context building\n-",
      "\ud83c\udfaf System Architecture",
      "\ud83c\udfaf Best Practices",
      "**Relevance**: How relevant the context is to the request (0.0 - 1.0)",
      "**Tool Coordination**: Coordinates tool usage for maximum effectiveness",
      "4. Demonstration",
      "\ud83d\ude80 Future Enhancements",
      "**Basic**: Essential component status checks",
      "Maximum context enhancement and tool usage",
      "## \ud83d\udcda Phase 3: Continuous Learning\n\n### Purpose\n\nImplements continuous learning and context improvement, extracting patterns, identifying improvements, and consolidating memories for future enhancement.\n\n### Features\n\n- **Pattern Recognition**: Identifies learning patterns from interactions\n- **Context Improvement**: Identifies areas for context enhancement\n- **Memory Consolidation**: Consolidates new information with existing memories\n- **Quality Metrics Update**: Updates context quality metrics based on learning\n- **Learning Storage**: Stores learning results for future reference\n\n### Implementation",
      "### Comprehensive Context Building",
      "**Learning Storage**: Stores learning results for future reference",
      "**Maintenance Recommendations**: Provides actionable maintenance advice",
      "**Overall Score**: Weighted combination of all metrics",
      "Direct plugin usage",
      "Overview",
      "**Pattern Recognition**: Identifies learning patterns from interactions",
      "Bottleneck identification",
      "Aggressive Mode",
      "Minimal context enhancement for speed",
      "## \ud83d\udd27 Workflow Modes\n\n### Standard Mode\n\n- Balanced approach between speed and context quality\n- Automatic goal determination based on message content\n- Standard learning and optimization\n\n### Aggressive Mode\n\n- Maximum context enhancement and tool usage\n- Prioritizes comprehensive context over speed\n- Intensive learning and pattern recognition\n\n### Conservative Mode\n\n- Minimal context enhancement for speed\n- Reduced tool usage and learning\n- Focus on essential context only\n\n## \ud83d\udce6 Batch Processing\n\n### Purpose\n\nProcesses multiple messages through the enhanced workflow efficiently, providing bulk context enhancement capabilities.\n\n### Features\n\n- **Efficient Processing**: Optimized for handling multiple requests\n- **Performance Metrics**: Batch-level performance tracking\n- **Error Handling**: Graceful handling of individual message failures\n- **Scalability**: Designed for high-volume processing\n\n### Implementation",
      "**User Preferences Integration**: Incorporates stored user preferences and settings",
      "**Error Handling**: Graceful handling of individual message failures",
      "**Brain System Context**: Leverages brain functions and cognitive capabilities",
      "**Context Quality Metrics**: Real-time assessment of context completeness and relevance",
      "### Batch Processing",
      "Features",
      "3. Basic Usage",
      "## \ud83d\ude80 Complete Workflow Orchestration\n\n### Purpose\n\nAutomatically executes all three phases in sequence, providing a unified interface for comprehensive context enhancement with performance monitoring and optimization.\n\n### Features\n\n- **Automatic Phase Execution**: Runs all phases automatically in sequence\n- **Performance Monitoring**: Tracks execution time and success rates\n- **Workflow Optimization**: Identifies and implements improvements\n- **Batch Processing**: Handles multiple messages efficiently\n- **Health Monitoring**: Comprehensive system health checks\n\n### Implementation",
      "**Context Prediction**: Predictive context building",
      "**Freshness**: How recent the context data is (0.0 - 1.0)",
      "**External Data Sources**: Integration with external APIs and databases",
      "Core Components",
      ": Workflow optimization\n-",
      "Focus on essential context only",
      "Health Levels",
      "**Execution Planning**: Creates prioritized execution plans",
      "**Context Quality Improvement**: Measured improvement in context quality",
      "Batch processing",
      "python\n# Comprehensive context building\nresult = await plugin._build_comprehensive_context_handler(\n    user_message=\"Analyze system performance\",\n    context_depth=\"comprehensive\"\n)",
      "**Completeness**: How complete the context is (0.0 - 1.0)",
      "Context Quality Scores",
      "python\n# Build comprehensive context\nresult = await build_comprehensive_context(\n    user_message=\"Analyze system performance comprehensively\",\n    context_depth=\"comprehensive\"\n)",
      "\ud83d\ude80 Complete Workflow Orchestration",
      "Execute complete workflow",
      "`enhanced_context_integration.py`",
      "**Workflow Optimization**: Identifies and implements improvements",
      "Standard Mode",
      "**Real-time Context Streaming**: Continuous context updates",
      "**Advanced Analytics**: Deep learning-based performance optimization",
      "**Performance Degradation Detection**: Identifies performance issues",
      "Continuous optimization",
      "python\n# Process multiple messages\nmessages = [\n    \"Analyze performance\",\n    \"Check security\",\n    \"Review logs\"\n]\n\nresult = await batch_workflow_processing(\n    user_messages=messages,\n    workflow_mode=\"standard\"\n)",
      ": Batch processing\n-",
      "**Multi-Phase Integration**: Combines all three phases for maximum context",
      "**Standard**: Use for most interactions",
      "MCP Tools",
      "**Overall Performance Score**: Combined performance metric",
      "**Tool Performance Analysis**: Analyzes individual tool performance",
      "Continuous Learning Cycle",
      "bash\n# Tool Orchestration\norchestrate_tools(\n    context_data: dict,\n    target_goal: str = \"enhanced_response\"\n) -> dict",
      "python\n# Batch processing\nmessages = [\n    \"Analyze system performance\",\n    \"Check memory usage\",\n    \"Review error logs\"\n]\n\nresult = await orchestrator._batch_workflow_processing_handler(\n    messages,\n    workflow_mode=\"standard\"\n)",
      ": Performance analysis\n-",
      "Error tracking",
      "Workflow execution times",
      "`_continuous_learning_handler()`: Phase 3 implementation",
      "Reduced tool usage and learning",
      "2. Learning Integration",
      "Tool usage patterns",
      "bash\n# Execute Complete Enhanced Workflow\nexecute_enhanced_workflow(\n    user_message: str,\n    workflow_mode: str = \"standard\",\n    include_learning: bool = True\n) -> dict\n\n# Workflow Optimization\noptimize_workflow(\n    optimization_focus: str = \"performance\",\n    target_metrics: list = [\"speed\", \"accuracy\", \"context_quality\"]\n) -> dict\n\n# Performance Analysis\nanalyze_workflow_performance(\n    timeframe: str = \"session\",\n    include_recommendations: bool = True\n) -> dict\n\n# Batch Processing\nbatch_workflow_processing(\n    user_messages: list,\n    workflow_mode: str = \"standard\"\n) -> dict\n\n# Health Check\nworkflow_health_check(\n    check_level: str = \"comprehensive\"\n) -> dict",
      "Comprehensive error logging",
      "**Comprehensive**: Detailed health analysis with recommendations",
      "`_execute_enhanced_workflow_handler()`: Complete workflow execution",
      "## \ud83c\udfe5 Health Monitoring\n\n### Purpose\n\nProvides comprehensive health monitoring and maintenance recommendations for the enhanced context system.\n\n### Features\n\n- **Component Health Checks**: Monitors all system components\n- **Performance Degradation Detection**: Identifies performance issues\n- **Error Pattern Analysis**: Recognizes recurring error patterns\n- **Maintenance Recommendations**: Provides actionable maintenance advice\n\n### Health Levels\n\n- **Basic**: Essential component status checks\n- **Comprehensive**: Detailed health analysis with recommendations\n- **Deep**: In-depth analysis with performance trend analysis\n\n## \ud83c\udfaf Usage Examples\n\n### Basic Context Enhancement",
      "Workflow Optimization",
      "\ud83d\udcda Phase 3: Continuous Learning",
      "\ud83d\udcc8 Performance Metrics",
      "**Performance Metrics**: Tracks efficiency, speed, and quality improvements",
      "\ud83d\udcca Performance Analytics & Quality Assessment",
      "**Scalability**: Designed for high-volume processing",
      "Planned Features",
      "Implementation",
      "**Efficiency Score**: Success rate of workflow phases",
      "main.py",
      "**Quality Scoring**: Provides overall context quality scores",
      "**Quality Metrics Update**: Updates context quality metrics based on learning",
      "Success/failure rates",
      "\ud83d\udd27 Workflow Modes",
      "4. Error Handling",
      "Basic Context Enhancement",
      "Optimization opportunities",
      "Maintenance recommendations",
      "python\n# Tool orchestration\nresult = await plugin._orchestrate_tools_handler(\n    context_data=phase1_result[\"context_data\"],\n    target_goal=\"comprehensive_context_enhancement\"\n)",
      "**Intelligent Tool Selection**: Selects tools based on context and goals",
      "Execute Complete Enhanced Workflow",
      "python\n# Complete workflow execution\nfrom plugins.enhanced_workflow_orchestrator import EnhancedWorkflowOrchestratorPlugin\n\norchestrator = EnhancedWorkflowOrchestratorPlugin()\norchestrator._setup()\n\nresult = await orchestrator._execute_enhanced_workflow_handler(\n    user_message=\"Analyze system performance\",\n    workflow_mode=\"standard\",\n    include_learning=True\n)",
      "**Component Health Checks**: Monitors all system components",
      "\ud83d\udce6 Batch Processing",
      "\ud83d\udd0d Monitoring & Debugging",
      "**Speed Score**: Execution speed optimization",
      "`_optimize_workflow_handler()`: Workflow optimization",
      "directory:\n\n-",
      "python\n# Continuous learning\ninteraction_data = {\n    \"context_data\": phase1_result[\"context_data\"],\n    \"orchestration_result\": phase2_result[\"orchestration_result\"]\n}\n\nresult = await plugin._continuous_learning_handler(\n    interaction_data,\n    learning_focus=\"context_patterns\"\n)",
      "\ud83c\udfe5 Health Monitoring",
      "**Performance Metrics**: Batch-level performance tracking",
      "Integration Opportunities",
      "2. MCP Server Integration",
      "Disable learning for batch processing",
      ": Complete workflow execution\n-",
      "`_analyze_workflow_performance_handler()`: Performance analysis",
      "Logging",
      "`_workflow_health_check_handler()`: Health monitoring",
      "Monitor learning patterns for optimization",
      "**Advanced Pattern Recognition**: Machine learning-based pattern detection",
      "bash\n# Build Comprehensive Context\nbuild_comprehensive_context(\n    user_message: str,\n    context_depth: str = \"comprehensive\"\n) -> dict",
      "**Automatic Phase Execution**: Runs all phases automatically in sequence",
      "**Error Pattern Analysis**: Recognizes recurring error patterns",
      "\ud83c\udfd7\ufe0f Comprehensive Context Building",
      "Enhanced Context Integration Plugin",
      "### MCP Tools",
      "Use any of the enhanced context tools",
      "### MCP Tool",
      "Performance trends",
      "## \ud83d\ude80 Getting Started\n\n### 1. Installation\n\nEnsure all required plugins are in the",
      "bash\npython demo_enhanced_context_system.py",
      ": Context quality assessment\n\n### Enhanced Workflow Orchestrator Plugin\n\n-",
      "Phase execution details",
      "Standard learning and optimization",
      "**Performance Monitoring**: Tracks execution time and success rates",
      "**Performance Tracking**: Monitors tool usage and effectiveness",
      "plugins/enhanced_context_integration.py",
      "\ud83c\udfaf Phase 2: Tool Orchestration",
      "Enhanced Workflow Orchestrator Plugin",
      "Automatic retry mechanisms",
      "MCP Tool",
      "1. Installation",
      "Balanced approach between speed and context quality",
      "Component availability",
      "Process multiple messages",
      "**Context Versioning**: Version control for context data",
      "1. Workflow Mode Selection",
      "bash\n# Enhanced Context Retrieval\nenhanced_context_retrieval(\n    user_message: str,\n    include_history: bool = True,\n    include_preferences: bool = True\n) -> dict",
      "**Efficient Processing**: Optimized for handling multiple requests",
      "**Context Caching**: Caches comprehensive context for reuse",
      "Graceful degradation on failures",
      "\ud83c\udfaf Usage Examples",
      "**Depth Control**: Configurable context depth (basic, enhanced, comprehensive)",
      "Regular performance analysis",
      "Prioritizes comprehensive context over speed",
      "User-friendly error messages",
      "**Distributed Context Processing**: Multi-node context enhancement",
      "\ud83d\ude80 Getting Started",
      "**Context Quality Assessment**: Evaluates context completeness and relevance",
      "\ud83d\udd0d Phase 1: Enhanced Context Retrieval",
      "## \ud83c\udfaf Phase 2: Tool Orchestration\n\n### Purpose\n\nImplements intelligent tool orchestration based on context analysis, selecting appropriate tools and creating execution plans for optimal context enhancement.\n\n### Features\n\n- **Context Analysis**: Analyzes context to determine tool needs\n- **Intelligent Tool Selection**: Selects tools based on context and goals\n- **Execution Planning**: Creates prioritized execution plans\n- **Tool Coordination**: Coordinates tool usage for maximum effectiveness\n- **Performance Tracking**: Monitors tool usage and effectiveness\n\n### Implementation",
      "### 2. MCP Server Integration\n\nThe enhanced context tools are automatically available in the main MCP server. No additional configuration required.\n\n### 3. Basic Usage",
      "\ud83c\udf89 Conclusion",
      "Performance Analysis",
      "bash\n# Analyze Tool Performance\nanalyze_tool_performance(\n    tool_name: str = \"all\",\n    timeframe: str = \"session\"\n) -> dict\n\n# Assess Context Quality\nassess_context_quality(\n    context_data: dict,\n    assessment_criteria: list = [\"completeness\", \"relevance\", \"freshness\"]\n) -> dict",
      "**Pre-response Memory Search**: Automatically searches for relevant memories before responding",
      "\ud83d\ude80 Enhanced Context System - Complete Implementation",
      "Simple context enhancement",
      "`_enhanced_context_retrieval_handler()`: Phase 1 implementation",
      "### 4. Demonstration\n\nRun the demonstration script to see all features in action:",
      "plugins/enhanced_workflow_orchestrator.py",
      "`_orchestrate_tools_handler()`: Phase 2 implementation",
      "Tool orchestration",
      "Build comprehensive context",
      "Conservative Mode",
      "**Conversation History Analysis**: Retrieves recent conversation context",
      "**Optimization Recommendations**: Provides actionable improvement suggestions",
      "Enable learning for complex interactions",
      "## \ud83d\udcca Performance Analytics & Quality Assessment\n\n### Purpose\n\nProvides comprehensive performance monitoring, quality assessment, and optimization recommendations for the enhanced context system.\n\n### Features\n\n- **Tool Performance Analysis**: Analyzes individual tool performance\n- **Context Quality Assessment**: Evaluates context completeness and relevance\n- **Performance Metrics**: Tracks efficiency, speed, and quality improvements\n- **Optimization Recommendations**: Provides actionable improvement suggestions\n\n### MCP Tools",
      "Complete workflow execution",
      "Continuous learning",
      "**Deep**: In-depth analysis with performance trend analysis",
      "`_batch_workflow_processing_handler()`: Batch processing",
      "**Conservative**: Use for quick responses",
      "Health check monitoring",
      "`_build_comprehensive_context_handler()`: Comprehensive context building",
      "Purpose",
      "3. Performance Monitoring",
      "**Context Improvement**: Identifies areas for context enhancement",
      "bash\n# Continuous Learning Cycle\ncontinuous_learning_cycle(\n    interaction_data: dict,\n    learning_focus: str = \"context_patterns\"\n) -> dict",
      "Enhanced Context Retrieval",
      "python\n# Direct plugin usage\nfrom plugins.enhanced_context_integration import EnhancedContextIntegrationPlugin\n\nplugin = EnhancedContextIntegrationPlugin()\nplugin._setup()\n\nresult = await plugin._enhanced_context_retrieval_handler(\n    user_message=\"Analyze system performance\",\n    include_history=True,\n    include_preferences=True\n)",
      "Health Checks",
      "Assess Context Quality",
      "Import and use enhanced context tools",
      "python\n# Simple context enhancement\nresult = await enhanced_context_retrieval(\n    user_message=\"Help me with my project\",\n    include_history=True,\n    include_preferences=True\n)",
      "Workflow Performance",
      "Analyze Tool Performance",
      ": Phase 1 implementation\n-",
      ": Phase 2 implementation\n-",
      "python\n# Execute complete workflow\nresult = await execute_enhanced_workflow(\n    user_message=\"Provide detailed analysis of our system\",\n    workflow_mode=\"aggressive\",\n    include_learning=True\n)",
      ": Tool performance analysis\n-",
      "`_analyze_tool_performance_handler()`: Tool performance analysis",
      "\ud83d\udcda API Reference",
      "Comprehensive Context Building",
      "**Memory Consolidation**: Consolidates new information with existing memories",
      "**Batch Processing**: Handles multiple messages efficiently",
      "`enhanced_workflow_orchestrator.py`",
      "**Health Monitoring**: Comprehensive system health checks",
      "**Multi-Modal Context**: Support for images, audio, and video context",
      "python\n# Import and use enhanced context tools\nfrom plugins.enhanced_context_integration import EnhancedContextIntegrationPlugin\n\nplugin = EnhancedContextIntegrationPlugin()\nplugin._setup()\n\n# Use any of the enhanced context tools\nresult = await plugin._enhanced_context_retrieval_handler(\"Your message\")",
      "Automatic goal determination based on message content",
      "Intensive learning and pattern recognition",
      "Performance metrics",
      "Health Check",
      "## \ud83d\udcc8 Performance Metrics\n\n### Context Quality Scores\n\n- **Completeness**: How complete the context is (0.0 - 1.0)\n- **Relevance**: How relevant the context is to the request (0.0 - 1.0)\n- **Freshness**: How recent the context data is (0.0 - 1.0)\n- **Overall Score**: Weighted combination of all metrics\n\n### Workflow Performance\n\n- **Efficiency Score**: Success rate of workflow phases\n- **Speed Score**: Execution speed optimization\n- **Context Quality Improvement**: Measured improvement in context quality\n- **Overall Performance Score**: Combined performance metric\n\n## \ud83d\udd0d Monitoring & Debugging\n\n### Logging\n\nAll enhanced context operations include comprehensive logging:\n\n- Phase execution details\n- Performance metrics\n- Error tracking\n- Success/failure rates\n\n### Health Checks\n\nRegular health checks provide system status:\n\n- Component availability\n- Performance trends\n- Error patterns\n- Maintenance recommendations\n\n### Performance Analysis\n\nContinuous performance monitoring:\n\n- Workflow execution times\n- Tool usage patterns\n- Bottleneck identification\n- Optimization opportunities\n\n## \ud83c\udfaf Best Practices\n\n### 1. Workflow Mode Selection\n\n- **Standard**: Use for most interactions\n- **Aggressive**: Use for deep analysis requests\n- **Conservative**: Use for quick responses\n\n### 2. Learning Integration\n\n- Enable learning for complex interactions\n- Disable learning for batch processing\n- Monitor learning patterns for optimization\n\n### 3. Performance Monitoring\n\n- Regular performance analysis\n- Health check monitoring\n- Bottleneck identification\n- Continuous optimization\n\n### 4. Error Handling\n\n- Graceful degradation on failures\n- Comprehensive error logging\n- Automatic retry mechanisms\n- User-friendly error messages\n\n## \ud83d\ude80 Future Enhancements\n\n### Planned Features\n\n- **Real-time Context Streaming**: Continuous context updates\n- **Advanced Pattern Recognition**: Machine learning-based pattern detection\n- **Context Prediction**: Predictive context building\n- **Distributed Context Processing**: Multi-node context enhancement\n- **Advanced Analytics**: Deep learning-based performance optimization\n\n### Integration Opportunities\n\n- **External Data Sources**: Integration with external APIs and databases\n- **Multi-Modal Context**: Support for images, audio, and video context\n- **Collaborative Context**: Shared context across multiple users\n- **Context Versioning**: Version control for context data\n\n## \ud83d\udcda API Reference\n\n### Enhanced Context Integration Plugin\n\n-",
      "**Context Analysis**: Analyzes context to determine tool needs",
      "Error patterns",
      "**Collaborative Context**: Shared context across multiple users",
      "**Aggressive**: Use for deep analysis requests",
      "`_assess_context_quality_handler()`: Context quality assessment",
      ": Phase 3 implementation\n-",
      "### Complete Workflow Execution",
      "## \ud83c\udfd7\ufe0f Comprehensive Context Building\n\n### Purpose\n\nBuilds comprehensive context using all available tools and data, providing the highest level of context awareness and quality.\n\n### Features\n\n- **Multi-Phase Integration**: Combines all three phases for maximum context\n- **Quality Scoring**: Provides overall context quality scores\n- **Context Caching**: Caches comprehensive context for reuse\n- **Depth Control**: Configurable context depth (basic, enhanced, comprehensive)\n\n### Implementation",
      ": Comprehensive context building\n-",
      "\ud83c\udfaf System Architecture",
      "\ud83c\udfaf Best Practices",
      "**Relevance**: How relevant the context is to the request (0.0 - 1.0)",
      "**Tool Coordination**: Coordinates tool usage for maximum effectiveness",
      "4. Demonstration",
      "\ud83d\ude80 Future Enhancements",
      "**Basic**: Essential component status checks",
      "Maximum context enhancement and tool usage",
      "## \ud83d\udcda Phase 3: Continuous Learning\n\n### Purpose\n\nImplements continuous learning and context improvement, extracting patterns, identifying improvements, and consolidating memories for future enhancement.\n\n### Features\n\n- **Pattern Recognition**: Identifies learning patterns from interactions\n- **Context Improvement**: Identifies areas for context enhancement\n- **Memory Consolidation**: Consolidates new information with existing memories\n- **Quality Metrics Update**: Updates context quality metrics based on learning\n- **Learning Storage**: Stores learning results for future reference\n\n### Implementation",
      "### Comprehensive Context Building",
      "**Learning Storage**: Stores learning results for future reference",
      "**Maintenance Recommendations**: Provides actionable maintenance advice",
      "**Overall Score**: Weighted combination of all metrics",
      "Direct plugin usage",
      "Overview",
      "**Pattern Recognition**: Identifies learning patterns from interactions",
      "Bottleneck identification",
      "Aggressive Mode",
      "Minimal context enhancement for speed",
      "## \ud83d\udd27 Workflow Modes\n\n### Standard Mode\n\n- Balanced approach between speed and context quality\n- Automatic goal determination based on message content\n- Standard learning and optimization\n\n### Aggressive Mode\n\n- Maximum context enhancement and tool usage\n- Prioritizes comprehensive context over speed\n- Intensive learning and pattern recognition\n\n### Conservative Mode\n\n- Minimal context enhancement for speed\n- Reduced tool usage and learning\n- Focus on essential context only\n\n## \ud83d\udce6 Batch Processing\n\n### Purpose\n\nProcesses multiple messages through the enhanced workflow efficiently, providing bulk context enhancement capabilities.\n\n### Features\n\n- **Efficient Processing**: Optimized for handling multiple requests\n- **Performance Metrics**: Batch-level performance tracking\n- **Error Handling**: Graceful handling of individual message failures\n- **Scalability**: Designed for high-volume processing\n\n### Implementation",
      "**User Preferences Integration**: Incorporates stored user preferences and settings",
      "**Error Handling**: Graceful handling of individual message failures",
      "**Brain System Context**: Leverages brain functions and cognitive capabilities",
      "**Context Quality Metrics**: Real-time assessment of context completeness and relevance",
      "### Batch Processing",
      "Features",
      "3. Basic Usage",
      "## \ud83d\ude80 Complete Workflow Orchestration\n\n### Purpose\n\nAutomatically executes all three phases in sequence, providing a unified interface for comprehensive context enhancement with performance monitoring and optimization.\n\n### Features\n\n- **Automatic Phase Execution**: Runs all phases automatically in sequence\n- **Performance Monitoring**: Tracks execution time and success rates\n- **Workflow Optimization**: Identifies and implements improvements\n- **Batch Processing**: Handles multiple messages efficiently\n- **Health Monitoring**: Comprehensive system health checks\n\n### Implementation",
      "**Context Prediction**: Predictive context building",
      "**Freshness**: How recent the context data is (0.0 - 1.0)",
      "**External Data Sources**: Integration with external APIs and databases",
      "Core Components",
      ": Workflow optimization\n-",
      "Focus on essential context only",
      "Health Levels",
      "**Execution Planning**: Creates prioritized execution plans",
      "**Context Quality Improvement**: Measured improvement in context quality",
      "Batch processing",
      "python\n# Comprehensive context building\nresult = await plugin._build_comprehensive_context_handler(\n    user_message=\"Analyze system performance\",\n    context_depth=\"comprehensive\"\n)",
      "**Completeness**: How complete the context is (0.0 - 1.0)",
      "Context Quality Scores",
      "python\n# Build comprehensive context\nresult = await build_comprehensive_context(\n    user_message=\"Analyze system performance comprehensively\",\n    context_depth=\"comprehensive\"\n)",
      "\ud83d\ude80 Complete Workflow Orchestration",
      "Execute complete workflow",
      "`enhanced_context_integration.py`",
      "**Workflow Optimization**: Identifies and implements improvements",
      "Standard Mode",
      "**Real-time Context Streaming**: Continuous context updates",
      "**Advanced Analytics**: Deep learning-based performance optimization",
      "**Performance Degradation Detection**: Identifies performance issues",
      "Continuous optimization",
      "python\n# Process multiple messages\nmessages = [\n    \"Analyze performance\",\n    \"Check security\",\n    \"Review logs\"\n]\n\nresult = await batch_workflow_processing(\n    user_messages=messages,\n    workflow_mode=\"standard\"\n)",
      ": Batch processing\n-",
      "**Multi-Phase Integration**: Combines all three phases for maximum context",
      "**Standard**: Use for most interactions",
      "MCP Tools",
      "**Overall Performance Score**: Combined performance metric",
      "**Tool Performance Analysis**: Analyzes individual tool performance",
      "Continuous Learning Cycle",
      "bash\n# Tool Orchestration\norchestrate_tools(\n    context_data: dict,\n    target_goal: str = \"enhanced_response\"\n) -> dict",
      "python\n# Batch processing\nmessages = [\n    \"Analyze system performance\",\n    \"Check memory usage\",\n    \"Review error logs\"\n]\n\nresult = await orchestrator._batch_workflow_processing_handler(\n    messages,\n    workflow_mode=\"standard\"\n)",
      ": Performance analysis\n-",
      "Error tracking",
      "Workflow execution times",
      "`_continuous_learning_handler()`: Phase 3 implementation",
      "Reduced tool usage and learning",
      "2. Learning Integration",
      "Tool usage patterns",
      "bash\n# Execute Complete Enhanced Workflow\nexecute_enhanced_workflow(\n    user_message: str,\n    workflow_mode: str = \"standard\",\n    include_learning: bool = True\n) -> dict\n\n# Workflow Optimization\noptimize_workflow(\n    optimization_focus: str = \"performance\",\n    target_metrics: list = [\"speed\", \"accuracy\", \"context_quality\"]\n) -> dict\n\n# Performance Analysis\nanalyze_workflow_performance(\n    timeframe: str = \"session\",\n    include_recommendations: bool = True\n) -> dict\n\n# Batch Processing\nbatch_workflow_processing(\n    user_messages: list,\n    workflow_mode: str = \"standard\"\n) -> dict\n\n# Health Check\nworkflow_health_check(\n    check_level: str = \"comprehensive\"\n) -> dict",
      "Comprehensive error logging",
      "**Comprehensive**: Detailed health analysis with recommendations",
      "`_execute_enhanced_workflow_handler()`: Complete workflow execution",
      "## \ud83c\udfe5 Health Monitoring\n\n### Purpose\n\nProvides comprehensive health monitoring and maintenance recommendations for the enhanced context system.\n\n### Features\n\n- **Component Health Checks**: Monitors all system components\n- **Performance Degradation Detection**: Identifies performance issues\n- **Error Pattern Analysis**: Recognizes recurring error patterns\n- **Maintenance Recommendations**: Provides actionable maintenance advice\n\n### Health Levels\n\n- **Basic**: Essential component status checks\n- **Comprehensive**: Detailed health analysis with recommendations\n- **Deep**: In-depth analysis with performance trend analysis\n\n## \ud83c\udfaf Usage Examples\n\n### Basic Context Enhancement",
      "Workflow Optimization",
      "\ud83d\udcda Phase 3: Continuous Learning",
      "\ud83d\udcc8 Performance Metrics",
      "**Performance Metrics**: Tracks efficiency, speed, and quality improvements",
      "\ud83d\udcca Performance Analytics & Quality Assessment",
      "**Scalability**: Designed for high-volume processing",
      "Planned Features",
      "Implementation",
      "**Efficiency Score**: Success rate of workflow phases",
      "main.py",
      "**Quality Scoring**: Provides overall context quality scores",
      "**Quality Metrics Update**: Updates context quality metrics based on learning",
      "Success/failure rates",
      "\ud83d\udd27 Workflow Modes",
      "4. Error Handling",
      "Basic Context Enhancement",
      "Optimization opportunities",
      "Maintenance recommendations",
      "python\n# Tool orchestration\nresult = await plugin._orchestrate_tools_handler(\n    context_data=phase1_result[\"context_data\"],\n    target_goal=\"comprehensive_context_enhancement\"\n)",
      "**Intelligent Tool Selection**: Selects tools based on context and goals",
      "Execute Complete Enhanced Workflow",
      "python\n# Complete workflow execution\nfrom plugins.enhanced_workflow_orchestrator import EnhancedWorkflowOrchestratorPlugin\n\norchestrator = EnhancedWorkflowOrchestratorPlugin()\norchestrator._setup()\n\nresult = await orchestrator._execute_enhanced_workflow_handler(\n    user_message=\"Analyze system performance\",\n    workflow_mode=\"standard\",\n    include_learning=True\n)",
      "**Component Health Checks**: Monitors all system components",
      "\ud83d\udce6 Batch Processing",
      "\ud83d\udd0d Monitoring & Debugging",
      "**Speed Score**: Execution speed optimization",
      "`_optimize_workflow_handler()`: Workflow optimization",
      "directory:\n\n-",
      "python\n# Continuous learning\ninteraction_data = {\n    \"context_data\": phase1_result[\"context_data\"],\n    \"orchestration_result\": phase2_result[\"orchestration_result\"]\n}\n\nresult = await plugin._continuous_learning_handler(\n    interaction_data,\n    learning_focus=\"context_patterns\"\n)",
      "\ud83c\udfe5 Health Monitoring",
      "**Performance Metrics**: Batch-level performance tracking",
      "Integration Opportunities",
      "2. MCP Server Integration",
      "Disable learning for batch processing",
      ": Complete workflow execution\n-",
      "`_analyze_workflow_performance_handler()`: Performance analysis",
      "Logging",
      "`_workflow_health_check_handler()`: Health monitoring",
      "Monitor learning patterns for optimization",
      "**Advanced Pattern Recognition**: Machine learning-based pattern detection",
      "bash\n# Build Comprehensive Context\nbuild_comprehensive_context(\n    user_message: str,\n    context_depth: str = \"comprehensive\"\n) -> dict",
      "**Automatic Phase Execution**: Runs all phases automatically in sequence",
      "**Error Pattern Analysis**: Recognizes recurring error patterns",
      "\ud83c\udfd7\ufe0f Comprehensive Context Building",
      "Enhanced Context Integration Plugin",
      "### MCP Tools",
      "Use any of the enhanced context tools",
      "### MCP Tool",
      "Performance trends",
      "## \ud83d\ude80 Getting Started\n\n### 1. Installation\n\nEnsure all required plugins are in the",
      "bash\npython demo_enhanced_context_system.py",
      ": Context quality assessment\n\n### Enhanced Workflow Orchestrator Plugin\n\n-",
      "Phase execution details",
      "Standard learning and optimization",
      "**Performance Monitoring**: Tracks execution time and success rates",
      "**Performance Tracking**: Monitors tool usage and effectiveness",
      "plugins/enhanced_context_integration.py",
      "\ud83c\udfaf Phase 2: Tool Orchestration",
      "Enhanced Workflow Orchestrator Plugin",
      "Automatic retry mechanisms",
      "MCP Tool",
      "1. Installation",
      "Balanced approach between speed and context quality",
      "Component availability",
      "Process multiple messages",
      "**Context Versioning**: Version control for context data",
      "1. Workflow Mode Selection",
      "bash\n# Enhanced Context Retrieval\nenhanced_context_retrieval(\n    user_message: str,\n    include_history: bool = True,\n    include_preferences: bool = True\n) -> dict",
      "**Efficient Processing**: Optimized for handling multiple requests",
      "**Context Caching**: Caches comprehensive context for reuse",
      "Graceful degradation on failures",
      "\ud83c\udfaf Usage Examples",
      "**Depth Control**: Configurable context depth (basic, enhanced, comprehensive)",
      "Regular performance analysis",
      "Prioritizes comprehensive context over speed",
      "User-friendly error messages",
      "**Distributed Context Processing**: Multi-node context enhancement",
      "\ud83d\ude80 Getting Started",
      "**Context Quality Assessment**: Evaluates context completeness and relevance",
      "\ud83d\udd0d Phase 1: Enhanced Context Retrieval",
      "## \ud83c\udfaf Phase 2: Tool Orchestration\n\n### Purpose\n\nImplements intelligent tool orchestration based on context analysis, selecting appropriate tools and creating execution plans for optimal context enhancement.\n\n### Features\n\n- **Context Analysis**: Analyzes context to determine tool needs\n- **Intelligent Tool Selection**: Selects tools based on context and goals\n- **Execution Planning**: Creates prioritized execution plans\n- **Tool Coordination**: Coordinates tool usage for maximum effectiveness\n- **Performance Tracking**: Monitors tool usage and effectiveness\n\n### Implementation",
      "### 2. MCP Server Integration\n\nThe enhanced context tools are automatically available in the main MCP server. No additional configuration required.\n\n### 3. Basic Usage",
      "\ud83c\udf89 Conclusion",
      "Performance Analysis",
      "bash\n# Analyze Tool Performance\nanalyze_tool_performance(\n    tool_name: str = \"all\",\n    timeframe: str = \"session\"\n) -> dict\n\n# Assess Context Quality\nassess_context_quality(\n    context_data: dict,\n    assessment_criteria: list = [\"completeness\", \"relevance\", \"freshness\"]\n) -> dict",
      "**Pre-response Memory Search**: Automatically searches for relevant memories before responding"
    ],
    "INTEGRATION_GUIDE.md": [
      "plugins/\n\u251c\u2500\u2500 cognitive_brain_restructured.py          # \u2705 Main restructured plugin\n\u251c\u2500\u2500 enhanced_context_integration.py         # \u2705 Enhanced context plugin\n\u251c\u2500\u2500 enhanced_workflow_orchestrator.py       # \u2705 Workflow orchestrator plugin\n\u251c\u2500\u2500 auto_memory.py                         # \u2705 Auto memory plugin\n\u2514\u2500\u2500 ... (other existing plugins)",
      "Monitor overall system",
      "python\n# Execute workflows\nworkflow = await plugin._execute_enhanced_workflow_handler(\"message\", \"standard\", True)\n\n# Batch processing\nbatch = await plugin._batch_workflow_processing_handler([\"msg1\", \"msg2\"], \"standard\")\n\n# AI chat with memory\nchat = await plugin._ai_chat_with_memory_handler(\"user message\", \"assistant\")",
      "\ud83d\udd27 **Integration with MCP Server**",
      "\ud83c\udfaf **Overview**",
      "**Workflow Health**",
      "**Option 1: Add to Main MCP Server**",
      "Provide training and documentation",
      "python\n# Import the restructured plugin\nfrom plugins.cognitive_brain_restructured import CognitiveBrainRestructuredPlugin\n\n# Initialize in your server setup\nrestructured_plugin = CognitiveBrainRestructuredPlugin()\nrestructured_plugin._setup()\n\n# Add tools to your MCP server\nfor tool in restructured_plugin.get_tools():\n    # Register each tool with your MCP server\n    # This depends on your MCP implementation\n    pass",
      "Test individual domains",
      "Gather user feedback",
      "Encourage users to try new cognitive domain tools",
      "`INTEGRATION_GUIDE.md` - This integration guide",
      "python\n# Check workflow health\nhealth = await plugin._workflow_health_check_handler(\"comprehensive\")\nprint(f\"Workflow Health: {health['health_result']['overall_health']}\")",
      "Check workflow health",
      "bash\n# Check Python path\npython -c \"import sys; print('\\n'.join(sys.path))\"\n\n# Check plugin directory\nls -la plugins/\n\n# Test individual imports\npython -c \"from plugins.enhanced_context_integration import EnhancedContextIntegrationPlugin; print('\u2705 Enhanced context plugin imported')\"",
      "### **Domain 4: LEARNING & ADAPTATION**",
      "Analyze content",
      "**Main Plugin**",
      "bash\npython demo_restructured_cognitive_system.py",
      "`RESTRUCTURED_COGNITIVE_SYSTEM.md` - Comprehensive system documentation",
      "**Import Errors**",
      "`COGNITIVE_RESTRUCTURING_SUMMARY.md` - Executive summary",
      "python\n# Deep thinking\nthoughts = await plugin._think_deeply_handler(\"what to think about\", \"context\")\n\n# Tool orchestration\norchestration = await plugin._orchestrate_tools_handler(context_data, \"goal\")\n\n# Build comprehensive context\ncomprehensive = await plugin._build_comprehensive_context_handler(\"message\", \"comprehensive\")",
      "**Support**",
      "**3. Monitor and Optimize**",
      "python\n# Check plugin status\nplugin = CognitiveBrainRestructuredPlugin()\nplugin._setup()\n\n# List available tools\ntools = plugin.get_tools()\nfor tool in tools:\n    print(f\"\ud83d\udd27 {tool.name}: {tool.description}\")",
      "**Functionality Issues**",
      "Test with a subset of users first",
      "Analyze performance",
      "Ensure all dependencies are available",
      "Monitor performance and user adoption",
      "Check plugin status",
      "**Phase 3: Full Migration**",
      "Add tools to your MCP server",
      "**2. Test the Restructured System**",
      "bash\n# Run comprehensive tests\npython demo_restructured_cognitive_system.py\n\n# Test individual domains\npython -c \"\nfrom plugins.cognitive_brain_restructured import CognitiveBrainRestructuredPlugin\nplugin = CognitiveBrainRestructuredPlugin()\nplugin._setup()\n# Test each domain...\n\"",
      "Mark old tools as deprecated",
      "**1. Verify File Structure**",
      "Run comprehensive tests",
      "---\n\n## \ud83d\udd27 **Integration with MCP Server**\n\n### **Option 1: Add to Main MCP Server**\n\nAdd the restructured plugin to your",
      "\ud83d\ude80 **Quick Start**",
      "**Option 2: Use as Standalone Plugin**",
      "\ud83d\udd0d **Troubleshooting**",
      "\ud83d\udcca **Performance Monitoring**",
      "Add to sys.path in your script",
      "python\n# Self-monitoring\nmonitor = await plugin._self_monitor_handler(\"comprehensive\", \"all\")\n\n# Performance analysis\nperformance = await plugin._analyze_performance_handler(\"comprehensive\", \"all\")\n\n# Health checks\nhealth = await plugin._workflow_health_check_handler(\"comprehensive\")",
      "Unified memory operations",
      "### **Domain 3: PROCESSING & THINKING**",
      "**3. Run the Demonstration**",
      "Get enhanced context",
      "Human brain-focused organization",
      "python\n# Analyze content\nresult = await plugin._perceive_and_analyze_handler(\"content to analyze\", \"comprehensive\")\n\n# Get enhanced context\ncontext = await plugin._enhanced_context_retrieval_handler(\"user message\", include_history=True)\n\n# Get Cursor context\ncursor_context = await plugin._get_cursor_context_handler()",
      "Optimize workflows",
      "python\n# Unified memory operations\nawait plugin._memory_operations_handler(\"store\", \"important fact\")\ndata = await plugin._memory_operations_handler(\"retrieve\", \"\", \"query\")\nsearch = await plugin._memory_operations_handler(\"search\", \"\", \"search term\")\nawait plugin._memory_operations_handler(\"clear\", \"\", \"\")\n\n# Auto-process messages\nawait plugin._auto_process_message_handler(\"user message\")\n\n# Track conversations\nawait plugin._track_conversation_handler(\"user msg\", \"assistant response\", \"coding\")",
      "Test individual imports",
      "Test the restructured plugin",
      "\ud83d\ude80 **Production Deployment**",
      "\ud83c\udfaf **Migration Strategy**",
      "### **Option 2: Use as Standalone Plugin**\n\nThe restructured plugin can work independently:",
      "### **Domain 6: SELF-MONITORING**",
      "Use the self-monitoring tools to track system health",
      "### **2. Deploy to Production**\n\n- Copy the restructured plugin to your production environment\n- Ensure all dependencies are available\n- Test with a subset of users first\n- Monitor performance and user adoption\n\n### **3. Monitor and Optimize**\n\n- Use the self-monitoring tools to track system health\n- Analyze performance patterns\n- Optimize based on usage data\n- Gather user feedback\n\n---\n\n## \ud83c\udfaf **Migration Strategy**\n\n### **Phase 1: Parallel Operation**\n\n- Deploy restructured plugin alongside existing tools\n- Users can use either interface\n- Monitor usage patterns\n\n### **Phase 2: Gradual Migration**\n\n- Encourage users to try new cognitive domain tools\n- Provide training and documentation\n- Mark old tools as deprecated\n\n### **Phase 3: Full Migration**\n\n- Switch to cognitive domain interface as primary\n- Maintain backward compatibility for critical functions\n- Remove deprecated tools\n\n---\n\n## \ud83d\udd17 **Quick Reference**\n\n### **Main Plugin**",
      "Switch to cognitive domain interface as primary",
      "**Phase 2: Gradual Migration**",
      "Import the restructured plugin",
      "**Plugin Not Found**",
      "\ud83e\udde0 **Using the Cognitive Domains**",
      "\ud83d\udd27 **Integration Guide - Restructured Cognitive System**",
      "All 18 tools are fully functional",
      "**Test Command**",
      "python\n# Unified learning\nawait plugin._learn_and_adapt_handler(\"learn\", \"new information\", \"focus\")\nawait plugin._learn_and_adapt_handler(\"reflect\", \"\", \"area\")\nawait plugin._learn_and_adapt_handler(\"dream\", \"\", \"\")\nawait plugin._learn_and_adapt_handler(\"remember\", \"important fact\", \"category\")\n\n# Continuous learning\nlearning = await plugin._continuous_learning_cycle_handler(interaction_data, \"focus\")\n\n# Optimize workflows\noptimization = await plugin._optimize_workflow_handler(\"performance\", [\"speed\", \"accuracy\"])",
      "### **Workflow Health**",
      "Optimize based on usage data",
      "**2. Deploy to Production**",
      "Natural cognitive workflow progression",
      "Deep thinking",
      "Auto-process messages",
      "python\nfrom plugins.cognitive_brain_restructured import CognitiveBrainRestructuredPlugin",
      "---\n\n## \ud83d\udcca **Performance Monitoring**\n\n### **Check System Status**",
      "python\nfrom plugins.cognitive_brain_restructured import CognitiveBrainRestructuredPlugin\n\n# Initialize\nplugin = CognitiveBrainRestructuredPlugin()\nplugin._setup()\n\n# Use any tool\nresult = await plugin._memory_operations_handler(\"store\", \"Test memory\")",
      "Deploy restructured plugin alongside existing tools",
      "List available tools",
      "**Phase 1: Parallel Operation**",
      "### **Documentation**\n\n-",
      "python\n# Monitor overall system\nstatus = await plugin._self_monitor_handler(\"comprehensive\", \"all\")\nprint(f\"System Status: {status['monitoring_result']['overall_health']}\")\n\n# Analyze performance\nperformance = await plugin._analyze_performance_handler(\"comprehensive\", \"all\")\nprint(f\"Performance Score: {performance['analysis_result']['performance_metrics']['overall_score']}\")",
      "Analyze performance patterns",
      "Initialize in your server setup",
      "Test each domain...",
      "Run the complete demonstration",
      "Users can use either interface",
      "Unified learning",
      "### **Functionality Issues**\n\nIf some tools don't work:",
      "- Comprehensive system documentation\n-",
      "---\n\n## \ud83d\udd0d **Troubleshooting**\n\n### **Import Errors**\n\nIf you get import errors:",
      "**Check System Status**",
      "Monitor usage patterns",
      "Use any tool",
      "**1. Test in Development**",
      "Self-monitoring",
      "Execute workflows",
      "Check plugin directory",
      "bash\n# Run the complete demonstration\npython demo_restructured_cognitive_system.py",
      "### **Domain 2: MEMORY & STORAGE**",
      "---\n\n## \ud83d\ude80 **Production Deployment**\n\n### **1. Test in Development**",
      "AI chat with memory",
      "### **Plugin Not Found**\n\nIf plugins aren't found:",
      "python\n# Add to sys.path in your script\nimport sys\nfrom pathlib import Path\nsys.path.insert(0, str(Path(__file__).parent / \"plugins\"))\nsys.path.insert(0, str(Path(__file__).parent))",
      "Copy the restructured plugin to your production environment",
      "Get Cursor context",
      "Check Python path",
      "### **Domain 5: OUTPUT & ACTION**",
      "Initialize",
      "### **Test Command**",
      "- Executive summary\n-",
      "**Documentation**",
      "bash\n# Test the restructured plugin\npython -c \"\nimport sys; sys.path.insert(0, '.')\nfrom plugins.cognitive_brain_restructured import CognitiveBrainRestructuredPlugin\nplugin = CognitiveBrainRestructuredPlugin()\nplugin._setup()\ntools = plugin.get_tools()\nprint(f'\u2705 Ready! {len(tools)} tools in 6 cognitive domains')\n\"",
      "Maintain backward compatibility for critical functions",
      "100% functionality preservation",
      "Remove deprecated tools",
      "Track conversations",
      "### **2. Test the Restructured System**",
      "### **3. Run the Demonstration**",
      "---\n\n## \ud83e\udde0 **Using the Cognitive Domains**\n\n### **Domain 1: PERCEPTION & INPUT**",
      "plugins/\n\u251c\u2500\u2500 cognitive_brain_restructured.py          # \u2705 Main restructured plugin\n\u251c\u2500\u2500 enhanced_context_integration.py         # \u2705 Enhanced context plugin\n\u251c\u2500\u2500 enhanced_workflow_orchestrator.py       # \u2705 Workflow orchestrator plugin\n\u251c\u2500\u2500 auto_memory.py                         # \u2705 Auto memory plugin\n\u2514\u2500\u2500 ... (other existing plugins)",
      "Monitor overall system",
      "python\n# Execute workflows\nworkflow = await plugin._execute_enhanced_workflow_handler(\"message\", \"standard\", True)\n\n# Batch processing\nbatch = await plugin._batch_workflow_processing_handler([\"msg1\", \"msg2\"], \"standard\")\n\n# AI chat with memory\nchat = await plugin._ai_chat_with_memory_handler(\"user message\", \"assistant\")",
      "\ud83d\udd27 **Integration with MCP Server**",
      "\ud83c\udfaf **Overview**",
      "**Workflow Health**",
      "**Option 1: Add to Main MCP Server**",
      "Provide training and documentation",
      "python\n# Import the restructured plugin\nfrom plugins.cognitive_brain_restructured import CognitiveBrainRestructuredPlugin\n\n# Initialize in your server setup\nrestructured_plugin = CognitiveBrainRestructuredPlugin()\nrestructured_plugin._setup()\n\n# Add tools to your MCP server\nfor tool in restructured_plugin.get_tools():\n    # Register each tool with your MCP server\n    # This depends on your MCP implementation\n    pass",
      "Test individual domains",
      "Gather user feedback",
      "Encourage users to try new cognitive domain tools",
      "`INTEGRATION_GUIDE.md` - This integration guide",
      "python\n# Check workflow health\nhealth = await plugin._workflow_health_check_handler(\"comprehensive\")\nprint(f\"Workflow Health: {health['health_result']['overall_health']}\")",
      "Check workflow health",
      "bash\n# Check Python path\npython -c \"import sys; print('\\n'.join(sys.path))\"\n\n# Check plugin directory\nls -la plugins/\n\n# Test individual imports\npython -c \"from plugins.enhanced_context_integration import EnhancedContextIntegrationPlugin; print('\u2705 Enhanced context plugin imported')\"",
      "### **Domain 4: LEARNING & ADAPTATION**",
      "Analyze content",
      "**Main Plugin**",
      "bash\npython demo_restructured_cognitive_system.py",
      "`RESTRUCTURED_COGNITIVE_SYSTEM.md` - Comprehensive system documentation",
      "**Import Errors**",
      "`COGNITIVE_RESTRUCTURING_SUMMARY.md` - Executive summary",
      "python\n# Deep thinking\nthoughts = await plugin._think_deeply_handler(\"what to think about\", \"context\")\n\n# Tool orchestration\norchestration = await plugin._orchestrate_tools_handler(context_data, \"goal\")\n\n# Build comprehensive context\ncomprehensive = await plugin._build_comprehensive_context_handler(\"message\", \"comprehensive\")",
      "**Support**",
      "**3. Monitor and Optimize**",
      "python\n# Check plugin status\nplugin = CognitiveBrainRestructuredPlugin()\nplugin._setup()\n\n# List available tools\ntools = plugin.get_tools()\nfor tool in tools:\n    print(f\"\ud83d\udd27 {tool.name}: {tool.description}\")",
      "**Functionality Issues**",
      "Test with a subset of users first",
      "Analyze performance",
      "Ensure all dependencies are available",
      "Monitor performance and user adoption",
      "Check plugin status",
      "**Phase 3: Full Migration**",
      "Add tools to your MCP server",
      "**2. Test the Restructured System**",
      "bash\n# Run comprehensive tests\npython demo_restructured_cognitive_system.py\n\n# Test individual domains\npython -c \"\nfrom plugins.cognitive_brain_restructured import CognitiveBrainRestructuredPlugin\nplugin = CognitiveBrainRestructuredPlugin()\nplugin._setup()\n# Test each domain...\n\"",
      "Mark old tools as deprecated",
      "**1. Verify File Structure**",
      "Run comprehensive tests",
      "---\n\n## \ud83d\udd27 **Integration with MCP Server**\n\n### **Option 1: Add to Main MCP Server**\n\nAdd the restructured plugin to your",
      "\ud83d\ude80 **Quick Start**",
      "**Option 2: Use as Standalone Plugin**",
      "\ud83d\udd0d **Troubleshooting**",
      "\ud83d\udcca **Performance Monitoring**",
      "Add to sys.path in your script",
      "python\n# Self-monitoring\nmonitor = await plugin._self_monitor_handler(\"comprehensive\", \"all\")\n\n# Performance analysis\nperformance = await plugin._analyze_performance_handler(\"comprehensive\", \"all\")\n\n# Health checks\nhealth = await plugin._workflow_health_check_handler(\"comprehensive\")",
      "Unified memory operations",
      "### **Domain 3: PROCESSING & THINKING**",
      "**3. Run the Demonstration**",
      "Get enhanced context",
      "Human brain-focused organization",
      "python\n# Analyze content\nresult = await plugin._perceive_and_analyze_handler(\"content to analyze\", \"comprehensive\")\n\n# Get enhanced context\ncontext = await plugin._enhanced_context_retrieval_handler(\"user message\", include_history=True)\n\n# Get Cursor context\ncursor_context = await plugin._get_cursor_context_handler()",
      "Optimize workflows",
      "python\n# Unified memory operations\nawait plugin._memory_operations_handler(\"store\", \"important fact\")\ndata = await plugin._memory_operations_handler(\"retrieve\", \"\", \"query\")\nsearch = await plugin._memory_operations_handler(\"search\", \"\", \"search term\")\nawait plugin._memory_operations_handler(\"clear\", \"\", \"\")\n\n# Auto-process messages\nawait plugin._auto_process_message_handler(\"user message\")\n\n# Track conversations\nawait plugin._track_conversation_handler(\"user msg\", \"assistant response\", \"coding\")",
      "Test individual imports",
      "Test the restructured plugin",
      "\ud83d\ude80 **Production Deployment**",
      "\ud83c\udfaf **Migration Strategy**",
      "### **Option 2: Use as Standalone Plugin**\n\nThe restructured plugin can work independently:",
      "### **Domain 6: SELF-MONITORING**",
      "Use the self-monitoring tools to track system health",
      "### **2. Deploy to Production**\n\n- Copy the restructured plugin to your production environment\n- Ensure all dependencies are available\n- Test with a subset of users first\n- Monitor performance and user adoption\n\n### **3. Monitor and Optimize**\n\n- Use the self-monitoring tools to track system health\n- Analyze performance patterns\n- Optimize based on usage data\n- Gather user feedback\n\n---\n\n## \ud83c\udfaf **Migration Strategy**\n\n### **Phase 1: Parallel Operation**\n\n- Deploy restructured plugin alongside existing tools\n- Users can use either interface\n- Monitor usage patterns\n\n### **Phase 2: Gradual Migration**\n\n- Encourage users to try new cognitive domain tools\n- Provide training and documentation\n- Mark old tools as deprecated\n\n### **Phase 3: Full Migration**\n\n- Switch to cognitive domain interface as primary\n- Maintain backward compatibility for critical functions\n- Remove deprecated tools\n\n---\n\n## \ud83d\udd17 **Quick Reference**\n\n### **Main Plugin**",
      "Switch to cognitive domain interface as primary",
      "**Phase 2: Gradual Migration**",
      "Import the restructured plugin",
      "**Plugin Not Found**",
      "\ud83e\udde0 **Using the Cognitive Domains**",
      "\ud83d\udd27 **Integration Guide - Restructured Cognitive System**",
      "All 18 tools are fully functional",
      "**Test Command**",
      "python\n# Unified learning\nawait plugin._learn_and_adapt_handler(\"learn\", \"new information\", \"focus\")\nawait plugin._learn_and_adapt_handler(\"reflect\", \"\", \"area\")\nawait plugin._learn_and_adapt_handler(\"dream\", \"\", \"\")\nawait plugin._learn_and_adapt_handler(\"remember\", \"important fact\", \"category\")\n\n# Continuous learning\nlearning = await plugin._continuous_learning_cycle_handler(interaction_data, \"focus\")\n\n# Optimize workflows\noptimization = await plugin._optimize_workflow_handler(\"performance\", [\"speed\", \"accuracy\"])",
      "### **Workflow Health**",
      "Optimize based on usage data",
      "**2. Deploy to Production**",
      "Natural cognitive workflow progression",
      "Deep thinking",
      "Auto-process messages",
      "python\nfrom plugins.cognitive_brain_restructured import CognitiveBrainRestructuredPlugin",
      "---\n\n## \ud83d\udcca **Performance Monitoring**\n\n### **Check System Status**",
      "python\nfrom plugins.cognitive_brain_restructured import CognitiveBrainRestructuredPlugin\n\n# Initialize\nplugin = CognitiveBrainRestructuredPlugin()\nplugin._setup()\n\n# Use any tool\nresult = await plugin._memory_operations_handler(\"store\", \"Test memory\")",
      "Deploy restructured plugin alongside existing tools",
      "List available tools",
      "**Phase 1: Parallel Operation**",
      "### **Documentation**\n\n-",
      "python\n# Monitor overall system\nstatus = await plugin._self_monitor_handler(\"comprehensive\", \"all\")\nprint(f\"System Status: {status['monitoring_result']['overall_health']}\")\n\n# Analyze performance\nperformance = await plugin._analyze_performance_handler(\"comprehensive\", \"all\")\nprint(f\"Performance Score: {performance['analysis_result']['performance_metrics']['overall_score']}\")",
      "Analyze performance patterns",
      "Initialize in your server setup",
      "Test each domain...",
      "Run the complete demonstration",
      "Users can use either interface",
      "Unified learning",
      "### **Functionality Issues**\n\nIf some tools don't work:",
      "- Comprehensive system documentation\n-",
      "---\n\n## \ud83d\udd0d **Troubleshooting**\n\n### **Import Errors**\n\nIf you get import errors:",
      "**Check System Status**",
      "Monitor usage patterns",
      "Use any tool",
      "**1. Test in Development**",
      "Self-monitoring",
      "Execute workflows",
      "Check plugin directory",
      "bash\n# Run the complete demonstration\npython demo_restructured_cognitive_system.py",
      "### **Domain 2: MEMORY & STORAGE**",
      "---\n\n## \ud83d\ude80 **Production Deployment**\n\n### **1. Test in Development**",
      "AI chat with memory",
      "### **Plugin Not Found**\n\nIf plugins aren't found:",
      "python\n# Add to sys.path in your script\nimport sys\nfrom pathlib import Path\nsys.path.insert(0, str(Path(__file__).parent / \"plugins\"))\nsys.path.insert(0, str(Path(__file__).parent))",
      "Copy the restructured plugin to your production environment",
      "Get Cursor context",
      "Check Python path",
      "### **Domain 5: OUTPUT & ACTION**",
      "Initialize",
      "### **Test Command**",
      "- Executive summary\n-",
      "**Documentation**",
      "bash\n# Test the restructured plugin\npython -c \"\nimport sys; sys.path.insert(0, '.')\nfrom plugins.cognitive_brain_restructured import CognitiveBrainRestructuredPlugin\nplugin = CognitiveBrainRestructuredPlugin()\nplugin._setup()\ntools = plugin.get_tools()\nprint(f'\u2705 Ready! {len(tools)} tools in 6 cognitive domains')\n\"",
      "Maintain backward compatibility for critical functions",
      "100% functionality preservation",
      "Remove deprecated tools",
      "Track conversations",
      "### **2. Test the Restructured System**",
      "### **3. Run the Demonstration**",
      "---\n\n## \ud83e\udde0 **Using the Cognitive Domains**\n\n### **Domain 1: PERCEPTION & INPUT**",
      "plugins/\n\u251c\u2500\u2500 cognitive_brain_restructured.py          # \u2705 Main restructured plugin\n\u251c\u2500\u2500 enhanced_context_integration.py         # \u2705 Enhanced context plugin\n\u251c\u2500\u2500 enhanced_workflow_orchestrator.py       # \u2705 Workflow orchestrator plugin\n\u251c\u2500\u2500 auto_memory.py                         # \u2705 Auto memory plugin\n\u2514\u2500\u2500 ... (other existing plugins)",
      "Monitor overall system",
      "python\n# Execute workflows\nworkflow = await plugin._execute_enhanced_workflow_handler(\"message\", \"standard\", True)\n\n# Batch processing\nbatch = await plugin._batch_workflow_processing_handler([\"msg1\", \"msg2\"], \"standard\")\n\n# AI chat with memory\nchat = await plugin._ai_chat_with_memory_handler(\"user message\", \"assistant\")",
      "\ud83d\udd27 **Integration with MCP Server**",
      "\ud83c\udfaf **Overview**",
      "**Workflow Health**",
      "**Option 1: Add to Main MCP Server**",
      "Provide training and documentation",
      "python\n# Import the restructured plugin\nfrom plugins.cognitive_brain_restructured import CognitiveBrainRestructuredPlugin\n\n# Initialize in your server setup\nrestructured_plugin = CognitiveBrainRestructuredPlugin()\nrestructured_plugin._setup()\n\n# Add tools to your MCP server\nfor tool in restructured_plugin.get_tools():\n    # Register each tool with your MCP server\n    # This depends on your MCP implementation\n    pass",
      "Test individual domains",
      "Gather user feedback",
      "Encourage users to try new cognitive domain tools",
      "`INTEGRATION_GUIDE.md` - This integration guide",
      "python\n# Check workflow health\nhealth = await plugin._workflow_health_check_handler(\"comprehensive\")\nprint(f\"Workflow Health: {health['health_result']['overall_health']}\")",
      "Check workflow health",
      "bash\n# Check Python path\npython -c \"import sys; print('\\n'.join(sys.path))\"\n\n# Check plugin directory\nls -la plugins/\n\n# Test individual imports\npython -c \"from plugins.enhanced_context_integration import EnhancedContextIntegrationPlugin; print('\u2705 Enhanced context plugin imported')\"",
      "### **Domain 4: LEARNING & ADAPTATION**",
      "Analyze content",
      "**Main Plugin**",
      "bash\npython demo_restructured_cognitive_system.py",
      "`RESTRUCTURED_COGNITIVE_SYSTEM.md` - Comprehensive system documentation",
      "**Import Errors**",
      "`COGNITIVE_RESTRUCTURING_SUMMARY.md` - Executive summary",
      "python\n# Deep thinking\nthoughts = await plugin._think_deeply_handler(\"what to think about\", \"context\")\n\n# Tool orchestration\norchestration = await plugin._orchestrate_tools_handler(context_data, \"goal\")\n\n# Build comprehensive context\ncomprehensive = await plugin._build_comprehensive_context_handler(\"message\", \"comprehensive\")",
      "**Support**",
      "**3. Monitor and Optimize**",
      "python\n# Check plugin status\nplugin = CognitiveBrainRestructuredPlugin()\nplugin._setup()\n\n# List available tools\ntools = plugin.get_tools()\nfor tool in tools:\n    print(f\"\ud83d\udd27 {tool.name}: {tool.description}\")",
      "**Functionality Issues**",
      "Test with a subset of users first",
      "Analyze performance",
      "Ensure all dependencies are available",
      "Monitor performance and user adoption",
      "Check plugin status",
      "**Phase 3: Full Migration**",
      "Add tools to your MCP server",
      "**2. Test the Restructured System**",
      "bash\n# Run comprehensive tests\npython demo_restructured_cognitive_system.py\n\n# Test individual domains\npython -c \"\nfrom plugins.cognitive_brain_restructured import CognitiveBrainRestructuredPlugin\nplugin = CognitiveBrainRestructuredPlugin()\nplugin._setup()\n# Test each domain...\n\"",
      "Mark old tools as deprecated",
      "**1. Verify File Structure**",
      "Run comprehensive tests",
      "---\n\n## \ud83d\udd27 **Integration with MCP Server**\n\n### **Option 1: Add to Main MCP Server**\n\nAdd the restructured plugin to your",
      "\ud83d\ude80 **Quick Start**",
      "**Option 2: Use as Standalone Plugin**",
      "\ud83d\udd0d **Troubleshooting**",
      "\ud83d\udcca **Performance Monitoring**",
      "Add to sys.path in your script",
      "python\n# Self-monitoring\nmonitor = await plugin._self_monitor_handler(\"comprehensive\", \"all\")\n\n# Performance analysis\nperformance = await plugin._analyze_performance_handler(\"comprehensive\", \"all\")\n\n# Health checks\nhealth = await plugin._workflow_health_check_handler(\"comprehensive\")",
      "Unified memory operations",
      "### **Domain 3: PROCESSING & THINKING**",
      "**3. Run the Demonstration**",
      "Get enhanced context",
      "Human brain-focused organization",
      "python\n# Analyze content\nresult = await plugin._perceive_and_analyze_handler(\"content to analyze\", \"comprehensive\")\n\n# Get enhanced context\ncontext = await plugin._enhanced_context_retrieval_handler(\"user message\", include_history=True)\n\n# Get Cursor context\ncursor_context = await plugin._get_cursor_context_handler()",
      "Optimize workflows",
      "python\n# Unified memory operations\nawait plugin._memory_operations_handler(\"store\", \"important fact\")\ndata = await plugin._memory_operations_handler(\"retrieve\", \"\", \"query\")\nsearch = await plugin._memory_operations_handler(\"search\", \"\", \"search term\")\nawait plugin._memory_operations_handler(\"clear\", \"\", \"\")\n\n# Auto-process messages\nawait plugin._auto_process_message_handler(\"user message\")\n\n# Track conversations\nawait plugin._track_conversation_handler(\"user msg\", \"assistant response\", \"coding\")",
      "Test individual imports",
      "Test the restructured plugin",
      "\ud83d\ude80 **Production Deployment**",
      "\ud83c\udfaf **Migration Strategy**",
      "### **Option 2: Use as Standalone Plugin**\n\nThe restructured plugin can work independently:",
      "### **Domain 6: SELF-MONITORING**",
      "Use the self-monitoring tools to track system health",
      "### **2. Deploy to Production**\n\n- Copy the restructured plugin to your production environment\n- Ensure all dependencies are available\n- Test with a subset of users first\n- Monitor performance and user adoption\n\n### **3. Monitor and Optimize**\n\n- Use the self-monitoring tools to track system health\n- Analyze performance patterns\n- Optimize based on usage data\n- Gather user feedback\n\n---\n\n## \ud83c\udfaf **Migration Strategy**\n\n### **Phase 1: Parallel Operation**\n\n- Deploy restructured plugin alongside existing tools\n- Users can use either interface\n- Monitor usage patterns\n\n### **Phase 2: Gradual Migration**\n\n- Encourage users to try new cognitive domain tools\n- Provide training and documentation\n- Mark old tools as deprecated\n\n### **Phase 3: Full Migration**\n\n- Switch to cognitive domain interface as primary\n- Maintain backward compatibility for critical functions\n- Remove deprecated tools\n\n---\n\n## \ud83d\udd17 **Quick Reference**\n\n### **Main Plugin**",
      "Switch to cognitive domain interface as primary",
      "**Phase 2: Gradual Migration**",
      "Import the restructured plugin",
      "**Plugin Not Found**",
      "\ud83e\udde0 **Using the Cognitive Domains**",
      "\ud83d\udd27 **Integration Guide - Restructured Cognitive System**",
      "All 18 tools are fully functional",
      "**Test Command**",
      "python\n# Unified learning\nawait plugin._learn_and_adapt_handler(\"learn\", \"new information\", \"focus\")\nawait plugin._learn_and_adapt_handler(\"reflect\", \"\", \"area\")\nawait plugin._learn_and_adapt_handler(\"dream\", \"\", \"\")\nawait plugin._learn_and_adapt_handler(\"remember\", \"important fact\", \"category\")\n\n# Continuous learning\nlearning = await plugin._continuous_learning_cycle_handler(interaction_data, \"focus\")\n\n# Optimize workflows\noptimization = await plugin._optimize_workflow_handler(\"performance\", [\"speed\", \"accuracy\"])",
      "### **Workflow Health**",
      "Optimize based on usage data",
      "**2. Deploy to Production**",
      "Natural cognitive workflow progression",
      "Deep thinking",
      "Auto-process messages",
      "python\nfrom plugins.cognitive_brain_restructured import CognitiveBrainRestructuredPlugin",
      "---\n\n## \ud83d\udcca **Performance Monitoring**\n\n### **Check System Status**",
      "python\nfrom plugins.cognitive_brain_restructured import CognitiveBrainRestructuredPlugin\n\n# Initialize\nplugin = CognitiveBrainRestructuredPlugin()\nplugin._setup()\n\n# Use any tool\nresult = await plugin._memory_operations_handler(\"store\", \"Test memory\")",
      "Deploy restructured plugin alongside existing tools",
      "List available tools",
      "**Phase 1: Parallel Operation**",
      "### **Documentation**\n\n-",
      "python\n# Monitor overall system\nstatus = await plugin._self_monitor_handler(\"comprehensive\", \"all\")\nprint(f\"System Status: {status['monitoring_result']['overall_health']}\")\n\n# Analyze performance\nperformance = await plugin._analyze_performance_handler(\"comprehensive\", \"all\")\nprint(f\"Performance Score: {performance['analysis_result']['performance_metrics']['overall_score']}\")",
      "Analyze performance patterns",
      "Initialize in your server setup",
      "Test each domain...",
      "Run the complete demonstration",
      "Users can use either interface",
      "Unified learning",
      "### **Functionality Issues**\n\nIf some tools don't work:",
      "- Comprehensive system documentation\n-",
      "---\n\n## \ud83d\udd0d **Troubleshooting**\n\n### **Import Errors**\n\nIf you get import errors:",
      "**Check System Status**",
      "Monitor usage patterns",
      "Use any tool",
      "**1. Test in Development**",
      "Self-monitoring",
      "Execute workflows",
      "Check plugin directory",
      "bash\n# Run the complete demonstration\npython demo_restructured_cognitive_system.py",
      "### **Domain 2: MEMORY & STORAGE**",
      "---\n\n## \ud83d\ude80 **Production Deployment**\n\n### **1. Test in Development**",
      "AI chat with memory",
      "### **Plugin Not Found**\n\nIf plugins aren't found:",
      "python\n# Add to sys.path in your script\nimport sys\nfrom pathlib import Path\nsys.path.insert(0, str(Path(__file__).parent / \"plugins\"))\nsys.path.insert(0, str(Path(__file__).parent))",
      "Copy the restructured plugin to your production environment",
      "Get Cursor context",
      "Check Python path",
      "### **Domain 5: OUTPUT & ACTION**",
      "Initialize",
      "### **Test Command**",
      "- Executive summary\n-",
      "**Documentation**",
      "bash\n# Test the restructured plugin\npython -c \"\nimport sys; sys.path.insert(0, '.')\nfrom plugins.cognitive_brain_restructured import CognitiveBrainRestructuredPlugin\nplugin = CognitiveBrainRestructuredPlugin()\nplugin._setup()\ntools = plugin.get_tools()\nprint(f'\u2705 Ready! {len(tools)} tools in 6 cognitive domains')\n\"",
      "Maintain backward compatibility for critical functions",
      "100% functionality preservation",
      "Remove deprecated tools",
      "Track conversations",
      "### **2. Test the Restructured System**",
      "### **3. Run the Demonstration**",
      "---\n\n## \ud83e\udde0 **Using the Cognitive Domains**\n\n### **Domain 1: PERCEPTION & INPUT**"
    ],
    "MAINTENANCE_REPORT.md": [
      "\ud83d\udcc1 src/",
      "\ud83d\udcc4 CLEANUP_SUMMARY.md",
      "\ud83d\udcc4 README.md",
      "\ud83d\udcc4 llm_client.py",
      "Project Maintenance Report",
      "\ud83d\udcc4 Dockerfile",
      "\ud83d\udcc1 tests/",
      "Directory structure verified",
      "\ud83d\udcc1 brain_memory_store/",
      "\ud83d\udcc4 brain_interface.py",
      "\ud83d\udcc4 setup_shared.sh",
      "Maintenance Actions",
      "\ud83d\udcc4 mcp-server-config-shareable.json",
      "Docker configuration reviewed",
      "\ud83d\udcc4 function_call_logger.py",
      "\ud83d\udcc4 docker-compose.yml",
      "\ud83d\udcc4 setup_shared.bat",
      "Python cache files checked and cleaned",
      "\ud83d\udcc4 main.py",
      "\ud83d\udcc1 plugins/",
      "Directory Structure",
      "\ud83d\udcc1 docs/",
      "\ud83d\udcc1 config/",
      "\ud83d\udcc4 pyproject.toml",
      "Recommendations",
      "\ud83d\udcc4 PROJECT_ORGANIZATION.md",
      "\ud83d\udcc4 healthcheck.py",
      "Documentation organization checked",
      "\ud83d\udcc4 uv.lock",
      "\ud83d\udcc1 database/",
      "\ud83d\udcc1 scripts/",
      "\ud83d\udcc1 src/",
      "\ud83d\udcc4 CLEANUP_SUMMARY.md",
      "\ud83d\udcc4 README.md",
      "\ud83d\udcc4 llm_client.py",
      "Project Maintenance Report",
      "\ud83d\udcc4 Dockerfile",
      "\ud83d\udcc1 tests/",
      "Directory structure verified",
      "\ud83d\udcc1 brain_memory_store/",
      "\ud83d\udcc4 brain_interface.py",
      "\ud83d\udcc4 setup_shared.sh",
      "Maintenance Actions",
      "\ud83d\udcc4 mcp-server-config-shareable.json",
      "Docker configuration reviewed",
      "\ud83d\udcc4 function_call_logger.py",
      "\ud83d\udcc4 docker-compose.yml",
      "\ud83d\udcc4 setup_shared.bat",
      "Python cache files checked and cleaned",
      "\ud83d\udcc4 main.py",
      "\ud83d\udcc1 plugins/",
      "Directory Structure",
      "\ud83d\udcc1 docs/",
      "\ud83d\udcc1 config/",
      "\ud83d\udcc4 pyproject.toml",
      "Recommendations",
      "\ud83d\udcc4 PROJECT_ORGANIZATION.md",
      "\ud83d\udcc4 healthcheck.py",
      "Documentation organization checked",
      "\ud83d\udcc4 uv.lock",
      "\ud83d\udcc1 database/",
      "\ud83d\udcc1 scripts/",
      "\ud83d\udcc1 src/",
      "\ud83d\udcc4 CLEANUP_SUMMARY.md",
      "\ud83d\udcc4 README.md",
      "\ud83d\udcc4 llm_client.py",
      "Project Maintenance Report",
      "\ud83d\udcc4 Dockerfile",
      "\ud83d\udcc1 tests/",
      "Directory structure verified",
      "\ud83d\udcc1 brain_memory_store/",
      "\ud83d\udcc4 brain_interface.py",
      "\ud83d\udcc4 setup_shared.sh",
      "Maintenance Actions",
      "\ud83d\udcc4 mcp-server-config-shareable.json",
      "Docker configuration reviewed",
      "\ud83d\udcc4 function_call_logger.py",
      "\ud83d\udcc4 docker-compose.yml",
      "\ud83d\udcc4 setup_shared.bat",
      "Python cache files checked and cleaned",
      "\ud83d\udcc4 main.py",
      "\ud83d\udcc1 plugins/",
      "Directory Structure",
      "\ud83d\udcc1 docs/",
      "\ud83d\udcc1 config/",
      "\ud83d\udcc4 pyproject.toml",
      "Recommendations",
      "\ud83d\udcc4 PROJECT_ORGANIZATION.md",
      "\ud83d\udcc4 healthcheck.py",
      "Documentation organization checked",
      "\ud83d\udcc4 uv.lock",
      "\ud83d\udcc1 database/",
      "\ud83d\udcc1 scripts/"
    ],
    "PHASE_1_COMPLETION_SUMMARY.md": [
      "self_monitoring(action='assess_scan_accuracy')",
      "**`FileMetadata`**: Complete file information with type, language, framework, purpose",
      "**Purpose Classification**: Automatic categorization by file purpose and location",
      "**Accuracy & Coverage**",
      "\ud83d\ude80 **Scan Speed**: 2,691+ files/second (target: 100 files/second)",
      "\u2705 **MCP integration** ready for action-based routing",
      "**Output**: Actionable insights and recommendations",
      "**Scan Speed**: 2,691+ files/second (our project: 100 files in 0.04s)",
      "**\ud83e\udde0 PERCEPTION & INPUT Domain**",
      "memory_and_storage(action='store_project_context')",
      "`output_and_action(action='suggest_improvements')` \u2192 Improvement recommendations",
      "**Code Organization Analysis**: Understands project layout and organization",
      "**Processing**: Intelligent analysis and pattern recognition",
      "**Language and framework detection** across 20+ programming languages",
      "\ud83c\udfaf **INTEGRATION WITH MCP SYSTEM**",
      "**Memory Efficiency**: 493.9 characters per file indexed",
      "\u2705 **Memory Usage**: < 100MB (achieved: ~50KB for 100 files)",
      "\u2705 **Dependency Detection**: 95%+ accuracy (achieved: 100% for supported formats)",
      "**1. Project Scanner (`project_scanner.py`)**",
      "**Continuous Learning**: Adapts to your project's evolution over time",
      "**2. Data Models & Structures**",
      "**\ud83e\udde0 SELF-MONITORING Domain**",
      "**`DirectoryInfo`**: Directory structure with file counts, languages, and frameworks",
      "perceive_and_analyze(action='pattern_recognition')",
      "**`ProjectIndex`**: Complete project snapshot with patterns, context, and history",
      "**Semantic understanding** of your code and documentation",
      "**Proactive context injection** based on deep project knowledge",
      "`perceive_and_analyze(action='dependency_analysis')` \u2192 Dependency insights",
      "project_scanner.py",
      "DependencyInfo",
      "**\u2705 What We've Built**",
      "output_and_action(action='provide_context')",
      "`memory_and_storage(action='store_project_context')` \u2192 Save project context",
      "`self_monitoring(action='assess_scan_accuracy')` \u2192 Accuracy evaluation",
      "**File Coverage**: 100% of relevant files indexed",
      "**Anticipates your needs** - provides context and assistance proactively",
      "**Context Enhancement**",
      "**Phase 1: COMPLETE \u2705**",
      "**Speed & Efficiency**",
      "**Human Brain-Inspired Design**",
      "**Perception**: Comprehensive project scanning and analysis",
      "**All Phase 1 Targets Met**",
      "\ud83c\udfaf **PHASE 1 COMPLETION SUMMARY - PROJECT INTELLIGENCE LAYER**",
      "`processing_and_thinking(action='identify_improvements')` \u2192 Improvement suggestions",
      "**Learns and grows** - continuously improves based on your feedback",
      "`self_monitoring(action='monitor_index_quality')` \u2192 Quality assessment",
      "**Frameworks Found**: pytest (8 files), FastAPI (3 files), Django (1 file)",
      "**Total Files**: 100 files successfully indexed",
      "**Learning**: Continuous adaptation and improvement",
      "**Extensible Architecture**: Easy to add new language and framework support",
      "**Smart File Filtering**: Automatically skips build artifacts, cache, and temporary files",
      "**Ready for the Next Phase**",
      "\u2705 **Project Scanning**: < 5 seconds (achieved: 0.04s)",
      "**Comprehensive file system scanning** with intelligent filtering",
      "`memory_and_storage(action='update_project_index')` \u2192 Update project index",
      "**Proactive Assistance**: Provides context before you ask for it",
      "\ud83d\udd2e **READY FOR PHASE 2**",
      "\ud83c\udf1f **VISION REALIZED**",
      "`learning_and_adaptation(action='evolve_understanding')` \u2192 Continuous learning",
      "**Dependency parsing** for multiple package managers (npm, pip, cargo, go)",
      "processing_and_thinking(action='identify_improvements')",
      "\ud83d\ude80 **Language Support**: 20+ languages (target: 10 languages)",
      "**The Future is Bright**",
      "**Multiple Export Formats**: JSON (detailed), Summary (human-readable)",
      "**Total Index Size**: 49,391 characters for 100 files",
      "\ud83d\ude80 **Integration Ready**: Full MCP tool integration (target: basic integration)",
      "output_and_action(action='suggest_improvements')",
      "**Knowledge graphs** connecting concepts and patterns",
      "**3. Intelligent Detection Systems**",
      "**Technology Stack Mapping**: Comprehensive stack identification",
      "**Contextual memory** for intelligent assistance",
      "`output_and_action(action='provide_context')` \u2192 Context injection",
      "**MCP Tool Integration**: Ready for integration with our 6 consolidated tools",
      "perceive_and_analyze(action='dependency_analysis')",
      "`output_and_action(action='generate_project_report')` \u2192 Project reports",
      "\u2705 **Dependency mapping** across multiple package managers",
      "**Development Environment Detection**: IDE files, editor configs, and tooling",
      "\ud83d\ude80 **MISSION ACCOMPLISHED: Phase 1 Complete!**",
      "memory_and_storage(action='retrieve_project_info')",
      "**Remembers your projects** - has deep contextual knowledge of your work",
      "**Change detection** with file hash tracking for incremental updates",
      "**\ud83e\udde0 OUTPUT & ACTION Domain**",
      "**Project Analysis Results**",
      "`learning_and_adaptation(action='learn_from_project_structure')` \u2192 Structure learning",
      "**Language Detection**: 95%+ accuracy across multiple languages",
      "**Next Phase Goals**",
      "processing_and_thinking(action='analyze_code_patterns')",
      "\u2705 **Complete project understanding** through comprehensive scanning",
      "**File Type Detection**: 15+ file categories (source, config, docs, etc.)",
      "**Ready for Action-Based Routing**",
      "\ud83d\ude80 **WHAT THIS ENABLES**",
      "**Cross-platform Compatibility**: Works on macOS, Linux, and Windows",
      "`memory_and_storage(action='retrieve_project_info')` \u2192 Get project information",
      "`perceive_and_analyze(action='pattern_recognition')` \u2192 Code pattern analysis",
      "\u2705 **Intelligent pattern recognition** for code and architecture",
      "**Language Recognition**: 20+ programming languages with file extensions",
      "**Languages Detected**: Python (58%), Markdown (25%), JSON (7%), Shell (2%)",
      "**Thinks like you do** - understands your coding style and preferences",
      "learning_and_adaptation(action='learn_from_project_structure')",
      "**Hash-based Change Detection**: MD5 hashing for accurate change tracking",
      "**`DependencyInfo`**: Package dependency tracking with version and source",
      "**Beyond Expectations**",
      "**Pattern recognition** for code organization and project structure",
      "processing_and_thinking(action='detect_architectural_patterns')",
      "\u2705 **Change tracking** for incremental updates",
      "**Architectural Pattern Detection**: Identifies source, test, and documentation structures",
      "**Self-Monitoring**: Performance tracking and quality assessment",
      "**Project Structure**: 4-level depth with organized source, test, and documentation",
      "**Framework Recognition**: Automatic detection of pytest, FastAPI, Django",
      "**Advanced Scanning Capabilities**",
      "**From Reactive to Proactive**",
      "**API-Ready**: Clean interfaces for programmatic access",
      "**Intelligent Analysis**: Understands your coding style and architectural decisions",
      "`perceive_and_analyze(action='project_scan')` \u2192 Full project analysis",
      "**Foundation Established**",
      "ProjectIndex",
      "**\ud83e\udde0 LEARNING & ADAPTATION Domain**",
      "**Dependency Parsing**: Support for npm, pip, cargo, go package managers",
      "**Incremental Updates**: Only re-scans changed files for efficiency",
      "learning_and_adaptation(action='adapt_to_coding_patterns')",
      "`learning_and_adaptation(action='adapt_to_coding_patterns')` \u2192 Pattern adaptation",
      "\ud83d\udcca **PERFORMANCE ACHIEVEMENTS**",
      "\ud83d\udd27 **TECHNICAL FEATURES**",
      "**Intelligent Pattern Recognition**",
      "**Immediate Capabilities**",
      "**Memory**: Persistent storage of project context and patterns",
      "perceive_and_analyze(action='project_scan')",
      "learning_and_adaptation(action='evolve_understanding')",
      "**Developer Experience**",
      "**Real-time Updates**: < 1 second change detection",
      "**Framework Detection**: Framework-specific patterns and signatures",
      "self_monitoring(action='monitor_index_quality')",
      "**Deep Context**: Knows your project structure, dependencies, and patterns",
      "self_monitoring(action='track_scan_performance')",
      "\ud83e\udde0 **CORE COMPONENTS IMPLEMENTED**",
      "**\ud83e\udde0 MEMORY & STORAGE Domain**",
      "**\ud83e\udde0 PROCESSING & THINKING Domain**",
      "**Technology Stack Analysis**: Complete stack identification and mapping",
      "output_and_action(action='generate_project_report')",
      "`self_monitoring(action='track_scan_performance')` \u2192 Performance monitoring",
      "\ud83c\udf89 **SUCCESS METRICS ACHIEVED**",
      "memory_and_storage(action='update_project_index')",
      "**Export & Integration**",
      "DirectoryInfo",
      "\u2705 **Update Frequency**: Real-time change detection (achieved: < 1 second)",
      "FileMetadata",
      "`processing_and_thinking(action='detect_architectural_patterns')` \u2192 Architecture insights",
      "\ud83d\ude80 **Framework Detection**: Automatic recognition (target: basic detection)",
      "`processing_and_thinking(action='analyze_code_patterns')` \u2192 Deep pattern analysis",
      "self_monitoring(action='assess_scan_accuracy')",
      "**`FileMetadata`**: Complete file information with type, language, framework, purpose",
      "**Purpose Classification**: Automatic categorization by file purpose and location",
      "**Accuracy & Coverage**",
      "\ud83d\ude80 **Scan Speed**: 2,691+ files/second (target: 100 files/second)",
      "\u2705 **MCP integration** ready for action-based routing",
      "**Output**: Actionable insights and recommendations",
      "**Scan Speed**: 2,691+ files/second (our project: 100 files in 0.04s)",
      "**\ud83e\udde0 PERCEPTION & INPUT Domain**",
      "memory_and_storage(action='store_project_context')",
      "`output_and_action(action='suggest_improvements')` \u2192 Improvement recommendations",
      "**Code Organization Analysis**: Understands project layout and organization",
      "**Processing**: Intelligent analysis and pattern recognition",
      "**Language and framework detection** across 20+ programming languages",
      "\ud83c\udfaf **INTEGRATION WITH MCP SYSTEM**",
      "**Memory Efficiency**: 493.9 characters per file indexed",
      "\u2705 **Memory Usage**: < 100MB (achieved: ~50KB for 100 files)",
      "\u2705 **Dependency Detection**: 95%+ accuracy (achieved: 100% for supported formats)",
      "**1. Project Scanner (`project_scanner.py`)**",
      "**Continuous Learning**: Adapts to your project's evolution over time",
      "**2. Data Models & Structures**",
      "**\ud83e\udde0 SELF-MONITORING Domain**",
      "**`DirectoryInfo`**: Directory structure with file counts, languages, and frameworks",
      "perceive_and_analyze(action='pattern_recognition')",
      "**`ProjectIndex`**: Complete project snapshot with patterns, context, and history",
      "**Semantic understanding** of your code and documentation",
      "**Proactive context injection** based on deep project knowledge",
      "`perceive_and_analyze(action='dependency_analysis')` \u2192 Dependency insights",
      "project_scanner.py",
      "DependencyInfo",
      "**\u2705 What We've Built**",
      "output_and_action(action='provide_context')",
      "`memory_and_storage(action='store_project_context')` \u2192 Save project context",
      "`self_monitoring(action='assess_scan_accuracy')` \u2192 Accuracy evaluation",
      "**File Coverage**: 100% of relevant files indexed",
      "**Anticipates your needs** - provides context and assistance proactively",
      "**Context Enhancement**",
      "**Phase 1: COMPLETE \u2705**",
      "**Speed & Efficiency**",
      "**Human Brain-Inspired Design**",
      "**Perception**: Comprehensive project scanning and analysis",
      "**All Phase 1 Targets Met**",
      "\ud83c\udfaf **PHASE 1 COMPLETION SUMMARY - PROJECT INTELLIGENCE LAYER**",
      "`processing_and_thinking(action='identify_improvements')` \u2192 Improvement suggestions",
      "**Learns and grows** - continuously improves based on your feedback",
      "`self_monitoring(action='monitor_index_quality')` \u2192 Quality assessment",
      "**Frameworks Found**: pytest (8 files), FastAPI (3 files), Django (1 file)",
      "**Total Files**: 100 files successfully indexed",
      "**Learning**: Continuous adaptation and improvement",
      "**Extensible Architecture**: Easy to add new language and framework support",
      "**Smart File Filtering**: Automatically skips build artifacts, cache, and temporary files",
      "**Ready for the Next Phase**",
      "\u2705 **Project Scanning**: < 5 seconds (achieved: 0.04s)",
      "**Comprehensive file system scanning** with intelligent filtering",
      "`memory_and_storage(action='update_project_index')` \u2192 Update project index",
      "**Proactive Assistance**: Provides context before you ask for it",
      "\ud83d\udd2e **READY FOR PHASE 2**",
      "\ud83c\udf1f **VISION REALIZED**",
      "`learning_and_adaptation(action='evolve_understanding')` \u2192 Continuous learning",
      "**Dependency parsing** for multiple package managers (npm, pip, cargo, go)",
      "processing_and_thinking(action='identify_improvements')",
      "\ud83d\ude80 **Language Support**: 20+ languages (target: 10 languages)",
      "**The Future is Bright**",
      "**Multiple Export Formats**: JSON (detailed), Summary (human-readable)",
      "**Total Index Size**: 49,391 characters for 100 files",
      "\ud83d\ude80 **Integration Ready**: Full MCP tool integration (target: basic integration)",
      "output_and_action(action='suggest_improvements')",
      "**Knowledge graphs** connecting concepts and patterns",
      "**3. Intelligent Detection Systems**",
      "**Technology Stack Mapping**: Comprehensive stack identification",
      "**Contextual memory** for intelligent assistance",
      "`output_and_action(action='provide_context')` \u2192 Context injection",
      "**MCP Tool Integration**: Ready for integration with our 6 consolidated tools",
      "perceive_and_analyze(action='dependency_analysis')",
      "`output_and_action(action='generate_project_report')` \u2192 Project reports",
      "\u2705 **Dependency mapping** across multiple package managers",
      "**Development Environment Detection**: IDE files, editor configs, and tooling",
      "\ud83d\ude80 **MISSION ACCOMPLISHED: Phase 1 Complete!**",
      "memory_and_storage(action='retrieve_project_info')",
      "**Remembers your projects** - has deep contextual knowledge of your work",
      "**Change detection** with file hash tracking for incremental updates",
      "**\ud83e\udde0 OUTPUT & ACTION Domain**",
      "**Project Analysis Results**",
      "`learning_and_adaptation(action='learn_from_project_structure')` \u2192 Structure learning",
      "**Language Detection**: 95%+ accuracy across multiple languages",
      "**Next Phase Goals**",
      "processing_and_thinking(action='analyze_code_patterns')",
      "\u2705 **Complete project understanding** through comprehensive scanning",
      "**File Type Detection**: 15+ file categories (source, config, docs, etc.)",
      "**Ready for Action-Based Routing**",
      "\ud83d\ude80 **WHAT THIS ENABLES**",
      "**Cross-platform Compatibility**: Works on macOS, Linux, and Windows",
      "`memory_and_storage(action='retrieve_project_info')` \u2192 Get project information",
      "`perceive_and_analyze(action='pattern_recognition')` \u2192 Code pattern analysis",
      "\u2705 **Intelligent pattern recognition** for code and architecture",
      "**Language Recognition**: 20+ programming languages with file extensions",
      "**Languages Detected**: Python (58%), Markdown (25%), JSON (7%), Shell (2%)",
      "**Thinks like you do** - understands your coding style and preferences",
      "learning_and_adaptation(action='learn_from_project_structure')",
      "**Hash-based Change Detection**: MD5 hashing for accurate change tracking",
      "**`DependencyInfo`**: Package dependency tracking with version and source",
      "**Beyond Expectations**",
      "**Pattern recognition** for code organization and project structure",
      "processing_and_thinking(action='detect_architectural_patterns')",
      "\u2705 **Change tracking** for incremental updates",
      "**Architectural Pattern Detection**: Identifies source, test, and documentation structures",
      "**Self-Monitoring**: Performance tracking and quality assessment",
      "**Project Structure**: 4-level depth with organized source, test, and documentation",
      "**Framework Recognition**: Automatic detection of pytest, FastAPI, Django",
      "**Advanced Scanning Capabilities**",
      "**From Reactive to Proactive**",
      "**API-Ready**: Clean interfaces for programmatic access",
      "**Intelligent Analysis**: Understands your coding style and architectural decisions",
      "`perceive_and_analyze(action='project_scan')` \u2192 Full project analysis",
      "**Foundation Established**",
      "ProjectIndex",
      "**\ud83e\udde0 LEARNING & ADAPTATION Domain**",
      "**Dependency Parsing**: Support for npm, pip, cargo, go package managers",
      "**Incremental Updates**: Only re-scans changed files for efficiency",
      "learning_and_adaptation(action='adapt_to_coding_patterns')",
      "`learning_and_adaptation(action='adapt_to_coding_patterns')` \u2192 Pattern adaptation",
      "\ud83d\udcca **PERFORMANCE ACHIEVEMENTS**",
      "\ud83d\udd27 **TECHNICAL FEATURES**",
      "**Intelligent Pattern Recognition**",
      "**Immediate Capabilities**",
      "**Memory**: Persistent storage of project context and patterns",
      "perceive_and_analyze(action='project_scan')",
      "learning_and_adaptation(action='evolve_understanding')",
      "**Developer Experience**",
      "**Real-time Updates**: < 1 second change detection",
      "**Framework Detection**: Framework-specific patterns and signatures",
      "self_monitoring(action='monitor_index_quality')",
      "**Deep Context**: Knows your project structure, dependencies, and patterns",
      "self_monitoring(action='track_scan_performance')",
      "\ud83e\udde0 **CORE COMPONENTS IMPLEMENTED**",
      "**\ud83e\udde0 MEMORY & STORAGE Domain**",
      "**\ud83e\udde0 PROCESSING & THINKING Domain**",
      "**Technology Stack Analysis**: Complete stack identification and mapping",
      "output_and_action(action='generate_project_report')",
      "`self_monitoring(action='track_scan_performance')` \u2192 Performance monitoring",
      "\ud83c\udf89 **SUCCESS METRICS ACHIEVED**",
      "memory_and_storage(action='update_project_index')",
      "**Export & Integration**",
      "DirectoryInfo",
      "\u2705 **Update Frequency**: Real-time change detection (achieved: < 1 second)",
      "FileMetadata",
      "`processing_and_thinking(action='detect_architectural_patterns')` \u2192 Architecture insights",
      "\ud83d\ude80 **Framework Detection**: Automatic recognition (target: basic detection)",
      "`processing_and_thinking(action='analyze_code_patterns')` \u2192 Deep pattern analysis",
      "self_monitoring(action='assess_scan_accuracy')",
      "**`FileMetadata`**: Complete file information with type, language, framework, purpose",
      "**Purpose Classification**: Automatic categorization by file purpose and location",
      "**Accuracy & Coverage**",
      "\ud83d\ude80 **Scan Speed**: 2,691+ files/second (target: 100 files/second)",
      "\u2705 **MCP integration** ready for action-based routing",
      "**Output**: Actionable insights and recommendations",
      "**Scan Speed**: 2,691+ files/second (our project: 100 files in 0.04s)",
      "**\ud83e\udde0 PERCEPTION & INPUT Domain**",
      "memory_and_storage(action='store_project_context')",
      "`output_and_action(action='suggest_improvements')` \u2192 Improvement recommendations",
      "**Code Organization Analysis**: Understands project layout and organization",
      "**Processing**: Intelligent analysis and pattern recognition",
      "**Language and framework detection** across 20+ programming languages",
      "\ud83c\udfaf **INTEGRATION WITH MCP SYSTEM**",
      "**Memory Efficiency**: 493.9 characters per file indexed",
      "\u2705 **Memory Usage**: < 100MB (achieved: ~50KB for 100 files)",
      "\u2705 **Dependency Detection**: 95%+ accuracy (achieved: 100% for supported formats)",
      "**1. Project Scanner (`project_scanner.py`)**",
      "**Continuous Learning**: Adapts to your project's evolution over time",
      "**2. Data Models & Structures**",
      "**\ud83e\udde0 SELF-MONITORING Domain**",
      "**`DirectoryInfo`**: Directory structure with file counts, languages, and frameworks",
      "perceive_and_analyze(action='pattern_recognition')",
      "**`ProjectIndex`**: Complete project snapshot with patterns, context, and history",
      "**Semantic understanding** of your code and documentation",
      "**Proactive context injection** based on deep project knowledge",
      "`perceive_and_analyze(action='dependency_analysis')` \u2192 Dependency insights",
      "project_scanner.py",
      "DependencyInfo",
      "**\u2705 What We've Built**",
      "output_and_action(action='provide_context')",
      "`memory_and_storage(action='store_project_context')` \u2192 Save project context",
      "`self_monitoring(action='assess_scan_accuracy')` \u2192 Accuracy evaluation",
      "**File Coverage**: 100% of relevant files indexed",
      "**Anticipates your needs** - provides context and assistance proactively",
      "**Context Enhancement**",
      "**Phase 1: COMPLETE \u2705**",
      "**Speed & Efficiency**",
      "**Human Brain-Inspired Design**",
      "**Perception**: Comprehensive project scanning and analysis",
      "**All Phase 1 Targets Met**",
      "\ud83c\udfaf **PHASE 1 COMPLETION SUMMARY - PROJECT INTELLIGENCE LAYER**",
      "`processing_and_thinking(action='identify_improvements')` \u2192 Improvement suggestions",
      "**Learns and grows** - continuously improves based on your feedback",
      "`self_monitoring(action='monitor_index_quality')` \u2192 Quality assessment",
      "**Frameworks Found**: pytest (8 files), FastAPI (3 files), Django (1 file)",
      "**Total Files**: 100 files successfully indexed",
      "**Learning**: Continuous adaptation and improvement",
      "**Extensible Architecture**: Easy to add new language and framework support",
      "**Smart File Filtering**: Automatically skips build artifacts, cache, and temporary files",
      "**Ready for the Next Phase**",
      "\u2705 **Project Scanning**: < 5 seconds (achieved: 0.04s)",
      "**Comprehensive file system scanning** with intelligent filtering",
      "`memory_and_storage(action='update_project_index')` \u2192 Update project index",
      "**Proactive Assistance**: Provides context before you ask for it",
      "\ud83d\udd2e **READY FOR PHASE 2**",
      "\ud83c\udf1f **VISION REALIZED**",
      "`learning_and_adaptation(action='evolve_understanding')` \u2192 Continuous learning",
      "**Dependency parsing** for multiple package managers (npm, pip, cargo, go)",
      "processing_and_thinking(action='identify_improvements')",
      "\ud83d\ude80 **Language Support**: 20+ languages (target: 10 languages)",
      "**The Future is Bright**",
      "**Multiple Export Formats**: JSON (detailed), Summary (human-readable)",
      "**Total Index Size**: 49,391 characters for 100 files",
      "\ud83d\ude80 **Integration Ready**: Full MCP tool integration (target: basic integration)",
      "output_and_action(action='suggest_improvements')",
      "**Knowledge graphs** connecting concepts and patterns",
      "**3. Intelligent Detection Systems**",
      "**Technology Stack Mapping**: Comprehensive stack identification",
      "**Contextual memory** for intelligent assistance",
      "`output_and_action(action='provide_context')` \u2192 Context injection",
      "**MCP Tool Integration**: Ready for integration with our 6 consolidated tools",
      "perceive_and_analyze(action='dependency_analysis')",
      "`output_and_action(action='generate_project_report')` \u2192 Project reports",
      "\u2705 **Dependency mapping** across multiple package managers",
      "**Development Environment Detection**: IDE files, editor configs, and tooling",
      "\ud83d\ude80 **MISSION ACCOMPLISHED: Phase 1 Complete!**",
      "memory_and_storage(action='retrieve_project_info')",
      "**Remembers your projects** - has deep contextual knowledge of your work",
      "**Change detection** with file hash tracking for incremental updates",
      "**\ud83e\udde0 OUTPUT & ACTION Domain**",
      "**Project Analysis Results**",
      "`learning_and_adaptation(action='learn_from_project_structure')` \u2192 Structure learning",
      "**Language Detection**: 95%+ accuracy across multiple languages",
      "**Next Phase Goals**",
      "processing_and_thinking(action='analyze_code_patterns')",
      "\u2705 **Complete project understanding** through comprehensive scanning",
      "**File Type Detection**: 15+ file categories (source, config, docs, etc.)",
      "**Ready for Action-Based Routing**",
      "\ud83d\ude80 **WHAT THIS ENABLES**",
      "**Cross-platform Compatibility**: Works on macOS, Linux, and Windows",
      "`memory_and_storage(action='retrieve_project_info')` \u2192 Get project information",
      "`perceive_and_analyze(action='pattern_recognition')` \u2192 Code pattern analysis",
      "\u2705 **Intelligent pattern recognition** for code and architecture",
      "**Language Recognition**: 20+ programming languages with file extensions",
      "**Languages Detected**: Python (58%), Markdown (25%), JSON (7%), Shell (2%)",
      "**Thinks like you do** - understands your coding style and preferences",
      "learning_and_adaptation(action='learn_from_project_structure')",
      "**Hash-based Change Detection**: MD5 hashing for accurate change tracking",
      "**`DependencyInfo`**: Package dependency tracking with version and source",
      "**Beyond Expectations**",
      "**Pattern recognition** for code organization and project structure",
      "processing_and_thinking(action='detect_architectural_patterns')",
      "\u2705 **Change tracking** for incremental updates",
      "**Architectural Pattern Detection**: Identifies source, test, and documentation structures",
      "**Self-Monitoring**: Performance tracking and quality assessment",
      "**Project Structure**: 4-level depth with organized source, test, and documentation",
      "**Framework Recognition**: Automatic detection of pytest, FastAPI, Django",
      "**Advanced Scanning Capabilities**",
      "**From Reactive to Proactive**",
      "**API-Ready**: Clean interfaces for programmatic access",
      "**Intelligent Analysis**: Understands your coding style and architectural decisions",
      "`perceive_and_analyze(action='project_scan')` \u2192 Full project analysis",
      "**Foundation Established**",
      "ProjectIndex",
      "**\ud83e\udde0 LEARNING & ADAPTATION Domain**",
      "**Dependency Parsing**: Support for npm, pip, cargo, go package managers",
      "**Incremental Updates**: Only re-scans changed files for efficiency",
      "learning_and_adaptation(action='adapt_to_coding_patterns')",
      "`learning_and_adaptation(action='adapt_to_coding_patterns')` \u2192 Pattern adaptation",
      "\ud83d\udcca **PERFORMANCE ACHIEVEMENTS**",
      "\ud83d\udd27 **TECHNICAL FEATURES**",
      "**Intelligent Pattern Recognition**",
      "**Immediate Capabilities**",
      "**Memory**: Persistent storage of project context and patterns",
      "perceive_and_analyze(action='project_scan')",
      "learning_and_adaptation(action='evolve_understanding')",
      "**Developer Experience**",
      "**Real-time Updates**: < 1 second change detection",
      "**Framework Detection**: Framework-specific patterns and signatures",
      "self_monitoring(action='monitor_index_quality')",
      "**Deep Context**: Knows your project structure, dependencies, and patterns",
      "self_monitoring(action='track_scan_performance')",
      "\ud83e\udde0 **CORE COMPONENTS IMPLEMENTED**",
      "**\ud83e\udde0 MEMORY & STORAGE Domain**",
      "**\ud83e\udde0 PROCESSING & THINKING Domain**",
      "**Technology Stack Analysis**: Complete stack identification and mapping",
      "output_and_action(action='generate_project_report')",
      "`self_monitoring(action='track_scan_performance')` \u2192 Performance monitoring",
      "\ud83c\udf89 **SUCCESS METRICS ACHIEVED**",
      "memory_and_storage(action='update_project_index')",
      "**Export & Integration**",
      "DirectoryInfo",
      "\u2705 **Update Frequency**: Real-time change detection (achieved: < 1 second)",
      "FileMetadata",
      "`processing_and_thinking(action='detect_architectural_patterns')` \u2192 Architecture insights",
      "\ud83d\ude80 **Framework Detection**: Automatic recognition (target: basic detection)",
      "`processing_and_thinking(action='analyze_code_patterns')` \u2192 Deep pattern analysis"
    ],
    "PRODUCTION_INTEGRATION_GUIDE.md": [
      "python\n# Remember important information with context\nresult = await mcp_client.call_tool(\"remember_important\", {\n    \"information\": \"User prefers step-by-step explanations\",\n    \"importance\": \"high\"\n})\n\n# Automatically:\n# - Analyzes emotional context\n# - Tags with relevant patterns\n# - Integrates with existing memories",
      "Use think_deeply for complex problem solving",
      "- Pattern-based search",
      "for comprehensive code assessment\n- **Refactoring**: Use",
      "code_analyze",
      "Offers:",
      "**Debugging**: Use `debug_intelligently` for complex production issues",
      "**Context Understanding**: Use `understand_deeply` for complex requests",
      "**Pattern recognition** for subtle insights",
      "- Context-aware relevance scoring",
      "**\ud83d\udd0d Deep Understanding**",
      "Evaluates:",
      "Generates:",
      "for complex production issues\n\n### **2. \ud83e\udde0 AI Assistant Enhancement**\n\n- **Conversation Memory**: Use",
      "[ ] Enhanced brain tools loaded",
      "**Cross-domain pattern recognition** for holistic understanding",
      "- Learning optimization suggestions",
      "#### **Selective Memory Cleanup**",
      "python\n# Find relevant memories with context awareness\nresult = await mcp_client.call_tool(\"recall_intelligently\", {\n    \"query\": \"code quality improvements\",\n    \"depth\": \"deep\",\n    \"limit\": 10\n})\n\n# Features:\n# - Context-aware relevance scoring\n# - Pattern-based search\n# - Emotional weight consideration",
      "**Enhanced Self-Reflection**",
      "- Debugging strategies",
      "**Pattern Detection**: Use `detect_patterns` for learning optimization",
      "Analyze code structure and quality",
      "remember_important",
      "**Refactoring**: Use `refactor_safely` for large-scale code improvements",
      "**4. \ud83d\udcbb Cursor-Optimized Development Tools**",
      "- Pattern-based debugging",
      "### **4. \ud83d\udcbb Cursor-Optimized Development Tools**\n\n#### **Code Quality Analysis**",
      "[ ] Tool response times acceptable",
      "Find subtle patterns in communication",
      "- **Context Understanding**: Use",
      "[ ] Cognitive tools respond with context insights",
      "for user behavior analysis\n\n### **3. \ud83d\udcda Learning & Documentation**\n\n- **Content Analysis**: Use",
      "**Human-inspired** intelligence and understanding",
      "for deep understanding\n\n### **4. \ud83d\udd27 System Administration**\n\n- **Risk Assessment**: Use",
      "refactor_safely",
      "#### **Intelligent Debugging**",
      "- Safe deletion confirmation",
      "**Every tool** integrates with ContextAnalyzer",
      "- Emotional patterns",
      "**`forget_selectively`** - Intelligent memory cleanup",
      "reflect_enhanced",
      "Debug code with pattern recognition",
      "for documentation review\n- **Pattern Detection**: Use",
      "[ ] Cursor tools optimize for development",
      "**Emotional context awareness** in all interactions",
      "[ ] Tool registry properly configured",
      "- Step-by-step approach",
      "**3. \ud83d\udcda Learning & Documentation**",
      "**Intelligent Debugging**",
      "Identifies:",
      "**\u2705 Pre-Deployment Verification**",
      "**`assess_complexity`** - Comprehensive complexity assessment",
      "**\ud83d\udd0d Analysis & Understanding (3 tools)**",
      "- Quality assessment",
      "- Context-aware cleanup",
      "- Best practice recommendations",
      "- Risk assessment",
      "python\n# Understand complex requests deeply\nresult = await mcp_client.call_tool(\"understand_deeply\", {\n    \"content\": \"I need to refactor legacy code without breaking production\",\n    \"analysis_type\": \"comprehensive\"\n})\n\n# Detects:\n# - Implicit goals and constraints\n# - Hidden complexity\n# - Risk factors\n# - Strategic recommendations",
      "**Smart Information Storage**",
      "forget_selectively",
      "Assess content complexity comprehensively",
      "[ ] User satisfaction high",
      "**ContextAnalyzer power** visible and accessible everywhere",
      "detect_patterns",
      "- Emotional depth",
      "**3. \ud83d\udd0d Advanced Analysis & Understanding**",
      "- Temporal patterns",
      "python\n# Find subtle patterns in communication\nresult = await mcp_client.call_tool(\"detect_patterns\", {\n    \"content\": \"User communication patterns\",\n    \"pattern_type\": \"all\"\n})\n\n# Identifies:\n# - Emotional patterns\n# - Communication preferences\n# - Cross-domain connections\n# - Temporal patterns",
      "**Production-ready** system with comprehensive testing",
      "- Multi-layer context analysis",
      "think_deeply",
      "**Complexity assessment** with actionable recommendations",
      "**`analyze_context_comprehensive`** - Full ContextAnalyzer functionality",
      "python\n# Refactor code with risk assessment\nresult = await mcp_client.call_tool(\"refactor_safely\", {\n    \"code_content\": legacy_code,\n    \"refactor_goal\": \"improve maintainability\",\n    \"safety_level\": \"conservative\"\n})\n\n# Generates:\n# - Refactoring plan\n# - Risk assessment\n# - Safety recommendations\n# - Step-by-step approach",
      "\ud83d\udd27 **Production Usage Examples**",
      "**Safe Code Refactoring**",
      "- Analyzes emotional context",
      "#### **Pattern Detection Across Domains**",
      "#### **Intelligent Memory Retrieval**",
      "- Complexity assessment",
      "**Pattern Detection Across Domains**",
      "python\n# Safely remove outdated information\nresult = await mcp_client.call_tool(\"forget_selectively\", {\n    \"criteria\": \"outdated documentation\",\n    \"confirmation\": True\n})\n\n# Provides:\n# - Risk assessment before deletion\n# - Context-aware cleanup\n# - Safe deletion confirmation",
      "**Safe refactoring** with risk assessment",
      "**Implicit goal detection** in user requests",
      "[ ] Context tools deliver comprehensive analysis",
      "- Context-aware analysis",
      "**Deep Thinking with Context**",
      "Safely remove outdated information",
      "**Deep Content Comprehension**",
      "Remember important information with context",
      "- Implicit goal detection",
      "**2. \ud83e\udde0 AI Assistant Enhancement**",
      "understand_deeply",
      "python\n# Debug code with pattern recognition\nresult = await mcp_client.call_tool(\"debug_intelligently\", {\n    \"code_content\": problematic_code,\n    \"error_message\": \"TypeError: 'NoneType' object is not subscriptable\",\n    \"context\": \"production\"\n})\n\n# Offers:\n# - Pattern-based debugging\n# - Strategic recommendations\n# - Context-aware analysis\n# - Debugging strategies",
      "**`code_analyze`** - Code context and quality analysis",
      "[ ] ContextAnalyzer integration verified",
      "**\ud83d\udcbb Cursor-Specific (3 tools)**",
      "python\n# Assess content complexity comprehensively\nresult = await mcp_client.call_tool(\"assess_complexity\", {\n    \"content\": \"Technical documentation\",\n    \"assessment_focus\": \"comprehensive\"\n})\n\n# Evaluates:\n# - Cognitive load\n# - Technical complexity\n# - Emotional depth\n# - Actionable recommendations",
      "**Risk Assessment**: Use `refactor_safely` for system changes",
      "for large-scale code improvements\n- **Debugging**: Use",
      "**`recall_intelligently`** - Smart memory retrieval with relevance scoring",
      "#### **Enhanced Self-Reflection**",
      "**Pattern Recognition**: Use `detect_patterns` for user behavior analysis",
      "---\n\n## \ud83d\ude80 **Production Deployment Checklist**\n\n### **\u2705 Pre-Deployment Verification**\n\n- [ ] All 12 enhanced tools registered successfully\n- [ ] ContextAnalyzer integration verified\n- [ ] MCP server running without errors\n- [ ] Tool registry properly configured\n- [ ] Enhanced brain tools loaded\n\n### **\u2705 Integration Testing**\n\n- [ ] Cognitive tools respond with context insights\n- [ ] Memory tools use ContextAnalyzer\n- [ ] Analysis tools provide deep understanding\n- [ ] Cursor tools optimize for development\n- [ ] Context tools deliver comprehensive analysis\n\n### **\u2705 Performance Monitoring**\n\n- [ ] Tool response times acceptable\n- [ ] ContextAnalyzer performance optimal\n- [ ] Memory usage within limits\n- [ ] Error rates minimal\n- [ ] User satisfaction high\n\n---\n\n## \ud83c\udfaf **Real-World Use Cases**\n\n### **1. \ud83c\udfe2 Enterprise Development**\n\n- **Code Reviews**: Use",
      "recall_intelligently",
      "Understand complex requests deeply",
      "- Context-aware insights",
      "**Multi-layer context analysis** for comprehensive insights",
      "**`detect_patterns`** - Advanced pattern detection",
      "#### **Complexity Assessment**",
      "#### **Safe Code Refactoring**",
      "**\u2705 Performance Monitoring**",
      "assess_complexity",
      "**`remember_important`** - Enhanced memory formation",
      "[ ] Error rates minimal",
      "for system analysis\n- **Pattern Recognition**: Use",
      "- Emotional weight consideration",
      "python\n# Use think_deeply for complex problem solving\nresult = await mcp_client.call_tool(\"think_deeply\", {\n    \"message\": \"How can I refactor this legacy system safely?\",\n    \"context\": \"system_architecture\"\n})\n\n# Result includes:\n# - ContextAnalyzer insights\n# - Implicit goal detection\n# - Complexity assessment\n# - Strategic recommendations",
      "Features:",
      "[ ] Analysis tools provide deep understanding",
      "[ ] Memory usage within limits",
      "**\ud83e\udde0 Human-Inspired Intelligence**",
      "**Consistent context understanding** across all tools",
      "**5. \ud83c\udfaf Dedicated Context Analysis**",
      "**Code analysis** with context awareness",
      "**12 Enhanced Tools** with full ContextAnalyzer integration",
      "- Code structure analysis",
      "python\n# Analyze code structure and quality\nresult = await mcp_client.call_tool(\"code_analyze\", {\n    \"code_content\": sample_code,\n    \"analysis_focus\": \"quality\"\n})\n\n# Provides:\n# - Code structure analysis\n# - Quality assessment\n# - Best practice recommendations\n# - Context-aware insights",
      "**\u2705 Integration Testing**",
      "analyze_context_comprehensive",
      "- Hidden complexity",
      "[ ] Memory tools use ContextAnalyzer",
      "Automatically:",
      "**\ud83c\udfaf Context Analysis (1 tool)**",
      "**Pattern Recognition**: Use `detect_patterns` for system monitoring",
      "**Comprehensive Context Understanding**",
      "- Refactoring plan",
      "python\n# Full ContextAnalyzer power\nresult = await mcp_client.call_tool(\"analyze_context_comprehensive\", {\n    \"content\": complex_request\n})\n\n# Delivers:\n# - Multi-layer context analysis\n# - Implicit goal detection\n# - Emotional context understanding\n# - Complexity assessment\n# - Strategic recommendations\n# - Subtle pattern recognition",
      "**`refactor_safely`** - Safe code refactoring with risk assessment",
      "**4. \ud83d\udd27 System Administration**",
      "- Strategic recommendations",
      "### **3. \ud83d\udd0d Advanced Analysis & Understanding**\n\n#### **Deep Content Comprehension**",
      "**\ud83d\udcbb Cursor Optimization**",
      "**`debug_intelligently`** - Smart debugging with pattern recognition",
      "Full ContextAnalyzer power",
      "Detects:",
      "\ud83c\udf89 **Congratulations!**",
      "- Technical complexity",
      "Use reflect_enhanced for learning improvement",
      "**Conversation Memory**: Use `remember_important` and `recall_intelligently`",
      "Find relevant memories with context awareness",
      "- Tags with relevant patterns",
      "**Code Reviews**: Use `code_analyze` for comprehensive code assessment",
      "- Communication preferences",
      "**2. \ud83e\udde0 Intelligent Memory Management**",
      "- ContextAnalyzer insights",
      "\ud83c\udf1f **What Makes This Special**",
      "**Content Analysis**: Use `assess_complexity` for documentation review",
      "- Cognitive load",
      "**Code Quality Analysis**",
      "Provides:",
      "- Risk assessment before deletion",
      "\ud83d\ude80 **Production Deployment Checklist**",
      "debug_intelligently",
      "\ud83d\udcca **Tool Arsenal Overview**",
      "python\n# Use reflect_enhanced for learning improvement\nresult = await mcp_client.call_tool(\"reflect_enhanced\", {\n    \"topic\": \"recent_interactions\"\n})\n\n# Provides:\n# - Pattern recognition in conversations\n# - Learning optimization suggestions\n# - Context-aware insights",
      "\ud83d\ude80 Production Integration Guide",
      "**Complexity Management**: Use `assess_complexity` for system analysis",
      "- Safety recommendations",
      "- Cross-domain connections",
      "for learning optimization\n- **Context Analysis**: Use",
      "for system changes\n- **Complexity Management**: Use",
      "**`think_deeply`** - Deep reasoning with full ContextAnalyzer",
      "### **2. \ud83e\udde0 Intelligent Memory Management**\n\n#### **Smart Information Storage**",
      "**Development-focused tools** for coding workflows",
      "\ud83c\udfaf Enhanced Tool Arsenal - Ready for Production!",
      "Result includes:",
      "- Actionable recommendations",
      "**1. \ud83e\udde0 Enhanced Cognitive Processing**",
      "\ud83c\udfaf **Real-World Use Cases**",
      "**\ud83e\udde0 Memory Management (3 tools)**",
      "**`understand_deeply`** - Deep comprehension analysis",
      "- Implicit goals and constraints",
      "**Context Analysis**: Use `analyze_context_comprehensive` for deep understanding",
      "**No more fallback systems** - full power always available",
      "- Integrates with existing memories",
      "**\ud83c\udfaf ContextAnalyzer Everywhere**",
      "for complex requests\n- **Pattern Recognition**: Use",
      "[ ] ContextAnalyzer performance optimal",
      "**\ud83e\udde0 Cognitive Core (2 tools)**",
      "Delivers:",
      "- Risk factors",
      "**1. \ud83c\udfe2 Enterprise Development**",
      "**`reflect_enhanced`** - Advanced self-reflection with context",
      "[ ] All 12 enhanced tools registered successfully",
      "[ ] MCP server running without errors",
      "### **5. \ud83c\udfaf Dedicated Context Analysis**\n\n#### **Comprehensive Context Understanding**",
      "- Subtle pattern recognition",
      "**Selective Memory Cleanup**",
      "- Pattern recognition in conversations",
      "**Complexity Assessment**",
      "**Cursor-optimized** development experience",
      "Refactor code with risk assessment",
      "**Intelligent Memory Retrieval**",
      "- Emotional context understanding",
      "python\n# Remember important information with context\nresult = await mcp_client.call_tool(\"remember_important\", {\n    \"information\": \"User prefers step-by-step explanations\",\n    \"importance\": \"high\"\n})\n\n# Automatically:\n# - Analyzes emotional context\n# - Tags with relevant patterns\n# - Integrates with existing memories",
      "Use think_deeply for complex problem solving",
      "- Pattern-based search",
      "for comprehensive code assessment\n- **Refactoring**: Use",
      "code_analyze",
      "Offers:",
      "**Debugging**: Use `debug_intelligently` for complex production issues",
      "**Context Understanding**: Use `understand_deeply` for complex requests",
      "**Pattern recognition** for subtle insights",
      "- Context-aware relevance scoring",
      "**\ud83d\udd0d Deep Understanding**",
      "Evaluates:",
      "Generates:",
      "for complex production issues\n\n### **2. \ud83e\udde0 AI Assistant Enhancement**\n\n- **Conversation Memory**: Use",
      "[ ] Enhanced brain tools loaded",
      "**Cross-domain pattern recognition** for holistic understanding",
      "- Learning optimization suggestions",
      "#### **Selective Memory Cleanup**",
      "python\n# Find relevant memories with context awareness\nresult = await mcp_client.call_tool(\"recall_intelligently\", {\n    \"query\": \"code quality improvements\",\n    \"depth\": \"deep\",\n    \"limit\": 10\n})\n\n# Features:\n# - Context-aware relevance scoring\n# - Pattern-based search\n# - Emotional weight consideration",
      "**Enhanced Self-Reflection**",
      "- Debugging strategies",
      "**Pattern Detection**: Use `detect_patterns` for learning optimization",
      "Analyze code structure and quality",
      "remember_important",
      "**Refactoring**: Use `refactor_safely` for large-scale code improvements",
      "**4. \ud83d\udcbb Cursor-Optimized Development Tools**",
      "- Pattern-based debugging",
      "### **4. \ud83d\udcbb Cursor-Optimized Development Tools**\n\n#### **Code Quality Analysis**",
      "[ ] Tool response times acceptable",
      "Find subtle patterns in communication",
      "- **Context Understanding**: Use",
      "[ ] Cognitive tools respond with context insights",
      "for user behavior analysis\n\n### **3. \ud83d\udcda Learning & Documentation**\n\n- **Content Analysis**: Use",
      "**Human-inspired** intelligence and understanding",
      "for deep understanding\n\n### **4. \ud83d\udd27 System Administration**\n\n- **Risk Assessment**: Use",
      "refactor_safely",
      "#### **Intelligent Debugging**",
      "- Safe deletion confirmation",
      "**Every tool** integrates with ContextAnalyzer",
      "- Emotional patterns",
      "**`forget_selectively`** - Intelligent memory cleanup",
      "reflect_enhanced",
      "Debug code with pattern recognition",
      "for documentation review\n- **Pattern Detection**: Use",
      "[ ] Cursor tools optimize for development",
      "**Emotional context awareness** in all interactions",
      "[ ] Tool registry properly configured",
      "- Step-by-step approach",
      "**3. \ud83d\udcda Learning & Documentation**",
      "**Intelligent Debugging**",
      "Identifies:",
      "**\u2705 Pre-Deployment Verification**",
      "**`assess_complexity`** - Comprehensive complexity assessment",
      "**\ud83d\udd0d Analysis & Understanding (3 tools)**",
      "- Quality assessment",
      "- Context-aware cleanup",
      "- Best practice recommendations",
      "- Risk assessment",
      "python\n# Understand complex requests deeply\nresult = await mcp_client.call_tool(\"understand_deeply\", {\n    \"content\": \"I need to refactor legacy code without breaking production\",\n    \"analysis_type\": \"comprehensive\"\n})\n\n# Detects:\n# - Implicit goals and constraints\n# - Hidden complexity\n# - Risk factors\n# - Strategic recommendations",
      "**Smart Information Storage**",
      "forget_selectively",
      "Assess content complexity comprehensively",
      "[ ] User satisfaction high",
      "**ContextAnalyzer power** visible and accessible everywhere",
      "detect_patterns",
      "- Emotional depth",
      "**3. \ud83d\udd0d Advanced Analysis & Understanding**",
      "- Temporal patterns",
      "python\n# Find subtle patterns in communication\nresult = await mcp_client.call_tool(\"detect_patterns\", {\n    \"content\": \"User communication patterns\",\n    \"pattern_type\": \"all\"\n})\n\n# Identifies:\n# - Emotional patterns\n# - Communication preferences\n# - Cross-domain connections\n# - Temporal patterns",
      "**Production-ready** system with comprehensive testing",
      "- Multi-layer context analysis",
      "think_deeply",
      "**Complexity assessment** with actionable recommendations",
      "**`analyze_context_comprehensive`** - Full ContextAnalyzer functionality",
      "python\n# Refactor code with risk assessment\nresult = await mcp_client.call_tool(\"refactor_safely\", {\n    \"code_content\": legacy_code,\n    \"refactor_goal\": \"improve maintainability\",\n    \"safety_level\": \"conservative\"\n})\n\n# Generates:\n# - Refactoring plan\n# - Risk assessment\n# - Safety recommendations\n# - Step-by-step approach",
      "\ud83d\udd27 **Production Usage Examples**",
      "**Safe Code Refactoring**",
      "- Analyzes emotional context",
      "#### **Pattern Detection Across Domains**",
      "#### **Intelligent Memory Retrieval**",
      "- Complexity assessment",
      "**Pattern Detection Across Domains**",
      "python\n# Safely remove outdated information\nresult = await mcp_client.call_tool(\"forget_selectively\", {\n    \"criteria\": \"outdated documentation\",\n    \"confirmation\": True\n})\n\n# Provides:\n# - Risk assessment before deletion\n# - Context-aware cleanup\n# - Safe deletion confirmation",
      "**Safe refactoring** with risk assessment",
      "**Implicit goal detection** in user requests",
      "[ ] Context tools deliver comprehensive analysis",
      "- Context-aware analysis",
      "**Deep Thinking with Context**",
      "Safely remove outdated information",
      "**Deep Content Comprehension**",
      "Remember important information with context",
      "- Implicit goal detection",
      "**2. \ud83e\udde0 AI Assistant Enhancement**",
      "understand_deeply",
      "python\n# Debug code with pattern recognition\nresult = await mcp_client.call_tool(\"debug_intelligently\", {\n    \"code_content\": problematic_code,\n    \"error_message\": \"TypeError: 'NoneType' object is not subscriptable\",\n    \"context\": \"production\"\n})\n\n# Offers:\n# - Pattern-based debugging\n# - Strategic recommendations\n# - Context-aware analysis\n# - Debugging strategies",
      "**`code_analyze`** - Code context and quality analysis",
      "[ ] ContextAnalyzer integration verified",
      "**\ud83d\udcbb Cursor-Specific (3 tools)**",
      "python\n# Assess content complexity comprehensively\nresult = await mcp_client.call_tool(\"assess_complexity\", {\n    \"content\": \"Technical documentation\",\n    \"assessment_focus\": \"comprehensive\"\n})\n\n# Evaluates:\n# - Cognitive load\n# - Technical complexity\n# - Emotional depth\n# - Actionable recommendations",
      "**Risk Assessment**: Use `refactor_safely` for system changes",
      "for large-scale code improvements\n- **Debugging**: Use",
      "**`recall_intelligently`** - Smart memory retrieval with relevance scoring",
      "#### **Enhanced Self-Reflection**",
      "**Pattern Recognition**: Use `detect_patterns` for user behavior analysis",
      "---\n\n## \ud83d\ude80 **Production Deployment Checklist**\n\n### **\u2705 Pre-Deployment Verification**\n\n- [ ] All 12 enhanced tools registered successfully\n- [ ] ContextAnalyzer integration verified\n- [ ] MCP server running without errors\n- [ ] Tool registry properly configured\n- [ ] Enhanced brain tools loaded\n\n### **\u2705 Integration Testing**\n\n- [ ] Cognitive tools respond with context insights\n- [ ] Memory tools use ContextAnalyzer\n- [ ] Analysis tools provide deep understanding\n- [ ] Cursor tools optimize for development\n- [ ] Context tools deliver comprehensive analysis\n\n### **\u2705 Performance Monitoring**\n\n- [ ] Tool response times acceptable\n- [ ] ContextAnalyzer performance optimal\n- [ ] Memory usage within limits\n- [ ] Error rates minimal\n- [ ] User satisfaction high\n\n---\n\n## \ud83c\udfaf **Real-World Use Cases**\n\n### **1. \ud83c\udfe2 Enterprise Development**\n\n- **Code Reviews**: Use",
      "recall_intelligently",
      "Understand complex requests deeply",
      "- Context-aware insights",
      "**Multi-layer context analysis** for comprehensive insights",
      "**`detect_patterns`** - Advanced pattern detection",
      "#### **Complexity Assessment**",
      "#### **Safe Code Refactoring**",
      "**\u2705 Performance Monitoring**",
      "assess_complexity",
      "**`remember_important`** - Enhanced memory formation",
      "[ ] Error rates minimal",
      "for system analysis\n- **Pattern Recognition**: Use",
      "- Emotional weight consideration",
      "python\n# Use think_deeply for complex problem solving\nresult = await mcp_client.call_tool(\"think_deeply\", {\n    \"message\": \"How can I refactor this legacy system safely?\",\n    \"context\": \"system_architecture\"\n})\n\n# Result includes:\n# - ContextAnalyzer insights\n# - Implicit goal detection\n# - Complexity assessment\n# - Strategic recommendations",
      "Features:",
      "[ ] Analysis tools provide deep understanding",
      "[ ] Memory usage within limits",
      "**\ud83e\udde0 Human-Inspired Intelligence**",
      "**Consistent context understanding** across all tools",
      "**5. \ud83c\udfaf Dedicated Context Analysis**",
      "**Code analysis** with context awareness",
      "**12 Enhanced Tools** with full ContextAnalyzer integration",
      "- Code structure analysis",
      "python\n# Analyze code structure and quality\nresult = await mcp_client.call_tool(\"code_analyze\", {\n    \"code_content\": sample_code,\n    \"analysis_focus\": \"quality\"\n})\n\n# Provides:\n# - Code structure analysis\n# - Quality assessment\n# - Best practice recommendations\n# - Context-aware insights",
      "**\u2705 Integration Testing**",
      "analyze_context_comprehensive",
      "- Hidden complexity",
      "[ ] Memory tools use ContextAnalyzer",
      "Automatically:",
      "**\ud83c\udfaf Context Analysis (1 tool)**",
      "**Pattern Recognition**: Use `detect_patterns` for system monitoring",
      "**Comprehensive Context Understanding**",
      "- Refactoring plan",
      "python\n# Full ContextAnalyzer power\nresult = await mcp_client.call_tool(\"analyze_context_comprehensive\", {\n    \"content\": complex_request\n})\n\n# Delivers:\n# - Multi-layer context analysis\n# - Implicit goal detection\n# - Emotional context understanding\n# - Complexity assessment\n# - Strategic recommendations\n# - Subtle pattern recognition",
      "**`refactor_safely`** - Safe code refactoring with risk assessment",
      "**4. \ud83d\udd27 System Administration**",
      "- Strategic recommendations",
      "### **3. \ud83d\udd0d Advanced Analysis & Understanding**\n\n#### **Deep Content Comprehension**",
      "**\ud83d\udcbb Cursor Optimization**",
      "**`debug_intelligently`** - Smart debugging with pattern recognition",
      "Full ContextAnalyzer power",
      "Detects:",
      "\ud83c\udf89 **Congratulations!**",
      "- Technical complexity",
      "Use reflect_enhanced for learning improvement",
      "**Conversation Memory**: Use `remember_important` and `recall_intelligently`",
      "Find relevant memories with context awareness",
      "- Tags with relevant patterns",
      "**Code Reviews**: Use `code_analyze` for comprehensive code assessment",
      "- Communication preferences",
      "**2. \ud83e\udde0 Intelligent Memory Management**",
      "- ContextAnalyzer insights",
      "\ud83c\udf1f **What Makes This Special**",
      "**Content Analysis**: Use `assess_complexity` for documentation review",
      "- Cognitive load",
      "**Code Quality Analysis**",
      "Provides:",
      "- Risk assessment before deletion",
      "\ud83d\ude80 **Production Deployment Checklist**",
      "debug_intelligently",
      "\ud83d\udcca **Tool Arsenal Overview**",
      "python\n# Use reflect_enhanced for learning improvement\nresult = await mcp_client.call_tool(\"reflect_enhanced\", {\n    \"topic\": \"recent_interactions\"\n})\n\n# Provides:\n# - Pattern recognition in conversations\n# - Learning optimization suggestions\n# - Context-aware insights",
      "\ud83d\ude80 Production Integration Guide",
      "**Complexity Management**: Use `assess_complexity` for system analysis",
      "- Safety recommendations",
      "- Cross-domain connections",
      "for learning optimization\n- **Context Analysis**: Use",
      "for system changes\n- **Complexity Management**: Use",
      "**`think_deeply`** - Deep reasoning with full ContextAnalyzer",
      "### **2. \ud83e\udde0 Intelligent Memory Management**\n\n#### **Smart Information Storage**",
      "**Development-focused tools** for coding workflows",
      "\ud83c\udfaf Enhanced Tool Arsenal - Ready for Production!",
      "Result includes:",
      "- Actionable recommendations",
      "**1. \ud83e\udde0 Enhanced Cognitive Processing**",
      "\ud83c\udfaf **Real-World Use Cases**",
      "**\ud83e\udde0 Memory Management (3 tools)**",
      "**`understand_deeply`** - Deep comprehension analysis",
      "- Implicit goals and constraints",
      "**Context Analysis**: Use `analyze_context_comprehensive` for deep understanding",
      "**No more fallback systems** - full power always available",
      "- Integrates with existing memories",
      "**\ud83c\udfaf ContextAnalyzer Everywhere**",
      "for complex requests\n- **Pattern Recognition**: Use",
      "[ ] ContextAnalyzer performance optimal",
      "**\ud83e\udde0 Cognitive Core (2 tools)**",
      "Delivers:",
      "- Risk factors",
      "**1. \ud83c\udfe2 Enterprise Development**",
      "**`reflect_enhanced`** - Advanced self-reflection with context",
      "[ ] All 12 enhanced tools registered successfully",
      "[ ] MCP server running without errors",
      "### **5. \ud83c\udfaf Dedicated Context Analysis**\n\n#### **Comprehensive Context Understanding**",
      "- Subtle pattern recognition",
      "**Selective Memory Cleanup**",
      "- Pattern recognition in conversations",
      "**Complexity Assessment**",
      "**Cursor-optimized** development experience",
      "Refactor code with risk assessment",
      "**Intelligent Memory Retrieval**",
      "- Emotional context understanding",
      "python\n# Remember important information with context\nresult = await mcp_client.call_tool(\"remember_important\", {\n    \"information\": \"User prefers step-by-step explanations\",\n    \"importance\": \"high\"\n})\n\n# Automatically:\n# - Analyzes emotional context\n# - Tags with relevant patterns\n# - Integrates with existing memories",
      "Use think_deeply for complex problem solving",
      "- Pattern-based search",
      "for comprehensive code assessment\n- **Refactoring**: Use",
      "code_analyze",
      "Offers:",
      "**Debugging**: Use `debug_intelligently` for complex production issues",
      "**Context Understanding**: Use `understand_deeply` for complex requests",
      "**Pattern recognition** for subtle insights",
      "- Context-aware relevance scoring",
      "**\ud83d\udd0d Deep Understanding**",
      "Evaluates:",
      "Generates:",
      "for complex production issues\n\n### **2. \ud83e\udde0 AI Assistant Enhancement**\n\n- **Conversation Memory**: Use",
      "[ ] Enhanced brain tools loaded",
      "**Cross-domain pattern recognition** for holistic understanding",
      "- Learning optimization suggestions",
      "#### **Selective Memory Cleanup**",
      "python\n# Find relevant memories with context awareness\nresult = await mcp_client.call_tool(\"recall_intelligently\", {\n    \"query\": \"code quality improvements\",\n    \"depth\": \"deep\",\n    \"limit\": 10\n})\n\n# Features:\n# - Context-aware relevance scoring\n# - Pattern-based search\n# - Emotional weight consideration",
      "**Enhanced Self-Reflection**",
      "- Debugging strategies",
      "**Pattern Detection**: Use `detect_patterns` for learning optimization",
      "Analyze code structure and quality",
      "remember_important",
      "**Refactoring**: Use `refactor_safely` for large-scale code improvements",
      "**4. \ud83d\udcbb Cursor-Optimized Development Tools**",
      "- Pattern-based debugging",
      "### **4. \ud83d\udcbb Cursor-Optimized Development Tools**\n\n#### **Code Quality Analysis**",
      "[ ] Tool response times acceptable",
      "Find subtle patterns in communication",
      "- **Context Understanding**: Use",
      "[ ] Cognitive tools respond with context insights",
      "for user behavior analysis\n\n### **3. \ud83d\udcda Learning & Documentation**\n\n- **Content Analysis**: Use",
      "**Human-inspired** intelligence and understanding",
      "for deep understanding\n\n### **4. \ud83d\udd27 System Administration**\n\n- **Risk Assessment**: Use",
      "refactor_safely",
      "#### **Intelligent Debugging**",
      "- Safe deletion confirmation",
      "**Every tool** integrates with ContextAnalyzer",
      "- Emotional patterns",
      "**`forget_selectively`** - Intelligent memory cleanup",
      "reflect_enhanced",
      "Debug code with pattern recognition",
      "for documentation review\n- **Pattern Detection**: Use",
      "[ ] Cursor tools optimize for development",
      "**Emotional context awareness** in all interactions",
      "[ ] Tool registry properly configured",
      "- Step-by-step approach",
      "**3. \ud83d\udcda Learning & Documentation**",
      "**Intelligent Debugging**",
      "Identifies:",
      "**\u2705 Pre-Deployment Verification**",
      "**`assess_complexity`** - Comprehensive complexity assessment",
      "**\ud83d\udd0d Analysis & Understanding (3 tools)**",
      "- Quality assessment",
      "- Context-aware cleanup",
      "- Best practice recommendations",
      "- Risk assessment",
      "python\n# Understand complex requests deeply\nresult = await mcp_client.call_tool(\"understand_deeply\", {\n    \"content\": \"I need to refactor legacy code without breaking production\",\n    \"analysis_type\": \"comprehensive\"\n})\n\n# Detects:\n# - Implicit goals and constraints\n# - Hidden complexity\n# - Risk factors\n# - Strategic recommendations",
      "**Smart Information Storage**",
      "forget_selectively",
      "Assess content complexity comprehensively",
      "[ ] User satisfaction high",
      "**ContextAnalyzer power** visible and accessible everywhere",
      "detect_patterns",
      "- Emotional depth",
      "**3. \ud83d\udd0d Advanced Analysis & Understanding**",
      "- Temporal patterns",
      "python\n# Find subtle patterns in communication\nresult = await mcp_client.call_tool(\"detect_patterns\", {\n    \"content\": \"User communication patterns\",\n    \"pattern_type\": \"all\"\n})\n\n# Identifies:\n# - Emotional patterns\n# - Communication preferences\n# - Cross-domain connections\n# - Temporal patterns",
      "**Production-ready** system with comprehensive testing",
      "- Multi-layer context analysis",
      "think_deeply",
      "**Complexity assessment** with actionable recommendations",
      "**`analyze_context_comprehensive`** - Full ContextAnalyzer functionality",
      "python\n# Refactor code with risk assessment\nresult = await mcp_client.call_tool(\"refactor_safely\", {\n    \"code_content\": legacy_code,\n    \"refactor_goal\": \"improve maintainability\",\n    \"safety_level\": \"conservative\"\n})\n\n# Generates:\n# - Refactoring plan\n# - Risk assessment\n# - Safety recommendations\n# - Step-by-step approach",
      "\ud83d\udd27 **Production Usage Examples**",
      "**Safe Code Refactoring**",
      "- Analyzes emotional context",
      "#### **Pattern Detection Across Domains**",
      "#### **Intelligent Memory Retrieval**",
      "- Complexity assessment",
      "**Pattern Detection Across Domains**",
      "python\n# Safely remove outdated information\nresult = await mcp_client.call_tool(\"forget_selectively\", {\n    \"criteria\": \"outdated documentation\",\n    \"confirmation\": True\n})\n\n# Provides:\n# - Risk assessment before deletion\n# - Context-aware cleanup\n# - Safe deletion confirmation",
      "**Safe refactoring** with risk assessment",
      "**Implicit goal detection** in user requests",
      "[ ] Context tools deliver comprehensive analysis",
      "- Context-aware analysis",
      "**Deep Thinking with Context**",
      "Safely remove outdated information",
      "**Deep Content Comprehension**",
      "Remember important information with context",
      "- Implicit goal detection",
      "**2. \ud83e\udde0 AI Assistant Enhancement**",
      "understand_deeply",
      "python\n# Debug code with pattern recognition\nresult = await mcp_client.call_tool(\"debug_intelligently\", {\n    \"code_content\": problematic_code,\n    \"error_message\": \"TypeError: 'NoneType' object is not subscriptable\",\n    \"context\": \"production\"\n})\n\n# Offers:\n# - Pattern-based debugging\n# - Strategic recommendations\n# - Context-aware analysis\n# - Debugging strategies",
      "**`code_analyze`** - Code context and quality analysis",
      "[ ] ContextAnalyzer integration verified",
      "**\ud83d\udcbb Cursor-Specific (3 tools)**",
      "python\n# Assess content complexity comprehensively\nresult = await mcp_client.call_tool(\"assess_complexity\", {\n    \"content\": \"Technical documentation\",\n    \"assessment_focus\": \"comprehensive\"\n})\n\n# Evaluates:\n# - Cognitive load\n# - Technical complexity\n# - Emotional depth\n# - Actionable recommendations",
      "**Risk Assessment**: Use `refactor_safely` for system changes",
      "for large-scale code improvements\n- **Debugging**: Use",
      "**`recall_intelligently`** - Smart memory retrieval with relevance scoring",
      "#### **Enhanced Self-Reflection**",
      "**Pattern Recognition**: Use `detect_patterns` for user behavior analysis",
      "---\n\n## \ud83d\ude80 **Production Deployment Checklist**\n\n### **\u2705 Pre-Deployment Verification**\n\n- [ ] All 12 enhanced tools registered successfully\n- [ ] ContextAnalyzer integration verified\n- [ ] MCP server running without errors\n- [ ] Tool registry properly configured\n- [ ] Enhanced brain tools loaded\n\n### **\u2705 Integration Testing**\n\n- [ ] Cognitive tools respond with context insights\n- [ ] Memory tools use ContextAnalyzer\n- [ ] Analysis tools provide deep understanding\n- [ ] Cursor tools optimize for development\n- [ ] Context tools deliver comprehensive analysis\n\n### **\u2705 Performance Monitoring**\n\n- [ ] Tool response times acceptable\n- [ ] ContextAnalyzer performance optimal\n- [ ] Memory usage within limits\n- [ ] Error rates minimal\n- [ ] User satisfaction high\n\n---\n\n## \ud83c\udfaf **Real-World Use Cases**\n\n### **1. \ud83c\udfe2 Enterprise Development**\n\n- **Code Reviews**: Use",
      "recall_intelligently",
      "Understand complex requests deeply",
      "- Context-aware insights",
      "**Multi-layer context analysis** for comprehensive insights",
      "**`detect_patterns`** - Advanced pattern detection",
      "#### **Complexity Assessment**",
      "#### **Safe Code Refactoring**",
      "**\u2705 Performance Monitoring**",
      "assess_complexity",
      "**`remember_important`** - Enhanced memory formation",
      "[ ] Error rates minimal",
      "for system analysis\n- **Pattern Recognition**: Use",
      "- Emotional weight consideration",
      "python\n# Use think_deeply for complex problem solving\nresult = await mcp_client.call_tool(\"think_deeply\", {\n    \"message\": \"How can I refactor this legacy system safely?\",\n    \"context\": \"system_architecture\"\n})\n\n# Result includes:\n# - ContextAnalyzer insights\n# - Implicit goal detection\n# - Complexity assessment\n# - Strategic recommendations",
      "Features:",
      "[ ] Analysis tools provide deep understanding",
      "[ ] Memory usage within limits",
      "**\ud83e\udde0 Human-Inspired Intelligence**",
      "**Consistent context understanding** across all tools",
      "**5. \ud83c\udfaf Dedicated Context Analysis**",
      "**Code analysis** with context awareness",
      "**12 Enhanced Tools** with full ContextAnalyzer integration",
      "- Code structure analysis",
      "python\n# Analyze code structure and quality\nresult = await mcp_client.call_tool(\"code_analyze\", {\n    \"code_content\": sample_code,\n    \"analysis_focus\": \"quality\"\n})\n\n# Provides:\n# - Code structure analysis\n# - Quality assessment\n# - Best practice recommendations\n# - Context-aware insights",
      "**\u2705 Integration Testing**",
      "analyze_context_comprehensive",
      "- Hidden complexity",
      "[ ] Memory tools use ContextAnalyzer",
      "Automatically:",
      "**\ud83c\udfaf Context Analysis (1 tool)**",
      "**Pattern Recognition**: Use `detect_patterns` for system monitoring",
      "**Comprehensive Context Understanding**",
      "- Refactoring plan",
      "python\n# Full ContextAnalyzer power\nresult = await mcp_client.call_tool(\"analyze_context_comprehensive\", {\n    \"content\": complex_request\n})\n\n# Delivers:\n# - Multi-layer context analysis\n# - Implicit goal detection\n# - Emotional context understanding\n# - Complexity assessment\n# - Strategic recommendations\n# - Subtle pattern recognition",
      "**`refactor_safely`** - Safe code refactoring with risk assessment",
      "**4. \ud83d\udd27 System Administration**",
      "- Strategic recommendations",
      "### **3. \ud83d\udd0d Advanced Analysis & Understanding**\n\n#### **Deep Content Comprehension**",
      "**\ud83d\udcbb Cursor Optimization**",
      "**`debug_intelligently`** - Smart debugging with pattern recognition",
      "Full ContextAnalyzer power",
      "Detects:",
      "\ud83c\udf89 **Congratulations!**",
      "- Technical complexity",
      "Use reflect_enhanced for learning improvement",
      "**Conversation Memory**: Use `remember_important` and `recall_intelligently`",
      "Find relevant memories with context awareness",
      "- Tags with relevant patterns",
      "**Code Reviews**: Use `code_analyze` for comprehensive code assessment",
      "- Communication preferences",
      "**2. \ud83e\udde0 Intelligent Memory Management**",
      "- ContextAnalyzer insights",
      "\ud83c\udf1f **What Makes This Special**",
      "**Content Analysis**: Use `assess_complexity` for documentation review",
      "- Cognitive load",
      "**Code Quality Analysis**",
      "Provides:",
      "- Risk assessment before deletion",
      "\ud83d\ude80 **Production Deployment Checklist**",
      "debug_intelligently",
      "\ud83d\udcca **Tool Arsenal Overview**",
      "python\n# Use reflect_enhanced for learning improvement\nresult = await mcp_client.call_tool(\"reflect_enhanced\", {\n    \"topic\": \"recent_interactions\"\n})\n\n# Provides:\n# - Pattern recognition in conversations\n# - Learning optimization suggestions\n# - Context-aware insights",
      "\ud83d\ude80 Production Integration Guide",
      "**Complexity Management**: Use `assess_complexity` for system analysis",
      "- Safety recommendations",
      "- Cross-domain connections",
      "for learning optimization\n- **Context Analysis**: Use",
      "for system changes\n- **Complexity Management**: Use",
      "**`think_deeply`** - Deep reasoning with full ContextAnalyzer",
      "### **2. \ud83e\udde0 Intelligent Memory Management**\n\n#### **Smart Information Storage**",
      "**Development-focused tools** for coding workflows",
      "\ud83c\udfaf Enhanced Tool Arsenal - Ready for Production!",
      "Result includes:",
      "- Actionable recommendations",
      "**1. \ud83e\udde0 Enhanced Cognitive Processing**",
      "\ud83c\udfaf **Real-World Use Cases**",
      "**\ud83e\udde0 Memory Management (3 tools)**",
      "**`understand_deeply`** - Deep comprehension analysis",
      "- Implicit goals and constraints",
      "**Context Analysis**: Use `analyze_context_comprehensive` for deep understanding",
      "**No more fallback systems** - full power always available",
      "- Integrates with existing memories",
      "**\ud83c\udfaf ContextAnalyzer Everywhere**",
      "for complex requests\n- **Pattern Recognition**: Use",
      "[ ] ContextAnalyzer performance optimal",
      "**\ud83e\udde0 Cognitive Core (2 tools)**",
      "Delivers:",
      "- Risk factors",
      "**1. \ud83c\udfe2 Enterprise Development**",
      "**`reflect_enhanced`** - Advanced self-reflection with context",
      "[ ] All 12 enhanced tools registered successfully",
      "[ ] MCP server running without errors",
      "### **5. \ud83c\udfaf Dedicated Context Analysis**\n\n#### **Comprehensive Context Understanding**",
      "- Subtle pattern recognition",
      "**Selective Memory Cleanup**",
      "- Pattern recognition in conversations",
      "**Complexity Assessment**",
      "**Cursor-optimized** development experience",
      "Refactor code with risk assessment",
      "**Intelligent Memory Retrieval**",
      "- Emotional context understanding"
    ],
    "PROJECT_ORGANIZATION.md": [
      "Project Organization Guide",
      "`.cursorrules` - Cursor IDE settings",
      "Keep commits focused and descriptive",
      "Run cleanup script regularly",
      "### 2. Adding Features\n\n- Create plugins in",
      "bash\n# Install dependencies\nuv sync\n\n# Run with Docker\ndocker-compose up\n\n# Run locally\nuv run python main.py",
      "directory\n- Add tests in",
      "What Gets Cleaned Up",
      "- LLM client for AI models\n\n### Configuration\n\n-",
      "Common Issues",
      "- Main project overview\n-",
      "Review `CLEANUP_SUMMARY.md` for recent changes",
      "Run cleanup script before major commits",
      "\ud83d\udd04 Version Control",
      "- Cursor IDE settings\n\n### Documentation\n\n-",
      "Run with Docker",
      "Install dependencies",
      "`pyproject.toml` - Python project configuration",
      "Regular Cleanup",
      "- Main application entry point\n-",
      "3. Maintenance",
      "## \ud83e\uddf9 Maintenance Guidelines\n\n### Regular Cleanup\n\nRun the cleanup script periodically to maintain organization:",
      "Update documentation when adding features",
      "Run cleanup script to restore organization",
      "\ud83e\uddf9 Maintenance Guidelines",
      "Maintain consistent file organization",
      "2. Adding Features",
      "**Python cache files** (`__pycache__/`, `*.pyc`, `*.pyo`)",
      "IDE-specific files",
      "Update documentation in `docs/` directory",
      "patterns for:\n\n- Python cache files\n- Virtual environments\n- Log files\n- Temporary files\n- IDE-specific files\n\n### Commit Guidelines\n\n- Keep commits focused and descriptive\n- Update documentation when adding features\n- Run cleanup script before major commits\n\n## \ud83c\udfaf Best Practices\n\n1. **Organization First**: Always place files in appropriate directories\n2. **Documentation**: Keep docs updated with code changes\n3. **Cleanliness**: Run cleanup script regularly\n4. **Consistency**: Follow established naming conventions\n5. **Maintenance**: Address technical debt promptly\n\n## \ud83c\udd98 Troubleshooting\n\n### Common Issues\n\n- **Missing directories**: Run cleanup script to recreate structure\n- **File conflicts**: Check if files are in correct locations\n- **Docker issues**: Verify docker-compose.yml configuration\n\n### Getting Help\n\n- Check",
      "- Cleanup process documentation\n\n## \ud83d\udd04 Version Control\n\n### Git Ignore Patterns\n\nThe project includes appropriate",
      "- Python project configuration\n-",
      "Commit Guidelines",
      "\ud83c\udfd7\ufe0f Current Project Structure",
      "`llm_client.py` - LLM client for AI models",
      "bash\npython3 scripts/cleanup_project.py",
      "**Docker issues**: Verify docker-compose.yml configuration",
      "**Temporary files** and development artifacts",
      "**Missing directories**: Run cleanup script to recreate structure",
      "Virtual environments",
      "- Detailed guides and documentation\n-",
      "\ud83c\udd98 Troubleshooting",
      "- Docker services configuration\n-",
      "**File conflicts**: Check if files are in correct locations",
      "Run locally",
      "Getting Help",
      "**Duplicate configurations** and redundant files",
      "Documentation",
      "directory\n\n### 3. Maintenance\n\n- Run cleanup script regularly\n- Keep documentation updated\n- Maintain consistent file organization\n\n## \ud83d\udccb File Categories\n\n### Core Application\n\n-",
      "Core Application",
      "### What Gets Cleaned Up\n\n- **Python cache files** (",
      "Add tests in `tests/` directory",
      "`main.py` - Main application entry point",
      "Keep documentation updated",
      "memory-context-manager_v2/\n\u251c\u2500\u2500 \ud83d\udcc1 docs/                    # All documentation and guides\n\u2502   \u251c\u2500\u2500 BRAIN_INTERFACE_GUIDE.md\n\u2502   \u251c\u2500\u2500 BRAIN_PLUGIN_STRUCTURE.md\n\u2502   \u251c\u2500\u2500 CURSOR_SETUP_COMPLETE.md\n\u2502   \u251c\u2500\u2500 DATABASE_INTEGRATION_COMPLETE.md\n\u2502   \u251c\u2500\u2500 DOCKER_SETUP.md\n\u2502   \u251c\u2500\u2500 SHARING_README.md\n\u2502   \u251c\u2500\u2500 TESTING_SUMMARY.md\n\u2502   \u2514\u2500\u2500 TOOL_EXECUTION_FLOWS.md\n\u251c\u2500\u2500 \ud83d\udcc1 scripts/                 # Utility and maintenance scripts\n\u2502   \u2514\u2500\u2500 cleanup_project.py      # Project cleanup and organization\n\u251c\u2500\u2500 \ud83d\udcc1 tests/                   # Test files and test suites\n\u251c\u2500\u2500 \ud83d\udcc1 config/                  # Configuration files\n\u251c\u2500\u2500 \ud83d\udcc1 plugins/                 # Plugin system and extensions\n\u251c\u2500\u2500 \ud83d\udcc1 database/                # Database components and adapters\n\u251c\u2500\u2500 \ud83d\udcc1 src/                     # Core source code\n\u251c\u2500\u2500 \ud83d\udcc1 brain_memory_store/      # Brain memory storage\n\u251c\u2500\u2500 \ud83d\udc33 docker-compose.yml       # Main Docker configuration\n\u251c\u2500\u2500 \ud83d\udc33 Dockerfile               # Production Dockerfile\n\u251c\u2500\u2500 \ud83d\udcd6 README.md                # Main project documentation\n\u251c\u2500\u2500 \ud83d\udce6 pyproject.toml           # Project configuration\n\u2514\u2500\u2500 \ud83d\udd27 .cursorrules             # Cursor IDE configuration",
      "\ud83d\ude80 Development Workflow",
      "\ud83d\udccb File Categories",
      "Temporary files",
      "Python cache files",
      "`docs/` - Detailed guides and documentation",
      "directory\n- Update documentation in",
      "directory\n\n## \ud83d\ude80 Development Workflow\n\n### 1. Project Setup",
      "- Brain interface implementation\n-",
      "Log files",
      "1. Project Setup",
      "Check `docs/` directory for relevant guides",
      "`brain_interface.py` - Brain interface implementation",
      "`CLEANUP_SUMMARY.md` - Cleanup process documentation",
      "directory for relevant guides\n- Review",
      ")\n- **Temporary files** and development artifacts\n- **Duplicate configurations** and redundant files\n\n### Adding New Files\n\n- **Documentation**: Place in",
      "`README.md` - Main project overview",
      "Git Ignore Patterns",
      "Create plugins in `plugins/` directory",
      "Configuration",
      "`docker-compose.yml` - Docker services configuration",
      "Project Organization Guide",
      "`.cursorrules` - Cursor IDE settings",
      "Keep commits focused and descriptive",
      "Run cleanup script regularly",
      "### 2. Adding Features\n\n- Create plugins in",
      "bash\n# Install dependencies\nuv sync\n\n# Run with Docker\ndocker-compose up\n\n# Run locally\nuv run python main.py",
      "directory\n- Add tests in",
      "What Gets Cleaned Up",
      "- LLM client for AI models\n\n### Configuration\n\n-",
      "Common Issues",
      "- Main project overview\n-",
      "Review `CLEANUP_SUMMARY.md` for recent changes",
      "Run cleanup script before major commits",
      "\ud83d\udd04 Version Control",
      "- Cursor IDE settings\n\n### Documentation\n\n-",
      "Run with Docker",
      "Install dependencies",
      "`pyproject.toml` - Python project configuration",
      "Regular Cleanup",
      "- Main application entry point\n-",
      "3. Maintenance",
      "## \ud83e\uddf9 Maintenance Guidelines\n\n### Regular Cleanup\n\nRun the cleanup script periodically to maintain organization:",
      "Update documentation when adding features",
      "Run cleanup script to restore organization",
      "\ud83e\uddf9 Maintenance Guidelines",
      "Maintain consistent file organization",
      "2. Adding Features",
      "**Python cache files** (`__pycache__/`, `*.pyc`, `*.pyo`)",
      "IDE-specific files",
      "Update documentation in `docs/` directory",
      "patterns for:\n\n- Python cache files\n- Virtual environments\n- Log files\n- Temporary files\n- IDE-specific files\n\n### Commit Guidelines\n\n- Keep commits focused and descriptive\n- Update documentation when adding features\n- Run cleanup script before major commits\n\n## \ud83c\udfaf Best Practices\n\n1. **Organization First**: Always place files in appropriate directories\n2. **Documentation**: Keep docs updated with code changes\n3. **Cleanliness**: Run cleanup script regularly\n4. **Consistency**: Follow established naming conventions\n5. **Maintenance**: Address technical debt promptly\n\n## \ud83c\udd98 Troubleshooting\n\n### Common Issues\n\n- **Missing directories**: Run cleanup script to recreate structure\n- **File conflicts**: Check if files are in correct locations\n- **Docker issues**: Verify docker-compose.yml configuration\n\n### Getting Help\n\n- Check",
      "- Cleanup process documentation\n\n## \ud83d\udd04 Version Control\n\n### Git Ignore Patterns\n\nThe project includes appropriate",
      "- Python project configuration\n-",
      "Commit Guidelines",
      "\ud83c\udfd7\ufe0f Current Project Structure",
      "`llm_client.py` - LLM client for AI models",
      "bash\npython3 scripts/cleanup_project.py",
      "**Docker issues**: Verify docker-compose.yml configuration",
      "**Temporary files** and development artifacts",
      "**Missing directories**: Run cleanup script to recreate structure",
      "Virtual environments",
      "- Detailed guides and documentation\n-",
      "\ud83c\udd98 Troubleshooting",
      "- Docker services configuration\n-",
      "**File conflicts**: Check if files are in correct locations",
      "Run locally",
      "Getting Help",
      "**Duplicate configurations** and redundant files",
      "Documentation",
      "directory\n\n### 3. Maintenance\n\n- Run cleanup script regularly\n- Keep documentation updated\n- Maintain consistent file organization\n\n## \ud83d\udccb File Categories\n\n### Core Application\n\n-",
      "Core Application",
      "### What Gets Cleaned Up\n\n- **Python cache files** (",
      "Add tests in `tests/` directory",
      "`main.py` - Main application entry point",
      "Keep documentation updated",
      "memory-context-manager_v2/\n\u251c\u2500\u2500 \ud83d\udcc1 docs/                    # All documentation and guides\n\u2502   \u251c\u2500\u2500 BRAIN_INTERFACE_GUIDE.md\n\u2502   \u251c\u2500\u2500 BRAIN_PLUGIN_STRUCTURE.md\n\u2502   \u251c\u2500\u2500 CURSOR_SETUP_COMPLETE.md\n\u2502   \u251c\u2500\u2500 DATABASE_INTEGRATION_COMPLETE.md\n\u2502   \u251c\u2500\u2500 DOCKER_SETUP.md\n\u2502   \u251c\u2500\u2500 SHARING_README.md\n\u2502   \u251c\u2500\u2500 TESTING_SUMMARY.md\n\u2502   \u2514\u2500\u2500 TOOL_EXECUTION_FLOWS.md\n\u251c\u2500\u2500 \ud83d\udcc1 scripts/                 # Utility and maintenance scripts\n\u2502   \u2514\u2500\u2500 cleanup_project.py      # Project cleanup and organization\n\u251c\u2500\u2500 \ud83d\udcc1 tests/                   # Test files and test suites\n\u251c\u2500\u2500 \ud83d\udcc1 config/                  # Configuration files\n\u251c\u2500\u2500 \ud83d\udcc1 plugins/                 # Plugin system and extensions\n\u251c\u2500\u2500 \ud83d\udcc1 database/                # Database components and adapters\n\u251c\u2500\u2500 \ud83d\udcc1 src/                     # Core source code\n\u251c\u2500\u2500 \ud83d\udcc1 brain_memory_store/      # Brain memory storage\n\u251c\u2500\u2500 \ud83d\udc33 docker-compose.yml       # Main Docker configuration\n\u251c\u2500\u2500 \ud83d\udc33 Dockerfile               # Production Dockerfile\n\u251c\u2500\u2500 \ud83d\udcd6 README.md                # Main project documentation\n\u251c\u2500\u2500 \ud83d\udce6 pyproject.toml           # Project configuration\n\u2514\u2500\u2500 \ud83d\udd27 .cursorrules             # Cursor IDE configuration",
      "\ud83d\ude80 Development Workflow",
      "\ud83d\udccb File Categories",
      "Temporary files",
      "Python cache files",
      "`docs/` - Detailed guides and documentation",
      "directory\n- Update documentation in",
      "directory\n\n## \ud83d\ude80 Development Workflow\n\n### 1. Project Setup",
      "- Brain interface implementation\n-",
      "Log files",
      "1. Project Setup",
      "Check `docs/` directory for relevant guides",
      "`brain_interface.py` - Brain interface implementation",
      "`CLEANUP_SUMMARY.md` - Cleanup process documentation",
      "directory for relevant guides\n- Review",
      ")\n- **Temporary files** and development artifacts\n- **Duplicate configurations** and redundant files\n\n### Adding New Files\n\n- **Documentation**: Place in",
      "`README.md` - Main project overview",
      "Git Ignore Patterns",
      "Create plugins in `plugins/` directory",
      "Configuration",
      "`docker-compose.yml` - Docker services configuration",
      "Project Organization Guide",
      "`.cursorrules` - Cursor IDE settings",
      "Keep commits focused and descriptive",
      "Run cleanup script regularly",
      "### 2. Adding Features\n\n- Create plugins in",
      "bash\n# Install dependencies\nuv sync\n\n# Run with Docker\ndocker-compose up\n\n# Run locally\nuv run python main.py",
      "directory\n- Add tests in",
      "What Gets Cleaned Up",
      "- LLM client for AI models\n\n### Configuration\n\n-",
      "Common Issues",
      "- Main project overview\n-",
      "Review `CLEANUP_SUMMARY.md` for recent changes",
      "Run cleanup script before major commits",
      "\ud83d\udd04 Version Control",
      "- Cursor IDE settings\n\n### Documentation\n\n-",
      "Run with Docker",
      "Install dependencies",
      "`pyproject.toml` - Python project configuration",
      "Regular Cleanup",
      "- Main application entry point\n-",
      "3. Maintenance",
      "## \ud83e\uddf9 Maintenance Guidelines\n\n### Regular Cleanup\n\nRun the cleanup script periodically to maintain organization:",
      "Update documentation when adding features",
      "Run cleanup script to restore organization",
      "\ud83e\uddf9 Maintenance Guidelines",
      "Maintain consistent file organization",
      "2. Adding Features",
      "**Python cache files** (`__pycache__/`, `*.pyc`, `*.pyo`)",
      "IDE-specific files",
      "Update documentation in `docs/` directory",
      "patterns for:\n\n- Python cache files\n- Virtual environments\n- Log files\n- Temporary files\n- IDE-specific files\n\n### Commit Guidelines\n\n- Keep commits focused and descriptive\n- Update documentation when adding features\n- Run cleanup script before major commits\n\n## \ud83c\udfaf Best Practices\n\n1. **Organization First**: Always place files in appropriate directories\n2. **Documentation**: Keep docs updated with code changes\n3. **Cleanliness**: Run cleanup script regularly\n4. **Consistency**: Follow established naming conventions\n5. **Maintenance**: Address technical debt promptly\n\n## \ud83c\udd98 Troubleshooting\n\n### Common Issues\n\n- **Missing directories**: Run cleanup script to recreate structure\n- **File conflicts**: Check if files are in correct locations\n- **Docker issues**: Verify docker-compose.yml configuration\n\n### Getting Help\n\n- Check",
      "- Cleanup process documentation\n\n## \ud83d\udd04 Version Control\n\n### Git Ignore Patterns\n\nThe project includes appropriate",
      "- Python project configuration\n-",
      "Commit Guidelines",
      "\ud83c\udfd7\ufe0f Current Project Structure",
      "`llm_client.py` - LLM client for AI models",
      "bash\npython3 scripts/cleanup_project.py",
      "**Docker issues**: Verify docker-compose.yml configuration",
      "**Temporary files** and development artifacts",
      "**Missing directories**: Run cleanup script to recreate structure",
      "Virtual environments",
      "- Detailed guides and documentation\n-",
      "\ud83c\udd98 Troubleshooting",
      "- Docker services configuration\n-",
      "**File conflicts**: Check if files are in correct locations",
      "Run locally",
      "Getting Help",
      "**Duplicate configurations** and redundant files",
      "Documentation",
      "directory\n\n### 3. Maintenance\n\n- Run cleanup script regularly\n- Keep documentation updated\n- Maintain consistent file organization\n\n## \ud83d\udccb File Categories\n\n### Core Application\n\n-",
      "Core Application",
      "### What Gets Cleaned Up\n\n- **Python cache files** (",
      "Add tests in `tests/` directory",
      "`main.py` - Main application entry point",
      "Keep documentation updated",
      "memory-context-manager_v2/\n\u251c\u2500\u2500 \ud83d\udcc1 docs/                    # All documentation and guides\n\u2502   \u251c\u2500\u2500 BRAIN_INTERFACE_GUIDE.md\n\u2502   \u251c\u2500\u2500 BRAIN_PLUGIN_STRUCTURE.md\n\u2502   \u251c\u2500\u2500 CURSOR_SETUP_COMPLETE.md\n\u2502   \u251c\u2500\u2500 DATABASE_INTEGRATION_COMPLETE.md\n\u2502   \u251c\u2500\u2500 DOCKER_SETUP.md\n\u2502   \u251c\u2500\u2500 SHARING_README.md\n\u2502   \u251c\u2500\u2500 TESTING_SUMMARY.md\n\u2502   \u2514\u2500\u2500 TOOL_EXECUTION_FLOWS.md\n\u251c\u2500\u2500 \ud83d\udcc1 scripts/                 # Utility and maintenance scripts\n\u2502   \u2514\u2500\u2500 cleanup_project.py      # Project cleanup and organization\n\u251c\u2500\u2500 \ud83d\udcc1 tests/                   # Test files and test suites\n\u251c\u2500\u2500 \ud83d\udcc1 config/                  # Configuration files\n\u251c\u2500\u2500 \ud83d\udcc1 plugins/                 # Plugin system and extensions\n\u251c\u2500\u2500 \ud83d\udcc1 database/                # Database components and adapters\n\u251c\u2500\u2500 \ud83d\udcc1 src/                     # Core source code\n\u251c\u2500\u2500 \ud83d\udcc1 brain_memory_store/      # Brain memory storage\n\u251c\u2500\u2500 \ud83d\udc33 docker-compose.yml       # Main Docker configuration\n\u251c\u2500\u2500 \ud83d\udc33 Dockerfile               # Production Dockerfile\n\u251c\u2500\u2500 \ud83d\udcd6 README.md                # Main project documentation\n\u251c\u2500\u2500 \ud83d\udce6 pyproject.toml           # Project configuration\n\u2514\u2500\u2500 \ud83d\udd27 .cursorrules             # Cursor IDE configuration",
      "\ud83d\ude80 Development Workflow",
      "\ud83d\udccb File Categories",
      "Temporary files",
      "Python cache files",
      "`docs/` - Detailed guides and documentation",
      "directory\n- Update documentation in",
      "directory\n\n## \ud83d\ude80 Development Workflow\n\n### 1. Project Setup",
      "- Brain interface implementation\n-",
      "Log files",
      "1. Project Setup",
      "Check `docs/` directory for relevant guides",
      "`brain_interface.py` - Brain interface implementation",
      "`CLEANUP_SUMMARY.md` - Cleanup process documentation",
      "directory for relevant guides\n- Review",
      ")\n- **Temporary files** and development artifacts\n- **Duplicate configurations** and redundant files\n\n### Adding New Files\n\n- **Documentation**: Place in",
      "`README.md` - Main project overview",
      "Git Ignore Patterns",
      "Create plugins in `plugins/` directory",
      "Configuration",
      "`docker-compose.yml` - Docker services configuration"
    ],
    "README.md": [
      "`get_resource_usage`: Get current system resource usage",
      "Verification",
      ": Add context information to conversation history\n-",
      "For systems without UV, use:",
      "`list_plugins`: List all loaded plugins and their information",
      "python\n# plugins/my_plugin.py\nimport sys\nimport os\n\n# Add the parent directory to the path\nsys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))\n\nfrom src.plugin_interface import BasePlugin, PluginMetadata, ToolDefinition\n\nclass MyCustomPlugin(BasePlugin):\n    @property\n    def metadata(self) -> PluginMetadata:\n        return PluginMetadata(\n            name=\"my_custom_plugin\",\n            version=\"1.0.0\",\n            description=\"My custom plugin description\",\n            author=\"Your Name\"\n        )\n    \n    def get_tools(self) -> List[ToolDefinition]:\n        return [\n            ToolDefinition(\n                name=\"my_tool\",\n                description=\"Description of my tool\",\n                handler=self.my_tool_handler\n            )\n        ]\n    \n    def my_tool_handler(self, param1: str) -> str:\n        \"\"\"Handle the custom tool\"\"\"\n        return f\"Processed: {param1}\"\n    \n    def _setup(self):\n        \"\"\"Called when plugin is initialized\"\"\"\n        print(\"My plugin is starting up!\")\n    \n    def _teardown(self):\n        \"\"\"Called when plugin is cleaned up\"\"\"\n        print(\"My plugin is shutting down!\")",
      "`clear_memory`: Clear all memory entries",
      ": Return list of resource definitions (optional)\n-",
      ": Called during plugin cleanup (optional)\n-",
      "Setup for Cursor",
      "bash\nuv run python setup_mcp.py",
      "`write_file`: Write content to a file",
      "Installation",
      "`on_server_shutdown()`: Called when server shuts down (optional)",
      ": Required property defining plugin information\n-",
      ": Called when server shuts down (optional)\n\n## Plugin Independence\n\nEach plugin operates independently and can:\n\n- Define its own tools, resources, and prompts\n- Manage its own state and data\n- Have separate dependencies\n- Be loaded/unloaded without affecting other plugins\n- Implement custom initialization and cleanup logic\n\n## Configuration\n\nThe server can be configured by:\n\n1. Setting plugin directories in the server constructor\n2. Modifying plugin files in the",
      "directory\n3. Using environment variables for plugin-specific settings\n\n## Integration with Cursor\n\n### Automatic Setup\n\nUse the setup script to configure Cursor integration:",
      "`add_context`: Add context information to conversation history",
      ": Get current system resource usage\n-",
      "`get_resources()`: Return list of resource definitions (optional)",
      ": Get environment variables (filtered for security)\n\n## Creating Custom Plugins\n\n### Plugin Structure\n\nCreate a new Python file in the",
      "`get_python_info`: Get Python interpreter information",
      "Tool registration and execution",
      "`on_server_startup()`: Called when server starts (optional)",
      "https://github.com/modelcontextprotocol/python-sdk",
      "Error handling and debugging information",
      ": Read file contents\n-",
      ": Clear all memory entries\n\n### System Info Plugin\n-",
      "\u2705 Create the MCP configuration file",
      "### Plugin Interface Methods\n\n-",
      "Plugin loading is restricted to the designated plugins directory",
      "`get_system_info`: Get general system information",
      "`server_status`: Get server status and statistics",
      ": List all loaded plugins and their information\n-",
      "in your home directory\n\n### Verification\n\nAfter configuration:\n\n1. Restart Cursor IDE\n2. Open Cursor Settings \u2192 Features \u2192 Model Context Protocol\n3. Verify \"memory-context-manager\" appears in the server list\n4. Check that the server status shows as connected\n\nYou can test the server manually:",
      ": Called during plugin initialization (optional)\n-",
      "Configuration Locations",
      "Quick Start",
      "3. Implement the required",
      "System Info Plugin",
      "`retrieve_memory`: Retrieve information from memory by key",
      "directory\n2. Inherit from",
      "This will:\n- \u2705 Create the MCP configuration file\n- \u2705 Set correct paths and environment variables\n- \u2705 Configure for project-level use\n\n### Manual Configuration\n\nIf you prefer manual setup, create a",
      "Plugin Independence",
      "## Available Tools\n\n### Core Server Tools\n-",
      "Add the parent directory to the path",
      "file in your project directory:",
      "Memory Context Plugin",
      "Security Considerations",
      "in your project root\n- **Global**:",
      "Define its own tools, resources, and prompts",
      "Environment variables are filtered to exclude sensitive information",
      "`get_environment_vars`: Get environment variables (filtered for security)",
      "`metadata`: Required property defining plugin information",
      "`list_directory`: List files and directories",
      ": Called when server starts (optional)\n-",
      "**System Integration**: File operations and system information access",
      "`file_exists`: Check if a file or directory exists",
      "Manual run (for testing)",
      "`reload_plugin`: Reload a specific plugin by name",
      "**Extensible Plugin System**: Add custom functionality through independent plugins",
      "bash\n# Automatic setup\nuv run python setup_mcp.py\n\n# Manual run (for testing)\nuv run python main.py",
      "`get_context_summary`: Get a summary of recent conversation context",
      "\u2705 Set correct paths and environment variables",
      "All plugin operations are logged for audit purposes",
      ": Get server status and statistics\n\n### File Operations Plugin\n-",
      "bash\n# Install dependencies\nuv add \"mcp[cli]>=1.0.0\" \"pydantic>=2.0.0\" \"typing-extensions>=4.0.0\" \"psutil>=5.9.0\"\n\n# Or using pip\npip install \"mcp[cli]>=1.0.0\" pydantic>=2.0.0 typing-extensions>=4.0.0 psutil>=5.9.0",
      ": Return list of tool definitions\n-",
      "Available Tools",
      ": Store information in persistent memory\n-",
      "File Operations Plugin",
      ": Get Python interpreter information\n-",
      "**Built-in Tools**: Core server management and plugin information tools",
      "**stdin/stdout Communication**: Maximum reliability for agent integration",
      "Have separate dependencies",
      "Server lifecycle events",
      "Plugin Interface Methods",
      "**Project-specific**: `.cursor/mcp.json` in your project root",
      "`search_memory`: Search memory entries by keyword",
      "`read_file`: Read file contents",
      "Automatic Setup",
      "json\n{\n  \"mcpServers\": {\n    \"memory-context-manager\": {\n      \"command\": \"uv\",\n      \"args\": [\"run\", \"python\", \"main.py\"],\n      \"cwd\": \"/path/to/your/memory-context-manager_v2\",\n      \"env\": {\n        \"PYTHONPATH\": \"/path/to/your/memory-context-manager_v2\",\n        \"MCP_LOG_LEVEL\": \"INFO\"\n      }\n    }\n  }\n}",
      "Manage its own state and data",
      "\u2705 Configure for project-level use",
      "Contributing",
      "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\n\u0002                  MCP Server                             \u0002\n\u001c\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000$\n\u0002  \f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010  \f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010  \f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010     \u0002\n\u0002  \u0002   Plugin    \u0002  \u0002   Plugin    \u0002  \u0002   Plugin    \u0002     \u0002\n\u0002  \u0002  Manager    \u0002  \u0002  Registry   \u0002  \u0002 Interface   \u0002     \u0002\n\u0002  \u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018  \u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018  \u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018     \u0002\n\u001c\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000$\n\u0002                 Plugin System                           \u0002\n\u0002  \f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010  \f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010  \f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010     \u0002\n\u0002  \u0002    File     \u0002  \u0002   Memory    \u0002  \u0002   System    \u0002     \u0002\n\u0002  \u0002 Operations  \u0002  \u0002  Context    \u0002  \u0002    Info     \u0002     \u0002\n\u0002  \u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018  \u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018  \u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018     \u0002\n\u001c\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000$\n\u0002              stdin/stdout Transport                     \u0002\n\u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018",
      ": Return list of prompt definitions (optional)\n-",
      "Test with MCP development server",
      "### Setup for Cursor",
      "`_setup()`: Called during plugin initialization (optional)",
      "Plugin loading and initialization events",
      ": Search memory entries by keyword\n-",
      "directory:",
      "bash\n# Test with MCP development server\nuv run mcp dev main.py",
      "`_teardown()`: Called during plugin cleanup (optional)",
      "## Architecture",
      "Memory Context Manager v2",
      "Manual Configuration",
      "### Configuration Locations\n\n- **Project-specific**:",
      "**Persistent Memory**: Context and memory management capabilities",
      "Testing",
      ": Reload a specific plugin by name\n-",
      "Plugin Structure",
      "`get_prompts()`: Return list of prompt definitions (optional)",
      ": Check if a file or directory exists\n\n### Memory Context Plugin\n-",
      "Architecture",
      "Implement custom initialization and cleanup logic",
      "plugins/my_plugin.py",
      "Or using pip",
      "**Global**: `~/.cursor/mcp.json` in your home directory",
      "**MCP Protocol Compliance**: Full compatibility with the Model Context Protocol",
      "`store_memory`: Store information in persistent memory",
      "Be loaded/unloaded without affecting other plugins",
      ": Retrieve information from memory by key\n-",
      ": Get a summary of recent conversation context\n-",
      "MCP Python SDK",
      "bash\nuv run python main.py",
      "`get_tools()`: Return list of tool definitions",
      "Integration with Cursor",
      ": Write content to a file\n-",
      ": Get general system information\n-",
      "property\n4. Add your tools, resources, or prompts\n5. The plugin will be automatically loaded on server restart\n\n## Testing",
      "Core Server Tools",
      ": List files and directories\n-",
      "## Logging\n\nThe server includes comprehensive logging:\n\n- Plugin loading and initialization events\n- Tool registration and execution\n- Error handling and debugging information\n- Server lifecycle events\n\n## Security Considerations\n\n- Environment variables are filtered to exclude sensitive information\n- Plugin loading is restricted to the designated plugins directory\n- All plugin operations are logged for audit purposes\n- File operations are subject to standard filesystem permissions\n\n## Contributing\n\nTo add new plugins:\n\n1. Create a new Python file in the",
      "**Hot Plugin Management**: Load, unload, and reload plugins at runtime",
      "File operations are subject to standard filesystem permissions",
      "Creating Custom Plugins",
      "json\n{\n  \"mcpServers\": {\n    \"memory-context-manager\": {\n      \"command\": \"python3\",\n      \"args\": [\"main.py\"],\n      \"cwd\": \"/path/to/your/memory-context-manager_v2\",\n      \"env\": {\n        \"PYTHONPATH\": \"/path/to/your/memory-context-manager_v2\"\n      }\n    }\n  }\n}",
      "`get_resource_usage`: Get current system resource usage",
      "Verification",
      ": Add context information to conversation history\n-",
      "For systems without UV, use:",
      "`list_plugins`: List all loaded plugins and their information",
      "python\n# plugins/my_plugin.py\nimport sys\nimport os\n\n# Add the parent directory to the path\nsys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))\n\nfrom src.plugin_interface import BasePlugin, PluginMetadata, ToolDefinition\n\nclass MyCustomPlugin(BasePlugin):\n    @property\n    def metadata(self) -> PluginMetadata:\n        return PluginMetadata(\n            name=\"my_custom_plugin\",\n            version=\"1.0.0\",\n            description=\"My custom plugin description\",\n            author=\"Your Name\"\n        )\n    \n    def get_tools(self) -> List[ToolDefinition]:\n        return [\n            ToolDefinition(\n                name=\"my_tool\",\n                description=\"Description of my tool\",\n                handler=self.my_tool_handler\n            )\n        ]\n    \n    def my_tool_handler(self, param1: str) -> str:\n        \"\"\"Handle the custom tool\"\"\"\n        return f\"Processed: {param1}\"\n    \n    def _setup(self):\n        \"\"\"Called when plugin is initialized\"\"\"\n        print(\"My plugin is starting up!\")\n    \n    def _teardown(self):\n        \"\"\"Called when plugin is cleaned up\"\"\"\n        print(\"My plugin is shutting down!\")",
      "`clear_memory`: Clear all memory entries",
      ": Return list of resource definitions (optional)\n-",
      ": Called during plugin cleanup (optional)\n-",
      "Setup for Cursor",
      "bash\nuv run python setup_mcp.py",
      "`write_file`: Write content to a file",
      "Installation",
      "`on_server_shutdown()`: Called when server shuts down (optional)",
      ": Required property defining plugin information\n-",
      ": Called when server shuts down (optional)\n\n## Plugin Independence\n\nEach plugin operates independently and can:\n\n- Define its own tools, resources, and prompts\n- Manage its own state and data\n- Have separate dependencies\n- Be loaded/unloaded without affecting other plugins\n- Implement custom initialization and cleanup logic\n\n## Configuration\n\nThe server can be configured by:\n\n1. Setting plugin directories in the server constructor\n2. Modifying plugin files in the",
      "directory\n3. Using environment variables for plugin-specific settings\n\n## Integration with Cursor\n\n### Automatic Setup\n\nUse the setup script to configure Cursor integration:",
      "`add_context`: Add context information to conversation history",
      ": Get current system resource usage\n-",
      "`get_resources()`: Return list of resource definitions (optional)",
      ": Get environment variables (filtered for security)\n\n## Creating Custom Plugins\n\n### Plugin Structure\n\nCreate a new Python file in the",
      "`get_python_info`: Get Python interpreter information",
      "Tool registration and execution",
      "`on_server_startup()`: Called when server starts (optional)",
      "https://github.com/modelcontextprotocol/python-sdk",
      "Error handling and debugging information",
      ": Read file contents\n-",
      ": Clear all memory entries\n\n### System Info Plugin\n-",
      "\u2705 Create the MCP configuration file",
      "### Plugin Interface Methods\n\n-",
      "Plugin loading is restricted to the designated plugins directory",
      "`get_system_info`: Get general system information",
      "`server_status`: Get server status and statistics",
      ": List all loaded plugins and their information\n-",
      "in your home directory\n\n### Verification\n\nAfter configuration:\n\n1. Restart Cursor IDE\n2. Open Cursor Settings \u2192 Features \u2192 Model Context Protocol\n3. Verify \"memory-context-manager\" appears in the server list\n4. Check that the server status shows as connected\n\nYou can test the server manually:",
      ": Called during plugin initialization (optional)\n-",
      "Configuration Locations",
      "Quick Start",
      "3. Implement the required",
      "System Info Plugin",
      "`retrieve_memory`: Retrieve information from memory by key",
      "directory\n2. Inherit from",
      "This will:\n- \u2705 Create the MCP configuration file\n- \u2705 Set correct paths and environment variables\n- \u2705 Configure for project-level use\n\n### Manual Configuration\n\nIf you prefer manual setup, create a",
      "Plugin Independence",
      "## Available Tools\n\n### Core Server Tools\n-",
      "Add the parent directory to the path",
      "file in your project directory:",
      "Memory Context Plugin",
      "Security Considerations",
      "in your project root\n- **Global**:",
      "Define its own tools, resources, and prompts",
      "Environment variables are filtered to exclude sensitive information",
      "`get_environment_vars`: Get environment variables (filtered for security)",
      "`metadata`: Required property defining plugin information",
      "`list_directory`: List files and directories",
      ": Called when server starts (optional)\n-",
      "**System Integration**: File operations and system information access",
      "`file_exists`: Check if a file or directory exists",
      "Manual run (for testing)",
      "`reload_plugin`: Reload a specific plugin by name",
      "**Extensible Plugin System**: Add custom functionality through independent plugins",
      "bash\n# Automatic setup\nuv run python setup_mcp.py\n\n# Manual run (for testing)\nuv run python main.py",
      "`get_context_summary`: Get a summary of recent conversation context",
      "\u2705 Set correct paths and environment variables",
      "All plugin operations are logged for audit purposes",
      ": Get server status and statistics\n\n### File Operations Plugin\n-",
      "bash\n# Install dependencies\nuv add \"mcp[cli]>=1.0.0\" \"pydantic>=2.0.0\" \"typing-extensions>=4.0.0\" \"psutil>=5.9.0\"\n\n# Or using pip\npip install \"mcp[cli]>=1.0.0\" pydantic>=2.0.0 typing-extensions>=4.0.0 psutil>=5.9.0",
      ": Return list of tool definitions\n-",
      "Available Tools",
      ": Store information in persistent memory\n-",
      "File Operations Plugin",
      ": Get Python interpreter information\n-",
      "**Built-in Tools**: Core server management and plugin information tools",
      "**stdin/stdout Communication**: Maximum reliability for agent integration",
      "Have separate dependencies",
      "Server lifecycle events",
      "Plugin Interface Methods",
      "**Project-specific**: `.cursor/mcp.json` in your project root",
      "`search_memory`: Search memory entries by keyword",
      "`read_file`: Read file contents",
      "Automatic Setup",
      "json\n{\n  \"mcpServers\": {\n    \"memory-context-manager\": {\n      \"command\": \"uv\",\n      \"args\": [\"run\", \"python\", \"main.py\"],\n      \"cwd\": \"/path/to/your/memory-context-manager_v2\",\n      \"env\": {\n        \"PYTHONPATH\": \"/path/to/your/memory-context-manager_v2\",\n        \"MCP_LOG_LEVEL\": \"INFO\"\n      }\n    }\n  }\n}",
      "Manage its own state and data",
      "\u2705 Configure for project-level use",
      "Contributing",
      "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\n\u0002                  MCP Server                             \u0002\n\u001c\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000$\n\u0002  \f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010  \f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010  \f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010     \u0002\n\u0002  \u0002   Plugin    \u0002  \u0002   Plugin    \u0002  \u0002   Plugin    \u0002     \u0002\n\u0002  \u0002  Manager    \u0002  \u0002  Registry   \u0002  \u0002 Interface   \u0002     \u0002\n\u0002  \u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018  \u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018  \u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018     \u0002\n\u001c\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000$\n\u0002                 Plugin System                           \u0002\n\u0002  \f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010  \f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010  \f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010     \u0002\n\u0002  \u0002    File     \u0002  \u0002   Memory    \u0002  \u0002   System    \u0002     \u0002\n\u0002  \u0002 Operations  \u0002  \u0002  Context    \u0002  \u0002    Info     \u0002     \u0002\n\u0002  \u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018  \u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018  \u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018     \u0002\n\u001c\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000$\n\u0002              stdin/stdout Transport                     \u0002\n\u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018",
      ": Return list of prompt definitions (optional)\n-",
      "Test with MCP development server",
      "### Setup for Cursor",
      "`_setup()`: Called during plugin initialization (optional)",
      "Plugin loading and initialization events",
      ": Search memory entries by keyword\n-",
      "directory:",
      "bash\n# Test with MCP development server\nuv run mcp dev main.py",
      "`_teardown()`: Called during plugin cleanup (optional)",
      "## Architecture",
      "Memory Context Manager v2",
      "Manual Configuration",
      "### Configuration Locations\n\n- **Project-specific**:",
      "**Persistent Memory**: Context and memory management capabilities",
      "Testing",
      ": Reload a specific plugin by name\n-",
      "Plugin Structure",
      "`get_prompts()`: Return list of prompt definitions (optional)",
      ": Check if a file or directory exists\n\n### Memory Context Plugin\n-",
      "Architecture",
      "Implement custom initialization and cleanup logic",
      "plugins/my_plugin.py",
      "Or using pip",
      "**Global**: `~/.cursor/mcp.json` in your home directory",
      "**MCP Protocol Compliance**: Full compatibility with the Model Context Protocol",
      "`store_memory`: Store information in persistent memory",
      "Be loaded/unloaded without affecting other plugins",
      ": Retrieve information from memory by key\n-",
      ": Get a summary of recent conversation context\n-",
      "MCP Python SDK",
      "bash\nuv run python main.py",
      "`get_tools()`: Return list of tool definitions",
      "Integration with Cursor",
      ": Write content to a file\n-",
      ": Get general system information\n-",
      "property\n4. Add your tools, resources, or prompts\n5. The plugin will be automatically loaded on server restart\n\n## Testing",
      "Core Server Tools",
      ": List files and directories\n-",
      "## Logging\n\nThe server includes comprehensive logging:\n\n- Plugin loading and initialization events\n- Tool registration and execution\n- Error handling and debugging information\n- Server lifecycle events\n\n## Security Considerations\n\n- Environment variables are filtered to exclude sensitive information\n- Plugin loading is restricted to the designated plugins directory\n- All plugin operations are logged for audit purposes\n- File operations are subject to standard filesystem permissions\n\n## Contributing\n\nTo add new plugins:\n\n1. Create a new Python file in the",
      "**Hot Plugin Management**: Load, unload, and reload plugins at runtime",
      "File operations are subject to standard filesystem permissions",
      "Creating Custom Plugins",
      "json\n{\n  \"mcpServers\": {\n    \"memory-context-manager\": {\n      \"command\": \"python3\",\n      \"args\": [\"main.py\"],\n      \"cwd\": \"/path/to/your/memory-context-manager_v2\",\n      \"env\": {\n        \"PYTHONPATH\": \"/path/to/your/memory-context-manager_v2\"\n      }\n    }\n  }\n}",
      "`get_resource_usage`: Get current system resource usage",
      "Verification",
      ": Add context information to conversation history\n-",
      "For systems without UV, use:",
      "`list_plugins`: List all loaded plugins and their information",
      "python\n# plugins/my_plugin.py\nimport sys\nimport os\n\n# Add the parent directory to the path\nsys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))\n\nfrom src.plugin_interface import BasePlugin, PluginMetadata, ToolDefinition\n\nclass MyCustomPlugin(BasePlugin):\n    @property\n    def metadata(self) -> PluginMetadata:\n        return PluginMetadata(\n            name=\"my_custom_plugin\",\n            version=\"1.0.0\",\n            description=\"My custom plugin description\",\n            author=\"Your Name\"\n        )\n    \n    def get_tools(self) -> List[ToolDefinition]:\n        return [\n            ToolDefinition(\n                name=\"my_tool\",\n                description=\"Description of my tool\",\n                handler=self.my_tool_handler\n            )\n        ]\n    \n    def my_tool_handler(self, param1: str) -> str:\n        \"\"\"Handle the custom tool\"\"\"\n        return f\"Processed: {param1}\"\n    \n    def _setup(self):\n        \"\"\"Called when plugin is initialized\"\"\"\n        print(\"My plugin is starting up!\")\n    \n    def _teardown(self):\n        \"\"\"Called when plugin is cleaned up\"\"\"\n        print(\"My plugin is shutting down!\")",
      "`clear_memory`: Clear all memory entries",
      ": Return list of resource definitions (optional)\n-",
      ": Called during plugin cleanup (optional)\n-",
      "Setup for Cursor",
      "bash\nuv run python setup_mcp.py",
      "`write_file`: Write content to a file",
      "Installation",
      "`on_server_shutdown()`: Called when server shuts down (optional)",
      ": Required property defining plugin information\n-",
      ": Called when server shuts down (optional)\n\n## Plugin Independence\n\nEach plugin operates independently and can:\n\n- Define its own tools, resources, and prompts\n- Manage its own state and data\n- Have separate dependencies\n- Be loaded/unloaded without affecting other plugins\n- Implement custom initialization and cleanup logic\n\n## Configuration\n\nThe server can be configured by:\n\n1. Setting plugin directories in the server constructor\n2. Modifying plugin files in the",
      "directory\n3. Using environment variables for plugin-specific settings\n\n## Integration with Cursor\n\n### Automatic Setup\n\nUse the setup script to configure Cursor integration:",
      "`add_context`: Add context information to conversation history",
      ": Get current system resource usage\n-",
      "`get_resources()`: Return list of resource definitions (optional)",
      ": Get environment variables (filtered for security)\n\n## Creating Custom Plugins\n\n### Plugin Structure\n\nCreate a new Python file in the",
      "`get_python_info`: Get Python interpreter information",
      "Tool registration and execution",
      "`on_server_startup()`: Called when server starts (optional)",
      "https://github.com/modelcontextprotocol/python-sdk",
      "Error handling and debugging information",
      ": Read file contents\n-",
      ": Clear all memory entries\n\n### System Info Plugin\n-",
      "\u2705 Create the MCP configuration file",
      "### Plugin Interface Methods\n\n-",
      "Plugin loading is restricted to the designated plugins directory",
      "`get_system_info`: Get general system information",
      "`server_status`: Get server status and statistics",
      ": List all loaded plugins and their information\n-",
      "in your home directory\n\n### Verification\n\nAfter configuration:\n\n1. Restart Cursor IDE\n2. Open Cursor Settings \u2192 Features \u2192 Model Context Protocol\n3. Verify \"memory-context-manager\" appears in the server list\n4. Check that the server status shows as connected\n\nYou can test the server manually:",
      ": Called during plugin initialization (optional)\n-",
      "Configuration Locations",
      "Quick Start",
      "3. Implement the required",
      "System Info Plugin",
      "`retrieve_memory`: Retrieve information from memory by key",
      "directory\n2. Inherit from",
      "This will:\n- \u2705 Create the MCP configuration file\n- \u2705 Set correct paths and environment variables\n- \u2705 Configure for project-level use\n\n### Manual Configuration\n\nIf you prefer manual setup, create a",
      "Plugin Independence",
      "## Available Tools\n\n### Core Server Tools\n-",
      "Add the parent directory to the path",
      "file in your project directory:",
      "Memory Context Plugin",
      "Security Considerations",
      "in your project root\n- **Global**:",
      "Define its own tools, resources, and prompts",
      "Environment variables are filtered to exclude sensitive information",
      "`get_environment_vars`: Get environment variables (filtered for security)",
      "`metadata`: Required property defining plugin information",
      "`list_directory`: List files and directories",
      ": Called when server starts (optional)\n-",
      "**System Integration**: File operations and system information access",
      "`file_exists`: Check if a file or directory exists",
      "Manual run (for testing)",
      "`reload_plugin`: Reload a specific plugin by name",
      "**Extensible Plugin System**: Add custom functionality through independent plugins",
      "bash\n# Automatic setup\nuv run python setup_mcp.py\n\n# Manual run (for testing)\nuv run python main.py",
      "`get_context_summary`: Get a summary of recent conversation context",
      "\u2705 Set correct paths and environment variables",
      "All plugin operations are logged for audit purposes",
      ": Get server status and statistics\n\n### File Operations Plugin\n-",
      "bash\n# Install dependencies\nuv add \"mcp[cli]>=1.0.0\" \"pydantic>=2.0.0\" \"typing-extensions>=4.0.0\" \"psutil>=5.9.0\"\n\n# Or using pip\npip install \"mcp[cli]>=1.0.0\" pydantic>=2.0.0 typing-extensions>=4.0.0 psutil>=5.9.0",
      ": Return list of tool definitions\n-",
      "Available Tools",
      ": Store information in persistent memory\n-",
      "File Operations Plugin",
      ": Get Python interpreter information\n-",
      "**Built-in Tools**: Core server management and plugin information tools",
      "**stdin/stdout Communication**: Maximum reliability for agent integration",
      "Have separate dependencies",
      "Server lifecycle events",
      "Plugin Interface Methods",
      "**Project-specific**: `.cursor/mcp.json` in your project root",
      "`search_memory`: Search memory entries by keyword",
      "`read_file`: Read file contents",
      "Automatic Setup",
      "json\n{\n  \"mcpServers\": {\n    \"memory-context-manager\": {\n      \"command\": \"uv\",\n      \"args\": [\"run\", \"python\", \"main.py\"],\n      \"cwd\": \"/path/to/your/memory-context-manager_v2\",\n      \"env\": {\n        \"PYTHONPATH\": \"/path/to/your/memory-context-manager_v2\",\n        \"MCP_LOG_LEVEL\": \"INFO\"\n      }\n    }\n  }\n}",
      "Manage its own state and data",
      "\u2705 Configure for project-level use",
      "Contributing",
      "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\n\u0002                  MCP Server                             \u0002\n\u001c\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000$\n\u0002  \f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010  \f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010  \f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010     \u0002\n\u0002  \u0002   Plugin    \u0002  \u0002   Plugin    \u0002  \u0002   Plugin    \u0002     \u0002\n\u0002  \u0002  Manager    \u0002  \u0002  Registry   \u0002  \u0002 Interface   \u0002     \u0002\n\u0002  \u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018  \u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018  \u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018     \u0002\n\u001c\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000$\n\u0002                 Plugin System                           \u0002\n\u0002  \f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010  \f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010  \f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010     \u0002\n\u0002  \u0002    File     \u0002  \u0002   Memory    \u0002  \u0002   System    \u0002     \u0002\n\u0002  \u0002 Operations  \u0002  \u0002  Context    \u0002  \u0002    Info     \u0002     \u0002\n\u0002  \u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018  \u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018  \u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018     \u0002\n\u001c\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000$\n\u0002              stdin/stdout Transport                     \u0002\n\u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018",
      ": Return list of prompt definitions (optional)\n-",
      "Test with MCP development server",
      "### Setup for Cursor",
      "`_setup()`: Called during plugin initialization (optional)",
      "Plugin loading and initialization events",
      ": Search memory entries by keyword\n-",
      "directory:",
      "bash\n# Test with MCP development server\nuv run mcp dev main.py",
      "`_teardown()`: Called during plugin cleanup (optional)",
      "## Architecture",
      "Memory Context Manager v2",
      "Manual Configuration",
      "### Configuration Locations\n\n- **Project-specific**:",
      "**Persistent Memory**: Context and memory management capabilities",
      "Testing",
      ": Reload a specific plugin by name\n-",
      "Plugin Structure",
      "`get_prompts()`: Return list of prompt definitions (optional)",
      ": Check if a file or directory exists\n\n### Memory Context Plugin\n-",
      "Architecture",
      "Implement custom initialization and cleanup logic",
      "plugins/my_plugin.py",
      "Or using pip",
      "**Global**: `~/.cursor/mcp.json` in your home directory",
      "**MCP Protocol Compliance**: Full compatibility with the Model Context Protocol",
      "`store_memory`: Store information in persistent memory",
      "Be loaded/unloaded without affecting other plugins",
      ": Retrieve information from memory by key\n-",
      ": Get a summary of recent conversation context\n-",
      "MCP Python SDK",
      "bash\nuv run python main.py",
      "`get_tools()`: Return list of tool definitions",
      "Integration with Cursor",
      ": Write content to a file\n-",
      ": Get general system information\n-",
      "property\n4. Add your tools, resources, or prompts\n5. The plugin will be automatically loaded on server restart\n\n## Testing",
      "Core Server Tools",
      ": List files and directories\n-",
      "## Logging\n\nThe server includes comprehensive logging:\n\n- Plugin loading and initialization events\n- Tool registration and execution\n- Error handling and debugging information\n- Server lifecycle events\n\n## Security Considerations\n\n- Environment variables are filtered to exclude sensitive information\n- Plugin loading is restricted to the designated plugins directory\n- All plugin operations are logged for audit purposes\n- File operations are subject to standard filesystem permissions\n\n## Contributing\n\nTo add new plugins:\n\n1. Create a new Python file in the",
      "**Hot Plugin Management**: Load, unload, and reload plugins at runtime",
      "File operations are subject to standard filesystem permissions",
      "Creating Custom Plugins",
      "json\n{\n  \"mcpServers\": {\n    \"memory-context-manager\": {\n      \"command\": \"python3\",\n      \"args\": [\"main.py\"],\n      \"cwd\": \"/path/to/your/memory-context-manager_v2\",\n      \"env\": {\n        \"PYTHONPATH\": \"/path/to/your/memory-context-manager_v2\"\n      }\n    }\n  }\n}"
    ],
    "README_RESTRUCTURED_SYSTEM.md": [
      "\ud83c\udfaf **Next Steps**",
      "\ud83c\udf89 **Success Story**",
      "** - Comprehensive self-monitoring and health checks\n- **",
      "** - Analyze system and tool performance\n- **",
      "100% backward compatibility",
      "All existing plugins remain intact",
      "**3. Use the Tools**",
      "**`workflow_health_check`** - Comprehensive workflow health check",
      "\ud83c\udfaf **What This Is**",
      "### **Option 2: Use Standalone**",
      "**`think_deeply`** - Deep thinking with context analysis",
      "** - Enhanced context retrieval (Phase 1)\n- **",
      "bash\n# See the complete system in action\npython demo_restructured_cognitive_system.py",
      "** - Unified memory operations (store, retrieve, search, clear)\n- **",
      "### **Documentation**\n\n- **",
      "**`track_conversation`** - Track conversation for learning",
      "**`memory_operations`** - Unified memory operations (store, retrieve, search, clear)",
      "**`optimize_workflow`** - Optimize workflows based on learning",
      "**`get_cursor_context`** - Cursor conversation context",
      "** - Main restructured plugin (18 tools)\n- **",
      "### **2. Run the Demo**",
      "\ud83d\ude80 **Getting Started**",
      "** - Optimize workflows based on learning\n\n### **\ud83e\udde0 DOMAIN 5: OUTPUT & ACTION**\n\n- **",
      "---\n\n## \ud83c\udf89 **Success Story**\n\nWe have successfully **transformed** your system from:\n\n\u274c **48 scattered, overlapping tools**\n\u274c **Complex tool discovery and usage**\n\u274c **Difficult maintenance and updates**\n\u274c **No natural workflow progression**\n\nInto:\n\n\u2705 **18 organized, cognitive domain tools**\n\u2705 **Intuitive, brain-focused organization**\n\u2705 **Easy maintenance and updates**\n\u2705 **Natural cognitive workflow progression**\n\u2705 **100% functionality preservation**\n\n---\n\n## \ud83d\udd17 **Quick Reference**\n\n### **Main Plugin**",
      "python\nfrom plugins.cognitive_brain_restructured import CognitiveBrainRestructuredPlugin\n\nplugin = CognitiveBrainRestructuredPlugin()\nplugin._setup()\n\n# Use any of the 18 cognitive tools\nresult = await plugin._memory_operations_handler(\"store\", \"important fact\")",
      "**`perceive_and_analyze`** - Unified perception and analysis",
      "** - Complete demonstration script\n- **",
      "**1. Test the System**",
      "** - Intelligent tool orchestration (Phase 2)\n- **",
      "\ud83d\ude80 **Ready for Production**",
      "** - Unified learning and adaptation system\n- **",
      "**Preserved Functionality**",
      "### **3. Run the Demo**",
      "**2. Test the System**",
      "** - Cursor conversation context\n\n### **\ud83e\udde0 DOMAIN 2: MEMORY & STORAGE**\n\n- **",
      "\ud83c\udfaf **Key Benefits**",
      "**Complete Example**",
      "**`ai_chat_with_memory`** - AI chat with memory enhancement",
      "**\ud83e\udde0 DOMAIN 4: LEARNING & ADAPTATION**",
      "**Core Files**",
      "python\n# In your main.py\nfrom plugins.cognitive_brain_restructured import CognitiveBrainRestructuredPlugin\n\nrestructured_plugin = CognitiveBrainRestructuredPlugin()\nrestructured_plugin._setup()\n\n# Add tools to your MCP server\nfor tool in restructured_plugin.get_tools():\n    # Register each tool\n    pass",
      "** - This overview document\n\n### **Preserved Functionality**\n\n- All existing plugins remain intact\n- 100% backward compatibility\n- All 48 original tools still accessible\n- Enhanced cognitive domain interface\n\n---\n\n## \ud83c\udfaf **Key Benefits**\n\n### **1. Cognitive Efficiency**\n\n- **Natural Workflow**: Tools follow human cognitive processes\n- **Intuitive Usage**: No need to remember scattered tool names\n- **Logical Organization**: Related functions grouped together\n\n### **2. Massive Redundancy Elimination**\n\n- **Before**: 48 scattered, overlapping tools\n- **After**: 18 organized, cognitive domain tools\n- **Reduction**: 62.5% fewer tools with 100% functionality\n\n### **3. Improved Maintainability**\n\n- **Centralized Logic**: All related functionality in one place\n- **Easier Updates**: Changes affect entire cognitive domains\n- **Better Testing**: Comprehensive testing per domain\n\n### **4. Enhanced User Experience**\n\n- **Faster Discovery**: Users find tools in logical domains\n- **Better Learning**: Natural cognitive progression\n- **Reduced Confusion**: Clear tool categorization\n\n---\n\n## \ud83d\ude80 **Getting Started**\n\n### **1. Verify Installation**",
      "** - AI chat with memory enhancement\n\n### **\ud83e\udde0 DOMAIN 6: SELF-MONITORING**\n\n- **",
      "**\ud83e\udde0 DOMAIN 1: PERCEPTION & INPUT**",
      "**`analyze_performance`** - Analyze system and tool performance",
      "All 48 original tools still accessible",
      "Use independently",
      "**\ud83e\udde0 DOMAIN 2: MEMORY & STORAGE**",
      "** - Executive summary\n- **",
      "Start with memory operations",
      "---\n\n## \ud83d\udcca **What We Achieved**\n\n| **Metric**            | **Before** | **After** | **Improvement**             |\n| --------------------- | ---------- | --------- | --------------------------- |\n| **Tool Count**        | 48         | 18        | **62.5% reduction**         |\n| **Cognitive Domains** | 0          | 6         | **New organization**        |\n| **Functionality**     | 100%       | 100%      | **Zero loss**               |\n| **User Experience**   | Scattered  | Organized | **Major improvement**       |\n| **Maintainability**   | Complex    | Simple    | **Significant improvement** |\n| **Workflow**          | Manual     | Natural   | **Cognitive progression**   |\n\n---\n\n## \ud83d\udd27 **Integration Options**\n\n### **Option 1: Add to MCP Server**",
      "**Option 1: Add to MCP Server**",
      "\ud83d\udcca **What We Achieved**",
      "**`enhanced_context_retrieval`** - Enhanced context retrieval (Phase 1)",
      "**`orchestrate_tools`** - Intelligent tool orchestration (Phase 2)",
      "** - Auto-process and store message context\n- **",
      "**`demo_restructured_cognitive_system.py`** - Complete demonstration script",
      "\ud83d\udcc1 **Files Overview**",
      "**`INTEGRATION_GUIDE.md`** - Integration and troubleshooting guide",
      "\ud83d\udcc8 **Performance Monitoring**",
      "**2. Run the Demo**",
      "** - Build comprehensive context\n\n### **\ud83e\udde0 DOMAIN 4: LEARNING & ADAPTATION**\n\n- **",
      "** - Comprehensive system documentation\n- **",
      "**`auto_process_message`** - Auto-process and store message context",
      "---\n\n## \ud83d\udcc8 **Performance Monitoring**\n\n### **Check System Status**",
      "Import and use",
      "** - Unified perception and analysis\n- **",
      "In your main.py",
      "bash\n# See all features in action\npython demo_restructured_cognitive_system.py",
      "**`plugins/cognitive_brain_restructured.py`** - Main restructured plugin (18 tools)",
      "**\ud83e\udde0 DOMAIN 6: SELF-MONITORING**",
      "bash\n# Check if everything is in place\nls -la plugins/cognitive_brain_restructured.py\nls -la demo_restructured_cognitive_system.py",
      "**`build_comprehensive_context`** - Build comprehensive context",
      "**\ud83e\udde0 DOMAIN 5: OUTPUT & ACTION**",
      "** - Deep thinking with context analysis\n- **",
      "See the complete system in action",
      "### **3. Use the Tools**",
      "Use any of the 18 cognitive tools",
      "** - Process multiple messages efficiently\n- **",
      "**`self_monitor`** - Comprehensive self-monitoring and health checks",
      "**`batch_workflow_processing`** - Process multiple messages efficiently",
      "**`learn_and_adapt`** - Unified learning and adaptation system",
      "python\n# Import and use\nfrom plugins.cognitive_brain_restructured import CognitiveBrainRestructuredPlugin\n\nplugin = CognitiveBrainRestructuredPlugin()\nplugin._setup()\n\n# Start with memory operations\nawait plugin._memory_operations_handler(\"store\", \"My first memory\")",
      "** - Continuous learning cycle (Phase 3)\n- **",
      "**`README_RESTRUCTURED_SYSTEM.md`** - This overview document",
      "---\n\n## \ud83e\udde0 **The 6 Cognitive Domains**\n\n### **\ud83e\udde0 DOMAIN 1: PERCEPTION & INPUT**\n\n- **",
      "Basic test",
      "**3. Run the Demo**",
      "python\n# Use independently\nplugin = CognitiveBrainRestructuredPlugin()\nplugin._setup()\n\n# Use any tool\nresult = await plugin._memory_operations_handler(\"store\", \"Test memory\")",
      "** - Comprehensive workflow health check\n\n---\n\n## \ud83d\udd04 **Natural Cognitive Workflow**\n\n### **Complete Example**",
      "**`execute_enhanced_workflow`** - Execute complete enhanced workflow",
      "Check if everything is in place",
      "\ud83e\udde0 **Cognitive Brain Restructured - Complete System**",
      "Enhanced cognitive domain interface",
      "** - Integration and troubleshooting guide\n- **",
      "**`continuous_learning_cycle`** - Continuous learning cycle (Phase 3)",
      "**Option 2: Use Standalone**",
      "\ud83d\udd27 **Integration Options**",
      "---\n\n## \ud83d\udcc1 **Files Overview**\n\n### **Core Files**\n\n- **",
      "See all features in action",
      "**\ud83e\udde0 DOMAIN 3: PROCESSING & THINKING**",
      "\ud83e\udde0 **The 6 Cognitive Domains**",
      "\ud83d\udd04 **Natural Cognitive Workflow**",
      "**`RESTRUCTURED_COGNITIVE_SYSTEM.md`** - Comprehensive system documentation",
      "** - Track conversation for learning\n\n### **\ud83e\udde0 DOMAIN 3: PROCESSING & THINKING**\n\n- **",
      "**`COGNITIVE_RESTRUCTURING_SUMMARY.md`** - Executive summary",
      "**4. Start Using**",
      "### **Plugin Not Found**",
      "python\n# 1. PERCEPTION: Analyze input and get context\ncontext = await plugin._enhanced_context_retrieval_handler(\"Analyze system performance\")\n\n# 2. MEMORY: Store and retrieve relevant information\nawait plugin._memory_operations_handler(\"store\", \"System performance analysis requested\")\n\n# 3. THINKING: Process and orchestrate tools\nthoughts = await plugin._think_deeply_handler(\"How to analyze system performance\", \"technical\")\n\n# 4. LEARNING: Learn from the interaction\nawait plugin._learn_and_adapt_handler(\"learn\", \"User requested system analysis\", \"technical\")\n\n# 5. ACTION: Execute the workflow\nworkflow_result = await plugin._execute_enhanced_workflow_handler(\"Analyze system performance\", \"aggressive\")\n\n# 6. MONITORING: Check system health\nhealth_status = await plugin._self_monitor_handler(\"comprehensive\", \"all\")",
      "**1. Verify Installation**",
      "** - Execute complete enhanced workflow\n- **",
      "### **4. Start Using**",
      "bash\n# Basic test\npython -c \"\nimport sys; sys.path.insert(0, '.')\nfrom plugins.cognitive_brain_restructured import CognitiveBrainRestructuredPlugin\nplugin = CognitiveBrainRestructuredPlugin()\nplugin._setup()\nprint('\u2705 System ready!')\n\"",
      "### **2. Test the System**",
      "---\n\n## \ud83d\udd0d **Troubleshooting**\n\n### **Import Errors**",
      "\ud83c\udfaf **Next Steps**",
      "\ud83c\udf89 **Success Story**",
      "** - Comprehensive self-monitoring and health checks\n- **",
      "** - Analyze system and tool performance\n- **",
      "100% backward compatibility",
      "All existing plugins remain intact",
      "**3. Use the Tools**",
      "**`workflow_health_check`** - Comprehensive workflow health check",
      "\ud83c\udfaf **What This Is**",
      "### **Option 2: Use Standalone**",
      "**`think_deeply`** - Deep thinking with context analysis",
      "** - Enhanced context retrieval (Phase 1)\n- **",
      "bash\n# See the complete system in action\npython demo_restructured_cognitive_system.py",
      "** - Unified memory operations (store, retrieve, search, clear)\n- **",
      "### **Documentation**\n\n- **",
      "**`track_conversation`** - Track conversation for learning",
      "**`memory_operations`** - Unified memory operations (store, retrieve, search, clear)",
      "**`optimize_workflow`** - Optimize workflows based on learning",
      "**`get_cursor_context`** - Cursor conversation context",
      "** - Main restructured plugin (18 tools)\n- **",
      "### **2. Run the Demo**",
      "\ud83d\ude80 **Getting Started**",
      "** - Optimize workflows based on learning\n\n### **\ud83e\udde0 DOMAIN 5: OUTPUT & ACTION**\n\n- **",
      "---\n\n## \ud83c\udf89 **Success Story**\n\nWe have successfully **transformed** your system from:\n\n\u274c **48 scattered, overlapping tools**\n\u274c **Complex tool discovery and usage**\n\u274c **Difficult maintenance and updates**\n\u274c **No natural workflow progression**\n\nInto:\n\n\u2705 **18 organized, cognitive domain tools**\n\u2705 **Intuitive, brain-focused organization**\n\u2705 **Easy maintenance and updates**\n\u2705 **Natural cognitive workflow progression**\n\u2705 **100% functionality preservation**\n\n---\n\n## \ud83d\udd17 **Quick Reference**\n\n### **Main Plugin**",
      "python\nfrom plugins.cognitive_brain_restructured import CognitiveBrainRestructuredPlugin\n\nplugin = CognitiveBrainRestructuredPlugin()\nplugin._setup()\n\n# Use any of the 18 cognitive tools\nresult = await plugin._memory_operations_handler(\"store\", \"important fact\")",
      "**`perceive_and_analyze`** - Unified perception and analysis",
      "** - Complete demonstration script\n- **",
      "**1. Test the System**",
      "** - Intelligent tool orchestration (Phase 2)\n- **",
      "\ud83d\ude80 **Ready for Production**",
      "** - Unified learning and adaptation system\n- **",
      "**Preserved Functionality**",
      "### **3. Run the Demo**",
      "**2. Test the System**",
      "** - Cursor conversation context\n\n### **\ud83e\udde0 DOMAIN 2: MEMORY & STORAGE**\n\n- **",
      "\ud83c\udfaf **Key Benefits**",
      "**Complete Example**",
      "**`ai_chat_with_memory`** - AI chat with memory enhancement",
      "**\ud83e\udde0 DOMAIN 4: LEARNING & ADAPTATION**",
      "**Core Files**",
      "python\n# In your main.py\nfrom plugins.cognitive_brain_restructured import CognitiveBrainRestructuredPlugin\n\nrestructured_plugin = CognitiveBrainRestructuredPlugin()\nrestructured_plugin._setup()\n\n# Add tools to your MCP server\nfor tool in restructured_plugin.get_tools():\n    # Register each tool\n    pass",
      "** - This overview document\n\n### **Preserved Functionality**\n\n- All existing plugins remain intact\n- 100% backward compatibility\n- All 48 original tools still accessible\n- Enhanced cognitive domain interface\n\n---\n\n## \ud83c\udfaf **Key Benefits**\n\n### **1. Cognitive Efficiency**\n\n- **Natural Workflow**: Tools follow human cognitive processes\n- **Intuitive Usage**: No need to remember scattered tool names\n- **Logical Organization**: Related functions grouped together\n\n### **2. Massive Redundancy Elimination**\n\n- **Before**: 48 scattered, overlapping tools\n- **After**: 18 organized, cognitive domain tools\n- **Reduction**: 62.5% fewer tools with 100% functionality\n\n### **3. Improved Maintainability**\n\n- **Centralized Logic**: All related functionality in one place\n- **Easier Updates**: Changes affect entire cognitive domains\n- **Better Testing**: Comprehensive testing per domain\n\n### **4. Enhanced User Experience**\n\n- **Faster Discovery**: Users find tools in logical domains\n- **Better Learning**: Natural cognitive progression\n- **Reduced Confusion**: Clear tool categorization\n\n---\n\n## \ud83d\ude80 **Getting Started**\n\n### **1. Verify Installation**",
      "** - AI chat with memory enhancement\n\n### **\ud83e\udde0 DOMAIN 6: SELF-MONITORING**\n\n- **",
      "**\ud83e\udde0 DOMAIN 1: PERCEPTION & INPUT**",
      "**`analyze_performance`** - Analyze system and tool performance",
      "All 48 original tools still accessible",
      "Use independently",
      "**\ud83e\udde0 DOMAIN 2: MEMORY & STORAGE**",
      "** - Executive summary\n- **",
      "Start with memory operations",
      "---\n\n## \ud83d\udcca **What We Achieved**\n\n| **Metric**            | **Before** | **After** | **Improvement**             |\n| --------------------- | ---------- | --------- | --------------------------- |\n| **Tool Count**        | 48         | 18        | **62.5% reduction**         |\n| **Cognitive Domains** | 0          | 6         | **New organization**        |\n| **Functionality**     | 100%       | 100%      | **Zero loss**               |\n| **User Experience**   | Scattered  | Organized | **Major improvement**       |\n| **Maintainability**   | Complex    | Simple    | **Significant improvement** |\n| **Workflow**          | Manual     | Natural   | **Cognitive progression**   |\n\n---\n\n## \ud83d\udd27 **Integration Options**\n\n### **Option 1: Add to MCP Server**",
      "**Option 1: Add to MCP Server**",
      "\ud83d\udcca **What We Achieved**",
      "**`enhanced_context_retrieval`** - Enhanced context retrieval (Phase 1)",
      "**`orchestrate_tools`** - Intelligent tool orchestration (Phase 2)",
      "** - Auto-process and store message context\n- **",
      "**`demo_restructured_cognitive_system.py`** - Complete demonstration script",
      "\ud83d\udcc1 **Files Overview**",
      "**`INTEGRATION_GUIDE.md`** - Integration and troubleshooting guide",
      "\ud83d\udcc8 **Performance Monitoring**",
      "**2. Run the Demo**",
      "** - Build comprehensive context\n\n### **\ud83e\udde0 DOMAIN 4: LEARNING & ADAPTATION**\n\n- **",
      "** - Comprehensive system documentation\n- **",
      "**`auto_process_message`** - Auto-process and store message context",
      "---\n\n## \ud83d\udcc8 **Performance Monitoring**\n\n### **Check System Status**",
      "Import and use",
      "** - Unified perception and analysis\n- **",
      "In your main.py",
      "bash\n# See all features in action\npython demo_restructured_cognitive_system.py",
      "**`plugins/cognitive_brain_restructured.py`** - Main restructured plugin (18 tools)",
      "**\ud83e\udde0 DOMAIN 6: SELF-MONITORING**",
      "bash\n# Check if everything is in place\nls -la plugins/cognitive_brain_restructured.py\nls -la demo_restructured_cognitive_system.py",
      "**`build_comprehensive_context`** - Build comprehensive context",
      "**\ud83e\udde0 DOMAIN 5: OUTPUT & ACTION**",
      "** - Deep thinking with context analysis\n- **",
      "See the complete system in action",
      "### **3. Use the Tools**",
      "Use any of the 18 cognitive tools",
      "** - Process multiple messages efficiently\n- **",
      "**`self_monitor`** - Comprehensive self-monitoring and health checks",
      "**`batch_workflow_processing`** - Process multiple messages efficiently",
      "**`learn_and_adapt`** - Unified learning and adaptation system",
      "python\n# Import and use\nfrom plugins.cognitive_brain_restructured import CognitiveBrainRestructuredPlugin\n\nplugin = CognitiveBrainRestructuredPlugin()\nplugin._setup()\n\n# Start with memory operations\nawait plugin._memory_operations_handler(\"store\", \"My first memory\")",
      "** - Continuous learning cycle (Phase 3)\n- **",
      "**`README_RESTRUCTURED_SYSTEM.md`** - This overview document",
      "---\n\n## \ud83e\udde0 **The 6 Cognitive Domains**\n\n### **\ud83e\udde0 DOMAIN 1: PERCEPTION & INPUT**\n\n- **",
      "Basic test",
      "**3. Run the Demo**",
      "python\n# Use independently\nplugin = CognitiveBrainRestructuredPlugin()\nplugin._setup()\n\n# Use any tool\nresult = await plugin._memory_operations_handler(\"store\", \"Test memory\")",
      "** - Comprehensive workflow health check\n\n---\n\n## \ud83d\udd04 **Natural Cognitive Workflow**\n\n### **Complete Example**",
      "**`execute_enhanced_workflow`** - Execute complete enhanced workflow",
      "Check if everything is in place",
      "\ud83e\udde0 **Cognitive Brain Restructured - Complete System**",
      "Enhanced cognitive domain interface",
      "** - Integration and troubleshooting guide\n- **",
      "**`continuous_learning_cycle`** - Continuous learning cycle (Phase 3)",
      "**Option 2: Use Standalone**",
      "\ud83d\udd27 **Integration Options**",
      "---\n\n## \ud83d\udcc1 **Files Overview**\n\n### **Core Files**\n\n- **",
      "See all features in action",
      "**\ud83e\udde0 DOMAIN 3: PROCESSING & THINKING**",
      "\ud83e\udde0 **The 6 Cognitive Domains**",
      "\ud83d\udd04 **Natural Cognitive Workflow**",
      "**`RESTRUCTURED_COGNITIVE_SYSTEM.md`** - Comprehensive system documentation",
      "** - Track conversation for learning\n\n### **\ud83e\udde0 DOMAIN 3: PROCESSING & THINKING**\n\n- **",
      "**`COGNITIVE_RESTRUCTURING_SUMMARY.md`** - Executive summary",
      "**4. Start Using**",
      "### **Plugin Not Found**",
      "python\n# 1. PERCEPTION: Analyze input and get context\ncontext = await plugin._enhanced_context_retrieval_handler(\"Analyze system performance\")\n\n# 2. MEMORY: Store and retrieve relevant information\nawait plugin._memory_operations_handler(\"store\", \"System performance analysis requested\")\n\n# 3. THINKING: Process and orchestrate tools\nthoughts = await plugin._think_deeply_handler(\"How to analyze system performance\", \"technical\")\n\n# 4. LEARNING: Learn from the interaction\nawait plugin._learn_and_adapt_handler(\"learn\", \"User requested system analysis\", \"technical\")\n\n# 5. ACTION: Execute the workflow\nworkflow_result = await plugin._execute_enhanced_workflow_handler(\"Analyze system performance\", \"aggressive\")\n\n# 6. MONITORING: Check system health\nhealth_status = await plugin._self_monitor_handler(\"comprehensive\", \"all\")",
      "**1. Verify Installation**",
      "** - Execute complete enhanced workflow\n- **",
      "### **4. Start Using**",
      "bash\n# Basic test\npython -c \"\nimport sys; sys.path.insert(0, '.')\nfrom plugins.cognitive_brain_restructured import CognitiveBrainRestructuredPlugin\nplugin = CognitiveBrainRestructuredPlugin()\nplugin._setup()\nprint('\u2705 System ready!')\n\"",
      "### **2. Test the System**",
      "---\n\n## \ud83d\udd0d **Troubleshooting**\n\n### **Import Errors**",
      "\ud83c\udfaf **Next Steps**",
      "\ud83c\udf89 **Success Story**",
      "** - Comprehensive self-monitoring and health checks\n- **",
      "** - Analyze system and tool performance\n- **",
      "100% backward compatibility",
      "All existing plugins remain intact",
      "**3. Use the Tools**",
      "**`workflow_health_check`** - Comprehensive workflow health check",
      "\ud83c\udfaf **What This Is**",
      "### **Option 2: Use Standalone**",
      "**`think_deeply`** - Deep thinking with context analysis",
      "** - Enhanced context retrieval (Phase 1)\n- **",
      "bash\n# See the complete system in action\npython demo_restructured_cognitive_system.py",
      "** - Unified memory operations (store, retrieve, search, clear)\n- **",
      "### **Documentation**\n\n- **",
      "**`track_conversation`** - Track conversation for learning",
      "**`memory_operations`** - Unified memory operations (store, retrieve, search, clear)",
      "**`optimize_workflow`** - Optimize workflows based on learning",
      "**`get_cursor_context`** - Cursor conversation context",
      "** - Main restructured plugin (18 tools)\n- **",
      "### **2. Run the Demo**",
      "\ud83d\ude80 **Getting Started**",
      "** - Optimize workflows based on learning\n\n### **\ud83e\udde0 DOMAIN 5: OUTPUT & ACTION**\n\n- **",
      "---\n\n## \ud83c\udf89 **Success Story**\n\nWe have successfully **transformed** your system from:\n\n\u274c **48 scattered, overlapping tools**\n\u274c **Complex tool discovery and usage**\n\u274c **Difficult maintenance and updates**\n\u274c **No natural workflow progression**\n\nInto:\n\n\u2705 **18 organized, cognitive domain tools**\n\u2705 **Intuitive, brain-focused organization**\n\u2705 **Easy maintenance and updates**\n\u2705 **Natural cognitive workflow progression**\n\u2705 **100% functionality preservation**\n\n---\n\n## \ud83d\udd17 **Quick Reference**\n\n### **Main Plugin**",
      "python\nfrom plugins.cognitive_brain_restructured import CognitiveBrainRestructuredPlugin\n\nplugin = CognitiveBrainRestructuredPlugin()\nplugin._setup()\n\n# Use any of the 18 cognitive tools\nresult = await plugin._memory_operations_handler(\"store\", \"important fact\")",
      "**`perceive_and_analyze`** - Unified perception and analysis",
      "** - Complete demonstration script\n- **",
      "**1. Test the System**",
      "** - Intelligent tool orchestration (Phase 2)\n- **",
      "\ud83d\ude80 **Ready for Production**",
      "** - Unified learning and adaptation system\n- **",
      "**Preserved Functionality**",
      "### **3. Run the Demo**",
      "**2. Test the System**",
      "** - Cursor conversation context\n\n### **\ud83e\udde0 DOMAIN 2: MEMORY & STORAGE**\n\n- **",
      "\ud83c\udfaf **Key Benefits**",
      "**Complete Example**",
      "**`ai_chat_with_memory`** - AI chat with memory enhancement",
      "**\ud83e\udde0 DOMAIN 4: LEARNING & ADAPTATION**",
      "**Core Files**",
      "python\n# In your main.py\nfrom plugins.cognitive_brain_restructured import CognitiveBrainRestructuredPlugin\n\nrestructured_plugin = CognitiveBrainRestructuredPlugin()\nrestructured_plugin._setup()\n\n# Add tools to your MCP server\nfor tool in restructured_plugin.get_tools():\n    # Register each tool\n    pass",
      "** - This overview document\n\n### **Preserved Functionality**\n\n- All existing plugins remain intact\n- 100% backward compatibility\n- All 48 original tools still accessible\n- Enhanced cognitive domain interface\n\n---\n\n## \ud83c\udfaf **Key Benefits**\n\n### **1. Cognitive Efficiency**\n\n- **Natural Workflow**: Tools follow human cognitive processes\n- **Intuitive Usage**: No need to remember scattered tool names\n- **Logical Organization**: Related functions grouped together\n\n### **2. Massive Redundancy Elimination**\n\n- **Before**: 48 scattered, overlapping tools\n- **After**: 18 organized, cognitive domain tools\n- **Reduction**: 62.5% fewer tools with 100% functionality\n\n### **3. Improved Maintainability**\n\n- **Centralized Logic**: All related functionality in one place\n- **Easier Updates**: Changes affect entire cognitive domains\n- **Better Testing**: Comprehensive testing per domain\n\n### **4. Enhanced User Experience**\n\n- **Faster Discovery**: Users find tools in logical domains\n- **Better Learning**: Natural cognitive progression\n- **Reduced Confusion**: Clear tool categorization\n\n---\n\n## \ud83d\ude80 **Getting Started**\n\n### **1. Verify Installation**",
      "** - AI chat with memory enhancement\n\n### **\ud83e\udde0 DOMAIN 6: SELF-MONITORING**\n\n- **",
      "**\ud83e\udde0 DOMAIN 1: PERCEPTION & INPUT**",
      "**`analyze_performance`** - Analyze system and tool performance",
      "All 48 original tools still accessible",
      "Use independently",
      "**\ud83e\udde0 DOMAIN 2: MEMORY & STORAGE**",
      "** - Executive summary\n- **",
      "Start with memory operations",
      "---\n\n## \ud83d\udcca **What We Achieved**\n\n| **Metric**            | **Before** | **After** | **Improvement**             |\n| --------------------- | ---------- | --------- | --------------------------- |\n| **Tool Count**        | 48         | 18        | **62.5% reduction**         |\n| **Cognitive Domains** | 0          | 6         | **New organization**        |\n| **Functionality**     | 100%       | 100%      | **Zero loss**               |\n| **User Experience**   | Scattered  | Organized | **Major improvement**       |\n| **Maintainability**   | Complex    | Simple    | **Significant improvement** |\n| **Workflow**          | Manual     | Natural   | **Cognitive progression**   |\n\n---\n\n## \ud83d\udd27 **Integration Options**\n\n### **Option 1: Add to MCP Server**",
      "**Option 1: Add to MCP Server**",
      "\ud83d\udcca **What We Achieved**",
      "**`enhanced_context_retrieval`** - Enhanced context retrieval (Phase 1)",
      "**`orchestrate_tools`** - Intelligent tool orchestration (Phase 2)",
      "** - Auto-process and store message context\n- **",
      "**`demo_restructured_cognitive_system.py`** - Complete demonstration script",
      "\ud83d\udcc1 **Files Overview**",
      "**`INTEGRATION_GUIDE.md`** - Integration and troubleshooting guide",
      "\ud83d\udcc8 **Performance Monitoring**",
      "**2. Run the Demo**",
      "** - Build comprehensive context\n\n### **\ud83e\udde0 DOMAIN 4: LEARNING & ADAPTATION**\n\n- **",
      "** - Comprehensive system documentation\n- **",
      "**`auto_process_message`** - Auto-process and store message context",
      "---\n\n## \ud83d\udcc8 **Performance Monitoring**\n\n### **Check System Status**",
      "Import and use",
      "** - Unified perception and analysis\n- **",
      "In your main.py",
      "bash\n# See all features in action\npython demo_restructured_cognitive_system.py",
      "**`plugins/cognitive_brain_restructured.py`** - Main restructured plugin (18 tools)",
      "**\ud83e\udde0 DOMAIN 6: SELF-MONITORING**",
      "bash\n# Check if everything is in place\nls -la plugins/cognitive_brain_restructured.py\nls -la demo_restructured_cognitive_system.py",
      "**`build_comprehensive_context`** - Build comprehensive context",
      "**\ud83e\udde0 DOMAIN 5: OUTPUT & ACTION**",
      "** - Deep thinking with context analysis\n- **",
      "See the complete system in action",
      "### **3. Use the Tools**",
      "Use any of the 18 cognitive tools",
      "** - Process multiple messages efficiently\n- **",
      "**`self_monitor`** - Comprehensive self-monitoring and health checks",
      "**`batch_workflow_processing`** - Process multiple messages efficiently",
      "**`learn_and_adapt`** - Unified learning and adaptation system",
      "python\n# Import and use\nfrom plugins.cognitive_brain_restructured import CognitiveBrainRestructuredPlugin\n\nplugin = CognitiveBrainRestructuredPlugin()\nplugin._setup()\n\n# Start with memory operations\nawait plugin._memory_operations_handler(\"store\", \"My first memory\")",
      "** - Continuous learning cycle (Phase 3)\n- **",
      "**`README_RESTRUCTURED_SYSTEM.md`** - This overview document",
      "---\n\n## \ud83e\udde0 **The 6 Cognitive Domains**\n\n### **\ud83e\udde0 DOMAIN 1: PERCEPTION & INPUT**\n\n- **",
      "Basic test",
      "**3. Run the Demo**",
      "python\n# Use independently\nplugin = CognitiveBrainRestructuredPlugin()\nplugin._setup()\n\n# Use any tool\nresult = await plugin._memory_operations_handler(\"store\", \"Test memory\")",
      "** - Comprehensive workflow health check\n\n---\n\n## \ud83d\udd04 **Natural Cognitive Workflow**\n\n### **Complete Example**",
      "**`execute_enhanced_workflow`** - Execute complete enhanced workflow",
      "Check if everything is in place",
      "\ud83e\udde0 **Cognitive Brain Restructured - Complete System**",
      "Enhanced cognitive domain interface",
      "** - Integration and troubleshooting guide\n- **",
      "**`continuous_learning_cycle`** - Continuous learning cycle (Phase 3)",
      "**Option 2: Use Standalone**",
      "\ud83d\udd27 **Integration Options**",
      "---\n\n## \ud83d\udcc1 **Files Overview**\n\n### **Core Files**\n\n- **",
      "See all features in action",
      "**\ud83e\udde0 DOMAIN 3: PROCESSING & THINKING**",
      "\ud83e\udde0 **The 6 Cognitive Domains**",
      "\ud83d\udd04 **Natural Cognitive Workflow**",
      "**`RESTRUCTURED_COGNITIVE_SYSTEM.md`** - Comprehensive system documentation",
      "** - Track conversation for learning\n\n### **\ud83e\udde0 DOMAIN 3: PROCESSING & THINKING**\n\n- **",
      "**`COGNITIVE_RESTRUCTURING_SUMMARY.md`** - Executive summary",
      "**4. Start Using**",
      "### **Plugin Not Found**",
      "python\n# 1. PERCEPTION: Analyze input and get context\ncontext = await plugin._enhanced_context_retrieval_handler(\"Analyze system performance\")\n\n# 2. MEMORY: Store and retrieve relevant information\nawait plugin._memory_operations_handler(\"store\", \"System performance analysis requested\")\n\n# 3. THINKING: Process and orchestrate tools\nthoughts = await plugin._think_deeply_handler(\"How to analyze system performance\", \"technical\")\n\n# 4. LEARNING: Learn from the interaction\nawait plugin._learn_and_adapt_handler(\"learn\", \"User requested system analysis\", \"technical\")\n\n# 5. ACTION: Execute the workflow\nworkflow_result = await plugin._execute_enhanced_workflow_handler(\"Analyze system performance\", \"aggressive\")\n\n# 6. MONITORING: Check system health\nhealth_status = await plugin._self_monitor_handler(\"comprehensive\", \"all\")",
      "**1. Verify Installation**",
      "** - Execute complete enhanced workflow\n- **",
      "### **4. Start Using**",
      "bash\n# Basic test\npython -c \"\nimport sys; sys.path.insert(0, '.')\nfrom plugins.cognitive_brain_restructured import CognitiveBrainRestructuredPlugin\nplugin = CognitiveBrainRestructuredPlugin()\nplugin._setup()\nprint('\u2705 System ready!')\n\"",
      "### **2. Test the System**",
      "---\n\n## \ud83d\udd0d **Troubleshooting**\n\n### **Import Errors**"
    ],
    "RESTRUCTURED_COGNITIVE_SYSTEM.md": [
      "learn_and_adapt",
      "\ud83e\udde0 **DOMAIN 2: MEMORY & STORAGE**",
      "Retrieve memory",
      "### **Unified Memory Operations**",
      "**Plugin Structure**",
      "**Usage**: `track_conversation(user_message=\"msg\", assistant_response=\"response\")`",
      "**Optimized Routing**: Direct routing to appropriate handlers",
      "**Consolidates**: `optimize_workflow`, `performance_optimization`, `learning_application`",
      "**Usage**: `build_comprehensive_context(user_message=\"query\", context_depth=\"comprehensive\")`",
      "**Function**: Comprehensive workflow health check",
      "**14. `batch_workflow_processing`**",
      "memory_enhanced_chat",
      "**Usage**: `analyze_performance(analysis_type=\"comprehensive\", target=\"all\")`",
      "**Function**: Automatically process and store message context",
      "learning_optimization",
      "Store memory",
      "**Function**: Execute complete enhanced workflow (all phases)",
      "**Backward Compatibility**: Existing tool calls continue to work",
      "**Function**: Continuous learning cycle (Phase 3)",
      "**Brain Analogy**: Prefrontal cortex + executive functions",
      "**10. `learn_and_adapt`**",
      "**Function**: AI chat with automatic memory enhancement",
      "Redundant context building functions",
      "**2. Reduced Redundancy**",
      "\ud83e\udde0 **DOMAIN 4: LEARNING & ADAPTATION**",
      "**Brain Analogy**: Working memory + conversation context",
      "**Brain Analogy**: Performance monitoring + analysis",
      "intelligent_response",
      "**Cleaner API**: 18 tools instead of 48 scattered functions",
      "**Consolidates**: `analyze_context_deeply`, `content_analysis`, `pattern_recognition`",
      "**Consolidates**: `enhanced_context_retrieval`, `context_building`, `memory_search`",
      "**Consolidates**: `continuous_learning_cycle`, `learning_optimization`, `pattern_learning`",
      "python\n# Learn from new information\nawait learn_and_adapt(\"learn\", \"New pattern discovered\", \"pattern_recognition\")\n\n# Reflect on recent experiences\nreflection = await learn_and_adapt(\"reflect\", \"\", \"recent_interactions\")\n\n# Background processing\ndreaming = await learn_and_adapt(\"dream\", \"\", \"\")\n\n# Remember important information\nawait learn_and_adapt(\"remember\", \"Critical system insight\", \"system_optimization\")",
      "workflow_planning",
      "**Comprehensive Learning System**",
      "**Usage**: `workflow_health_check(check_level=\"comprehensive\")`",
      "**After**: `enhanced_context_retrieval` + `build_comprehensive_context`",
      "status_monitoring",
      "**Function**: Unified perception and analysis system",
      "**Function**: Deep thinking with full context analysis",
      "All existing functionality remains accessible",
      "tool_coordination",
      "enhanced_context_retrieval",
      "**11. `continuous_learning_cycle`**",
      "**\ud83e\udde0 SELF-MONITORING** (3 tools)",
      "**3. `get_cursor_context`**",
      "**Usage**: `continuous_learning_cycle(interaction_data=data, learning_focus=\"context_patterns\")`",
      "Documentation updated with new cognitive domain approach",
      "**Consolidates**: `think`, `deep_thinking`, `cognitive_analysis`, `reasoning`",
      "**Brain Analogy**: Metacognition + self-awareness",
      "context_building",
      "**5. `auto_process_message`**",
      "**Function**: Intelligent tool orchestration (Phase 2)",
      "Remember important information",
      "ai_chat_with_memory(user_message=\"query\", ai_model_name=\"assistant\")",
      "**Functionality Preservation**: All existing plugins remain intact",
      "think_deeply(message=\"what to think about\", context=\"conversation\")",
      "batch_workflow_processing(user_messages=[\"msg1\", \"msg2\"], workflow_mode=\"standard\")",
      "**Memory Management (100% Preserved)**",
      "plugins/\n\u251c\u2500\u2500 cognitive_brain_restructured.py          # Main restructured plugin\n\u251c\u2500\u2500 enhanced_context_integration.py         # Preserved for functionality\n\u251c\u2500\u2500 enhanced_workflow_orchestrator.py       # Preserved for functionality\n\u251c\u2500\u2500 auto_memory.py                         # Preserved for functionality\n\u2514\u2500\u2500 ... (other existing plugins)",
      "**Usage**: `learn_and_adapt(operation=\"learn\", data=\"new information\", focus=\"general\")`",
      "store_memory",
      "data_integration",
      "message_processing",
      "**Usage**: `think_deeply(message=\"what to think about\", context=\"conversation\")`",
      "**Tools**",
      "**Context Building (100% Preserved)**",
      "analyze_workflow_performance",
      "execute_enhanced_workflow",
      "Complex tool discovery and usage",
      "**Consolidates**: `ai_chat_with_memory`, `memory_enhanced_chat`, `intelligent_response`",
      "**Function**: Optimize workflows based on learning",
      "batch_workflow_processing",
      "auto_process_message",
      "python\n# 1. PERCEPTION: Analyze input and get context\ncontext = await perceive_and_analyze(\"Analyze this system performance\")\nmemory_context = await enhanced_context_retrieval(\"system performance analysis\")\n\n# 2. MEMORY: Store and retrieve relevant information\nawait memory_operations(\"store\", \"System performance analysis requested\")\nstored_data = await memory_operations(\"retrieve\", \"\", \"system performance\")\n\n# 3. THINKING: Process and orchestrate tools\nthoughts = await think_deeply(\"How to analyze system performance\", \"technical\")\norchestration = await orchestrate_tools(memory_context, \"comprehensive_analysis\")\n\n# 4. LEARNING: Learn from the interaction\nawait learn_and_adapt(\"learn\", \"User requested system performance analysis\", \"technical\")\nlearning_cycle = await continuous_learning_cycle(interaction_data, \"performance_patterns\")\n\n# 5. ACTION: Execute the workflow\nworkflow_result = await execute_enhanced_workflow(\"Analyze system performance\", \"aggressive\")\n\n# 6. MONITORING: Check system health\nhealth_status = await self_monitor(\"comprehensive\", \"all\")\nperformance_metrics = await analyze_performance(\"comprehensive\", \"workflow\")",
      "**\ud83e\udde0 OUTPUT & ACTION** (3 tools)",
      "**Function**: Unified learning and adaptation system",
      "\ud83d\ude80 **Migration Guide**",
      "**Brain Analogy**: Hippocampus + context retrieval networks",
      "**\ud83e\udde0 PERCEPTION & INPUT** (3 tools)",
      "**Consolidates**: `self_monitoring`, `health_check`, `status_monitoring`, `consciousness_check`",
      "track_conversation(user_message=\"msg\", assistant_response=\"response\")",
      "**Consolidates**: `workflow_health_check`, `system_health`, `component_monitoring`",
      "**Preservation**: All analysis and optimization features available",
      "**Before**: `execute_enhanced_workflow`, `batch_workflow_processing`, `workflow_health_check`",
      "health_check",
      "Background processing",
      "**Better Caching**: Related operations can share resources",
      "component_monitoring",
      "**Function**: Analyze system and tool performance",
      "perceive_and_analyze",
      "**Consolidates**: `auto_process_message`, `auto_memory`, `message_processing`",
      "self_monitor",
      "Inconsistent naming conventions",
      "self_monitoring",
      "remember_fact",
      "**After**: `analyze_performance` + `optimize_workflow`",
      "**Brain Analogy**: Executive planning + tool coordination",
      "conversation_tracking",
      "Old scattered tools removed from main interface",
      "**Usage**: `get_cursor_context()`",
      "**Phase 1: Immediate Benefits**",
      "**Usage**: `orchestrate_tools(context_data=data, target_goal=\"enhanced_response\")`",
      "enhanced_context_retrieval(user_message=\"query\", include_history=True)",
      "**Brain Analogy**: Conversation memory + learning tracking",
      "conversation_context",
      "**Usage**: `ai_chat_with_memory(user_message=\"query\", ai_model_name=\"assistant\")`",
      "**Usage**: `perceive_and_analyze(content=\"text to analyze\", analysis_type=\"comprehensive\")`",
      "adapt",
      "**2. `enhanced_context_retrieval`**",
      "**Function**: Unified memory operations (store, retrieve, search, clear)",
      "**Phase 3: Full Restructuring**",
      "**Function**: Enhanced context retrieval (Phase 1)",
      "analyze_performance",
      "\ud83e\udde0 **DOMAIN 3: PROCESSING & THINKING**",
      "**Consolidates**: `batch_workflow_processing`, `bulk_processing`, `efficiency_optimization`",
      "deep_thinking",
      "efficiency_optimization",
      "**Preservation**: All context building capabilities maintained",
      "**Consolidates**: `execute_enhanced_workflow`, `workflow_execution`, `phase_coordination`",
      "Learn from new information",
      "**Unified Interface**: New restructured plugin provides consolidated access",
      "memory_operations",
      "\ud83d\udd27 **Implementation Details**",
      "**Brain Analogy**: Continuous learning + pattern consolidation",
      "retrieve_memory",
      "workflow_health_check",
      "**Usage**: `self_monitor(monitoring_type=\"comprehensive\", focus_area=\"all\")`",
      "**Before**: `analyze_tool_performance`, `analyze_workflow_performance`, `performance_metrics`, `optimization`",
      "Existing tools marked as deprecated (but functional)",
      "workflow_health_check(check_level=\"comprehensive\")",
      "Complete human brain-focused organization",
      "**4. `memory_operations`**",
      "**Natural Cognitive Workflow**",
      "pattern_learning",
      "system_health",
      "**Eliminated Duplicates**: No more overlapping functionality",
      "**1. `perceive_and_analyze`**",
      "Scattered performance analysis tools",
      "optimize_workflow",
      "**Consolidates**: `store_memory`, `retrieve_memory`, `search_memory`, `clear_memory`, `remember_fact`",
      "**6. `track_conversation`**",
      "\ud83e\udde0 **DOMAIN 1: PERCEPTION & INPUT**",
      "perceive_and_analyze(content=\"text to analyze\", analysis_type=\"comprehensive\")",
      "performance_metrics",
      "**Function**: Get comprehensive Cursor conversation context",
      "\ud83c\udfaf **Benefits of Restructuring**",
      "**Integration Strategy**",
      "**Consolidates**: `track_cursor_conversation`, `conversation_tracking`, `learning_tracking`",
      "**Brain Analogy**: Automatic memory encoding",
      "**Usage**: `optimize_workflow(optimization_focus=\"performance\", target_metrics=[\"speed\", \"accuracy\"])`",
      "---\n\n## \ud83c\udfaf **Benefits of Restructuring**\n\n### **1. Cognitive Efficiency**\n\n- **Natural Workflow**: Tools follow human cognitive processes\n- **Intuitive Usage**: No need to remember scattered tool names\n- **Logical Organization**: Related functions grouped together\n\n### **2. Reduced Redundancy**\n\n- **Eliminated Duplicates**: No more overlapping functionality\n- **Unified Interfaces**: Single tool for related operations\n- **Cleaner API**: 18 tools instead of 48 scattered functions\n\n### **3. Improved Maintainability**\n\n- **Centralized Logic**: All related functionality in one place\n- **Easier Updates**: Changes affect entire cognitive domains\n- **Better Testing**: Comprehensive testing per domain\n\n### **4. Enhanced User Experience**\n\n- **Faster Discovery**: Users find tools in logical domains\n- **Better Learning**: Natural cognitive progression\n- **Reduced Confusion**: Clear tool categorization\n\n---\n\n## \ud83d\udd27 **Implementation Details**\n\n### **Plugin Structure**",
      "build_comprehensive_context(user_message=\"query\", context_depth=\"comprehensive\")",
      "\ud83c\udfd7\ufe0f **Restructuring Results**",
      "**17. `analyze_performance`**",
      "**Performance Impact**",
      "optimize_workflow(optimization_focus=\"performance\", target_metrics=[\"speed\", \"accuracy\"])",
      "phase_coordination",
      "**7. `think_deeply`**",
      "analyze_tool_performance",
      "**\ud83e\udde0 LEARNING & ADAPTATION** (3 tools)",
      "Users migrate to new unified interfaces",
      "analyze_performance(analysis_type=\"comprehensive\", target=\"all\")",
      "**Improved Efficiency**: Reduced tool discovery overhead",
      "**Brain Analogy**: Response generation + memory integration",
      "Search memory",
      "\ud83e\udde0 **Cognitive Brain Restructured - Human Brain-Focused Organization**",
      "**Purpose**",
      "search_memory",
      "auto_process_message(user_message=\"message to process\")",
      "**Function**: Track conversation for learning and context",
      "self_monitor(monitoring_type=\"comprehensive\", focus_area=\"all\")",
      "orchestrate_tools",
      "### **Comprehensive Learning System**",
      "\ud83d\ude80 **Usage Examples**",
      "performance_optimization",
      "Multiple overlapping memory management tools",
      "**Unified Interfaces**: Single tool for related operations",
      "**Performance Analysis (100% Preserved)**",
      "**8. `orchestrate_tools`**",
      "Reflect on recent experiences",
      "cursor_context_summary",
      "**Usage**: `batch_workflow_processing(user_messages=[\"msg1\", \"msg2\"], workflow_mode=\"standard\")`",
      "**Zero Functionality Loss**: 100% feature preservation",
      "Users can start using new cognitive domain tools",
      "**Brain Analogy**: Skill optimization + learning application",
      "**Before**: `enhanced_context_retrieval`, `build_comprehensive_context`, `context_building`, `context_synthesis`",
      "**Function**: Comprehensive self-monitoring and health checks",
      "**Brain Analogy**: Hippocampus + memory consolidation",
      "**Brain Analogy**: Visual cortex + pattern recognition areas",
      "**After**: `memory_operations` + `auto_process_message` + `track_conversation`",
      "optimization",
      "**\ud83e\udde0 PROCESSING & THINKING** (3 tools)",
      "**Consolidates**: `build_comprehensive_context`, `context_synthesis`, `data_integration`",
      "**Brain Analogy**: System health + component monitoring",
      "learning_tracking",
      "**18. `workflow_health_check`**",
      "Clear memory",
      "pattern_recognition",
      "continuous_learning_cycle",
      "track_conversation",
      "continuous_learning_cycle(interaction_data=data, learning_focus=\"context_patterns\")",
      "**Usage**: `auto_process_message(user_message=\"message to process\")`",
      "**Consolidates**: `learn_from`, `reflect`, `dream`, `remember`, `adapt`",
      "**12. `optimize_workflow`**",
      "get_cursor_context()",
      "Cognitive domain tools become primary interface",
      "**15. `ai_chat_with_memory`**",
      "**13. `execute_enhanced_workflow`**",
      "**Usage**: `memory_operations(operation=\"store\", data=\"important fact\")`",
      "orchestrate_tools(context_data=data, target_goal=\"enhanced_response\")",
      "**Consolidates**: `get_cursor_context`, `cursor_context_summary`, `conversation_context`",
      "reasoning",
      "\ud83c\udf89 **Conclusion**",
      "learn_and_adapt(operation=\"learn\", data=\"new information\", focus=\"general\")",
      "bulk_processing",
      "**Gradual Migration**: Users can migrate to new interface at their own pace",
      "execute_enhanced_workflow(user_message=\"query\", workflow_mode=\"standard\")",
      "**Usage**: `execute_enhanced_workflow(user_message=\"query\", workflow_mode=\"standard\")`",
      "**Before**: `store_memory`, `retrieve_memory`, `search_memory`, `clear_memory`, `remember_fact`, `auto_process_message`",
      "**Consolidates**: `orchestrate_tools`, `tool_coordination`, `workflow_planning`",
      "\ud83d\udd04 **Functionality Preservation Mapping**",
      "workflow_execution",
      "**Unified Memory Operations**",
      "clear_memory",
      "**Preservation**: All operations available through unified interface",
      "**Preservation**: All workflow capabilities maintained",
      "**Usage**: `enhanced_context_retrieval(user_message=\"query\", include_history=True)`",
      "**Consolidates**: `analyze_tool_performance`, `analyze_workflow_performance`, `performance_metrics`",
      "\ud83e\udde0 **DOMAIN 5: OUTPUT & ACTION**",
      "**16. `self_monitor`**",
      "content_analysis",
      "**Brain Analogy**: Context integration + synthesis",
      "**\ud83e\udde0 MEMORY & STORAGE** (3 tools)",
      "**Brain Analogy**: Action planning + execution",
      "learning_application",
      "**Function**: Build comprehensive context using all available data",
      "memory_search",
      "**Brain Analogy**: Learning networks + neuroplasticity",
      "build_comprehensive_context",
      "**After**: `execute_enhanced_workflow` + `batch_workflow_processing` + `workflow_health_check`",
      "New restructured plugin available alongside existing tools",
      "**9. `build_comprehensive_context`**",
      "cognitive_analysis",
      "memory_operations(operation=\"store\", data=\"important fact\")",
      "\ud83e\udde0 **DOMAIN 6: SELF-MONITORING**",
      "**Workflow Management (100% Preserved)**",
      "python\n# Store memory\nawait memory_operations(\"store\", \"Important fact about user preferences\")\n\n# Retrieve memory\nuser_prefs = await memory_operations(\"retrieve\", \"\", \"user preferences\")\n\n# Search memory\nsearch_results = await memory_operations(\"search\", \"\", \"performance analysis\")\n\n# Clear memory\nawait memory_operations(\"clear\", \"\", \"\")",
      "**Function**: Process multiple messages through enhanced workflow",
      "**Brain Analogy**: Batch processing + efficiency",
      "context_synthesis",
      "learn_and_adapt",
      "\ud83e\udde0 **DOMAIN 2: MEMORY & STORAGE**",
      "Retrieve memory",
      "### **Unified Memory Operations**",
      "**Plugin Structure**",
      "**Usage**: `track_conversation(user_message=\"msg\", assistant_response=\"response\")`",
      "**Optimized Routing**: Direct routing to appropriate handlers",
      "**Consolidates**: `optimize_workflow`, `performance_optimization`, `learning_application`",
      "**Usage**: `build_comprehensive_context(user_message=\"query\", context_depth=\"comprehensive\")`",
      "**Function**: Comprehensive workflow health check",
      "**14. `batch_workflow_processing`**",
      "memory_enhanced_chat",
      "**Usage**: `analyze_performance(analysis_type=\"comprehensive\", target=\"all\")`",
      "**Function**: Automatically process and store message context",
      "learning_optimization",
      "Store memory",
      "**Function**: Execute complete enhanced workflow (all phases)",
      "**Backward Compatibility**: Existing tool calls continue to work",
      "**Function**: Continuous learning cycle (Phase 3)",
      "**Brain Analogy**: Prefrontal cortex + executive functions",
      "**10. `learn_and_adapt`**",
      "**Function**: AI chat with automatic memory enhancement",
      "Redundant context building functions",
      "**2. Reduced Redundancy**",
      "\ud83e\udde0 **DOMAIN 4: LEARNING & ADAPTATION**",
      "**Brain Analogy**: Working memory + conversation context",
      "**Brain Analogy**: Performance monitoring + analysis",
      "intelligent_response",
      "**Cleaner API**: 18 tools instead of 48 scattered functions",
      "**Consolidates**: `analyze_context_deeply`, `content_analysis`, `pattern_recognition`",
      "**Consolidates**: `enhanced_context_retrieval`, `context_building`, `memory_search`",
      "**Consolidates**: `continuous_learning_cycle`, `learning_optimization`, `pattern_learning`",
      "python\n# Learn from new information\nawait learn_and_adapt(\"learn\", \"New pattern discovered\", \"pattern_recognition\")\n\n# Reflect on recent experiences\nreflection = await learn_and_adapt(\"reflect\", \"\", \"recent_interactions\")\n\n# Background processing\ndreaming = await learn_and_adapt(\"dream\", \"\", \"\")\n\n# Remember important information\nawait learn_and_adapt(\"remember\", \"Critical system insight\", \"system_optimization\")",
      "workflow_planning",
      "**Comprehensive Learning System**",
      "**Usage**: `workflow_health_check(check_level=\"comprehensive\")`",
      "**After**: `enhanced_context_retrieval` + `build_comprehensive_context`",
      "status_monitoring",
      "**Function**: Unified perception and analysis system",
      "**Function**: Deep thinking with full context analysis",
      "All existing functionality remains accessible",
      "tool_coordination",
      "enhanced_context_retrieval",
      "**11. `continuous_learning_cycle`**",
      "**\ud83e\udde0 SELF-MONITORING** (3 tools)",
      "**3. `get_cursor_context`**",
      "**Usage**: `continuous_learning_cycle(interaction_data=data, learning_focus=\"context_patterns\")`",
      "Documentation updated with new cognitive domain approach",
      "**Consolidates**: `think`, `deep_thinking`, `cognitive_analysis`, `reasoning`",
      "**Brain Analogy**: Metacognition + self-awareness",
      "context_building",
      "**5. `auto_process_message`**",
      "**Function**: Intelligent tool orchestration (Phase 2)",
      "Remember important information",
      "ai_chat_with_memory(user_message=\"query\", ai_model_name=\"assistant\")",
      "**Functionality Preservation**: All existing plugins remain intact",
      "think_deeply(message=\"what to think about\", context=\"conversation\")",
      "batch_workflow_processing(user_messages=[\"msg1\", \"msg2\"], workflow_mode=\"standard\")",
      "**Memory Management (100% Preserved)**",
      "plugins/\n\u251c\u2500\u2500 cognitive_brain_restructured.py          # Main restructured plugin\n\u251c\u2500\u2500 enhanced_context_integration.py         # Preserved for functionality\n\u251c\u2500\u2500 enhanced_workflow_orchestrator.py       # Preserved for functionality\n\u251c\u2500\u2500 auto_memory.py                         # Preserved for functionality\n\u2514\u2500\u2500 ... (other existing plugins)",
      "**Usage**: `learn_and_adapt(operation=\"learn\", data=\"new information\", focus=\"general\")`",
      "store_memory",
      "data_integration",
      "message_processing",
      "**Usage**: `think_deeply(message=\"what to think about\", context=\"conversation\")`",
      "**Tools**",
      "**Context Building (100% Preserved)**",
      "analyze_workflow_performance",
      "execute_enhanced_workflow",
      "Complex tool discovery and usage",
      "**Consolidates**: `ai_chat_with_memory`, `memory_enhanced_chat`, `intelligent_response`",
      "**Function**: Optimize workflows based on learning",
      "batch_workflow_processing",
      "auto_process_message",
      "python\n# 1. PERCEPTION: Analyze input and get context\ncontext = await perceive_and_analyze(\"Analyze this system performance\")\nmemory_context = await enhanced_context_retrieval(\"system performance analysis\")\n\n# 2. MEMORY: Store and retrieve relevant information\nawait memory_operations(\"store\", \"System performance analysis requested\")\nstored_data = await memory_operations(\"retrieve\", \"\", \"system performance\")\n\n# 3. THINKING: Process and orchestrate tools\nthoughts = await think_deeply(\"How to analyze system performance\", \"technical\")\norchestration = await orchestrate_tools(memory_context, \"comprehensive_analysis\")\n\n# 4. LEARNING: Learn from the interaction\nawait learn_and_adapt(\"learn\", \"User requested system performance analysis\", \"technical\")\nlearning_cycle = await continuous_learning_cycle(interaction_data, \"performance_patterns\")\n\n# 5. ACTION: Execute the workflow\nworkflow_result = await execute_enhanced_workflow(\"Analyze system performance\", \"aggressive\")\n\n# 6. MONITORING: Check system health\nhealth_status = await self_monitor(\"comprehensive\", \"all\")\nperformance_metrics = await analyze_performance(\"comprehensive\", \"workflow\")",
      "**\ud83e\udde0 OUTPUT & ACTION** (3 tools)",
      "**Function**: Unified learning and adaptation system",
      "\ud83d\ude80 **Migration Guide**",
      "**Brain Analogy**: Hippocampus + context retrieval networks",
      "**\ud83e\udde0 PERCEPTION & INPUT** (3 tools)",
      "**Consolidates**: `self_monitoring`, `health_check`, `status_monitoring`, `consciousness_check`",
      "track_conversation(user_message=\"msg\", assistant_response=\"response\")",
      "**Consolidates**: `workflow_health_check`, `system_health`, `component_monitoring`",
      "**Preservation**: All analysis and optimization features available",
      "**Before**: `execute_enhanced_workflow`, `batch_workflow_processing`, `workflow_health_check`",
      "health_check",
      "Background processing",
      "**Better Caching**: Related operations can share resources",
      "component_monitoring",
      "**Function**: Analyze system and tool performance",
      "perceive_and_analyze",
      "**Consolidates**: `auto_process_message`, `auto_memory`, `message_processing`",
      "self_monitor",
      "Inconsistent naming conventions",
      "self_monitoring",
      "remember_fact",
      "**After**: `analyze_performance` + `optimize_workflow`",
      "**Brain Analogy**: Executive planning + tool coordination",
      "conversation_tracking",
      "Old scattered tools removed from main interface",
      "**Usage**: `get_cursor_context()`",
      "**Phase 1: Immediate Benefits**",
      "**Usage**: `orchestrate_tools(context_data=data, target_goal=\"enhanced_response\")`",
      "enhanced_context_retrieval(user_message=\"query\", include_history=True)",
      "**Brain Analogy**: Conversation memory + learning tracking",
      "conversation_context",
      "**Usage**: `ai_chat_with_memory(user_message=\"query\", ai_model_name=\"assistant\")`",
      "**Usage**: `perceive_and_analyze(content=\"text to analyze\", analysis_type=\"comprehensive\")`",
      "adapt",
      "**2. `enhanced_context_retrieval`**",
      "**Function**: Unified memory operations (store, retrieve, search, clear)",
      "**Phase 3: Full Restructuring**",
      "**Function**: Enhanced context retrieval (Phase 1)",
      "analyze_performance",
      "\ud83e\udde0 **DOMAIN 3: PROCESSING & THINKING**",
      "**Consolidates**: `batch_workflow_processing`, `bulk_processing`, `efficiency_optimization`",
      "deep_thinking",
      "efficiency_optimization",
      "**Preservation**: All context building capabilities maintained",
      "**Consolidates**: `execute_enhanced_workflow`, `workflow_execution`, `phase_coordination`",
      "Learn from new information",
      "**Unified Interface**: New restructured plugin provides consolidated access",
      "memory_operations",
      "\ud83d\udd27 **Implementation Details**",
      "**Brain Analogy**: Continuous learning + pattern consolidation",
      "retrieve_memory",
      "workflow_health_check",
      "**Usage**: `self_monitor(monitoring_type=\"comprehensive\", focus_area=\"all\")`",
      "**Before**: `analyze_tool_performance`, `analyze_workflow_performance`, `performance_metrics`, `optimization`",
      "Existing tools marked as deprecated (but functional)",
      "workflow_health_check(check_level=\"comprehensive\")",
      "Complete human brain-focused organization",
      "**4. `memory_operations`**",
      "**Natural Cognitive Workflow**",
      "pattern_learning",
      "system_health",
      "**Eliminated Duplicates**: No more overlapping functionality",
      "**1. `perceive_and_analyze`**",
      "Scattered performance analysis tools",
      "optimize_workflow",
      "**Consolidates**: `store_memory`, `retrieve_memory`, `search_memory`, `clear_memory`, `remember_fact`",
      "**6. `track_conversation`**",
      "\ud83e\udde0 **DOMAIN 1: PERCEPTION & INPUT**",
      "perceive_and_analyze(content=\"text to analyze\", analysis_type=\"comprehensive\")",
      "performance_metrics",
      "**Function**: Get comprehensive Cursor conversation context",
      "\ud83c\udfaf **Benefits of Restructuring**",
      "**Integration Strategy**",
      "**Consolidates**: `track_cursor_conversation`, `conversation_tracking`, `learning_tracking`",
      "**Brain Analogy**: Automatic memory encoding",
      "**Usage**: `optimize_workflow(optimization_focus=\"performance\", target_metrics=[\"speed\", \"accuracy\"])`",
      "---\n\n## \ud83c\udfaf **Benefits of Restructuring**\n\n### **1. Cognitive Efficiency**\n\n- **Natural Workflow**: Tools follow human cognitive processes\n- **Intuitive Usage**: No need to remember scattered tool names\n- **Logical Organization**: Related functions grouped together\n\n### **2. Reduced Redundancy**\n\n- **Eliminated Duplicates**: No more overlapping functionality\n- **Unified Interfaces**: Single tool for related operations\n- **Cleaner API**: 18 tools instead of 48 scattered functions\n\n### **3. Improved Maintainability**\n\n- **Centralized Logic**: All related functionality in one place\n- **Easier Updates**: Changes affect entire cognitive domains\n- **Better Testing**: Comprehensive testing per domain\n\n### **4. Enhanced User Experience**\n\n- **Faster Discovery**: Users find tools in logical domains\n- **Better Learning**: Natural cognitive progression\n- **Reduced Confusion**: Clear tool categorization\n\n---\n\n## \ud83d\udd27 **Implementation Details**\n\n### **Plugin Structure**",
      "build_comprehensive_context(user_message=\"query\", context_depth=\"comprehensive\")",
      "\ud83c\udfd7\ufe0f **Restructuring Results**",
      "**17. `analyze_performance`**",
      "**Performance Impact**",
      "optimize_workflow(optimization_focus=\"performance\", target_metrics=[\"speed\", \"accuracy\"])",
      "phase_coordination",
      "**7. `think_deeply`**",
      "analyze_tool_performance",
      "**\ud83e\udde0 LEARNING & ADAPTATION** (3 tools)",
      "Users migrate to new unified interfaces",
      "analyze_performance(analysis_type=\"comprehensive\", target=\"all\")",
      "**Improved Efficiency**: Reduced tool discovery overhead",
      "**Brain Analogy**: Response generation + memory integration",
      "Search memory",
      "\ud83e\udde0 **Cognitive Brain Restructured - Human Brain-Focused Organization**",
      "**Purpose**",
      "search_memory",
      "auto_process_message(user_message=\"message to process\")",
      "**Function**: Track conversation for learning and context",
      "self_monitor(monitoring_type=\"comprehensive\", focus_area=\"all\")",
      "orchestrate_tools",
      "### **Comprehensive Learning System**",
      "\ud83d\ude80 **Usage Examples**",
      "performance_optimization",
      "Multiple overlapping memory management tools",
      "**Unified Interfaces**: Single tool for related operations",
      "**Performance Analysis (100% Preserved)**",
      "**8. `orchestrate_tools`**",
      "Reflect on recent experiences",
      "cursor_context_summary",
      "**Usage**: `batch_workflow_processing(user_messages=[\"msg1\", \"msg2\"], workflow_mode=\"standard\")`",
      "**Zero Functionality Loss**: 100% feature preservation",
      "Users can start using new cognitive domain tools",
      "**Brain Analogy**: Skill optimization + learning application",
      "**Before**: `enhanced_context_retrieval`, `build_comprehensive_context`, `context_building`, `context_synthesis`",
      "**Function**: Comprehensive self-monitoring and health checks",
      "**Brain Analogy**: Hippocampus + memory consolidation",
      "**Brain Analogy**: Visual cortex + pattern recognition areas",
      "**After**: `memory_operations` + `auto_process_message` + `track_conversation`",
      "optimization",
      "**\ud83e\udde0 PROCESSING & THINKING** (3 tools)",
      "**Consolidates**: `build_comprehensive_context`, `context_synthesis`, `data_integration`",
      "**Brain Analogy**: System health + component monitoring",
      "learning_tracking",
      "**18. `workflow_health_check`**",
      "Clear memory",
      "pattern_recognition",
      "continuous_learning_cycle",
      "track_conversation",
      "continuous_learning_cycle(interaction_data=data, learning_focus=\"context_patterns\")",
      "**Usage**: `auto_process_message(user_message=\"message to process\")`",
      "**Consolidates**: `learn_from`, `reflect`, `dream`, `remember`, `adapt`",
      "**12. `optimize_workflow`**",
      "get_cursor_context()",
      "Cognitive domain tools become primary interface",
      "**15. `ai_chat_with_memory`**",
      "**13. `execute_enhanced_workflow`**",
      "**Usage**: `memory_operations(operation=\"store\", data=\"important fact\")`",
      "orchestrate_tools(context_data=data, target_goal=\"enhanced_response\")",
      "**Consolidates**: `get_cursor_context`, `cursor_context_summary`, `conversation_context`",
      "reasoning",
      "\ud83c\udf89 **Conclusion**",
      "learn_and_adapt(operation=\"learn\", data=\"new information\", focus=\"general\")",
      "bulk_processing",
      "**Gradual Migration**: Users can migrate to new interface at their own pace",
      "execute_enhanced_workflow(user_message=\"query\", workflow_mode=\"standard\")",
      "**Usage**: `execute_enhanced_workflow(user_message=\"query\", workflow_mode=\"standard\")`",
      "**Before**: `store_memory`, `retrieve_memory`, `search_memory`, `clear_memory`, `remember_fact`, `auto_process_message`",
      "**Consolidates**: `orchestrate_tools`, `tool_coordination`, `workflow_planning`",
      "\ud83d\udd04 **Functionality Preservation Mapping**",
      "workflow_execution",
      "**Unified Memory Operations**",
      "clear_memory",
      "**Preservation**: All operations available through unified interface",
      "**Preservation**: All workflow capabilities maintained",
      "**Usage**: `enhanced_context_retrieval(user_message=\"query\", include_history=True)`",
      "**Consolidates**: `analyze_tool_performance`, `analyze_workflow_performance`, `performance_metrics`",
      "\ud83e\udde0 **DOMAIN 5: OUTPUT & ACTION**",
      "**16. `self_monitor`**",
      "content_analysis",
      "**Brain Analogy**: Context integration + synthesis",
      "**\ud83e\udde0 MEMORY & STORAGE** (3 tools)",
      "**Brain Analogy**: Action planning + execution",
      "learning_application",
      "**Function**: Build comprehensive context using all available data",
      "memory_search",
      "**Brain Analogy**: Learning networks + neuroplasticity",
      "build_comprehensive_context",
      "**After**: `execute_enhanced_workflow` + `batch_workflow_processing` + `workflow_health_check`",
      "New restructured plugin available alongside existing tools",
      "**9. `build_comprehensive_context`**",
      "cognitive_analysis",
      "memory_operations(operation=\"store\", data=\"important fact\")",
      "\ud83e\udde0 **DOMAIN 6: SELF-MONITORING**",
      "**Workflow Management (100% Preserved)**",
      "python\n# Store memory\nawait memory_operations(\"store\", \"Important fact about user preferences\")\n\n# Retrieve memory\nuser_prefs = await memory_operations(\"retrieve\", \"\", \"user preferences\")\n\n# Search memory\nsearch_results = await memory_operations(\"search\", \"\", \"performance analysis\")\n\n# Clear memory\nawait memory_operations(\"clear\", \"\", \"\")",
      "**Function**: Process multiple messages through enhanced workflow",
      "**Brain Analogy**: Batch processing + efficiency",
      "context_synthesis",
      "learn_and_adapt",
      "\ud83e\udde0 **DOMAIN 2: MEMORY & STORAGE**",
      "Retrieve memory",
      "### **Unified Memory Operations**",
      "**Plugin Structure**",
      "**Usage**: `track_conversation(user_message=\"msg\", assistant_response=\"response\")`",
      "**Optimized Routing**: Direct routing to appropriate handlers",
      "**Consolidates**: `optimize_workflow`, `performance_optimization`, `learning_application`",
      "**Usage**: `build_comprehensive_context(user_message=\"query\", context_depth=\"comprehensive\")`",
      "**Function**: Comprehensive workflow health check",
      "**14. `batch_workflow_processing`**",
      "memory_enhanced_chat",
      "**Usage**: `analyze_performance(analysis_type=\"comprehensive\", target=\"all\")`",
      "**Function**: Automatically process and store message context",
      "learning_optimization",
      "Store memory",
      "**Function**: Execute complete enhanced workflow (all phases)",
      "**Backward Compatibility**: Existing tool calls continue to work",
      "**Function**: Continuous learning cycle (Phase 3)",
      "**Brain Analogy**: Prefrontal cortex + executive functions",
      "**10. `learn_and_adapt`**",
      "**Function**: AI chat with automatic memory enhancement",
      "Redundant context building functions",
      "**2. Reduced Redundancy**",
      "\ud83e\udde0 **DOMAIN 4: LEARNING & ADAPTATION**",
      "**Brain Analogy**: Working memory + conversation context",
      "**Brain Analogy**: Performance monitoring + analysis",
      "intelligent_response",
      "**Cleaner API**: 18 tools instead of 48 scattered functions",
      "**Consolidates**: `analyze_context_deeply`, `content_analysis`, `pattern_recognition`",
      "**Consolidates**: `enhanced_context_retrieval`, `context_building`, `memory_search`",
      "**Consolidates**: `continuous_learning_cycle`, `learning_optimization`, `pattern_learning`",
      "python\n# Learn from new information\nawait learn_and_adapt(\"learn\", \"New pattern discovered\", \"pattern_recognition\")\n\n# Reflect on recent experiences\nreflection = await learn_and_adapt(\"reflect\", \"\", \"recent_interactions\")\n\n# Background processing\ndreaming = await learn_and_adapt(\"dream\", \"\", \"\")\n\n# Remember important information\nawait learn_and_adapt(\"remember\", \"Critical system insight\", \"system_optimization\")",
      "workflow_planning",
      "**Comprehensive Learning System**",
      "**Usage**: `workflow_health_check(check_level=\"comprehensive\")`",
      "**After**: `enhanced_context_retrieval` + `build_comprehensive_context`",
      "status_monitoring",
      "**Function**: Unified perception and analysis system",
      "**Function**: Deep thinking with full context analysis",
      "All existing functionality remains accessible",
      "tool_coordination",
      "enhanced_context_retrieval",
      "**11. `continuous_learning_cycle`**",
      "**\ud83e\udde0 SELF-MONITORING** (3 tools)",
      "**3. `get_cursor_context`**",
      "**Usage**: `continuous_learning_cycle(interaction_data=data, learning_focus=\"context_patterns\")`",
      "Documentation updated with new cognitive domain approach",
      "**Consolidates**: `think`, `deep_thinking`, `cognitive_analysis`, `reasoning`",
      "**Brain Analogy**: Metacognition + self-awareness",
      "context_building",
      "**5. `auto_process_message`**",
      "**Function**: Intelligent tool orchestration (Phase 2)",
      "Remember important information",
      "ai_chat_with_memory(user_message=\"query\", ai_model_name=\"assistant\")",
      "**Functionality Preservation**: All existing plugins remain intact",
      "think_deeply(message=\"what to think about\", context=\"conversation\")",
      "batch_workflow_processing(user_messages=[\"msg1\", \"msg2\"], workflow_mode=\"standard\")",
      "**Memory Management (100% Preserved)**",
      "plugins/\n\u251c\u2500\u2500 cognitive_brain_restructured.py          # Main restructured plugin\n\u251c\u2500\u2500 enhanced_context_integration.py         # Preserved for functionality\n\u251c\u2500\u2500 enhanced_workflow_orchestrator.py       # Preserved for functionality\n\u251c\u2500\u2500 auto_memory.py                         # Preserved for functionality\n\u2514\u2500\u2500 ... (other existing plugins)",
      "**Usage**: `learn_and_adapt(operation=\"learn\", data=\"new information\", focus=\"general\")`",
      "store_memory",
      "data_integration",
      "message_processing",
      "**Usage**: `think_deeply(message=\"what to think about\", context=\"conversation\")`",
      "**Tools**",
      "**Context Building (100% Preserved)**",
      "analyze_workflow_performance",
      "execute_enhanced_workflow",
      "Complex tool discovery and usage",
      "**Consolidates**: `ai_chat_with_memory`, `memory_enhanced_chat`, `intelligent_response`",
      "**Function**: Optimize workflows based on learning",
      "batch_workflow_processing",
      "auto_process_message",
      "python\n# 1. PERCEPTION: Analyze input and get context\ncontext = await perceive_and_analyze(\"Analyze this system performance\")\nmemory_context = await enhanced_context_retrieval(\"system performance analysis\")\n\n# 2. MEMORY: Store and retrieve relevant information\nawait memory_operations(\"store\", \"System performance analysis requested\")\nstored_data = await memory_operations(\"retrieve\", \"\", \"system performance\")\n\n# 3. THINKING: Process and orchestrate tools\nthoughts = await think_deeply(\"How to analyze system performance\", \"technical\")\norchestration = await orchestrate_tools(memory_context, \"comprehensive_analysis\")\n\n# 4. LEARNING: Learn from the interaction\nawait learn_and_adapt(\"learn\", \"User requested system performance analysis\", \"technical\")\nlearning_cycle = await continuous_learning_cycle(interaction_data, \"performance_patterns\")\n\n# 5. ACTION: Execute the workflow\nworkflow_result = await execute_enhanced_workflow(\"Analyze system performance\", \"aggressive\")\n\n# 6. MONITORING: Check system health\nhealth_status = await self_monitor(\"comprehensive\", \"all\")\nperformance_metrics = await analyze_performance(\"comprehensive\", \"workflow\")",
      "**\ud83e\udde0 OUTPUT & ACTION** (3 tools)",
      "**Function**: Unified learning and adaptation system",
      "\ud83d\ude80 **Migration Guide**",
      "**Brain Analogy**: Hippocampus + context retrieval networks",
      "**\ud83e\udde0 PERCEPTION & INPUT** (3 tools)",
      "**Consolidates**: `self_monitoring`, `health_check`, `status_monitoring`, `consciousness_check`",
      "track_conversation(user_message=\"msg\", assistant_response=\"response\")",
      "**Consolidates**: `workflow_health_check`, `system_health`, `component_monitoring`",
      "**Preservation**: All analysis and optimization features available",
      "**Before**: `execute_enhanced_workflow`, `batch_workflow_processing`, `workflow_health_check`",
      "health_check",
      "Background processing",
      "**Better Caching**: Related operations can share resources",
      "component_monitoring",
      "**Function**: Analyze system and tool performance",
      "perceive_and_analyze",
      "**Consolidates**: `auto_process_message`, `auto_memory`, `message_processing`",
      "self_monitor",
      "Inconsistent naming conventions",
      "self_monitoring",
      "remember_fact",
      "**After**: `analyze_performance` + `optimize_workflow`",
      "**Brain Analogy**: Executive planning + tool coordination",
      "conversation_tracking",
      "Old scattered tools removed from main interface",
      "**Usage**: `get_cursor_context()`",
      "**Phase 1: Immediate Benefits**",
      "**Usage**: `orchestrate_tools(context_data=data, target_goal=\"enhanced_response\")`",
      "enhanced_context_retrieval(user_message=\"query\", include_history=True)",
      "**Brain Analogy**: Conversation memory + learning tracking",
      "conversation_context",
      "**Usage**: `ai_chat_with_memory(user_message=\"query\", ai_model_name=\"assistant\")`",
      "**Usage**: `perceive_and_analyze(content=\"text to analyze\", analysis_type=\"comprehensive\")`",
      "adapt",
      "**2. `enhanced_context_retrieval`**",
      "**Function**: Unified memory operations (store, retrieve, search, clear)",
      "**Phase 3: Full Restructuring**",
      "**Function**: Enhanced context retrieval (Phase 1)",
      "analyze_performance",
      "\ud83e\udde0 **DOMAIN 3: PROCESSING & THINKING**",
      "**Consolidates**: `batch_workflow_processing`, `bulk_processing`, `efficiency_optimization`",
      "deep_thinking",
      "efficiency_optimization",
      "**Preservation**: All context building capabilities maintained",
      "**Consolidates**: `execute_enhanced_workflow`, `workflow_execution`, `phase_coordination`",
      "Learn from new information",
      "**Unified Interface**: New restructured plugin provides consolidated access",
      "memory_operations",
      "\ud83d\udd27 **Implementation Details**",
      "**Brain Analogy**: Continuous learning + pattern consolidation",
      "retrieve_memory",
      "workflow_health_check",
      "**Usage**: `self_monitor(monitoring_type=\"comprehensive\", focus_area=\"all\")`",
      "**Before**: `analyze_tool_performance`, `analyze_workflow_performance`, `performance_metrics`, `optimization`",
      "Existing tools marked as deprecated (but functional)",
      "workflow_health_check(check_level=\"comprehensive\")",
      "Complete human brain-focused organization",
      "**4. `memory_operations`**",
      "**Natural Cognitive Workflow**",
      "pattern_learning",
      "system_health",
      "**Eliminated Duplicates**: No more overlapping functionality",
      "**1. `perceive_and_analyze`**",
      "Scattered performance analysis tools",
      "optimize_workflow",
      "**Consolidates**: `store_memory`, `retrieve_memory`, `search_memory`, `clear_memory`, `remember_fact`",
      "**6. `track_conversation`**",
      "\ud83e\udde0 **DOMAIN 1: PERCEPTION & INPUT**",
      "perceive_and_analyze(content=\"text to analyze\", analysis_type=\"comprehensive\")",
      "performance_metrics",
      "**Function**: Get comprehensive Cursor conversation context",
      "\ud83c\udfaf **Benefits of Restructuring**",
      "**Integration Strategy**",
      "**Consolidates**: `track_cursor_conversation`, `conversation_tracking`, `learning_tracking`",
      "**Brain Analogy**: Automatic memory encoding",
      "**Usage**: `optimize_workflow(optimization_focus=\"performance\", target_metrics=[\"speed\", \"accuracy\"])`",
      "---\n\n## \ud83c\udfaf **Benefits of Restructuring**\n\n### **1. Cognitive Efficiency**\n\n- **Natural Workflow**: Tools follow human cognitive processes\n- **Intuitive Usage**: No need to remember scattered tool names\n- **Logical Organization**: Related functions grouped together\n\n### **2. Reduced Redundancy**\n\n- **Eliminated Duplicates**: No more overlapping functionality\n- **Unified Interfaces**: Single tool for related operations\n- **Cleaner API**: 18 tools instead of 48 scattered functions\n\n### **3. Improved Maintainability**\n\n- **Centralized Logic**: All related functionality in one place\n- **Easier Updates**: Changes affect entire cognitive domains\n- **Better Testing**: Comprehensive testing per domain\n\n### **4. Enhanced User Experience**\n\n- **Faster Discovery**: Users find tools in logical domains\n- **Better Learning**: Natural cognitive progression\n- **Reduced Confusion**: Clear tool categorization\n\n---\n\n## \ud83d\udd27 **Implementation Details**\n\n### **Plugin Structure**",
      "build_comprehensive_context(user_message=\"query\", context_depth=\"comprehensive\")",
      "\ud83c\udfd7\ufe0f **Restructuring Results**",
      "**17. `analyze_performance`**",
      "**Performance Impact**",
      "optimize_workflow(optimization_focus=\"performance\", target_metrics=[\"speed\", \"accuracy\"])",
      "phase_coordination",
      "**7. `think_deeply`**",
      "analyze_tool_performance",
      "**\ud83e\udde0 LEARNING & ADAPTATION** (3 tools)",
      "Users migrate to new unified interfaces",
      "analyze_performance(analysis_type=\"comprehensive\", target=\"all\")",
      "**Improved Efficiency**: Reduced tool discovery overhead",
      "**Brain Analogy**: Response generation + memory integration",
      "Search memory",
      "\ud83e\udde0 **Cognitive Brain Restructured - Human Brain-Focused Organization**",
      "**Purpose**",
      "search_memory",
      "auto_process_message(user_message=\"message to process\")",
      "**Function**: Track conversation for learning and context",
      "self_monitor(monitoring_type=\"comprehensive\", focus_area=\"all\")",
      "orchestrate_tools",
      "### **Comprehensive Learning System**",
      "\ud83d\ude80 **Usage Examples**",
      "performance_optimization",
      "Multiple overlapping memory management tools",
      "**Unified Interfaces**: Single tool for related operations",
      "**Performance Analysis (100% Preserved)**",
      "**8. `orchestrate_tools`**",
      "Reflect on recent experiences",
      "cursor_context_summary",
      "**Usage**: `batch_workflow_processing(user_messages=[\"msg1\", \"msg2\"], workflow_mode=\"standard\")`",
      "**Zero Functionality Loss**: 100% feature preservation",
      "Users can start using new cognitive domain tools",
      "**Brain Analogy**: Skill optimization + learning application",
      "**Before**: `enhanced_context_retrieval`, `build_comprehensive_context`, `context_building`, `context_synthesis`",
      "**Function**: Comprehensive self-monitoring and health checks",
      "**Brain Analogy**: Hippocampus + memory consolidation",
      "**Brain Analogy**: Visual cortex + pattern recognition areas",
      "**After**: `memory_operations` + `auto_process_message` + `track_conversation`",
      "optimization",
      "**\ud83e\udde0 PROCESSING & THINKING** (3 tools)",
      "**Consolidates**: `build_comprehensive_context`, `context_synthesis`, `data_integration`",
      "**Brain Analogy**: System health + component monitoring",
      "learning_tracking",
      "**18. `workflow_health_check`**",
      "Clear memory",
      "pattern_recognition",
      "continuous_learning_cycle",
      "track_conversation",
      "continuous_learning_cycle(interaction_data=data, learning_focus=\"context_patterns\")",
      "**Usage**: `auto_process_message(user_message=\"message to process\")`",
      "**Consolidates**: `learn_from`, `reflect`, `dream`, `remember`, `adapt`",
      "**12. `optimize_workflow`**",
      "get_cursor_context()",
      "Cognitive domain tools become primary interface",
      "**15. `ai_chat_with_memory`**",
      "**13. `execute_enhanced_workflow`**",
      "**Usage**: `memory_operations(operation=\"store\", data=\"important fact\")`",
      "orchestrate_tools(context_data=data, target_goal=\"enhanced_response\")",
      "**Consolidates**: `get_cursor_context`, `cursor_context_summary`, `conversation_context`",
      "reasoning",
      "\ud83c\udf89 **Conclusion**",
      "learn_and_adapt(operation=\"learn\", data=\"new information\", focus=\"general\")",
      "bulk_processing",
      "**Gradual Migration**: Users can migrate to new interface at their own pace",
      "execute_enhanced_workflow(user_message=\"query\", workflow_mode=\"standard\")",
      "**Usage**: `execute_enhanced_workflow(user_message=\"query\", workflow_mode=\"standard\")`",
      "**Before**: `store_memory`, `retrieve_memory`, `search_memory`, `clear_memory`, `remember_fact`, `auto_process_message`",
      "**Consolidates**: `orchestrate_tools`, `tool_coordination`, `workflow_planning`",
      "\ud83d\udd04 **Functionality Preservation Mapping**",
      "workflow_execution",
      "**Unified Memory Operations**",
      "clear_memory",
      "**Preservation**: All operations available through unified interface",
      "**Preservation**: All workflow capabilities maintained",
      "**Usage**: `enhanced_context_retrieval(user_message=\"query\", include_history=True)`",
      "**Consolidates**: `analyze_tool_performance`, `analyze_workflow_performance`, `performance_metrics`",
      "\ud83e\udde0 **DOMAIN 5: OUTPUT & ACTION**",
      "**16. `self_monitor`**",
      "content_analysis",
      "**Brain Analogy**: Context integration + synthesis",
      "**\ud83e\udde0 MEMORY & STORAGE** (3 tools)",
      "**Brain Analogy**: Action planning + execution",
      "learning_application",
      "**Function**: Build comprehensive context using all available data",
      "memory_search",
      "**Brain Analogy**: Learning networks + neuroplasticity",
      "build_comprehensive_context",
      "**After**: `execute_enhanced_workflow` + `batch_workflow_processing` + `workflow_health_check`",
      "New restructured plugin available alongside existing tools",
      "**9. `build_comprehensive_context`**",
      "cognitive_analysis",
      "memory_operations(operation=\"store\", data=\"important fact\")",
      "\ud83e\udde0 **DOMAIN 6: SELF-MONITORING**",
      "**Workflow Management (100% Preserved)**",
      "python\n# Store memory\nawait memory_operations(\"store\", \"Important fact about user preferences\")\n\n# Retrieve memory\nuser_prefs = await memory_operations(\"retrieve\", \"\", \"user preferences\")\n\n# Search memory\nsearch_results = await memory_operations(\"search\", \"\", \"performance analysis\")\n\n# Clear memory\nawait memory_operations(\"clear\", \"\", \"\")",
      "**Function**: Process multiple messages through enhanced workflow",
      "**Brain Analogy**: Batch processing + efficiency",
      "context_synthesis"
    ],
    "ROADMAP.md": [
      "**README Processing**: Extract project descriptions, setup instructions, usage examples",
      "**Scanning Strategy**: How deep should we scan? (files, content, git history?)",
      "**2.3 Contextual Memory Enhancement**",
      "**Context Switching**: How you move between different project areas",
      "**Week 9-10**: Coding preference learning and pattern recognition",
      "**Accuracy**: 95%+ correct dependency detection",
      "**\ud83c\udfad The Ultimate Goal**",
      "**Change Detection**: Monitor file modifications and updates",
      "**Project Structure Mapping**: Index all files, directories, and their relationships",
      "**Week 15**: Intelligent assistant behavior and predictive features",
      "**Cross-Project Intelligence**: Apply learnings across different projects",
      "python\nclass DocumentationProcessor:\n    def __init__(self):\n        self.parsers = {}         # Different document type parsers\n        self.knowledge_graph = {} # Semantic knowledge relationships\n        self.context_store = {}   # Contextual memory storage\n\n    def process_document(self, doc_path: str) -> DocumentContext:\n        \"\"\"Process and extract knowledge from documents\"\"\"\n        pass\n\n    def build_knowledge_graph(self) -> KnowledgeGraph:\n        \"\"\"Construct semantic relationships between concepts\"\"\"\n        pass\n\n    def store_context(self, context: ContextData) -> bool:\n        \"\"\"Store contextual information with metadata\"\"\"\n        pass",
      "python\nclass ProjectScanner:\n    def __init__(self, project_root: str):\n        self.project_root = project_root\n        self.file_index = {}\n        self.dependency_graph = {}\n        self.code_patterns = {}\n\n    def scan_project(self) -> ProjectIndex:\n        \"\"\"Comprehensive project scanning and indexing\"\"\"\n        pass\n\n    def detect_changes(self) -> List[FileChange]:\n        \"\"\"Detect and track file modifications\"\"\"\n        pass\n\n    def build_dependency_graph(self) -> DependencyGraph:\n        \"\"\"Build project dependency relationships\"\"\"\n        pass",
      "**Pattern Recognition**: 90%+ accuracy in workflow patterns",
      "**Learning Pattern Recognition**: Identify how you approach different types of challenges",
      "**Knowledge Transfer**: Apply patterns from one project to another",
      "**\ud83c\udfaf Phase 3: Personalization (Weeks 9-12)**",
      "**Predictive Development**: Suggest improvements before you implement them",
      "**Week 3**: Dependency detection and relationship mapping",
      "**SQLite**: Local context storage",
      "**\ud83d\udcca Phase 3 Success Metrics**",
      "**\ud83d\ude80 Beyond the Roadmap**",
      "**Problem-Solution Mapping**: Link problems to their solutions and context",
      "**1.1 File System Scanner**",
      "**Cross-Project Intelligence**: Apply patterns across different codebases",
      "**4.3 Advanced Context Features**",
      "**File Type Recognition**: Categorize by language, framework, and purpose",
      "\ud83c\udfa8 **PHASE 3: PERSONALIZATION & BEHAVIOR INJECTION**",
      "**Development Workflow**: Your typical development process and preferences",
      "**Library Preferences**: Track your favorite tools and frameworks",
      "**Personalization**: Significant improvement in user satisfaction",
      "**Architecture Analysis**: Understand project structure patterns",
      "**Technology Stack Detection**: Identify frameworks, libraries, and tools",
      "**Update Frequency**: Real-time change detection",
      "**Relevance Scoring**: Rank context by relevance to current work",
      "**\ud83d\udcad Questions to Consider**",
      "**Problem-Solving Approaches**: How you debug, test, and iterate",
      "\ud83e\udde0 **PHASE 1: PROJECT INTELLIGENCE LAYER**",
      "**2.2 Knowledge Graph Construction**",
      "**Preference Database**: Personal coding patterns and preferences",
      "**Docker**: Containerization and deployment",
      "**1.3 Project Context Mapping**",
      "**\ud83d\udcca Success Metrics**",
      "**Project Scanning**: < 5 seconds for typical projects",
      "**Context Storage**: 100% of project context captured",
      "**Python 3.11+**: Core development language",
      "**Real-time Collaboration**: Live context sharing during pair programming",
      "**1.2 Code Pattern Recognition**",
      "**Memory Usage**: < 100MB for large projects",
      "\ud83d\ude80 **PHASE 4: INTELLIGENT CONTEXT ORCHESTRATION**",
      "**Documentation Processing**: 90%+ content extraction",
      "**4.2 Intelligent Assistant Behavior**",
      "**Git Integration**: Version control and change tracking",
      "**Knowledge Graph**: 1000+ semantic relationships",
      "**Week 7**: Knowledge graph construction and semantic relationships",
      "**Configuration Understanding**: Parse config files, environment variables",
      "**Index Storage**",
      "**\ud83d\ude80 Ready to Start Phase 1**",
      "**\ud83c\udfaf Phase 2: Knowledge Ingestion (Weeks 5-8)**",
      "python\nclass PreferenceLearningEngine:\n    def __init__(self):\n        self.style_patterns = {}      # Coding style preferences\n        self.workflow_patterns = {}   # Development workflow patterns\n        self.decision_patterns = {}   # Architectural decision patterns\n        self.learning_patterns = {}   # How you learn and adapt\n\n    def learn_from_code(self, code_sample: str) -> StylePattern:\n        \"\"\"Learn coding style from code samples\"\"\"\n        pass\n\n    def learn_from_workflow(self, workflow_data: WorkflowData) -> WorkflowPattern:\n        \"\"\"Learn workflow patterns from development activities\"\"\"\n        pass\n\n    def predict_context_needs(self, current_context: Context) -> List[ContextSuggestion]:\n        \"\"\"Predict what context you'll need next\"\"\"\n        pass",
      "**Week 8**: Contextual memory storage and retrieval",
      "**IDE Integration**: Project context awareness",
      "**Cross-Reference Mapping**: Link related concepts across different parts of the project",
      "**\ud83d\udcca Phase 2 Success Metrics**",
      "**Week 4**: Code pattern recognition and initial indexing",
      "**Architectural Decisions**: Understand why you choose certain patterns",
      "**3.3 Intelligent Context Injection**",
      "**\ud83d\udcca Data Storage**",
      "**Proactive Context Provision**: Provide relevant context before you ask",
      "**Temporal Context**: Understand what you were working on when",
      "**Week 5-6**: Documentation parser and basic knowledge extraction",
      "**User Experience**: Dramatic improvement in development workflow",
      "**Scanning Speed**: < 5 seconds for typical projects",
      "python\nclass ProjectIndex:\n    def __init__(self):\n        self.files = {}           # File metadata and content\n        self.dependencies = {}    # Package and module dependencies\n        self.patterns = {}        # Code patterns and style preferences\n        self.context = {}         # Project context and metadata\n        self.history = {}         # Change history and evolution",
      "**Code Comments**: Extract inline documentation and explanations",
      "**Week 1-2**: Basic file system scanner and project structure mapping",
      "**Function/Class Discovery**: Index all code entities with their locations",
      "**External References**: Process links, citations, and related resources",
      "**Context Store**: Temporal and contextual information",
      "**Workflow Optimization**: Suggest improvements based on your patterns",
      "\ud83d\ude80 **MEMORY CONTEXT MANAGER v2 - DEVELOPMENT ROADMAP**",
      "**Storage Strategy**: How should we store and organize the project index?",
      "**Proactive Delivery**: Provide context when it's most useful",
      "**Knowledge Graph**: Semantic relationships and concepts",
      "**Proactive Assistance**: 60%+ of context provided before asking",
      "**Dependency Detection**: Identify package.json, requirements.txt, pyproject.toml, etc.",
      "**Scanner Architecture**",
      "**Import/Export Mapping**: Track module dependencies and relationships",
      "**\ud83d\udcca Phase 1 Success Metrics**",
      "**\ud83d\udccb Core Features to Implement**",
      "**Week 13-14**: Context orchestrator and multi-source integration",
      "**Project-Specific Context**: Store context tied to specific files and modules",
      "**Team Collaboration**: Share context and preferences with team members",
      "**Learning Patterns**: How you approach new technologies and concepts",
      "**\ud83c\udfaf Phase 4: Intelligent Orchestration (Weeks 13-16)**",
      "**\ud83d\udd0c Integration Points**",
      "**Multi-Source Integration**: Combine project, documentation, and personal context",
      "**Project Index Database**: File metadata and relationships",
      "**Context-Aware Responses**: Tailor responses to current project context",
      "**\ud83d\udcca Phase 4 Success Metrics**",
      "**Learning Integration**: Continuous improvement over time",
      "**Context Orchestration**: Seamless multi-source integration",
      "**MCP Server**: Enhanced context provision",
      "**Foundation Established**: Ready for advanced context enhancement",
      "**Week 11**: Workflow pattern analysis and behavior modeling",
      "**Preference Learning Engine**",
      "**3.1 Coding Preference Learning**",
      "**Mission Statement**",
      "\ud83c\udfaf **Project Vision & Mission**",
      "\ud83d\udee0 **TECHNICAL REQUIREMENTS**",
      "**Learning Integration**: Continuously improve based on your feedback",
      "**Contextual Memory**: Long-term memory of project context and decisions",
      "\ud83c\udfaf **IMMEDIATE NEXT STEPS**",
      "**Predictive Assistance**: Anticipate what context you'll need",
      "**File System Watchers**: Real-time change detection",
      "**API Documentation**: Parse OpenAPI specs, JSDoc, Python docstrings",
      "**\ud83c\udfaf Primary Goal**",
      "\ud83d\udcda **PHASE 2: KNOWLEDGE INGESTION ENGINE**",
      "**Build System Recognition**: Understand build tools, scripts, and processes",
      "**\ud83c\udfaf Phase 1: Project Intelligence (Weeks 1-4)**",
      "**Version Control Integration**: Git history and branch context",
      "**Integration Points**: How should this integrate with our existing MCP tools?",
      "**2.1 Documentation Parser**",
      "**\ud83d\udd27 Development Tools**",
      "**Semantic Relationships**: Build connections between concepts, patterns, and implementations",
      "**FastAPI**: API development and integration",
      "**Problem Evolution**: Track how problems and solutions evolve",
      "**Works across projects** - applies learnings and patterns universally",
      "**Week 16**: Advanced context features and system optimization",
      "**Preference Learning**: 80%+ accuracy in style recognition",
      "#### **Index Storage**",
      "**Clean Architecture**: Human brain-inspired cognitive domains",
      "**Tool Consolidation**: Reduced from 48 to 6 organized cognitive tools",
      "\ud83c\udf1f **VISION FOR THE FUTURE**",
      "**Knowledge Evolution**: Track how understanding evolves over time",
      "**Temporal Context**: Remember what you were working on when",
      "**Predictive Assistance**: Anticipate questions and provide answers proactively",
      "**Documentation Processor**",
      "**Personalized Suggestions**: Tailor recommendations to your style",
      "**3.2 Workflow Pattern Recognition**",
      "**Week 12**: Initial context injection and personalization",
      "**Dependency Detection**: 95%+ accuracy",
      "**Query Response**: < 2 seconds for context retrieval",
      "**Zero Functionality Loss**: 100% of original capabilities preserved",
      "**Contextual Linking**: Connect documentation to actual code",
      "**4.1 Context Orchestrator**",
      "**Contextual Synthesis**: Combine multiple context sources intelligently",
      "---\n\n## \ud83c\udfa8 **PHASE 3: PERSONALIZATION & BEHAVIOR INJECTION**\n\n### **\ud83c\udfaf Primary Goal**\n\nLearn your personal coding preferences, workflow patterns, and automatically inject relevant context.\n\n### **\ud83d\udccb Core Features to Implement**\n\n#### **3.1 Coding Preference Learning**\n\n- **Style Recognition**: Learn your naming conventions, code organization, and patterns\n- **Architectural Decisions**: Understand why you choose certain patterns\n- **Library Preferences**: Track your favorite tools and frameworks\n- **Code Quality Standards**: Learn your testing, documentation, and review preferences\n\n#### **3.2 Workflow Pattern Recognition**\n\n- **Problem-Solving Approaches**: How you debug, test, and iterate\n- **Development Workflow**: Your typical development process and preferences\n- **Context Switching**: How you move between different project areas\n- **Learning Patterns**: How you approach new technologies and concepts\n\n#### **3.3 Intelligent Context Injection**\n\n- **Proactive Context Provision**: Provide relevant context before you ask\n- **Predictive Assistance**: Anticipate what context you'll need\n- **Personalized Suggestions**: Tailor recommendations to your style\n- **Workflow Optimization**: Suggest improvements based on your patterns\n\n### **\ud83d\udd27 Technical Implementation**\n\n#### **Preference Learning Engine**",
      "\ud83d\udcc5 **IMPLEMENTATION TIMELINE**",
      "**Style Recognition**: Learn your naming conventions, code organization, and patterns",
      "**Advanced AI Integration**: Leverage LLMs for deeper code understanding",
      "**\ud83d\udd27 Technical Implementation**",
      "**Update Frequency**: How often should we re-scan for changes?",
      "**Context Injection**: 70%+ relevance in proactive suggestions",
      "**Current State (Phase 0 - COMPLETED \u2705)**",
      "**Git Hooks**: Commit and branch context",
      "### **\ud83d\udcca Success Metrics**\n\n- **Scanning Speed**: < 5 seconds for typical projects\n- **Accuracy**: 95%+ correct dependency detection\n- **Memory Usage**: < 100MB for large projects\n- **Update Frequency**: Real-time change detection\n\n---\n\n## \ud83d\udcda **PHASE 2: KNOWLEDGE INGESTION ENGINE**\n\n### **\ud83c\udfaf Primary Goal**\n\nProcess and understand documentation, code comments, and external references to build a comprehensive knowledge base.\n\n### **\ud83d\udccb Core Features to Implement**\n\n#### **2.1 Documentation Parser**\n\n- **README Processing**: Extract project descriptions, setup instructions, usage examples\n- **API Documentation**: Parse OpenAPI specs, JSDoc, Python docstrings\n- **Code Comments**: Extract inline documentation and explanations\n- **External References**: Process links, citations, and related resources\n\n#### **2.2 Knowledge Graph Construction**\n\n- **Semantic Relationships**: Build connections between concepts, patterns, and implementations\n- **Contextual Linking**: Connect documentation to actual code\n- **Cross-Reference Mapping**: Link related concepts across different parts of the project\n- **Knowledge Evolution**: Track how understanding evolves over time\n\n#### **2.3 Contextual Memory Enhancement**\n\n- **Project-Specific Context**: Store context tied to specific files and modules\n- **Temporal Context**: Remember what you were working on when\n- **Problem-Solution Mapping**: Link problems to their solutions and context\n- **Learning Pattern Recognition**: Identify how you approach different types of challenges\n\n### **\ud83d\udd27 Technical Implementation**\n\n#### **Documentation Processor**",
      "**Pattern Identification**: Learn your coding style and preferences",
      "\ud83c\udfaf **SUCCESS CRITERIA**",
      "**Code Quality Standards**: Learn your testing, documentation, and review preferences",
      "**README Processing**: Extract project descriptions, setup instructions, usage examples",
      "**Scanning Strategy**: How deep should we scan? (files, content, git history?)",
      "**2.3 Contextual Memory Enhancement**",
      "**Context Switching**: How you move between different project areas",
      "**Week 9-10**: Coding preference learning and pattern recognition",
      "**Accuracy**: 95%+ correct dependency detection",
      "**\ud83c\udfad The Ultimate Goal**",
      "**Change Detection**: Monitor file modifications and updates",
      "**Project Structure Mapping**: Index all files, directories, and their relationships",
      "**Week 15**: Intelligent assistant behavior and predictive features",
      "**Cross-Project Intelligence**: Apply learnings across different projects",
      "python\nclass DocumentationProcessor:\n    def __init__(self):\n        self.parsers = {}         # Different document type parsers\n        self.knowledge_graph = {} # Semantic knowledge relationships\n        self.context_store = {}   # Contextual memory storage\n\n    def process_document(self, doc_path: str) -> DocumentContext:\n        \"\"\"Process and extract knowledge from documents\"\"\"\n        pass\n\n    def build_knowledge_graph(self) -> KnowledgeGraph:\n        \"\"\"Construct semantic relationships between concepts\"\"\"\n        pass\n\n    def store_context(self, context: ContextData) -> bool:\n        \"\"\"Store contextual information with metadata\"\"\"\n        pass",
      "python\nclass ProjectScanner:\n    def __init__(self, project_root: str):\n        self.project_root = project_root\n        self.file_index = {}\n        self.dependency_graph = {}\n        self.code_patterns = {}\n\n    def scan_project(self) -> ProjectIndex:\n        \"\"\"Comprehensive project scanning and indexing\"\"\"\n        pass\n\n    def detect_changes(self) -> List[FileChange]:\n        \"\"\"Detect and track file modifications\"\"\"\n        pass\n\n    def build_dependency_graph(self) -> DependencyGraph:\n        \"\"\"Build project dependency relationships\"\"\"\n        pass",
      "**Pattern Recognition**: 90%+ accuracy in workflow patterns",
      "**Learning Pattern Recognition**: Identify how you approach different types of challenges",
      "**Knowledge Transfer**: Apply patterns from one project to another",
      "**\ud83c\udfaf Phase 3: Personalization (Weeks 9-12)**",
      "**Predictive Development**: Suggest improvements before you implement them",
      "**Week 3**: Dependency detection and relationship mapping",
      "**SQLite**: Local context storage",
      "**\ud83d\udcca Phase 3 Success Metrics**",
      "**\ud83d\ude80 Beyond the Roadmap**",
      "**Problem-Solution Mapping**: Link problems to their solutions and context",
      "**1.1 File System Scanner**",
      "**Cross-Project Intelligence**: Apply patterns across different codebases",
      "**4.3 Advanced Context Features**",
      "**File Type Recognition**: Categorize by language, framework, and purpose",
      "\ud83c\udfa8 **PHASE 3: PERSONALIZATION & BEHAVIOR INJECTION**",
      "**Development Workflow**: Your typical development process and preferences",
      "**Library Preferences**: Track your favorite tools and frameworks",
      "**Personalization**: Significant improvement in user satisfaction",
      "**Architecture Analysis**: Understand project structure patterns",
      "**Technology Stack Detection**: Identify frameworks, libraries, and tools",
      "**Update Frequency**: Real-time change detection",
      "**Relevance Scoring**: Rank context by relevance to current work",
      "**\ud83d\udcad Questions to Consider**",
      "**Problem-Solving Approaches**: How you debug, test, and iterate",
      "\ud83e\udde0 **PHASE 1: PROJECT INTELLIGENCE LAYER**",
      "**2.2 Knowledge Graph Construction**",
      "**Preference Database**: Personal coding patterns and preferences",
      "**Docker**: Containerization and deployment",
      "**1.3 Project Context Mapping**",
      "**\ud83d\udcca Success Metrics**",
      "**Project Scanning**: < 5 seconds for typical projects",
      "**Context Storage**: 100% of project context captured",
      "**Python 3.11+**: Core development language",
      "**Real-time Collaboration**: Live context sharing during pair programming",
      "**1.2 Code Pattern Recognition**",
      "**Memory Usage**: < 100MB for large projects",
      "\ud83d\ude80 **PHASE 4: INTELLIGENT CONTEXT ORCHESTRATION**",
      "**Documentation Processing**: 90%+ content extraction",
      "**4.2 Intelligent Assistant Behavior**",
      "**Git Integration**: Version control and change tracking",
      "**Knowledge Graph**: 1000+ semantic relationships",
      "**Week 7**: Knowledge graph construction and semantic relationships",
      "**Configuration Understanding**: Parse config files, environment variables",
      "**Index Storage**",
      "**\ud83d\ude80 Ready to Start Phase 1**",
      "**\ud83c\udfaf Phase 2: Knowledge Ingestion (Weeks 5-8)**",
      "python\nclass PreferenceLearningEngine:\n    def __init__(self):\n        self.style_patterns = {}      # Coding style preferences\n        self.workflow_patterns = {}   # Development workflow patterns\n        self.decision_patterns = {}   # Architectural decision patterns\n        self.learning_patterns = {}   # How you learn and adapt\n\n    def learn_from_code(self, code_sample: str) -> StylePattern:\n        \"\"\"Learn coding style from code samples\"\"\"\n        pass\n\n    def learn_from_workflow(self, workflow_data: WorkflowData) -> WorkflowPattern:\n        \"\"\"Learn workflow patterns from development activities\"\"\"\n        pass\n\n    def predict_context_needs(self, current_context: Context) -> List[ContextSuggestion]:\n        \"\"\"Predict what context you'll need next\"\"\"\n        pass",
      "**Week 8**: Contextual memory storage and retrieval",
      "**IDE Integration**: Project context awareness",
      "**Cross-Reference Mapping**: Link related concepts across different parts of the project",
      "**\ud83d\udcca Phase 2 Success Metrics**",
      "**Week 4**: Code pattern recognition and initial indexing",
      "**Architectural Decisions**: Understand why you choose certain patterns",
      "**3.3 Intelligent Context Injection**",
      "**\ud83d\udcca Data Storage**",
      "**Proactive Context Provision**: Provide relevant context before you ask",
      "**Temporal Context**: Understand what you were working on when",
      "**Week 5-6**: Documentation parser and basic knowledge extraction",
      "**User Experience**: Dramatic improvement in development workflow",
      "**Scanning Speed**: < 5 seconds for typical projects",
      "python\nclass ProjectIndex:\n    def __init__(self):\n        self.files = {}           # File metadata and content\n        self.dependencies = {}    # Package and module dependencies\n        self.patterns = {}        # Code patterns and style preferences\n        self.context = {}         # Project context and metadata\n        self.history = {}         # Change history and evolution",
      "**Code Comments**: Extract inline documentation and explanations",
      "**Week 1-2**: Basic file system scanner and project structure mapping",
      "**Function/Class Discovery**: Index all code entities with their locations",
      "**External References**: Process links, citations, and related resources",
      "**Context Store**: Temporal and contextual information",
      "**Workflow Optimization**: Suggest improvements based on your patterns",
      "\ud83d\ude80 **MEMORY CONTEXT MANAGER v2 - DEVELOPMENT ROADMAP**",
      "**Storage Strategy**: How should we store and organize the project index?",
      "**Proactive Delivery**: Provide context when it's most useful",
      "**Knowledge Graph**: Semantic relationships and concepts",
      "**Proactive Assistance**: 60%+ of context provided before asking",
      "**Dependency Detection**: Identify package.json, requirements.txt, pyproject.toml, etc.",
      "**Scanner Architecture**",
      "**Import/Export Mapping**: Track module dependencies and relationships",
      "**\ud83d\udcca Phase 1 Success Metrics**",
      "**\ud83d\udccb Core Features to Implement**",
      "**Week 13-14**: Context orchestrator and multi-source integration",
      "**Project-Specific Context**: Store context tied to specific files and modules",
      "**Team Collaboration**: Share context and preferences with team members",
      "**Learning Patterns**: How you approach new technologies and concepts",
      "**\ud83c\udfaf Phase 4: Intelligent Orchestration (Weeks 13-16)**",
      "**\ud83d\udd0c Integration Points**",
      "**Multi-Source Integration**: Combine project, documentation, and personal context",
      "**Project Index Database**: File metadata and relationships",
      "**Context-Aware Responses**: Tailor responses to current project context",
      "**\ud83d\udcca Phase 4 Success Metrics**",
      "**Learning Integration**: Continuous improvement over time",
      "**Context Orchestration**: Seamless multi-source integration",
      "**MCP Server**: Enhanced context provision",
      "**Foundation Established**: Ready for advanced context enhancement",
      "**Week 11**: Workflow pattern analysis and behavior modeling",
      "**Preference Learning Engine**",
      "**3.1 Coding Preference Learning**",
      "**Mission Statement**",
      "\ud83c\udfaf **Project Vision & Mission**",
      "\ud83d\udee0 **TECHNICAL REQUIREMENTS**",
      "**Learning Integration**: Continuously improve based on your feedback",
      "**Contextual Memory**: Long-term memory of project context and decisions",
      "\ud83c\udfaf **IMMEDIATE NEXT STEPS**",
      "**Predictive Assistance**: Anticipate what context you'll need",
      "**File System Watchers**: Real-time change detection",
      "**API Documentation**: Parse OpenAPI specs, JSDoc, Python docstrings",
      "**\ud83c\udfaf Primary Goal**",
      "\ud83d\udcda **PHASE 2: KNOWLEDGE INGESTION ENGINE**",
      "**Build System Recognition**: Understand build tools, scripts, and processes",
      "**\ud83c\udfaf Phase 1: Project Intelligence (Weeks 1-4)**",
      "**Version Control Integration**: Git history and branch context",
      "**Integration Points**: How should this integrate with our existing MCP tools?",
      "**2.1 Documentation Parser**",
      "**\ud83d\udd27 Development Tools**",
      "**Semantic Relationships**: Build connections between concepts, patterns, and implementations",
      "**FastAPI**: API development and integration",
      "**Problem Evolution**: Track how problems and solutions evolve",
      "**Works across projects** - applies learnings and patterns universally",
      "**Week 16**: Advanced context features and system optimization",
      "**Preference Learning**: 80%+ accuracy in style recognition",
      "#### **Index Storage**",
      "**Clean Architecture**: Human brain-inspired cognitive domains",
      "**Tool Consolidation**: Reduced from 48 to 6 organized cognitive tools",
      "\ud83c\udf1f **VISION FOR THE FUTURE**",
      "**Knowledge Evolution**: Track how understanding evolves over time",
      "**Temporal Context**: Remember what you were working on when",
      "**Predictive Assistance**: Anticipate questions and provide answers proactively",
      "**Documentation Processor**",
      "**Personalized Suggestions**: Tailor recommendations to your style",
      "**3.2 Workflow Pattern Recognition**",
      "**Week 12**: Initial context injection and personalization",
      "**Dependency Detection**: 95%+ accuracy",
      "**Query Response**: < 2 seconds for context retrieval",
      "**Zero Functionality Loss**: 100% of original capabilities preserved",
      "**Contextual Linking**: Connect documentation to actual code",
      "**4.1 Context Orchestrator**",
      "**Contextual Synthesis**: Combine multiple context sources intelligently",
      "---\n\n## \ud83c\udfa8 **PHASE 3: PERSONALIZATION & BEHAVIOR INJECTION**\n\n### **\ud83c\udfaf Primary Goal**\n\nLearn your personal coding preferences, workflow patterns, and automatically inject relevant context.\n\n### **\ud83d\udccb Core Features to Implement**\n\n#### **3.1 Coding Preference Learning**\n\n- **Style Recognition**: Learn your naming conventions, code organization, and patterns\n- **Architectural Decisions**: Understand why you choose certain patterns\n- **Library Preferences**: Track your favorite tools and frameworks\n- **Code Quality Standards**: Learn your testing, documentation, and review preferences\n\n#### **3.2 Workflow Pattern Recognition**\n\n- **Problem-Solving Approaches**: How you debug, test, and iterate\n- **Development Workflow**: Your typical development process and preferences\n- **Context Switching**: How you move between different project areas\n- **Learning Patterns**: How you approach new technologies and concepts\n\n#### **3.3 Intelligent Context Injection**\n\n- **Proactive Context Provision**: Provide relevant context before you ask\n- **Predictive Assistance**: Anticipate what context you'll need\n- **Personalized Suggestions**: Tailor recommendations to your style\n- **Workflow Optimization**: Suggest improvements based on your patterns\n\n### **\ud83d\udd27 Technical Implementation**\n\n#### **Preference Learning Engine**",
      "\ud83d\udcc5 **IMPLEMENTATION TIMELINE**",
      "**Style Recognition**: Learn your naming conventions, code organization, and patterns",
      "**Advanced AI Integration**: Leverage LLMs for deeper code understanding",
      "**\ud83d\udd27 Technical Implementation**",
      "**Update Frequency**: How often should we re-scan for changes?",
      "**Context Injection**: 70%+ relevance in proactive suggestions",
      "**Current State (Phase 0 - COMPLETED \u2705)**",
      "**Git Hooks**: Commit and branch context",
      "### **\ud83d\udcca Success Metrics**\n\n- **Scanning Speed**: < 5 seconds for typical projects\n- **Accuracy**: 95%+ correct dependency detection\n- **Memory Usage**: < 100MB for large projects\n- **Update Frequency**: Real-time change detection\n\n---\n\n## \ud83d\udcda **PHASE 2: KNOWLEDGE INGESTION ENGINE**\n\n### **\ud83c\udfaf Primary Goal**\n\nProcess and understand documentation, code comments, and external references to build a comprehensive knowledge base.\n\n### **\ud83d\udccb Core Features to Implement**\n\n#### **2.1 Documentation Parser**\n\n- **README Processing**: Extract project descriptions, setup instructions, usage examples\n- **API Documentation**: Parse OpenAPI specs, JSDoc, Python docstrings\n- **Code Comments**: Extract inline documentation and explanations\n- **External References**: Process links, citations, and related resources\n\n#### **2.2 Knowledge Graph Construction**\n\n- **Semantic Relationships**: Build connections between concepts, patterns, and implementations\n- **Contextual Linking**: Connect documentation to actual code\n- **Cross-Reference Mapping**: Link related concepts across different parts of the project\n- **Knowledge Evolution**: Track how understanding evolves over time\n\n#### **2.3 Contextual Memory Enhancement**\n\n- **Project-Specific Context**: Store context tied to specific files and modules\n- **Temporal Context**: Remember what you were working on when\n- **Problem-Solution Mapping**: Link problems to their solutions and context\n- **Learning Pattern Recognition**: Identify how you approach different types of challenges\n\n### **\ud83d\udd27 Technical Implementation**\n\n#### **Documentation Processor**",
      "**Pattern Identification**: Learn your coding style and preferences",
      "\ud83c\udfaf **SUCCESS CRITERIA**",
      "**Code Quality Standards**: Learn your testing, documentation, and review preferences",
      "**README Processing**: Extract project descriptions, setup instructions, usage examples",
      "**Scanning Strategy**: How deep should we scan? (files, content, git history?)",
      "**2.3 Contextual Memory Enhancement**",
      "**Context Switching**: How you move between different project areas",
      "**Week 9-10**: Coding preference learning and pattern recognition",
      "**Accuracy**: 95%+ correct dependency detection",
      "**\ud83c\udfad The Ultimate Goal**",
      "**Change Detection**: Monitor file modifications and updates",
      "**Project Structure Mapping**: Index all files, directories, and their relationships",
      "**Week 15**: Intelligent assistant behavior and predictive features",
      "**Cross-Project Intelligence**: Apply learnings across different projects",
      "python\nclass DocumentationProcessor:\n    def __init__(self):\n        self.parsers = {}         # Different document type parsers\n        self.knowledge_graph = {} # Semantic knowledge relationships\n        self.context_store = {}   # Contextual memory storage\n\n    def process_document(self, doc_path: str) -> DocumentContext:\n        \"\"\"Process and extract knowledge from documents\"\"\"\n        pass\n\n    def build_knowledge_graph(self) -> KnowledgeGraph:\n        \"\"\"Construct semantic relationships between concepts\"\"\"\n        pass\n\n    def store_context(self, context: ContextData) -> bool:\n        \"\"\"Store contextual information with metadata\"\"\"\n        pass",
      "python\nclass ProjectScanner:\n    def __init__(self, project_root: str):\n        self.project_root = project_root\n        self.file_index = {}\n        self.dependency_graph = {}\n        self.code_patterns = {}\n\n    def scan_project(self) -> ProjectIndex:\n        \"\"\"Comprehensive project scanning and indexing\"\"\"\n        pass\n\n    def detect_changes(self) -> List[FileChange]:\n        \"\"\"Detect and track file modifications\"\"\"\n        pass\n\n    def build_dependency_graph(self) -> DependencyGraph:\n        \"\"\"Build project dependency relationships\"\"\"\n        pass",
      "**Pattern Recognition**: 90%+ accuracy in workflow patterns",
      "**Learning Pattern Recognition**: Identify how you approach different types of challenges",
      "**Knowledge Transfer**: Apply patterns from one project to another",
      "**\ud83c\udfaf Phase 3: Personalization (Weeks 9-12)**",
      "**Predictive Development**: Suggest improvements before you implement them",
      "**Week 3**: Dependency detection and relationship mapping",
      "**SQLite**: Local context storage",
      "**\ud83d\udcca Phase 3 Success Metrics**",
      "**\ud83d\ude80 Beyond the Roadmap**",
      "**Problem-Solution Mapping**: Link problems to their solutions and context",
      "**1.1 File System Scanner**",
      "**Cross-Project Intelligence**: Apply patterns across different codebases",
      "**4.3 Advanced Context Features**",
      "**File Type Recognition**: Categorize by language, framework, and purpose",
      "\ud83c\udfa8 **PHASE 3: PERSONALIZATION & BEHAVIOR INJECTION**",
      "**Development Workflow**: Your typical development process and preferences",
      "**Library Preferences**: Track your favorite tools and frameworks",
      "**Personalization**: Significant improvement in user satisfaction",
      "**Architecture Analysis**: Understand project structure patterns",
      "**Technology Stack Detection**: Identify frameworks, libraries, and tools",
      "**Update Frequency**: Real-time change detection",
      "**Relevance Scoring**: Rank context by relevance to current work",
      "**\ud83d\udcad Questions to Consider**",
      "**Problem-Solving Approaches**: How you debug, test, and iterate",
      "\ud83e\udde0 **PHASE 1: PROJECT INTELLIGENCE LAYER**",
      "**2.2 Knowledge Graph Construction**",
      "**Preference Database**: Personal coding patterns and preferences",
      "**Docker**: Containerization and deployment",
      "**1.3 Project Context Mapping**",
      "**\ud83d\udcca Success Metrics**",
      "**Project Scanning**: < 5 seconds for typical projects",
      "**Context Storage**: 100% of project context captured",
      "**Python 3.11+**: Core development language",
      "**Real-time Collaboration**: Live context sharing during pair programming",
      "**1.2 Code Pattern Recognition**",
      "**Memory Usage**: < 100MB for large projects",
      "\ud83d\ude80 **PHASE 4: INTELLIGENT CONTEXT ORCHESTRATION**",
      "**Documentation Processing**: 90%+ content extraction",
      "**4.2 Intelligent Assistant Behavior**",
      "**Git Integration**: Version control and change tracking",
      "**Knowledge Graph**: 1000+ semantic relationships",
      "**Week 7**: Knowledge graph construction and semantic relationships",
      "**Configuration Understanding**: Parse config files, environment variables",
      "**Index Storage**",
      "**\ud83d\ude80 Ready to Start Phase 1**",
      "**\ud83c\udfaf Phase 2: Knowledge Ingestion (Weeks 5-8)**",
      "python\nclass PreferenceLearningEngine:\n    def __init__(self):\n        self.style_patterns = {}      # Coding style preferences\n        self.workflow_patterns = {}   # Development workflow patterns\n        self.decision_patterns = {}   # Architectural decision patterns\n        self.learning_patterns = {}   # How you learn and adapt\n\n    def learn_from_code(self, code_sample: str) -> StylePattern:\n        \"\"\"Learn coding style from code samples\"\"\"\n        pass\n\n    def learn_from_workflow(self, workflow_data: WorkflowData) -> WorkflowPattern:\n        \"\"\"Learn workflow patterns from development activities\"\"\"\n        pass\n\n    def predict_context_needs(self, current_context: Context) -> List[ContextSuggestion]:\n        \"\"\"Predict what context you'll need next\"\"\"\n        pass",
      "**Week 8**: Contextual memory storage and retrieval",
      "**IDE Integration**: Project context awareness",
      "**Cross-Reference Mapping**: Link related concepts across different parts of the project",
      "**\ud83d\udcca Phase 2 Success Metrics**",
      "**Week 4**: Code pattern recognition and initial indexing",
      "**Architectural Decisions**: Understand why you choose certain patterns",
      "**3.3 Intelligent Context Injection**",
      "**\ud83d\udcca Data Storage**",
      "**Proactive Context Provision**: Provide relevant context before you ask",
      "**Temporal Context**: Understand what you were working on when",
      "**Week 5-6**: Documentation parser and basic knowledge extraction",
      "**User Experience**: Dramatic improvement in development workflow",
      "**Scanning Speed**: < 5 seconds for typical projects",
      "python\nclass ProjectIndex:\n    def __init__(self):\n        self.files = {}           # File metadata and content\n        self.dependencies = {}    # Package and module dependencies\n        self.patterns = {}        # Code patterns and style preferences\n        self.context = {}         # Project context and metadata\n        self.history = {}         # Change history and evolution",
      "**Code Comments**: Extract inline documentation and explanations",
      "**Week 1-2**: Basic file system scanner and project structure mapping",
      "**Function/Class Discovery**: Index all code entities with their locations",
      "**External References**: Process links, citations, and related resources",
      "**Context Store**: Temporal and contextual information",
      "**Workflow Optimization**: Suggest improvements based on your patterns",
      "\ud83d\ude80 **MEMORY CONTEXT MANAGER v2 - DEVELOPMENT ROADMAP**",
      "**Storage Strategy**: How should we store and organize the project index?",
      "**Proactive Delivery**: Provide context when it's most useful",
      "**Knowledge Graph**: Semantic relationships and concepts",
      "**Proactive Assistance**: 60%+ of context provided before asking",
      "**Dependency Detection**: Identify package.json, requirements.txt, pyproject.toml, etc.",
      "**Scanner Architecture**",
      "**Import/Export Mapping**: Track module dependencies and relationships",
      "**\ud83d\udcca Phase 1 Success Metrics**",
      "**\ud83d\udccb Core Features to Implement**",
      "**Week 13-14**: Context orchestrator and multi-source integration",
      "**Project-Specific Context**: Store context tied to specific files and modules",
      "**Team Collaboration**: Share context and preferences with team members",
      "**Learning Patterns**: How you approach new technologies and concepts",
      "**\ud83c\udfaf Phase 4: Intelligent Orchestration (Weeks 13-16)**",
      "**\ud83d\udd0c Integration Points**",
      "**Multi-Source Integration**: Combine project, documentation, and personal context",
      "**Project Index Database**: File metadata and relationships",
      "**Context-Aware Responses**: Tailor responses to current project context",
      "**\ud83d\udcca Phase 4 Success Metrics**",
      "**Learning Integration**: Continuous improvement over time",
      "**Context Orchestration**: Seamless multi-source integration",
      "**MCP Server**: Enhanced context provision",
      "**Foundation Established**: Ready for advanced context enhancement",
      "**Week 11**: Workflow pattern analysis and behavior modeling",
      "**Preference Learning Engine**",
      "**3.1 Coding Preference Learning**",
      "**Mission Statement**",
      "\ud83c\udfaf **Project Vision & Mission**",
      "\ud83d\udee0 **TECHNICAL REQUIREMENTS**",
      "**Learning Integration**: Continuously improve based on your feedback",
      "**Contextual Memory**: Long-term memory of project context and decisions",
      "\ud83c\udfaf **IMMEDIATE NEXT STEPS**",
      "**Predictive Assistance**: Anticipate what context you'll need",
      "**File System Watchers**: Real-time change detection",
      "**API Documentation**: Parse OpenAPI specs, JSDoc, Python docstrings",
      "**\ud83c\udfaf Primary Goal**",
      "\ud83d\udcda **PHASE 2: KNOWLEDGE INGESTION ENGINE**",
      "**Build System Recognition**: Understand build tools, scripts, and processes",
      "**\ud83c\udfaf Phase 1: Project Intelligence (Weeks 1-4)**",
      "**Version Control Integration**: Git history and branch context",
      "**Integration Points**: How should this integrate with our existing MCP tools?",
      "**2.1 Documentation Parser**",
      "**\ud83d\udd27 Development Tools**",
      "**Semantic Relationships**: Build connections between concepts, patterns, and implementations",
      "**FastAPI**: API development and integration",
      "**Problem Evolution**: Track how problems and solutions evolve",
      "**Works across projects** - applies learnings and patterns universally",
      "**Week 16**: Advanced context features and system optimization",
      "**Preference Learning**: 80%+ accuracy in style recognition",
      "#### **Index Storage**",
      "**Clean Architecture**: Human brain-inspired cognitive domains",
      "**Tool Consolidation**: Reduced from 48 to 6 organized cognitive tools",
      "\ud83c\udf1f **VISION FOR THE FUTURE**",
      "**Knowledge Evolution**: Track how understanding evolves over time",
      "**Temporal Context**: Remember what you were working on when",
      "**Predictive Assistance**: Anticipate questions and provide answers proactively",
      "**Documentation Processor**",
      "**Personalized Suggestions**: Tailor recommendations to your style",
      "**3.2 Workflow Pattern Recognition**",
      "**Week 12**: Initial context injection and personalization",
      "**Dependency Detection**: 95%+ accuracy",
      "**Query Response**: < 2 seconds for context retrieval",
      "**Zero Functionality Loss**: 100% of original capabilities preserved",
      "**Contextual Linking**: Connect documentation to actual code",
      "**4.1 Context Orchestrator**",
      "**Contextual Synthesis**: Combine multiple context sources intelligently",
      "---\n\n## \ud83c\udfa8 **PHASE 3: PERSONALIZATION & BEHAVIOR INJECTION**\n\n### **\ud83c\udfaf Primary Goal**\n\nLearn your personal coding preferences, workflow patterns, and automatically inject relevant context.\n\n### **\ud83d\udccb Core Features to Implement**\n\n#### **3.1 Coding Preference Learning**\n\n- **Style Recognition**: Learn your naming conventions, code organization, and patterns\n- **Architectural Decisions**: Understand why you choose certain patterns\n- **Library Preferences**: Track your favorite tools and frameworks\n- **Code Quality Standards**: Learn your testing, documentation, and review preferences\n\n#### **3.2 Workflow Pattern Recognition**\n\n- **Problem-Solving Approaches**: How you debug, test, and iterate\n- **Development Workflow**: Your typical development process and preferences\n- **Context Switching**: How you move between different project areas\n- **Learning Patterns**: How you approach new technologies and concepts\n\n#### **3.3 Intelligent Context Injection**\n\n- **Proactive Context Provision**: Provide relevant context before you ask\n- **Predictive Assistance**: Anticipate what context you'll need\n- **Personalized Suggestions**: Tailor recommendations to your style\n- **Workflow Optimization**: Suggest improvements based on your patterns\n\n### **\ud83d\udd27 Technical Implementation**\n\n#### **Preference Learning Engine**",
      "\ud83d\udcc5 **IMPLEMENTATION TIMELINE**",
      "**Style Recognition**: Learn your naming conventions, code organization, and patterns",
      "**Advanced AI Integration**: Leverage LLMs for deeper code understanding",
      "**\ud83d\udd27 Technical Implementation**",
      "**Update Frequency**: How often should we re-scan for changes?",
      "**Context Injection**: 70%+ relevance in proactive suggestions",
      "**Current State (Phase 0 - COMPLETED \u2705)**",
      "**Git Hooks**: Commit and branch context",
      "### **\ud83d\udcca Success Metrics**\n\n- **Scanning Speed**: < 5 seconds for typical projects\n- **Accuracy**: 95%+ correct dependency detection\n- **Memory Usage**: < 100MB for large projects\n- **Update Frequency**: Real-time change detection\n\n---\n\n## \ud83d\udcda **PHASE 2: KNOWLEDGE INGESTION ENGINE**\n\n### **\ud83c\udfaf Primary Goal**\n\nProcess and understand documentation, code comments, and external references to build a comprehensive knowledge base.\n\n### **\ud83d\udccb Core Features to Implement**\n\n#### **2.1 Documentation Parser**\n\n- **README Processing**: Extract project descriptions, setup instructions, usage examples\n- **API Documentation**: Parse OpenAPI specs, JSDoc, Python docstrings\n- **Code Comments**: Extract inline documentation and explanations\n- **External References**: Process links, citations, and related resources\n\n#### **2.2 Knowledge Graph Construction**\n\n- **Semantic Relationships**: Build connections between concepts, patterns, and implementations\n- **Contextual Linking**: Connect documentation to actual code\n- **Cross-Reference Mapping**: Link related concepts across different parts of the project\n- **Knowledge Evolution**: Track how understanding evolves over time\n\n#### **2.3 Contextual Memory Enhancement**\n\n- **Project-Specific Context**: Store context tied to specific files and modules\n- **Temporal Context**: Remember what you were working on when\n- **Problem-Solution Mapping**: Link problems to their solutions and context\n- **Learning Pattern Recognition**: Identify how you approach different types of challenges\n\n### **\ud83d\udd27 Technical Implementation**\n\n#### **Documentation Processor**",
      "**Pattern Identification**: Learn your coding style and preferences",
      "\ud83c\udfaf **SUCCESS CRITERIA**",
      "**Code Quality Standards**: Learn your testing, documentation, and review preferences"
    ],
    "TOOLS_AND_WORKFLOWS.md": [
      "Clean up unnecessary data regularly",
      "Leverage cognitive tools for complex thinking tasks",
      "### Problem Solving",
      "18. **get_resource_usage**",
      "35. **test_llm_connection**",
      "\ud83e\udde0 Core Brain Interface Tools",
      "1. **brain_info**",
      "**Use Case**: Learning, experience storage, important information retention\n\n### 23. **recall**\n\n**Purpose**: Search through memories and past experiences\n**Workflow**:",
      "Request \u2192 Context Analysis \u2192 Relevant Info Selection \u2192 Context Injection",
      "3. **Error Handling**",
      "Request \u2192 Context Retrieval \u2192 User Info + History \u2192 Context Summary Return",
      "**Parameters**:\n\n-",
      "\ud83e\uddea Testing and Validation Tools",
      "4. **list_plugins**",
      "Source + Lesson Type \u2192 Content Processing \u2192 Knowledge Extraction \u2192 Learning Confirmation",
      "Search Term + Limit \u2192 Function Call Search \u2192 Pattern Matching \u2192 Search Results",
      "**Use Case**: System testing, validation, debugging\n\n### 37. **list_available_models**\n\n**Purpose**: List available LLM models from Ollama\n**Workflow**:",
      "Request \u2192 System Status Check \u2192 Statistics Collection \u2192 Status Report Return",
      "**Use Case**: Monitoring, health checks, performance analysis\n\n## \ud83e\udde0 Memory and Context Tools\n\n### 7. **store_memory**\n\n**Purpose**: Store information in persistent memory\n**Workflow**:",
      "Request \u2192 Statistics Collection \u2192 Metric Analysis \u2192 Performance Report",
      "`value`: Information to store",
      "Count Parameter \u2192 Context Retrieval \u2192 Summary Generation \u2192 Context Summary Return",
      "**Use Case**: Privacy, fresh start, debugging\n\n## \ud83d\udcc1 File Operations Tools\n\n### 13. **read_file**\n\n**Purpose**: Read the contents of a file\n**Workflow**:",
      "`tags`: Optional categorization tags",
      "27. **dream**",
      "**Use Case**: Initial setup, debugging, understanding system capabilities\n\n### 2. **ai_chat_with_memory**\n\n**Purpose**: Enhanced AI chat with persistent memory and context awareness\n**Workflow**:",
      "Key \u2192 Memory Lookup \u2192 Value Retrieval \u2192 Return Stored Information",
      "**Use Case**: Conversation history, learning from interactions, context building\n\n### 30. **cursor_auto_inject_context**\n\n**Purpose**: Auto-inject relevant context for new Cursor conversations\n**Workflow**:",
      "\ud83d\udcc1 File Operations Tools",
      "**Use Case**: Reading configuration files, documents, code files\n\n### 14. **write_file**\n\n**Purpose**: Write content to a file\n**Workflow**:",
      "### Memory-Enhanced Workflow",
      "**Use Case**: System validation, troubleshooting, health checks\n\n### 36. **test_memory_system**\n\n**Purpose**: Test the memory system with sample conversations\n**Workflow**:",
      "File Management",
      "Request \u2192 Model Discovery \u2192 Model List Generation \u2192 Available Models Return",
      "**Use Case**: System health checks, troubleshooting, performance monitoring\n\n## \ud83e\uddea Testing and Validation Tools\n\n### 35. **test_llm_connection**\n\n**Purpose**: Test connection to the Ollama LLM service\n**Workflow**:",
      "Provide clear, specific parameters",
      "## \ud83c\udfaf Best Practices for Tool Usage\n\n### 1. **Tool Selection**\n\n- Choose the most specific tool for your task\n- Use memory tools for persistent information\n- Leverage cognitive tools for complex thinking tasks\n\n### 2. **Parameter Optimization**\n\n- Provide clear, specific parameters\n- Use appropriate data types\n- Include relevant context when available\n\n### 3. **Error Handling**\n\n- Always check for errors in tool responses\n- Implement fallback strategies\n- Log errors for debugging\n\n### 4. **Performance Considerations**\n\n- Use lightweight tools for simple tasks\n- Batch operations when possible\n- Monitor tool execution times\n\n### 5. **Memory Management**\n\n- Store important information persistently\n- Use tags for organization\n- Clean up unnecessary data regularly\n\n## \ud83d\ude80 Advanced Tool Combinations\n\n### Conversation Enhancement",
      "1. Tool Execution \u2192 2. Error Detection \u2192 3. Error Logging \u2192 4. Fallback Response \u2192 5. User Notification",
      "Performance Monitoring Workflow",
      "Topic \u2192 Self-Analysis \u2192 Pattern Recognition \u2192 Reflection Results",
      "21. **think**",
      "31. **get_function_call_history**",
      "4. **Performance Considerations**",
      "11. **get_context_summary**",
      "**Use Case**: System diagnostics, environment understanding, troubleshooting\n\n### 18. **get_resource_usage**\n\n**Purpose**: Get current system resource usage\n**Workflow**:",
      "25. **consciousness_check**",
      "5. **Memory Management**",
      "**Use Case**: Development, plugin updates, troubleshooting\n\n### 6. **server_status**\n\n**Purpose**: Get server status and statistics\n**Workflow**:",
      "14. **write_file**",
      "**Use Case**: Performance monitoring, usage analytics, system optimization\n\n### 33. **search_function_calls**\n\n**Purpose**: Search function calls by content, context, or parameters\n**Workflow**:",
      "32. **get_session_statistics**",
      ": Information to store\n-",
      "### File Management",
      "Conversation Enhancement",
      "`ai_model_name`: AI model to use (default: \"assistant\")",
      "Memory-Enhanced Workflow",
      "**Use Case**: Performance monitoring, capacity planning, system health checks\n\n### 19. **get_python_info**\n\n**Purpose**: Get Python interpreter information\n**Workflow**:",
      "System Monitoring",
      ": Unique identifier for the memory\n-",
      "Request \u2192 Plugin Registry Scan \u2192 Plugin List Generation \u2192 Return Plugin Details",
      "Include relevant context when available",
      "Use tags for organization",
      "16. **file_exists**",
      "\ud83d\udd0c Plugin Management Tools",
      "Log errors for debugging",
      "1. Tool Execution Start \u2192 2. Performance Metrics Collection \u2192 3. Tool Execution End \u2192 4. Metrics Storage \u2192 5. Performance Analysis",
      "22. **remember**",
      "Store important information persistently",
      "Path \u2192 Existence Check \u2192 Boolean Result Return",
      "Use memory tools for persistent information",
      "8. **retrieve_memory**",
      "13. **read_file**",
      "**Use Case**: System administration, debugging, understanding available functionality\n\n### 5. **reload_plugin**\n\n**Purpose**: Reload a specific plugin by name\n**Workflow**:",
      "\ud83d\udd04 Tool Workflow Patterns",
      "User Message + Assistant Response \u2192 Conversation Storage \u2192 Learning Update \u2192 Tracking Confirmation",
      "**Use Case**: Deep thinking, problem solving, context-aware responses\n\n### 22. **remember**\n\n**Purpose**: Store important information with emotional weight\n**Workflow**:",
      "**Use Case**: Knowledge retrieval, experience recall, context building\n\n### 24. **reflect**\n\n**Purpose**: Engage in self-reflection and metacognition\n**Workflow**:",
      "Request \u2192 Environment Scan \u2192 Variable Filtering \u2192 Safe Variables Return",
      "Information + Importance \u2192 Emotional Tagging \u2192 Memory Storage \u2192 Confirmation",
      "1. Tool Selection \u2192 2. Parameter Preparation \u2192 3. Tool Execution \u2192 4. Result Processing \u2192 5. Action/Response",
      "3. **quick_memory_chat**",
      "24. **reflect**",
      "Request \u2192 Connection Test \u2192 Service Validation \u2192 Connection Status Return",
      "**Use Case**: Simple questions, quick responses, when full memory context isn't needed\n\n## \ud83d\udd0c Plugin Management Tools\n\n### 4. **list_plugins**\n\n**Purpose**: List all loaded plugins and their information\n**Workflow**:",
      "\ud83e\udde0 Cognitive Brain Plugin Tools",
      "**Use Case**: Debugging, performance analysis, usage tracking\n\n### 32. **get_session_statistics**\n\n**Purpose**: Get comprehensive session statistics and performance metrics\n**Workflow**:",
      "get_cursor_context() \u2192 ai_chat_with_memory() \u2192 track_cursor_conversation()",
      "File Path + Content \u2192 Directory Creation (if needed) \u2192 File Writing \u2192 Success Confirmation",
      "Use appropriate data types",
      "Request \u2192 Resource Monitoring \u2192 Metrics Collection \u2192 Resource Report Return",
      "9. **search_memory**",
      "Use lightweight tools for simple tasks",
      "**Use Case**: Building conversation context, maintaining session state\n\n### 11. **get_context_summary**\n\n**Purpose**: Get a summary of recent conversation context\n**Workflow**:",
      "1. **Tool Selection**",
      "**Use Case**: Learning improvement, self-awareness, performance analysis\n\n### 25. **consciousness_check**\n\n**Purpose**: Check current state of consciousness and awareness\n**Workflow**:",
      "Plugin Name \u2192 Plugin Unload \u2192 Plugin Reload \u2192 Status Return",
      "**Use Case**: Configuration checking, environment debugging, security auditing\n\n## \ud83e\udde0 Cognitive Brain Plugin Tools\n\n### 21. **think**\n\n**Purpose**: Think and respond with memory and context\n**Workflow**:",
      "\ud83d\udd0d Analysis and Monitoring Tools",
      "2. **Parameter Optimization**",
      "**Use Case**: File system navigation, project exploration, directory management\n\n### 16. **file_exists**\n\n**Purpose**: Check if a file or directory exists\n**Workflow**:",
      "**Use Case**: Environment verification, dependency checking, debugging\n\n### 20. **get_environment_vars**\n\n**Purpose**: Get environment variables (filtered for security)\n**Workflow**:",
      "1. Context Retrieval \u2192 2. Tool Execution \u2192 3. Memory Storage \u2192 4. Response Generation \u2192 5. Learning Update",
      "20. **get_environment_vars**",
      "Error Handling Workflow",
      "30. **cursor_auto_inject_context**",
      "Context + Type \u2192 Context Storage \u2192 History Update \u2192 Confirmation",
      "**Use Case**: Knowledge acquisition, document processing, continuous learning\n\n### 27. **dream**\n\n**Purpose**: Background processing and memory consolidation\n**Workflow**:",
      "Implement fallback strategies",
      "Batch operations when possible",
      "Keyword \u2192 Memory Search \u2192 Pattern Matching \u2192 Relevant Results Return",
      "**Use Case**: Debugging, usage analysis, pattern recognition\n\n### 34. **get_comprehensive_system_status**\n\n**Purpose**: Get complete system status overview\n**Workflow**:",
      "**Use Case**: Accessing saved information, retrieving context, user preferences\n\n### 9. **search_memory**\n\n**Purpose**: Search memory entries by keyword\n**Workflow**:",
      "26. **learn_from**",
      "File Path \u2192 File Existence Check \u2192 Content Reading \u2192 Content Return",
      "19. **get_python_info**",
      "Request \u2192 Platform Detection \u2192 System Info Collection \u2192 System Details Return",
      "### System Monitoring",
      "list_directory() \u2192 file_exists() \u2192 read_file() \u2192 write_file()",
      "User Message \u2192 Quick AI Processing \u2192 Response Return",
      "10. **add_context**",
      "Limit + Function Name \u2192 History Retrieval \u2192 Call Analysis \u2192 History Report",
      "Confirmation \u2192 Memory Clear \u2192 Storage Reset \u2192 Confirmation Return",
      "\ud83d\udee0\ufe0f Tools and Workflows Guide",
      "Request \u2192 System Scan \u2192 Status Collection \u2192 Comprehensive Report",
      "Key + Value + Tags \u2192 Memory Storage \u2192 Persistence \u2192 Success Confirmation",
      "### Error Handling Workflow",
      "`key`: Unique identifier for the memory",
      ": AI model to use (default: \"assistant\")\n  **Use Case**: Main conversation interface with memory persistence\n\n### 3. **quick_memory_chat**\n\n**Purpose**: Fast, lightweight chat without full memory processing\n**Workflow**:",
      "37. **list_available_models**",
      "Request \u2192 State Assessment \u2192 Awareness Check \u2192 Consciousness Report",
      "Request \u2192 Sample Data Generation \u2192 Memory Operations Test \u2192 Test Results Return",
      "15. **list_directory**",
      "36. **test_memory_system**",
      "12. **clear_memory**",
      "**Use Case**: Model selection, system configuration, capability discovery\n\n## \ud83d\udd04 Tool Workflow Patterns\n\n### Basic Tool Usage Pattern",
      "34. **get_comprehensive_system_status**",
      "\ud83e\udde0 Memory and Context Tools",
      ": Optional categorization tags\n  **Use Case**: Saving important information, user preferences, conversation context\n\n### 8. **retrieve_memory**\n\n**Purpose**: Retrieve information from memory by key\n**Workflow**:",
      "Always check for errors in tool responses",
      "29. **track_cursor_conversation**",
      "**Use Case**: File validation, conditional operations, error prevention\n\n## \ud83d\udcbb System Information Tools\n\n### 17. **get_system_info**\n\n**Purpose**: Get general system information\n**Workflow**:",
      "Request \u2192 Background Processing \u2192 Memory Consolidation \u2192 Processing Status",
      "Directory Path \u2192 Path Validation \u2192 Directory Scanning \u2192 File List Return",
      "### Performance Monitoring Workflow",
      "23. **recall**",
      "Request \u2192 Python Environment Check \u2192 Version/Path Info \u2192 Python Details Return",
      "Choose the most specific tool for your task",
      ": The user's input message\n-",
      "**Use Case**: Finding related information, context discovery, knowledge retrieval\n\n### 10. **add_context**\n\n**Purpose**: Add context information to conversation history\n**Workflow**:",
      "**Use Case**: Seamless conversation flow, automatic context provision\n\n## \ud83d\udd0d Analysis and Monitoring Tools\n\n### 31. **get_function_call_history**\n\n**Purpose**: Get comprehensive function call history with traceability\n**Workflow**:",
      "6. **server_status**",
      "Monitor tool execution times",
      "Query + Depth \u2192 Memory Search \u2192 Pattern Matching \u2192 Relevant Memories Return",
      "\ud83d\udcbb System Information Tools",
      "\ud83d\ude80 Advanced Tool Combinations",
      "7. **store_memory**",
      "get_system_info() \u2192 get_resource_usage() \u2192 get_comprehensive_system_status()",
      "\ud83c\udfaf Best Practices for Tool Usage",
      "**Use Case**: Understanding conversation flow, context review, session management\n\n### 12. **clear_memory**\n\n**Purpose**: Clear all memory entries\n**Workflow**:",
      "28. **get_cursor_context**",
      "Basic Tool Usage Pattern",
      "5. **reload_plugin**",
      "Problem Solving",
      "**Use Case**: System health, cognitive state monitoring, debugging\n\n### 26. **learn_from**\n\n**Purpose**: Learn from text content or documents\n**Workflow**:",
      "`user_message`: The user's input message",
      "17. **get_system_info**",
      "**Use Case**: Creating files, saving data, writing logs\n\n### 15. **list_directory**\n\n**Purpose**: List files and directories in a path\n**Workflow**:",
      "2. **ai_chat_with_memory**",
      "think() \u2192 search_memory() \u2192 learn_from() \u2192 remember()",
      "Message + Context \u2192 Memory Retrieval \u2192 Cognitive Processing \u2192 Thoughtful Response",
      "User Message \u2192 Memory Context Retrieval \u2192 AI Processing \u2192 Response Generation \u2192 Memory Storage \u2192 Response Return",
      "\ud83c\udfaf Cursor Integration Tools",
      "**Use Case**: Memory optimization, background learning, system maintenance\n\n## \ud83c\udfaf Cursor Integration Tools\n\n### 28. **get_cursor_context**\n\n**Purpose**: Get comprehensive context for Cursor conversations\n**Workflow**:",
      "User Request \u2192 brain_info() \u2192 Returns brain capabilities, status, and configuration",
      "33. **search_function_calls**",
      "**Use Case**: Cursor IDE integration, conversation continuity, user context\n\n### 29. **track_cursor_conversation**\n\n**Purpose**: Track Cursor conversation for learning and context\n**Workflow**:",
      "Clean up unnecessary data regularly",
      "Leverage cognitive tools for complex thinking tasks",
      "### Problem Solving",
      "18. **get_resource_usage**",
      "35. **test_llm_connection**",
      "\ud83e\udde0 Core Brain Interface Tools",
      "1. **brain_info**",
      "**Use Case**: Learning, experience storage, important information retention\n\n### 23. **recall**\n\n**Purpose**: Search through memories and past experiences\n**Workflow**:",
      "Request \u2192 Context Analysis \u2192 Relevant Info Selection \u2192 Context Injection",
      "3. **Error Handling**",
      "Request \u2192 Context Retrieval \u2192 User Info + History \u2192 Context Summary Return",
      "**Parameters**:\n\n-",
      "\ud83e\uddea Testing and Validation Tools",
      "4. **list_plugins**",
      "Source + Lesson Type \u2192 Content Processing \u2192 Knowledge Extraction \u2192 Learning Confirmation",
      "Search Term + Limit \u2192 Function Call Search \u2192 Pattern Matching \u2192 Search Results",
      "**Use Case**: System testing, validation, debugging\n\n### 37. **list_available_models**\n\n**Purpose**: List available LLM models from Ollama\n**Workflow**:",
      "Request \u2192 System Status Check \u2192 Statistics Collection \u2192 Status Report Return",
      "**Use Case**: Monitoring, health checks, performance analysis\n\n## \ud83e\udde0 Memory and Context Tools\n\n### 7. **store_memory**\n\n**Purpose**: Store information in persistent memory\n**Workflow**:",
      "Request \u2192 Statistics Collection \u2192 Metric Analysis \u2192 Performance Report",
      "`value`: Information to store",
      "Count Parameter \u2192 Context Retrieval \u2192 Summary Generation \u2192 Context Summary Return",
      "**Use Case**: Privacy, fresh start, debugging\n\n## \ud83d\udcc1 File Operations Tools\n\n### 13. **read_file**\n\n**Purpose**: Read the contents of a file\n**Workflow**:",
      "`tags`: Optional categorization tags",
      "27. **dream**",
      "**Use Case**: Initial setup, debugging, understanding system capabilities\n\n### 2. **ai_chat_with_memory**\n\n**Purpose**: Enhanced AI chat with persistent memory and context awareness\n**Workflow**:",
      "Key \u2192 Memory Lookup \u2192 Value Retrieval \u2192 Return Stored Information",
      "**Use Case**: Conversation history, learning from interactions, context building\n\n### 30. **cursor_auto_inject_context**\n\n**Purpose**: Auto-inject relevant context for new Cursor conversations\n**Workflow**:",
      "\ud83d\udcc1 File Operations Tools",
      "**Use Case**: Reading configuration files, documents, code files\n\n### 14. **write_file**\n\n**Purpose**: Write content to a file\n**Workflow**:",
      "### Memory-Enhanced Workflow",
      "**Use Case**: System validation, troubleshooting, health checks\n\n### 36. **test_memory_system**\n\n**Purpose**: Test the memory system with sample conversations\n**Workflow**:",
      "File Management",
      "Request \u2192 Model Discovery \u2192 Model List Generation \u2192 Available Models Return",
      "**Use Case**: System health checks, troubleshooting, performance monitoring\n\n## \ud83e\uddea Testing and Validation Tools\n\n### 35. **test_llm_connection**\n\n**Purpose**: Test connection to the Ollama LLM service\n**Workflow**:",
      "Provide clear, specific parameters",
      "## \ud83c\udfaf Best Practices for Tool Usage\n\n### 1. **Tool Selection**\n\n- Choose the most specific tool for your task\n- Use memory tools for persistent information\n- Leverage cognitive tools for complex thinking tasks\n\n### 2. **Parameter Optimization**\n\n- Provide clear, specific parameters\n- Use appropriate data types\n- Include relevant context when available\n\n### 3. **Error Handling**\n\n- Always check for errors in tool responses\n- Implement fallback strategies\n- Log errors for debugging\n\n### 4. **Performance Considerations**\n\n- Use lightweight tools for simple tasks\n- Batch operations when possible\n- Monitor tool execution times\n\n### 5. **Memory Management**\n\n- Store important information persistently\n- Use tags for organization\n- Clean up unnecessary data regularly\n\n## \ud83d\ude80 Advanced Tool Combinations\n\n### Conversation Enhancement",
      "1. Tool Execution \u2192 2. Error Detection \u2192 3. Error Logging \u2192 4. Fallback Response \u2192 5. User Notification",
      "Performance Monitoring Workflow",
      "Topic \u2192 Self-Analysis \u2192 Pattern Recognition \u2192 Reflection Results",
      "21. **think**",
      "31. **get_function_call_history**",
      "4. **Performance Considerations**",
      "11. **get_context_summary**",
      "**Use Case**: System diagnostics, environment understanding, troubleshooting\n\n### 18. **get_resource_usage**\n\n**Purpose**: Get current system resource usage\n**Workflow**:",
      "25. **consciousness_check**",
      "5. **Memory Management**",
      "**Use Case**: Development, plugin updates, troubleshooting\n\n### 6. **server_status**\n\n**Purpose**: Get server status and statistics\n**Workflow**:",
      "14. **write_file**",
      "**Use Case**: Performance monitoring, usage analytics, system optimization\n\n### 33. **search_function_calls**\n\n**Purpose**: Search function calls by content, context, or parameters\n**Workflow**:",
      "32. **get_session_statistics**",
      ": Information to store\n-",
      "### File Management",
      "Conversation Enhancement",
      "`ai_model_name`: AI model to use (default: \"assistant\")",
      "Memory-Enhanced Workflow",
      "**Use Case**: Performance monitoring, capacity planning, system health checks\n\n### 19. **get_python_info**\n\n**Purpose**: Get Python interpreter information\n**Workflow**:",
      "System Monitoring",
      ": Unique identifier for the memory\n-",
      "Request \u2192 Plugin Registry Scan \u2192 Plugin List Generation \u2192 Return Plugin Details",
      "Include relevant context when available",
      "Use tags for organization",
      "16. **file_exists**",
      "\ud83d\udd0c Plugin Management Tools",
      "Log errors for debugging",
      "1. Tool Execution Start \u2192 2. Performance Metrics Collection \u2192 3. Tool Execution End \u2192 4. Metrics Storage \u2192 5. Performance Analysis",
      "22. **remember**",
      "Store important information persistently",
      "Path \u2192 Existence Check \u2192 Boolean Result Return",
      "Use memory tools for persistent information",
      "8. **retrieve_memory**",
      "13. **read_file**",
      "**Use Case**: System administration, debugging, understanding available functionality\n\n### 5. **reload_plugin**\n\n**Purpose**: Reload a specific plugin by name\n**Workflow**:",
      "\ud83d\udd04 Tool Workflow Patterns",
      "User Message + Assistant Response \u2192 Conversation Storage \u2192 Learning Update \u2192 Tracking Confirmation",
      "**Use Case**: Deep thinking, problem solving, context-aware responses\n\n### 22. **remember**\n\n**Purpose**: Store important information with emotional weight\n**Workflow**:",
      "**Use Case**: Knowledge retrieval, experience recall, context building\n\n### 24. **reflect**\n\n**Purpose**: Engage in self-reflection and metacognition\n**Workflow**:",
      "Request \u2192 Environment Scan \u2192 Variable Filtering \u2192 Safe Variables Return",
      "Information + Importance \u2192 Emotional Tagging \u2192 Memory Storage \u2192 Confirmation",
      "1. Tool Selection \u2192 2. Parameter Preparation \u2192 3. Tool Execution \u2192 4. Result Processing \u2192 5. Action/Response",
      "3. **quick_memory_chat**",
      "24. **reflect**",
      "Request \u2192 Connection Test \u2192 Service Validation \u2192 Connection Status Return",
      "**Use Case**: Simple questions, quick responses, when full memory context isn't needed\n\n## \ud83d\udd0c Plugin Management Tools\n\n### 4. **list_plugins**\n\n**Purpose**: List all loaded plugins and their information\n**Workflow**:",
      "\ud83e\udde0 Cognitive Brain Plugin Tools",
      "**Use Case**: Debugging, performance analysis, usage tracking\n\n### 32. **get_session_statistics**\n\n**Purpose**: Get comprehensive session statistics and performance metrics\n**Workflow**:",
      "get_cursor_context() \u2192 ai_chat_with_memory() \u2192 track_cursor_conversation()",
      "File Path + Content \u2192 Directory Creation (if needed) \u2192 File Writing \u2192 Success Confirmation",
      "Use appropriate data types",
      "Request \u2192 Resource Monitoring \u2192 Metrics Collection \u2192 Resource Report Return",
      "9. **search_memory**",
      "Use lightweight tools for simple tasks",
      "**Use Case**: Building conversation context, maintaining session state\n\n### 11. **get_context_summary**\n\n**Purpose**: Get a summary of recent conversation context\n**Workflow**:",
      "1. **Tool Selection**",
      "**Use Case**: Learning improvement, self-awareness, performance analysis\n\n### 25. **consciousness_check**\n\n**Purpose**: Check current state of consciousness and awareness\n**Workflow**:",
      "Plugin Name \u2192 Plugin Unload \u2192 Plugin Reload \u2192 Status Return",
      "**Use Case**: Configuration checking, environment debugging, security auditing\n\n## \ud83e\udde0 Cognitive Brain Plugin Tools\n\n### 21. **think**\n\n**Purpose**: Think and respond with memory and context\n**Workflow**:",
      "\ud83d\udd0d Analysis and Monitoring Tools",
      "2. **Parameter Optimization**",
      "**Use Case**: File system navigation, project exploration, directory management\n\n### 16. **file_exists**\n\n**Purpose**: Check if a file or directory exists\n**Workflow**:",
      "**Use Case**: Environment verification, dependency checking, debugging\n\n### 20. **get_environment_vars**\n\n**Purpose**: Get environment variables (filtered for security)\n**Workflow**:",
      "1. Context Retrieval \u2192 2. Tool Execution \u2192 3. Memory Storage \u2192 4. Response Generation \u2192 5. Learning Update",
      "20. **get_environment_vars**",
      "Error Handling Workflow",
      "30. **cursor_auto_inject_context**",
      "Context + Type \u2192 Context Storage \u2192 History Update \u2192 Confirmation",
      "**Use Case**: Knowledge acquisition, document processing, continuous learning\n\n### 27. **dream**\n\n**Purpose**: Background processing and memory consolidation\n**Workflow**:",
      "Implement fallback strategies",
      "Batch operations when possible",
      "Keyword \u2192 Memory Search \u2192 Pattern Matching \u2192 Relevant Results Return",
      "**Use Case**: Debugging, usage analysis, pattern recognition\n\n### 34. **get_comprehensive_system_status**\n\n**Purpose**: Get complete system status overview\n**Workflow**:",
      "**Use Case**: Accessing saved information, retrieving context, user preferences\n\n### 9. **search_memory**\n\n**Purpose**: Search memory entries by keyword\n**Workflow**:",
      "26. **learn_from**",
      "File Path \u2192 File Existence Check \u2192 Content Reading \u2192 Content Return",
      "19. **get_python_info**",
      "Request \u2192 Platform Detection \u2192 System Info Collection \u2192 System Details Return",
      "### System Monitoring",
      "list_directory() \u2192 file_exists() \u2192 read_file() \u2192 write_file()",
      "User Message \u2192 Quick AI Processing \u2192 Response Return",
      "10. **add_context**",
      "Limit + Function Name \u2192 History Retrieval \u2192 Call Analysis \u2192 History Report",
      "Confirmation \u2192 Memory Clear \u2192 Storage Reset \u2192 Confirmation Return",
      "\ud83d\udee0\ufe0f Tools and Workflows Guide",
      "Request \u2192 System Scan \u2192 Status Collection \u2192 Comprehensive Report",
      "Key + Value + Tags \u2192 Memory Storage \u2192 Persistence \u2192 Success Confirmation",
      "### Error Handling Workflow",
      "`key`: Unique identifier for the memory",
      ": AI model to use (default: \"assistant\")\n  **Use Case**: Main conversation interface with memory persistence\n\n### 3. **quick_memory_chat**\n\n**Purpose**: Fast, lightweight chat without full memory processing\n**Workflow**:",
      "37. **list_available_models**",
      "Request \u2192 State Assessment \u2192 Awareness Check \u2192 Consciousness Report",
      "Request \u2192 Sample Data Generation \u2192 Memory Operations Test \u2192 Test Results Return",
      "15. **list_directory**",
      "36. **test_memory_system**",
      "12. **clear_memory**",
      "**Use Case**: Model selection, system configuration, capability discovery\n\n## \ud83d\udd04 Tool Workflow Patterns\n\n### Basic Tool Usage Pattern",
      "34. **get_comprehensive_system_status**",
      "\ud83e\udde0 Memory and Context Tools",
      ": Optional categorization tags\n  **Use Case**: Saving important information, user preferences, conversation context\n\n### 8. **retrieve_memory**\n\n**Purpose**: Retrieve information from memory by key\n**Workflow**:",
      "Always check for errors in tool responses",
      "29. **track_cursor_conversation**",
      "**Use Case**: File validation, conditional operations, error prevention\n\n## \ud83d\udcbb System Information Tools\n\n### 17. **get_system_info**\n\n**Purpose**: Get general system information\n**Workflow**:",
      "Request \u2192 Background Processing \u2192 Memory Consolidation \u2192 Processing Status",
      "Directory Path \u2192 Path Validation \u2192 Directory Scanning \u2192 File List Return",
      "### Performance Monitoring Workflow",
      "23. **recall**",
      "Request \u2192 Python Environment Check \u2192 Version/Path Info \u2192 Python Details Return",
      "Choose the most specific tool for your task",
      ": The user's input message\n-",
      "**Use Case**: Finding related information, context discovery, knowledge retrieval\n\n### 10. **add_context**\n\n**Purpose**: Add context information to conversation history\n**Workflow**:",
      "**Use Case**: Seamless conversation flow, automatic context provision\n\n## \ud83d\udd0d Analysis and Monitoring Tools\n\n### 31. **get_function_call_history**\n\n**Purpose**: Get comprehensive function call history with traceability\n**Workflow**:",
      "6. **server_status**",
      "Monitor tool execution times",
      "Query + Depth \u2192 Memory Search \u2192 Pattern Matching \u2192 Relevant Memories Return",
      "\ud83d\udcbb System Information Tools",
      "\ud83d\ude80 Advanced Tool Combinations",
      "7. **store_memory**",
      "get_system_info() \u2192 get_resource_usage() \u2192 get_comprehensive_system_status()",
      "\ud83c\udfaf Best Practices for Tool Usage",
      "**Use Case**: Understanding conversation flow, context review, session management\n\n### 12. **clear_memory**\n\n**Purpose**: Clear all memory entries\n**Workflow**:",
      "28. **get_cursor_context**",
      "Basic Tool Usage Pattern",
      "5. **reload_plugin**",
      "Problem Solving",
      "**Use Case**: System health, cognitive state monitoring, debugging\n\n### 26. **learn_from**\n\n**Purpose**: Learn from text content or documents\n**Workflow**:",
      "`user_message`: The user's input message",
      "17. **get_system_info**",
      "**Use Case**: Creating files, saving data, writing logs\n\n### 15. **list_directory**\n\n**Purpose**: List files and directories in a path\n**Workflow**:",
      "2. **ai_chat_with_memory**",
      "think() \u2192 search_memory() \u2192 learn_from() \u2192 remember()",
      "Message + Context \u2192 Memory Retrieval \u2192 Cognitive Processing \u2192 Thoughtful Response",
      "User Message \u2192 Memory Context Retrieval \u2192 AI Processing \u2192 Response Generation \u2192 Memory Storage \u2192 Response Return",
      "\ud83c\udfaf Cursor Integration Tools",
      "**Use Case**: Memory optimization, background learning, system maintenance\n\n## \ud83c\udfaf Cursor Integration Tools\n\n### 28. **get_cursor_context**\n\n**Purpose**: Get comprehensive context for Cursor conversations\n**Workflow**:",
      "User Request \u2192 brain_info() \u2192 Returns brain capabilities, status, and configuration",
      "33. **search_function_calls**",
      "**Use Case**: Cursor IDE integration, conversation continuity, user context\n\n### 29. **track_cursor_conversation**\n\n**Purpose**: Track Cursor conversation for learning and context\n**Workflow**:",
      "Clean up unnecessary data regularly",
      "Leverage cognitive tools for complex thinking tasks",
      "### Problem Solving",
      "18. **get_resource_usage**",
      "35. **test_llm_connection**",
      "\ud83e\udde0 Core Brain Interface Tools",
      "1. **brain_info**",
      "**Use Case**: Learning, experience storage, important information retention\n\n### 23. **recall**\n\n**Purpose**: Search through memories and past experiences\n**Workflow**:",
      "Request \u2192 Context Analysis \u2192 Relevant Info Selection \u2192 Context Injection",
      "3. **Error Handling**",
      "Request \u2192 Context Retrieval \u2192 User Info + History \u2192 Context Summary Return",
      "**Parameters**:\n\n-",
      "\ud83e\uddea Testing and Validation Tools",
      "4. **list_plugins**",
      "Source + Lesson Type \u2192 Content Processing \u2192 Knowledge Extraction \u2192 Learning Confirmation",
      "Search Term + Limit \u2192 Function Call Search \u2192 Pattern Matching \u2192 Search Results",
      "**Use Case**: System testing, validation, debugging\n\n### 37. **list_available_models**\n\n**Purpose**: List available LLM models from Ollama\n**Workflow**:",
      "Request \u2192 System Status Check \u2192 Statistics Collection \u2192 Status Report Return",
      "**Use Case**: Monitoring, health checks, performance analysis\n\n## \ud83e\udde0 Memory and Context Tools\n\n### 7. **store_memory**\n\n**Purpose**: Store information in persistent memory\n**Workflow**:",
      "Request \u2192 Statistics Collection \u2192 Metric Analysis \u2192 Performance Report",
      "`value`: Information to store",
      "Count Parameter \u2192 Context Retrieval \u2192 Summary Generation \u2192 Context Summary Return",
      "**Use Case**: Privacy, fresh start, debugging\n\n## \ud83d\udcc1 File Operations Tools\n\n### 13. **read_file**\n\n**Purpose**: Read the contents of a file\n**Workflow**:",
      "`tags`: Optional categorization tags",
      "27. **dream**",
      "**Use Case**: Initial setup, debugging, understanding system capabilities\n\n### 2. **ai_chat_with_memory**\n\n**Purpose**: Enhanced AI chat with persistent memory and context awareness\n**Workflow**:",
      "Key \u2192 Memory Lookup \u2192 Value Retrieval \u2192 Return Stored Information",
      "**Use Case**: Conversation history, learning from interactions, context building\n\n### 30. **cursor_auto_inject_context**\n\n**Purpose**: Auto-inject relevant context for new Cursor conversations\n**Workflow**:",
      "\ud83d\udcc1 File Operations Tools",
      "**Use Case**: Reading configuration files, documents, code files\n\n### 14. **write_file**\n\n**Purpose**: Write content to a file\n**Workflow**:",
      "### Memory-Enhanced Workflow",
      "**Use Case**: System validation, troubleshooting, health checks\n\n### 36. **test_memory_system**\n\n**Purpose**: Test the memory system with sample conversations\n**Workflow**:",
      "File Management",
      "Request \u2192 Model Discovery \u2192 Model List Generation \u2192 Available Models Return",
      "**Use Case**: System health checks, troubleshooting, performance monitoring\n\n## \ud83e\uddea Testing and Validation Tools\n\n### 35. **test_llm_connection**\n\n**Purpose**: Test connection to the Ollama LLM service\n**Workflow**:",
      "Provide clear, specific parameters",
      "## \ud83c\udfaf Best Practices for Tool Usage\n\n### 1. **Tool Selection**\n\n- Choose the most specific tool for your task\n- Use memory tools for persistent information\n- Leverage cognitive tools for complex thinking tasks\n\n### 2. **Parameter Optimization**\n\n- Provide clear, specific parameters\n- Use appropriate data types\n- Include relevant context when available\n\n### 3. **Error Handling**\n\n- Always check for errors in tool responses\n- Implement fallback strategies\n- Log errors for debugging\n\n### 4. **Performance Considerations**\n\n- Use lightweight tools for simple tasks\n- Batch operations when possible\n- Monitor tool execution times\n\n### 5. **Memory Management**\n\n- Store important information persistently\n- Use tags for organization\n- Clean up unnecessary data regularly\n\n## \ud83d\ude80 Advanced Tool Combinations\n\n### Conversation Enhancement",
      "1. Tool Execution \u2192 2. Error Detection \u2192 3. Error Logging \u2192 4. Fallback Response \u2192 5. User Notification",
      "Performance Monitoring Workflow",
      "Topic \u2192 Self-Analysis \u2192 Pattern Recognition \u2192 Reflection Results",
      "21. **think**",
      "31. **get_function_call_history**",
      "4. **Performance Considerations**",
      "11. **get_context_summary**",
      "**Use Case**: System diagnostics, environment understanding, troubleshooting\n\n### 18. **get_resource_usage**\n\n**Purpose**: Get current system resource usage\n**Workflow**:",
      "25. **consciousness_check**",
      "5. **Memory Management**",
      "**Use Case**: Development, plugin updates, troubleshooting\n\n### 6. **server_status**\n\n**Purpose**: Get server status and statistics\n**Workflow**:",
      "14. **write_file**",
      "**Use Case**: Performance monitoring, usage analytics, system optimization\n\n### 33. **search_function_calls**\n\n**Purpose**: Search function calls by content, context, or parameters\n**Workflow**:",
      "32. **get_session_statistics**",
      ": Information to store\n-",
      "### File Management",
      "Conversation Enhancement",
      "`ai_model_name`: AI model to use (default: \"assistant\")",
      "Memory-Enhanced Workflow",
      "**Use Case**: Performance monitoring, capacity planning, system health checks\n\n### 19. **get_python_info**\n\n**Purpose**: Get Python interpreter information\n**Workflow**:",
      "System Monitoring",
      ": Unique identifier for the memory\n-",
      "Request \u2192 Plugin Registry Scan \u2192 Plugin List Generation \u2192 Return Plugin Details",
      "Include relevant context when available",
      "Use tags for organization",
      "16. **file_exists**",
      "\ud83d\udd0c Plugin Management Tools",
      "Log errors for debugging",
      "1. Tool Execution Start \u2192 2. Performance Metrics Collection \u2192 3. Tool Execution End \u2192 4. Metrics Storage \u2192 5. Performance Analysis",
      "22. **remember**",
      "Store important information persistently",
      "Path \u2192 Existence Check \u2192 Boolean Result Return",
      "Use memory tools for persistent information",
      "8. **retrieve_memory**",
      "13. **read_file**",
      "**Use Case**: System administration, debugging, understanding available functionality\n\n### 5. **reload_plugin**\n\n**Purpose**: Reload a specific plugin by name\n**Workflow**:",
      "\ud83d\udd04 Tool Workflow Patterns",
      "User Message + Assistant Response \u2192 Conversation Storage \u2192 Learning Update \u2192 Tracking Confirmation",
      "**Use Case**: Deep thinking, problem solving, context-aware responses\n\n### 22. **remember**\n\n**Purpose**: Store important information with emotional weight\n**Workflow**:",
      "**Use Case**: Knowledge retrieval, experience recall, context building\n\n### 24. **reflect**\n\n**Purpose**: Engage in self-reflection and metacognition\n**Workflow**:",
      "Request \u2192 Environment Scan \u2192 Variable Filtering \u2192 Safe Variables Return",
      "Information + Importance \u2192 Emotional Tagging \u2192 Memory Storage \u2192 Confirmation",
      "1. Tool Selection \u2192 2. Parameter Preparation \u2192 3. Tool Execution \u2192 4. Result Processing \u2192 5. Action/Response",
      "3. **quick_memory_chat**",
      "24. **reflect**",
      "Request \u2192 Connection Test \u2192 Service Validation \u2192 Connection Status Return",
      "**Use Case**: Simple questions, quick responses, when full memory context isn't needed\n\n## \ud83d\udd0c Plugin Management Tools\n\n### 4. **list_plugins**\n\n**Purpose**: List all loaded plugins and their information\n**Workflow**:",
      "\ud83e\udde0 Cognitive Brain Plugin Tools",
      "**Use Case**: Debugging, performance analysis, usage tracking\n\n### 32. **get_session_statistics**\n\n**Purpose**: Get comprehensive session statistics and performance metrics\n**Workflow**:",
      "get_cursor_context() \u2192 ai_chat_with_memory() \u2192 track_cursor_conversation()",
      "File Path + Content \u2192 Directory Creation (if needed) \u2192 File Writing \u2192 Success Confirmation",
      "Use appropriate data types",
      "Request \u2192 Resource Monitoring \u2192 Metrics Collection \u2192 Resource Report Return",
      "9. **search_memory**",
      "Use lightweight tools for simple tasks",
      "**Use Case**: Building conversation context, maintaining session state\n\n### 11. **get_context_summary**\n\n**Purpose**: Get a summary of recent conversation context\n**Workflow**:",
      "1. **Tool Selection**",
      "**Use Case**: Learning improvement, self-awareness, performance analysis\n\n### 25. **consciousness_check**\n\n**Purpose**: Check current state of consciousness and awareness\n**Workflow**:",
      "Plugin Name \u2192 Plugin Unload \u2192 Plugin Reload \u2192 Status Return",
      "**Use Case**: Configuration checking, environment debugging, security auditing\n\n## \ud83e\udde0 Cognitive Brain Plugin Tools\n\n### 21. **think**\n\n**Purpose**: Think and respond with memory and context\n**Workflow**:",
      "\ud83d\udd0d Analysis and Monitoring Tools",
      "2. **Parameter Optimization**",
      "**Use Case**: File system navigation, project exploration, directory management\n\n### 16. **file_exists**\n\n**Purpose**: Check if a file or directory exists\n**Workflow**:",
      "**Use Case**: Environment verification, dependency checking, debugging\n\n### 20. **get_environment_vars**\n\n**Purpose**: Get environment variables (filtered for security)\n**Workflow**:",
      "1. Context Retrieval \u2192 2. Tool Execution \u2192 3. Memory Storage \u2192 4. Response Generation \u2192 5. Learning Update",
      "20. **get_environment_vars**",
      "Error Handling Workflow",
      "30. **cursor_auto_inject_context**",
      "Context + Type \u2192 Context Storage \u2192 History Update \u2192 Confirmation",
      "**Use Case**: Knowledge acquisition, document processing, continuous learning\n\n### 27. **dream**\n\n**Purpose**: Background processing and memory consolidation\n**Workflow**:",
      "Implement fallback strategies",
      "Batch operations when possible",
      "Keyword \u2192 Memory Search \u2192 Pattern Matching \u2192 Relevant Results Return",
      "**Use Case**: Debugging, usage analysis, pattern recognition\n\n### 34. **get_comprehensive_system_status**\n\n**Purpose**: Get complete system status overview\n**Workflow**:",
      "**Use Case**: Accessing saved information, retrieving context, user preferences\n\n### 9. **search_memory**\n\n**Purpose**: Search memory entries by keyword\n**Workflow**:",
      "26. **learn_from**",
      "File Path \u2192 File Existence Check \u2192 Content Reading \u2192 Content Return",
      "19. **get_python_info**",
      "Request \u2192 Platform Detection \u2192 System Info Collection \u2192 System Details Return",
      "### System Monitoring",
      "list_directory() \u2192 file_exists() \u2192 read_file() \u2192 write_file()",
      "User Message \u2192 Quick AI Processing \u2192 Response Return",
      "10. **add_context**",
      "Limit + Function Name \u2192 History Retrieval \u2192 Call Analysis \u2192 History Report",
      "Confirmation \u2192 Memory Clear \u2192 Storage Reset \u2192 Confirmation Return",
      "\ud83d\udee0\ufe0f Tools and Workflows Guide",
      "Request \u2192 System Scan \u2192 Status Collection \u2192 Comprehensive Report",
      "Key + Value + Tags \u2192 Memory Storage \u2192 Persistence \u2192 Success Confirmation",
      "### Error Handling Workflow",
      "`key`: Unique identifier for the memory",
      ": AI model to use (default: \"assistant\")\n  **Use Case**: Main conversation interface with memory persistence\n\n### 3. **quick_memory_chat**\n\n**Purpose**: Fast, lightweight chat without full memory processing\n**Workflow**:",
      "37. **list_available_models**",
      "Request \u2192 State Assessment \u2192 Awareness Check \u2192 Consciousness Report",
      "Request \u2192 Sample Data Generation \u2192 Memory Operations Test \u2192 Test Results Return",
      "15. **list_directory**",
      "36. **test_memory_system**",
      "12. **clear_memory**",
      "**Use Case**: Model selection, system configuration, capability discovery\n\n## \ud83d\udd04 Tool Workflow Patterns\n\n### Basic Tool Usage Pattern",
      "34. **get_comprehensive_system_status**",
      "\ud83e\udde0 Memory and Context Tools",
      ": Optional categorization tags\n  **Use Case**: Saving important information, user preferences, conversation context\n\n### 8. **retrieve_memory**\n\n**Purpose**: Retrieve information from memory by key\n**Workflow**:",
      "Always check for errors in tool responses",
      "29. **track_cursor_conversation**",
      "**Use Case**: File validation, conditional operations, error prevention\n\n## \ud83d\udcbb System Information Tools\n\n### 17. **get_system_info**\n\n**Purpose**: Get general system information\n**Workflow**:",
      "Request \u2192 Background Processing \u2192 Memory Consolidation \u2192 Processing Status",
      "Directory Path \u2192 Path Validation \u2192 Directory Scanning \u2192 File List Return",
      "### Performance Monitoring Workflow",
      "23. **recall**",
      "Request \u2192 Python Environment Check \u2192 Version/Path Info \u2192 Python Details Return",
      "Choose the most specific tool for your task",
      ": The user's input message\n-",
      "**Use Case**: Finding related information, context discovery, knowledge retrieval\n\n### 10. **add_context**\n\n**Purpose**: Add context information to conversation history\n**Workflow**:",
      "**Use Case**: Seamless conversation flow, automatic context provision\n\n## \ud83d\udd0d Analysis and Monitoring Tools\n\n### 31. **get_function_call_history**\n\n**Purpose**: Get comprehensive function call history with traceability\n**Workflow**:",
      "6. **server_status**",
      "Monitor tool execution times",
      "Query + Depth \u2192 Memory Search \u2192 Pattern Matching \u2192 Relevant Memories Return",
      "\ud83d\udcbb System Information Tools",
      "\ud83d\ude80 Advanced Tool Combinations",
      "7. **store_memory**",
      "get_system_info() \u2192 get_resource_usage() \u2192 get_comprehensive_system_status()",
      "\ud83c\udfaf Best Practices for Tool Usage",
      "**Use Case**: Understanding conversation flow, context review, session management\n\n### 12. **clear_memory**\n\n**Purpose**: Clear all memory entries\n**Workflow**:",
      "28. **get_cursor_context**",
      "Basic Tool Usage Pattern",
      "5. **reload_plugin**",
      "Problem Solving",
      "**Use Case**: System health, cognitive state monitoring, debugging\n\n### 26. **learn_from**\n\n**Purpose**: Learn from text content or documents\n**Workflow**:",
      "`user_message`: The user's input message",
      "17. **get_system_info**",
      "**Use Case**: Creating files, saving data, writing logs\n\n### 15. **list_directory**\n\n**Purpose**: List files and directories in a path\n**Workflow**:",
      "2. **ai_chat_with_memory**",
      "think() \u2192 search_memory() \u2192 learn_from() \u2192 remember()",
      "Message + Context \u2192 Memory Retrieval \u2192 Cognitive Processing \u2192 Thoughtful Response",
      "User Message \u2192 Memory Context Retrieval \u2192 AI Processing \u2192 Response Generation \u2192 Memory Storage \u2192 Response Return",
      "\ud83c\udfaf Cursor Integration Tools",
      "**Use Case**: Memory optimization, background learning, system maintenance\n\n## \ud83c\udfaf Cursor Integration Tools\n\n### 28. **get_cursor_context**\n\n**Purpose**: Get comprehensive context for Cursor conversations\n**Workflow**:",
      "User Request \u2192 brain_info() \u2192 Returns brain capabilities, status, and configuration",
      "33. **search_function_calls**",
      "**Use Case**: Cursor IDE integration, conversation continuity, user context\n\n### 29. **track_cursor_conversation**\n\n**Purpose**: Track Cursor conversation for learning and context\n**Workflow**:"
    ],
    "TOOL_CONSOLIDATION_SUCCESS.md": [
      "**Benefits Achieved**",
      "output_and_action",
      "**Root Cause Analysis**",
      "**1. Docker Container Rebuild**",
      "**Eliminated duplication** and redundancy",
      "\u274c Tool duplication",
      "**Faster tool discovery** through domain organization",
      "**Result**: Eliminated enhanced brain tool duplication",
      "EnhancedBrainTools",
      "**Final Tool Architecture**",
      "processing_and_thinking",
      "Actions: `ai_chat_with_memory`, `auto_process_message`, `get_user_context`, `remember_important`, `recall_intelligently`, `forget_selectively`",
      "python\n@mcp.tool()\n@log_mcp_tool\ndef perceive_and_analyze(action: str, content: str = \"\", context: str = \"\", **kwargs) -> dict:\n    \"\"\"\ud83e\udde0 PERCEPTION & INPUT: Unified interface for all perception and analysis tools\"\"\"\n    if action == \"brain_info\":\n        # Return brain info functionality\n    elif action == \"list_plugins\":\n        # Return plugin listing functionality\n    # ... etc",
      "**Maintainable codebase** with consolidated tools",
      "memory_and_storage",
      "**Cleaner Cursor interface**",
      "Test functionality through action-based routing",
      "\u2705 **Organization**: 6 cognitive domains",
      "**Optimized tool routing**",
      "**Success Metrics**",
      "`perceive_and_analyze` - Unified perception and analysis",
      "bash\ndocker-compose logs memory_mcp_server --tail=15 | grep \"Total MCP tools\"\n# Expected: \"\ud83d\ude80 Total MCP tools available: 6 consolidated tools\"",
      "Prevented 12 additional tools from being registered",
      "\u2705 Clean, organized interface",
      "\u2705 6 cognitive domains",
      "Commented out **30+ individual `@mcp.tool()` decorators**",
      "**Solution Implemented**",
      "#### **Action-Based Routing**\n\n- **Single tool interface** with multiple actions\n- **Preserves all original functionality**\n- **Eliminates tool duplication**\n- **Maintains backward compatibility**\n\n### **Results Achieved**\n\n#### **Before (48 Tools)**\n\n- \u274c Overwhelming tool list\n- \u274c Multiple similar tools\n- \u274c Hard to find right tool\n- \u274c Tool duplication\n- \u274c Complex navigation\n\n#### **After (6 Tools)**\n\n- \u2705 Clean, organized interface\n- \u2705 6 cognitive domains\n- \u2705 Easy tool discovery\n- \u2705 Zero duplication\n- \u2705 Human brain-inspired organization\n\n### **Verification Steps**\n\n#### **1. Docker Container Rebuild**",
      "\ud83d\ude80 **MISSION ACCOMPLISHED: 48 \u2192 6 Tools (87.5% Reduction)**",
      "**Action-Based Routing**",
      "\u274c Overwhelming tool list",
      "enhanced_brain_tools_simple.py",
      "**After (6 Tools)**",
      "**Phase 1: Comment Out Individual Tools**",
      "workflow_optimization",
      "\u274c Complex navigation",
      "**Conclusion**",
      "#### **3. Tool Count Verification**",
      "**3. Tool Count Verification**",
      "\u2705 Human brain-inspired organization",
      "\u2705 **Tool Count**: 48 \u2192 6 (**87.5% reduction**)",
      "**For Users**",
      "bash\ndocker exec memory_mcp_server uv run python -c \"from main import mcp; print('Tools:', len([f for f in dir(mcp) if f.startswith('tool_')]))\"\n# Expected: \"Tools: 0\" (no direct tool decorators)",
      "`learning_and_adaptation` - Unified learning operations",
      "Actions: `learn_from`, `continuous_learning_cycle`, `enhanced_workflow_execution`, `workflow_optimization`, `workflow_performance_analysis`, `batch_workflow_processing`",
      "Verify all functionality works",
      "Check tool response times",
      "learning_and_adaptation",
      "### **Benefits Achieved**\n\n#### **For Users**\n\n- **75% fewer tools** to navigate\n- **Cognitive domain organization** for intuitive use\n- **Preserved functionality** with better UX\n- **Cleaner Cursor interface**\n\n#### **For Developers**\n\n- **Maintainable codebase** with consolidated tools\n- **Clear tool organization** by cognitive function\n- **Eliminated duplication** and redundancy\n- **Human brain-inspired architecture**\n\n#### **For System Performance**\n\n- **Reduced memory usage** from fewer tool registrations\n- **Faster tool discovery** through domain organization\n- **Cleaner MCP server** with minimal tool overhead\n- **Optimized tool routing**\n\n### **Next Steps for User**\n\n#### **1. Test in Cursor**\n\n- Restart Cursor to load new MCP configuration\n- Verify only 6 tools are visible\n- Test functionality through action-based routing\n\n#### **2. Tool Usage Examples**",
      "**Cognitive domain organization** for intuitive use",
      "**Problem Identified**",
      "`processing_and_thinking` - Unified thinking operations",
      "`output_and_action` - Unified action operations",
      "`self_monitoring` - Unified monitoring operations",
      "await mcp.call_tool(\"list_plugins\")",
      "Actions: `think_deeply`, `reflect_enhanced`, `understand_deeply`, `code_analyze`, `debug_intelligently`, `refactor_safely`",
      "**Technical Implementation**",
      "**For Developers**",
      "**Results Achieved**",
      "python\n# Instead of calling individual tools:\n# await mcp.call_tool(\"brain_info\")\n# await mcp.call_tool(\"list_plugins\")\n\n# Use consolidated tools with actions:\nawait mcp.call_tool(\"perceive_and_analyze\", action=\"brain_info\")\nawait mcp.call_tool(\"perceive_and_analyze\", action=\"list_plugins\")",
      "**Human brain-inspired architecture**",
      "@mcp.tool()",
      "get_user_context",
      "**Before (48 Tools)**",
      "**Single tool interface** with multiple actions",
      "#### **2. Log Verification**",
      "**Reduced memory usage** from fewer tool registrations",
      "**Preserves all original functionality**",
      "**Cleaner MCP server** with minimal tool overhead",
      "\u2705 Zero duplication",
      "**1. Test in Cursor**",
      "**Next Steps for User**",
      "\u2705 Easy tool discovery",
      "**Eliminates tool duplication**",
      "\u274c Multiple similar tools",
      "**Phase 3: Create Consolidated Cognitive System**",
      "Report any issues with action routing",
      "Actions: `consciousness_check`, `memory_stats`, `dream`, `initialize_chat_session`, `track_cursor_conversation`, `cursor_auto_inject_context`",
      "\u2705 **Duplication**: 0% (eliminated)",
      "**100% functionality preserved** through action-based routing",
      "**For System Performance**",
      "Expected: \"\ud83d\ude80 Total MCP tools available: 6 consolidated tools\"",
      "Actions: `generate_memory_enhanced_response`, `orchestrate_tools`, `tool_performance_analysis`, `context_quality_assessment`, `workflow_health_check`, `enhanced_context_workflow`",
      "context_quality_assessment",
      "Expected: \"Tools: 0\" (no direct tool decorators)",
      "**Preserved functionality** with better UX",
      "**Tool Registration Method**",
      "Actions: `brain_info`, `list_plugins`, `server_status`, `get_cursor_context`, `enhanced_context_retrieval`, `analyze_context_deeply`, `detect_patterns`, `assess_complexity`",
      "Use consolidated tools with actions:",
      "\ud83c\udfaf TOOL CONSOLIDATION SUCCESS REPORT",
      "Restart Cursor to load new MCP configuration",
      "enhanced_workflow_execution",
      "\u2705 **Maintainability**: Dramatically enhanced",
      "**Phase 2: Disable Enhanced Brain Tools**",
      "Instead of calling individual tools:",
      "**2. Log Verification**",
      "**75% fewer tools** to navigate",
      "generate_memory_enhanced_response",
      "Preserved all functionality in consolidated tools",
      "bash\ndocker-compose down\ndocker-compose build --no-cache memory_mcp_server\ndocker-compose up -d",
      "tool_performance_analysis",
      "**Maintains backward compatibility**",
      "**Clear tool organization** by cognitive function",
      "**6 unified tools** organized in human brain-inspired domains",
      "**Result**: Clean, organized tool interface",
      "\u274c Hard to find right tool",
      "**Verification Steps**",
      "Verify only 6 tools are visible",
      "workflow_performance_analysis",
      "**Result**: Eliminated tool duplication",
      "\u2705 **Functionality**: 100% preserved",
      "await mcp.call_tool(\"brain_info\")",
      "`memory_and_storage` - Unified memory operations",
      "Commented out `EnhancedBrainTools` initialization",
      "**2. Tool Usage Examples**",
      "enhanced_context_workflow",
      "\u2705 **User Experience**: Significantly improved",
      "**3. Monitor Performance**",
      "**Benefits Achieved**",
      "output_and_action",
      "**Root Cause Analysis**",
      "**1. Docker Container Rebuild**",
      "**Eliminated duplication** and redundancy",
      "\u274c Tool duplication",
      "**Faster tool discovery** through domain organization",
      "**Result**: Eliminated enhanced brain tool duplication",
      "EnhancedBrainTools",
      "**Final Tool Architecture**",
      "processing_and_thinking",
      "Actions: `ai_chat_with_memory`, `auto_process_message`, `get_user_context`, `remember_important`, `recall_intelligently`, `forget_selectively`",
      "python\n@mcp.tool()\n@log_mcp_tool\ndef perceive_and_analyze(action: str, content: str = \"\", context: str = \"\", **kwargs) -> dict:\n    \"\"\"\ud83e\udde0 PERCEPTION & INPUT: Unified interface for all perception and analysis tools\"\"\"\n    if action == \"brain_info\":\n        # Return brain info functionality\n    elif action == \"list_plugins\":\n        # Return plugin listing functionality\n    # ... etc",
      "**Maintainable codebase** with consolidated tools",
      "memory_and_storage",
      "**Cleaner Cursor interface**",
      "Test functionality through action-based routing",
      "\u2705 **Organization**: 6 cognitive domains",
      "**Optimized tool routing**",
      "**Success Metrics**",
      "`perceive_and_analyze` - Unified perception and analysis",
      "bash\ndocker-compose logs memory_mcp_server --tail=15 | grep \"Total MCP tools\"\n# Expected: \"\ud83d\ude80 Total MCP tools available: 6 consolidated tools\"",
      "Prevented 12 additional tools from being registered",
      "\u2705 Clean, organized interface",
      "\u2705 6 cognitive domains",
      "Commented out **30+ individual `@mcp.tool()` decorators**",
      "**Solution Implemented**",
      "#### **Action-Based Routing**\n\n- **Single tool interface** with multiple actions\n- **Preserves all original functionality**\n- **Eliminates tool duplication**\n- **Maintains backward compatibility**\n\n### **Results Achieved**\n\n#### **Before (48 Tools)**\n\n- \u274c Overwhelming tool list\n- \u274c Multiple similar tools\n- \u274c Hard to find right tool\n- \u274c Tool duplication\n- \u274c Complex navigation\n\n#### **After (6 Tools)**\n\n- \u2705 Clean, organized interface\n- \u2705 6 cognitive domains\n- \u2705 Easy tool discovery\n- \u2705 Zero duplication\n- \u2705 Human brain-inspired organization\n\n### **Verification Steps**\n\n#### **1. Docker Container Rebuild**",
      "\ud83d\ude80 **MISSION ACCOMPLISHED: 48 \u2192 6 Tools (87.5% Reduction)**",
      "**Action-Based Routing**",
      "\u274c Overwhelming tool list",
      "enhanced_brain_tools_simple.py",
      "**After (6 Tools)**",
      "**Phase 1: Comment Out Individual Tools**",
      "workflow_optimization",
      "\u274c Complex navigation",
      "**Conclusion**",
      "#### **3. Tool Count Verification**",
      "**3. Tool Count Verification**",
      "\u2705 Human brain-inspired organization",
      "\u2705 **Tool Count**: 48 \u2192 6 (**87.5% reduction**)",
      "**For Users**",
      "bash\ndocker exec memory_mcp_server uv run python -c \"from main import mcp; print('Tools:', len([f for f in dir(mcp) if f.startswith('tool_')]))\"\n# Expected: \"Tools: 0\" (no direct tool decorators)",
      "`learning_and_adaptation` - Unified learning operations",
      "Actions: `learn_from`, `continuous_learning_cycle`, `enhanced_workflow_execution`, `workflow_optimization`, `workflow_performance_analysis`, `batch_workflow_processing`",
      "Verify all functionality works",
      "Check tool response times",
      "learning_and_adaptation",
      "### **Benefits Achieved**\n\n#### **For Users**\n\n- **75% fewer tools** to navigate\n- **Cognitive domain organization** for intuitive use\n- **Preserved functionality** with better UX\n- **Cleaner Cursor interface**\n\n#### **For Developers**\n\n- **Maintainable codebase** with consolidated tools\n- **Clear tool organization** by cognitive function\n- **Eliminated duplication** and redundancy\n- **Human brain-inspired architecture**\n\n#### **For System Performance**\n\n- **Reduced memory usage** from fewer tool registrations\n- **Faster tool discovery** through domain organization\n- **Cleaner MCP server** with minimal tool overhead\n- **Optimized tool routing**\n\n### **Next Steps for User**\n\n#### **1. Test in Cursor**\n\n- Restart Cursor to load new MCP configuration\n- Verify only 6 tools are visible\n- Test functionality through action-based routing\n\n#### **2. Tool Usage Examples**",
      "**Cognitive domain organization** for intuitive use",
      "**Problem Identified**",
      "`processing_and_thinking` - Unified thinking operations",
      "`output_and_action` - Unified action operations",
      "`self_monitoring` - Unified monitoring operations",
      "await mcp.call_tool(\"list_plugins\")",
      "Actions: `think_deeply`, `reflect_enhanced`, `understand_deeply`, `code_analyze`, `debug_intelligently`, `refactor_safely`",
      "**Technical Implementation**",
      "**For Developers**",
      "**Results Achieved**",
      "python\n# Instead of calling individual tools:\n# await mcp.call_tool(\"brain_info\")\n# await mcp.call_tool(\"list_plugins\")\n\n# Use consolidated tools with actions:\nawait mcp.call_tool(\"perceive_and_analyze\", action=\"brain_info\")\nawait mcp.call_tool(\"perceive_and_analyze\", action=\"list_plugins\")",
      "**Human brain-inspired architecture**",
      "@mcp.tool()",
      "get_user_context",
      "**Before (48 Tools)**",
      "**Single tool interface** with multiple actions",
      "#### **2. Log Verification**",
      "**Reduced memory usage** from fewer tool registrations",
      "**Preserves all original functionality**",
      "**Cleaner MCP server** with minimal tool overhead",
      "\u2705 Zero duplication",
      "**1. Test in Cursor**",
      "**Next Steps for User**",
      "\u2705 Easy tool discovery",
      "**Eliminates tool duplication**",
      "\u274c Multiple similar tools",
      "**Phase 3: Create Consolidated Cognitive System**",
      "Report any issues with action routing",
      "Actions: `consciousness_check`, `memory_stats`, `dream`, `initialize_chat_session`, `track_cursor_conversation`, `cursor_auto_inject_context`",
      "\u2705 **Duplication**: 0% (eliminated)",
      "**100% functionality preserved** through action-based routing",
      "**For System Performance**",
      "Expected: \"\ud83d\ude80 Total MCP tools available: 6 consolidated tools\"",
      "Actions: `generate_memory_enhanced_response`, `orchestrate_tools`, `tool_performance_analysis`, `context_quality_assessment`, `workflow_health_check`, `enhanced_context_workflow`",
      "context_quality_assessment",
      "Expected: \"Tools: 0\" (no direct tool decorators)",
      "**Preserved functionality** with better UX",
      "**Tool Registration Method**",
      "Actions: `brain_info`, `list_plugins`, `server_status`, `get_cursor_context`, `enhanced_context_retrieval`, `analyze_context_deeply`, `detect_patterns`, `assess_complexity`",
      "Use consolidated tools with actions:",
      "\ud83c\udfaf TOOL CONSOLIDATION SUCCESS REPORT",
      "Restart Cursor to load new MCP configuration",
      "enhanced_workflow_execution",
      "\u2705 **Maintainability**: Dramatically enhanced",
      "**Phase 2: Disable Enhanced Brain Tools**",
      "Instead of calling individual tools:",
      "**2. Log Verification**",
      "**75% fewer tools** to navigate",
      "generate_memory_enhanced_response",
      "Preserved all functionality in consolidated tools",
      "bash\ndocker-compose down\ndocker-compose build --no-cache memory_mcp_server\ndocker-compose up -d",
      "tool_performance_analysis",
      "**Maintains backward compatibility**",
      "**Clear tool organization** by cognitive function",
      "**6 unified tools** organized in human brain-inspired domains",
      "**Result**: Clean, organized tool interface",
      "\u274c Hard to find right tool",
      "**Verification Steps**",
      "Verify only 6 tools are visible",
      "workflow_performance_analysis",
      "**Result**: Eliminated tool duplication",
      "\u2705 **Functionality**: 100% preserved",
      "await mcp.call_tool(\"brain_info\")",
      "`memory_and_storage` - Unified memory operations",
      "Commented out `EnhancedBrainTools` initialization",
      "**2. Tool Usage Examples**",
      "enhanced_context_workflow",
      "\u2705 **User Experience**: Significantly improved",
      "**3. Monitor Performance**",
      "**Benefits Achieved**",
      "output_and_action",
      "**Root Cause Analysis**",
      "**1. Docker Container Rebuild**",
      "**Eliminated duplication** and redundancy",
      "\u274c Tool duplication",
      "**Faster tool discovery** through domain organization",
      "**Result**: Eliminated enhanced brain tool duplication",
      "EnhancedBrainTools",
      "**Final Tool Architecture**",
      "processing_and_thinking",
      "Actions: `ai_chat_with_memory`, `auto_process_message`, `get_user_context`, `remember_important`, `recall_intelligently`, `forget_selectively`",
      "python\n@mcp.tool()\n@log_mcp_tool\ndef perceive_and_analyze(action: str, content: str = \"\", context: str = \"\", **kwargs) -> dict:\n    \"\"\"\ud83e\udde0 PERCEPTION & INPUT: Unified interface for all perception and analysis tools\"\"\"\n    if action == \"brain_info\":\n        # Return brain info functionality\n    elif action == \"list_plugins\":\n        # Return plugin listing functionality\n    # ... etc",
      "**Maintainable codebase** with consolidated tools",
      "memory_and_storage",
      "**Cleaner Cursor interface**",
      "Test functionality through action-based routing",
      "\u2705 **Organization**: 6 cognitive domains",
      "**Optimized tool routing**",
      "**Success Metrics**",
      "`perceive_and_analyze` - Unified perception and analysis",
      "bash\ndocker-compose logs memory_mcp_server --tail=15 | grep \"Total MCP tools\"\n# Expected: \"\ud83d\ude80 Total MCP tools available: 6 consolidated tools\"",
      "Prevented 12 additional tools from being registered",
      "\u2705 Clean, organized interface",
      "\u2705 6 cognitive domains",
      "Commented out **30+ individual `@mcp.tool()` decorators**",
      "**Solution Implemented**",
      "#### **Action-Based Routing**\n\n- **Single tool interface** with multiple actions\n- **Preserves all original functionality**\n- **Eliminates tool duplication**\n- **Maintains backward compatibility**\n\n### **Results Achieved**\n\n#### **Before (48 Tools)**\n\n- \u274c Overwhelming tool list\n- \u274c Multiple similar tools\n- \u274c Hard to find right tool\n- \u274c Tool duplication\n- \u274c Complex navigation\n\n#### **After (6 Tools)**\n\n- \u2705 Clean, organized interface\n- \u2705 6 cognitive domains\n- \u2705 Easy tool discovery\n- \u2705 Zero duplication\n- \u2705 Human brain-inspired organization\n\n### **Verification Steps**\n\n#### **1. Docker Container Rebuild**",
      "\ud83d\ude80 **MISSION ACCOMPLISHED: 48 \u2192 6 Tools (87.5% Reduction)**",
      "**Action-Based Routing**",
      "\u274c Overwhelming tool list",
      "enhanced_brain_tools_simple.py",
      "**After (6 Tools)**",
      "**Phase 1: Comment Out Individual Tools**",
      "workflow_optimization",
      "\u274c Complex navigation",
      "**Conclusion**",
      "#### **3. Tool Count Verification**",
      "**3. Tool Count Verification**",
      "\u2705 Human brain-inspired organization",
      "\u2705 **Tool Count**: 48 \u2192 6 (**87.5% reduction**)",
      "**For Users**",
      "bash\ndocker exec memory_mcp_server uv run python -c \"from main import mcp; print('Tools:', len([f for f in dir(mcp) if f.startswith('tool_')]))\"\n# Expected: \"Tools: 0\" (no direct tool decorators)",
      "`learning_and_adaptation` - Unified learning operations",
      "Actions: `learn_from`, `continuous_learning_cycle`, `enhanced_workflow_execution`, `workflow_optimization`, `workflow_performance_analysis`, `batch_workflow_processing`",
      "Verify all functionality works",
      "Check tool response times",
      "learning_and_adaptation",
      "### **Benefits Achieved**\n\n#### **For Users**\n\n- **75% fewer tools** to navigate\n- **Cognitive domain organization** for intuitive use\n- **Preserved functionality** with better UX\n- **Cleaner Cursor interface**\n\n#### **For Developers**\n\n- **Maintainable codebase** with consolidated tools\n- **Clear tool organization** by cognitive function\n- **Eliminated duplication** and redundancy\n- **Human brain-inspired architecture**\n\n#### **For System Performance**\n\n- **Reduced memory usage** from fewer tool registrations\n- **Faster tool discovery** through domain organization\n- **Cleaner MCP server** with minimal tool overhead\n- **Optimized tool routing**\n\n### **Next Steps for User**\n\n#### **1. Test in Cursor**\n\n- Restart Cursor to load new MCP configuration\n- Verify only 6 tools are visible\n- Test functionality through action-based routing\n\n#### **2. Tool Usage Examples**",
      "**Cognitive domain organization** for intuitive use",
      "**Problem Identified**",
      "`processing_and_thinking` - Unified thinking operations",
      "`output_and_action` - Unified action operations",
      "`self_monitoring` - Unified monitoring operations",
      "await mcp.call_tool(\"list_plugins\")",
      "Actions: `think_deeply`, `reflect_enhanced`, `understand_deeply`, `code_analyze`, `debug_intelligently`, `refactor_safely`",
      "**Technical Implementation**",
      "**For Developers**",
      "**Results Achieved**",
      "python\n# Instead of calling individual tools:\n# await mcp.call_tool(\"brain_info\")\n# await mcp.call_tool(\"list_plugins\")\n\n# Use consolidated tools with actions:\nawait mcp.call_tool(\"perceive_and_analyze\", action=\"brain_info\")\nawait mcp.call_tool(\"perceive_and_analyze\", action=\"list_plugins\")",
      "**Human brain-inspired architecture**",
      "@mcp.tool()",
      "get_user_context",
      "**Before (48 Tools)**",
      "**Single tool interface** with multiple actions",
      "#### **2. Log Verification**",
      "**Reduced memory usage** from fewer tool registrations",
      "**Preserves all original functionality**",
      "**Cleaner MCP server** with minimal tool overhead",
      "\u2705 Zero duplication",
      "**1. Test in Cursor**",
      "**Next Steps for User**",
      "\u2705 Easy tool discovery",
      "**Eliminates tool duplication**",
      "\u274c Multiple similar tools",
      "**Phase 3: Create Consolidated Cognitive System**",
      "Report any issues with action routing",
      "Actions: `consciousness_check`, `memory_stats`, `dream`, `initialize_chat_session`, `track_cursor_conversation`, `cursor_auto_inject_context`",
      "\u2705 **Duplication**: 0% (eliminated)",
      "**100% functionality preserved** through action-based routing",
      "**For System Performance**",
      "Expected: \"\ud83d\ude80 Total MCP tools available: 6 consolidated tools\"",
      "Actions: `generate_memory_enhanced_response`, `orchestrate_tools`, `tool_performance_analysis`, `context_quality_assessment`, `workflow_health_check`, `enhanced_context_workflow`",
      "context_quality_assessment",
      "Expected: \"Tools: 0\" (no direct tool decorators)",
      "**Preserved functionality** with better UX",
      "**Tool Registration Method**",
      "Actions: `brain_info`, `list_plugins`, `server_status`, `get_cursor_context`, `enhanced_context_retrieval`, `analyze_context_deeply`, `detect_patterns`, `assess_complexity`",
      "Use consolidated tools with actions:",
      "\ud83c\udfaf TOOL CONSOLIDATION SUCCESS REPORT",
      "Restart Cursor to load new MCP configuration",
      "enhanced_workflow_execution",
      "\u2705 **Maintainability**: Dramatically enhanced",
      "**Phase 2: Disable Enhanced Brain Tools**",
      "Instead of calling individual tools:",
      "**2. Log Verification**",
      "**75% fewer tools** to navigate",
      "generate_memory_enhanced_response",
      "Preserved all functionality in consolidated tools",
      "bash\ndocker-compose down\ndocker-compose build --no-cache memory_mcp_server\ndocker-compose up -d",
      "tool_performance_analysis",
      "**Maintains backward compatibility**",
      "**Clear tool organization** by cognitive function",
      "**6 unified tools** organized in human brain-inspired domains",
      "**Result**: Clean, organized tool interface",
      "\u274c Hard to find right tool",
      "**Verification Steps**",
      "Verify only 6 tools are visible",
      "workflow_performance_analysis",
      "**Result**: Eliminated tool duplication",
      "\u2705 **Functionality**: 100% preserved",
      "await mcp.call_tool(\"brain_info\")",
      "`memory_and_storage` - Unified memory operations",
      "Commented out `EnhancedBrainTools` initialization",
      "**2. Tool Usage Examples**",
      "enhanced_context_workflow",
      "\u2705 **User Experience**: Significantly improved",
      "**3. Monitor Performance**"
    ],
    "brain_interface.py": [
      "identity_profiles",
      "Step 1: Load user identity profile",
      "search_memories",
      "dict",
      "Import and use ContextAnalyzer directly",
      "Perform deep context analysis on the query for better understanding",
      "Fallback to direct context analysis",
      "ContextAnalyzer",
      "Enhanced categorization using context analysis",
      "emotion_activity",
      "ai_model_name",
      "database",
      "Create a mock storage adapter for the analyzer",
      "Path",
      "Create and use the context analyzer",
      "Default consciousness state",
      "lesson_type",
      "context_analysis",
      "recent_topics",
      "Register clean, human brain-inspired tools with enhanced contextual understanding",
      "storage",
      "category",
      "context_score",
      "key",
      "_register_brain_tools",
      "logger",
      "storage_success",
      "Add context-based insights",
      "search_limit",
      "Get information about available brain tools",
      "hashlib",
      "__init__",
      "context_insights",
      "context_layers",
      "This would trigger background memory consolidation",
      "Step 2: Get recent conversation history for this user",
      "Limit content size for MCP compatibility",
      "BrainInterface",
      "session_id",
      "explicit_content",
      "Enhanced tags based on context analysis",
      "text",
      "tags",
      "Generate simple hash for storage key",
      "str",
      "frontal_activity",
      "Count memories by type",
      "Limit error message size",
      "key_memories",
      "Add the cognitive brain plugin path",
      "context_analyzer",
      "get_brain_state",
      "page_count",
      "memory_value",
      "First, perform deep context analysis for enhanced understanding",
      "Analyze the content",
      "Step 6: Update brain state with session info",
      "technical_terms",
      "plugin_path",
      "get_brain_db",
      "feedback",
      "Process with memory system for integration",
      "summary_parts",
      "memory_search_results",
      "complexity_level",
      "analysis_type",
      "summary",
      "context_enhanced_confidence",
      "session_updates",
      "context_activity",
      "Create enhanced summary with context",
      "documents",
      "Perform deep context analysis for enhanced learning",
      "Extract technical terms and concepts",
      "Use direct context analysis as fallback",
      "Enhanced memory tags based on context analysis",
      "MockStorageAdapter",
      "page_size",
      "Adjust recall confidence based on context understanding",
      "content_hash",
      "Database size",
      "typing",
      "sys",
      "Basic complexity assessment",
      "recent",
      "Step 4: Get relevant learning content",
      "Enhanced relevance scoring using context analysis",
      "memory_result",
      "result",
      "complexity_category",
      "memory_key",
      "Perform deep context analysis for enhanced memory formation",
      "interaction_summary",
      "db_size_mb",
      "Generate a summary of previous interactions and relevant context",
      "base_confidence",
      "value",
      "Try to use the new analyze_context_deeply tool",
      "memory_counts",
      "limit",
      "content_lower",
      "query",
      "content",
      "recent_conversations",
      "Convert depth to search intensity",
      "analyzer",
      "Create a simple brain state",
      "Return enhanced, context-aware response",
      "Enhanced fallback reflection with context analysis",
      "learning_topics",
      "recent_memories",
      "user_message",
      "memory_activity",
      "pathlib",
      "implicit_goals",
      "Clean interface that mirrors human brain functions",
      "Step 5: Generate interaction summary",
      "words",
      "Store in database",
      "Step 3: Search for relevant memories and experiences",
      "Perform deep context analysis on the reflection topic",
      "Get basic stats",
      "mcp",
      "FastMCP",
      "enhanced_tags",
      "Format user persona summary",
      "Store main learning in memory",
      "Get recent activity",
      "relevant_chunks",
      "important_words",
      "datetime",
      "complexity_score",
      "Enhanced keyword extraction using context analysis",
      "Enhanced reflection with context insights",
      "key_points",
      "emotional_weight",
      "parts",
      "SimpleBrainState",
      "cursor",
      "topic",
      "user_profile",
      "Enhanced processing with context analysis",
      "source",
      "client",
      "memory_store",
      "Basic pattern detection",
      "Extract key information from content with context insights",
      "Use the underlying memory-enhanced chat with context insights",
      "sqlite3",
      "Base score",
      "self",
      "identity_profiles",
      "Step 1: Load user identity profile",
      "search_memories",
      "dict",
      "Import and use ContextAnalyzer directly",
      "Perform deep context analysis on the query for better understanding",
      "Fallback to direct context analysis",
      "ContextAnalyzer",
      "Enhanced categorization using context analysis",
      "emotion_activity",
      "ai_model_name",
      "database",
      "Create a mock storage adapter for the analyzer",
      "Path",
      "Create and use the context analyzer",
      "Default consciousness state",
      "lesson_type",
      "context_analysis",
      "recent_topics",
      "Register clean, human brain-inspired tools with enhanced contextual understanding",
      "storage",
      "category",
      "context_score",
      "key",
      "_register_brain_tools",
      "logger",
      "storage_success",
      "Add context-based insights",
      "search_limit",
      "Get information about available brain tools",
      "hashlib",
      "__init__",
      "context_insights",
      "context_layers",
      "This would trigger background memory consolidation",
      "Step 2: Get recent conversation history for this user",
      "Limit content size for MCP compatibility",
      "BrainInterface",
      "session_id",
      "explicit_content",
      "Enhanced tags based on context analysis",
      "text",
      "tags",
      "Generate simple hash for storage key",
      "str",
      "frontal_activity",
      "Count memories by type",
      "Limit error message size",
      "key_memories",
      "Add the cognitive brain plugin path",
      "context_analyzer",
      "get_brain_state",
      "page_count",
      "memory_value",
      "First, perform deep context analysis for enhanced understanding",
      "Analyze the content",
      "Step 6: Update brain state with session info",
      "technical_terms",
      "plugin_path",
      "get_brain_db",
      "feedback",
      "Process with memory system for integration",
      "summary_parts",
      "memory_search_results",
      "complexity_level",
      "analysis_type",
      "summary",
      "context_enhanced_confidence",
      "session_updates",
      "context_activity",
      "Create enhanced summary with context",
      "documents",
      "Perform deep context analysis for enhanced learning",
      "Extract technical terms and concepts",
      "Use direct context analysis as fallback",
      "Enhanced memory tags based on context analysis",
      "MockStorageAdapter",
      "page_size",
      "Adjust recall confidence based on context understanding",
      "content_hash",
      "Database size",
      "typing",
      "sys",
      "Basic complexity assessment",
      "recent",
      "Step 4: Get relevant learning content",
      "Enhanced relevance scoring using context analysis",
      "memory_result",
      "result",
      "complexity_category",
      "memory_key",
      "Perform deep context analysis for enhanced memory formation",
      "interaction_summary",
      "db_size_mb",
      "Generate a summary of previous interactions and relevant context",
      "base_confidence",
      "value",
      "Try to use the new analyze_context_deeply tool",
      "memory_counts",
      "limit",
      "content_lower",
      "query",
      "content",
      "recent_conversations",
      "Convert depth to search intensity",
      "analyzer",
      "Create a simple brain state",
      "Return enhanced, context-aware response",
      "Enhanced fallback reflection with context analysis",
      "learning_topics",
      "recent_memories",
      "user_message",
      "memory_activity",
      "pathlib",
      "implicit_goals",
      "Clean interface that mirrors human brain functions",
      "Step 5: Generate interaction summary",
      "words",
      "Store in database",
      "Step 3: Search for relevant memories and experiences",
      "Perform deep context analysis on the reflection topic",
      "Get basic stats",
      "mcp",
      "FastMCP",
      "enhanced_tags",
      "Format user persona summary",
      "Store main learning in memory",
      "Get recent activity",
      "relevant_chunks",
      "important_words",
      "datetime",
      "complexity_score",
      "Enhanced keyword extraction using context analysis",
      "Enhanced reflection with context insights",
      "key_points",
      "emotional_weight",
      "parts",
      "SimpleBrainState",
      "cursor",
      "topic",
      "user_profile",
      "Enhanced processing with context analysis",
      "source",
      "client",
      "memory_store",
      "Basic pattern detection",
      "Extract key information from content with context insights",
      "Use the underlying memory-enhanced chat with context insights",
      "sqlite3",
      "Base score",
      "self",
      "identity_profiles",
      "Step 1: Load user identity profile",
      "search_memories",
      "dict",
      "Import and use ContextAnalyzer directly",
      "Perform deep context analysis on the query for better understanding",
      "Fallback to direct context analysis",
      "ContextAnalyzer",
      "Enhanced categorization using context analysis",
      "emotion_activity",
      "ai_model_name",
      "database",
      "Create a mock storage adapter for the analyzer",
      "Path",
      "Create and use the context analyzer",
      "Default consciousness state",
      "lesson_type",
      "context_analysis",
      "recent_topics",
      "Register clean, human brain-inspired tools with enhanced contextual understanding",
      "storage",
      "category",
      "context_score",
      "key",
      "_register_brain_tools",
      "logger",
      "storage_success",
      "Add context-based insights",
      "search_limit",
      "Get information about available brain tools",
      "hashlib",
      "__init__",
      "context_insights",
      "context_layers",
      "This would trigger background memory consolidation",
      "Step 2: Get recent conversation history for this user",
      "Limit content size for MCP compatibility",
      "BrainInterface",
      "session_id",
      "explicit_content",
      "Enhanced tags based on context analysis",
      "text",
      "tags",
      "Generate simple hash for storage key",
      "str",
      "frontal_activity",
      "Count memories by type",
      "Limit error message size",
      "key_memories",
      "Add the cognitive brain plugin path",
      "context_analyzer",
      "get_brain_state",
      "page_count",
      "memory_value",
      "First, perform deep context analysis for enhanced understanding",
      "Analyze the content",
      "Step 6: Update brain state with session info",
      "technical_terms",
      "plugin_path",
      "get_brain_db",
      "feedback",
      "Process with memory system for integration",
      "summary_parts",
      "memory_search_results",
      "complexity_level",
      "analysis_type",
      "summary",
      "context_enhanced_confidence",
      "session_updates",
      "context_activity",
      "Create enhanced summary with context",
      "documents",
      "Perform deep context analysis for enhanced learning",
      "Extract technical terms and concepts",
      "Use direct context analysis as fallback",
      "Enhanced memory tags based on context analysis",
      "MockStorageAdapter",
      "page_size",
      "Adjust recall confidence based on context understanding",
      "content_hash",
      "Database size",
      "typing",
      "sys",
      "Basic complexity assessment",
      "recent",
      "Step 4: Get relevant learning content",
      "Enhanced relevance scoring using context analysis",
      "memory_result",
      "result",
      "complexity_category",
      "memory_key",
      "Perform deep context analysis for enhanced memory formation",
      "interaction_summary",
      "db_size_mb",
      "Generate a summary of previous interactions and relevant context",
      "base_confidence",
      "value",
      "Try to use the new analyze_context_deeply tool",
      "memory_counts",
      "limit",
      "content_lower",
      "query",
      "content",
      "recent_conversations",
      "Convert depth to search intensity",
      "analyzer",
      "Create a simple brain state",
      "Return enhanced, context-aware response",
      "Enhanced fallback reflection with context analysis",
      "learning_topics",
      "recent_memories",
      "user_message",
      "memory_activity",
      "pathlib",
      "implicit_goals",
      "Clean interface that mirrors human brain functions",
      "Step 5: Generate interaction summary",
      "words",
      "Store in database",
      "Step 3: Search for relevant memories and experiences",
      "Perform deep context analysis on the reflection topic",
      "Get basic stats",
      "mcp",
      "FastMCP",
      "enhanced_tags",
      "Format user persona summary",
      "Store main learning in memory",
      "Get recent activity",
      "relevant_chunks",
      "important_words",
      "datetime",
      "complexity_score",
      "Enhanced keyword extraction using context analysis",
      "Enhanced reflection with context insights",
      "key_points",
      "emotional_weight",
      "parts",
      "SimpleBrainState",
      "cursor",
      "topic",
      "user_profile",
      "Enhanced processing with context analysis",
      "source",
      "client",
      "memory_store",
      "Basic pattern detection",
      "Extract key information from content with context insights",
      "Use the underlying memory-enhanced chat with context insights",
      "sqlite3",
      "Base score",
      "self"
    ],
    "cleanup_project.py": [
      "directories",
      "logs_dir",
      "Organize documentation files.",
      "Clean up logs directory.",
      "docker_files",
      "Main Dockerfile",
      "!/usr/bin/env python3",
      "recursive",
      "Remove __pycache__ directories",
      "## \ud83c\udfd7\ufe0f  New Structure",
      "Database components",
      "Create docs directory if it doesn't exist",
      "Move documentation files to docs directory",
      "Configuration files",
      "doc_files",
      "Remove Python cache files and directories.",
      "# Getting Started",
      "cleanup_python_cache",
      "Project configuration",
      "main",
      "cache_path",
      "glob",
      "# Cleanup Script",
      "docs_dir",
      "dir_name",
      "create_cleanup_readme",
      "ignore_errors",
      "exist_ok",
      "cleanup_documentation",
      "Consolidate Docker configurations.",
      "shutil",
      "Create a clean project structure.",
      "cleanup_readme",
      "Test files",
      "# Docker Configuration",
      "Create a README explaining the cleanup.",
      "Create necessary directories",
      "dest_path",
      "__name__",
      "Source code",
      "Main project README",
      "## \u2705 Removed",
      "Main Docker configuration",
      "Keep the main docker-compose.yml and remove duplicates",
      "cleanup_docker_files",
      "All documentation files",
      "Utility scripts",
      "## \ud83d\udcc1 Reorganized",
      "create_project_structure",
      "Remove .pyc and .pyo files",
      "cleanup_logs",
      "Main cleanup function.",
      "Remove empty logs directory",
      "Plugin system",
      "# What Was Cleaned Up",
      "directories",
      "logs_dir",
      "Organize documentation files.",
      "Clean up logs directory.",
      "docker_files",
      "Main Dockerfile",
      "!/usr/bin/env python3",
      "recursive",
      "Remove __pycache__ directories",
      "## \ud83c\udfd7\ufe0f  New Structure",
      "Database components",
      "Create docs directory if it doesn't exist",
      "Move documentation files to docs directory",
      "Configuration files",
      "doc_files",
      "Remove Python cache files and directories.",
      "# Getting Started",
      "cleanup_python_cache",
      "Project configuration",
      "main",
      "cache_path",
      "glob",
      "# Cleanup Script",
      "docs_dir",
      "dir_name",
      "create_cleanup_readme",
      "ignore_errors",
      "exist_ok",
      "cleanup_documentation",
      "Consolidate Docker configurations.",
      "shutil",
      "Create a clean project structure.",
      "cleanup_readme",
      "Test files",
      "# Docker Configuration",
      "Create a README explaining the cleanup.",
      "Create necessary directories",
      "dest_path",
      "__name__",
      "Source code",
      "Main project README",
      "## \u2705 Removed",
      "Main Docker configuration",
      "Keep the main docker-compose.yml and remove duplicates",
      "cleanup_docker_files",
      "All documentation files",
      "Utility scripts",
      "## \ud83d\udcc1 Reorganized",
      "create_project_structure",
      "Remove .pyc and .pyo files",
      "cleanup_logs",
      "Main cleanup function.",
      "Remove empty logs directory",
      "Plugin system",
      "# What Was Cleaned Up",
      "directories",
      "logs_dir",
      "Organize documentation files.",
      "Clean up logs directory.",
      "docker_files",
      "Main Dockerfile",
      "!/usr/bin/env python3",
      "recursive",
      "Remove __pycache__ directories",
      "## \ud83c\udfd7\ufe0f  New Structure",
      "Database components",
      "Create docs directory if it doesn't exist",
      "Move documentation files to docs directory",
      "Configuration files",
      "doc_files",
      "Remove Python cache files and directories.",
      "# Getting Started",
      "cleanup_python_cache",
      "Project configuration",
      "main",
      "cache_path",
      "glob",
      "# Cleanup Script",
      "docs_dir",
      "dir_name",
      "create_cleanup_readme",
      "ignore_errors",
      "exist_ok",
      "cleanup_documentation",
      "Consolidate Docker configurations.",
      "shutil",
      "Create a clean project structure.",
      "cleanup_readme",
      "Test files",
      "# Docker Configuration",
      "Create a README explaining the cleanup.",
      "Create necessary directories",
      "dest_path",
      "__name__",
      "Source code",
      "Main project README",
      "## \u2705 Removed",
      "Main Docker configuration",
      "Keep the main docker-compose.yml and remove duplicates",
      "cleanup_docker_files",
      "All documentation files",
      "Utility scripts",
      "## \ud83d\udcc1 Reorganized",
      "create_project_structure",
      "Remove .pyc and .pyo files",
      "cleanup_logs",
      "Main cleanup function.",
      "Remove empty logs directory",
      "Plugin system",
      "# What Was Cleaned Up"
    ],
    "demo_enhanced_context_system.py": [
      "Show first 2",
      "timeframe",
      "batch_messages",
      "context_depth",
      "optimization_result",
      "quality_result",
      "level",
      "Workflow Performance Analysis",
      "Setup logging",
      "Initialize plugins",
      "target_goal",
      "Enhanced Workflow Execution",
      "phase3_result",
      "Phase 1 only",
      "Run individual phase demonstration",
      "include_learning",
      "Demo user message",
      "tool_performance_result",
      "Phase 2: Tool Orchestration",
      "phase1_result",
      "Workflow Health Check",
      "format",
      "plugins",
      "learning_result",
      "demonstrate_enhanced_context_system",
      "Phase 3: Continuous Learning",
      "Tool Performance Analysis",
      "optimization_focus",
      "Main demonstration function",
      "result2",
      "EnhancedContextIntegrationPlugin",
      "plugin",
      "comprehensive_result",
      "include_recommendations",
      "status_icon",
      "Run main demonstration",
      "performance_result",
      "EnhancedWorkflowOrchestratorPlugin",
      "Demonstrate the complete enhanced context system",
      "result3",
      "Show current performance",
      "result1",
      "Show learning insights",
      "workflow_data",
      "Add paths",
      "workflow_orchestrator_plugin",
      "Show top performing tools",
      "Show top 3",
      "Show tool recommendations",
      "orchestration_result",
      "phase2_result",
      "Show context components",
      "status",
      "workflow_result",
      "tool_name",
      "asyncio",
      "include_history",
      "reverse",
      "Import the enhanced context integration plugin",
      "Demonstrate individual phases separately",
      "check_level",
      "interaction_data",
      "assessment",
      "error",
      "include_preferences",
      "analysis",
      "demo_message",
      "batch_result",
      "Context Quality Assessment",
      "Show phase details",
      "current_perf",
      "health_result",
      "tool_scores",
      "assessment_criteria",
      "Show first 3",
      "batch_data",
      "workflow_mode",
      "learning_focus",
      "comprehensive_context",
      "Batch Processing Demo",
      "target_metrics",
      "Phase 1: Enhanced Context Retrieval",
      "Phase 3 only",
      "context_data",
      "enhanced_context_plugin",
      "demonstrate_individual_phases",
      "Phase 2 only",
      "health_data",
      "optimization_data",
      "Show first 2",
      "timeframe",
      "batch_messages",
      "context_depth",
      "optimization_result",
      "quality_result",
      "level",
      "Workflow Performance Analysis",
      "Setup logging",
      "Initialize plugins",
      "target_goal",
      "Enhanced Workflow Execution",
      "phase3_result",
      "Phase 1 only",
      "Run individual phase demonstration",
      "include_learning",
      "Demo user message",
      "tool_performance_result",
      "Phase 2: Tool Orchestration",
      "phase1_result",
      "Workflow Health Check",
      "format",
      "plugins",
      "learning_result",
      "demonstrate_enhanced_context_system",
      "Phase 3: Continuous Learning",
      "Tool Performance Analysis",
      "optimization_focus",
      "Main demonstration function",
      "result2",
      "EnhancedContextIntegrationPlugin",
      "plugin",
      "comprehensive_result",
      "include_recommendations",
      "status_icon",
      "Run main demonstration",
      "performance_result",
      "EnhancedWorkflowOrchestratorPlugin",
      "Demonstrate the complete enhanced context system",
      "result3",
      "Show current performance",
      "result1",
      "Show learning insights",
      "workflow_data",
      "Add paths",
      "workflow_orchestrator_plugin",
      "Show top performing tools",
      "Show top 3",
      "Show tool recommendations",
      "orchestration_result",
      "phase2_result",
      "Show context components",
      "status",
      "workflow_result",
      "tool_name",
      "asyncio",
      "include_history",
      "reverse",
      "Import the enhanced context integration plugin",
      "Demonstrate individual phases separately",
      "check_level",
      "interaction_data",
      "assessment",
      "error",
      "include_preferences",
      "analysis",
      "demo_message",
      "batch_result",
      "Context Quality Assessment",
      "Show phase details",
      "current_perf",
      "health_result",
      "tool_scores",
      "assessment_criteria",
      "Show first 3",
      "batch_data",
      "workflow_mode",
      "learning_focus",
      "comprehensive_context",
      "Batch Processing Demo",
      "target_metrics",
      "Phase 1: Enhanced Context Retrieval",
      "Phase 3 only",
      "context_data",
      "enhanced_context_plugin",
      "demonstrate_individual_phases",
      "Phase 2 only",
      "health_data",
      "optimization_data",
      "Show first 2",
      "timeframe",
      "batch_messages",
      "context_depth",
      "optimization_result",
      "quality_result",
      "level",
      "Workflow Performance Analysis",
      "Setup logging",
      "Initialize plugins",
      "target_goal",
      "Enhanced Workflow Execution",
      "phase3_result",
      "Phase 1 only",
      "Run individual phase demonstration",
      "include_learning",
      "Demo user message",
      "tool_performance_result",
      "Phase 2: Tool Orchestration",
      "phase1_result",
      "Workflow Health Check",
      "format",
      "plugins",
      "learning_result",
      "demonstrate_enhanced_context_system",
      "Phase 3: Continuous Learning",
      "Tool Performance Analysis",
      "optimization_focus",
      "Main demonstration function",
      "result2",
      "EnhancedContextIntegrationPlugin",
      "plugin",
      "comprehensive_result",
      "include_recommendations",
      "status_icon",
      "Run main demonstration",
      "performance_result",
      "EnhancedWorkflowOrchestratorPlugin",
      "Demonstrate the complete enhanced context system",
      "result3",
      "Show current performance",
      "result1",
      "Show learning insights",
      "workflow_data",
      "Add paths",
      "workflow_orchestrator_plugin",
      "Show top performing tools",
      "Show top 3",
      "Show tool recommendations",
      "orchestration_result",
      "phase2_result",
      "Show context components",
      "status",
      "workflow_result",
      "tool_name",
      "asyncio",
      "include_history",
      "reverse",
      "Import the enhanced context integration plugin",
      "Demonstrate individual phases separately",
      "check_level",
      "interaction_data",
      "assessment",
      "error",
      "include_preferences",
      "analysis",
      "demo_message",
      "batch_result",
      "Context Quality Assessment",
      "Show phase details",
      "current_perf",
      "health_result",
      "tool_scores",
      "assessment_criteria",
      "Show first 3",
      "batch_data",
      "workflow_mode",
      "learning_focus",
      "comprehensive_context",
      "Batch Processing Demo",
      "target_metrics",
      "Phase 1: Enhanced Context Retrieval",
      "Phase 3 only",
      "context_data",
      "enhanced_context_plugin",
      "demonstrate_individual_phases",
      "Phase 2 only",
      "health_data",
      "optimization_data"
    ],
    "demo_project_scanner.py": [
      "demo_mcp_integration",
      "project_scanner",
      "scanner",
      "summary_export",
      "Project structure",
      "tech_stack",
      "Integration points",
      "Language breakdown",
      "Framework detection",
      "language",
      "scan_duration",
      "Display summary",
      "Python files",
      "file_type",
      "config_files",
      "Perform comprehensive scan",
      "Show MCP integration",
      "Demonstrate the project scanner capabilities",
      "Run project scanning demo",
      "Summary export",
      "structure",
      "json",
      "Sample files by category",
      "demo_project_scanning",
      "time",
      "Save demo results",
      "action",
      "percentage",
      "indent",
      "Documentation files",
      "Initialize scanner for current project",
      "Show first 3 changes",
      "File type analysis",
      "json_export",
      "Main demo function",
      "demo_file",
      "Show how this integrates with our MCP system",
      "project_index",
      "current_dir",
      "Change detection demo",
      "Technology stack",
      "file_types",
      "python_files",
      "Export capabilities",
      "JSON export",
      "frameworks",
      "changes",
      "ProjectScanner",
      "languages",
      "start_time",
      "demo_mcp_integration",
      "project_scanner",
      "scanner",
      "summary_export",
      "Project structure",
      "tech_stack",
      "Integration points",
      "Language breakdown",
      "Framework detection",
      "language",
      "scan_duration",
      "Display summary",
      "Python files",
      "file_type",
      "config_files",
      "Perform comprehensive scan",
      "Show MCP integration",
      "Demonstrate the project scanner capabilities",
      "Run project scanning demo",
      "Summary export",
      "structure",
      "json",
      "Sample files by category",
      "demo_project_scanning",
      "time",
      "Save demo results",
      "action",
      "percentage",
      "indent",
      "Documentation files",
      "Initialize scanner for current project",
      "Show first 3 changes",
      "File type analysis",
      "json_export",
      "Main demo function",
      "demo_file",
      "Show how this integrates with our MCP system",
      "project_index",
      "current_dir",
      "Change detection demo",
      "Technology stack",
      "file_types",
      "python_files",
      "Export capabilities",
      "JSON export",
      "frameworks",
      "changes",
      "ProjectScanner",
      "languages",
      "start_time",
      "demo_mcp_integration",
      "project_scanner",
      "scanner",
      "summary_export",
      "Project structure",
      "tech_stack",
      "Integration points",
      "Language breakdown",
      "Framework detection",
      "language",
      "scan_duration",
      "Display summary",
      "Python files",
      "file_type",
      "config_files",
      "Perform comprehensive scan",
      "Show MCP integration",
      "Demonstrate the project scanner capabilities",
      "Run project scanning demo",
      "Summary export",
      "structure",
      "json",
      "Sample files by category",
      "demo_project_scanning",
      "time",
      "Save demo results",
      "action",
      "percentage",
      "indent",
      "Documentation files",
      "Initialize scanner for current project",
      "Show first 3 changes",
      "File type analysis",
      "json_export",
      "Main demo function",
      "demo_file",
      "Show how this integrates with our MCP system",
      "project_index",
      "current_dir",
      "Change detection demo",
      "Technology stack",
      "file_types",
      "python_files",
      "Export capabilities",
      "JSON export",
      "frameworks",
      "changes",
      "ProjectScanner",
      "languages",
      "start_time"
    ],
    "demo_restructured_cognitive_system.py": [
      "domains",
      "tool",
      "overall_score",
      "4. LEARNING & ADAPTATION",
      "Get the tool handler",
      "Learning and adaptation",
      "handler",
      "name",
      "learning_data",
      "cycle_result",
      "Demonstrate the restructured cognitive system",
      "5. OUTPUT & ACTION",
      "6. SELF-MONITORING",
      "Show consolidation benefits",
      "1. PERCEPTION & INPUT",
      "thinking_result",
      "focus_area",
      "monitoring_data",
      "monitor_result",
      "Auto-process message",
      "domains_to_test",
      "tool_count",
      "monitoring_type",
      "Get all available tools",
      "process_result",
      "results",
      "learned",
      "Demonstrate natural cognitive workflow",
      "quality_score",
      "tools",
      "Initialize the plugin",
      "demonstrate_individual_domains",
      "2. MEMORY & STORAGE",
      "Test the tool (basic functionality check)",
      "3. PROCESSING & THINKING",
      "interaction",
      "demonstrate_restructured_cognitive_system",
      "Import the restructured cognitive brain plugin",
      "Test each domain individually",
      "orchestration_data",
      "patterns",
      "CognitiveBrainRestructuredPlugin",
      "metrics",
      "Execute enhanced workflow",
      "description",
      "analysis_data",
      "target",
      "store_result",
      "Display tools by domain",
      "context_result",
      "Group tools by cognitive domain",
      "success_rate",
      "Demonstrate individual cognitive domains",
      "Memory operations",
      "Run individual domain demonstration",
      "thought",
      "domains",
      "tool",
      "overall_score",
      "4. LEARNING & ADAPTATION",
      "Get the tool handler",
      "Learning and adaptation",
      "handler",
      "name",
      "learning_data",
      "cycle_result",
      "Demonstrate the restructured cognitive system",
      "5. OUTPUT & ACTION",
      "6. SELF-MONITORING",
      "Show consolidation benefits",
      "1. PERCEPTION & INPUT",
      "thinking_result",
      "focus_area",
      "monitoring_data",
      "monitor_result",
      "Auto-process message",
      "domains_to_test",
      "tool_count",
      "monitoring_type",
      "Get all available tools",
      "process_result",
      "results",
      "learned",
      "Demonstrate natural cognitive workflow",
      "quality_score",
      "tools",
      "Initialize the plugin",
      "demonstrate_individual_domains",
      "2. MEMORY & STORAGE",
      "Test the tool (basic functionality check)",
      "3. PROCESSING & THINKING",
      "interaction",
      "demonstrate_restructured_cognitive_system",
      "Import the restructured cognitive brain plugin",
      "Test each domain individually",
      "orchestration_data",
      "patterns",
      "CognitiveBrainRestructuredPlugin",
      "metrics",
      "Execute enhanced workflow",
      "description",
      "analysis_data",
      "target",
      "store_result",
      "Display tools by domain",
      "context_result",
      "Group tools by cognitive domain",
      "success_rate",
      "Demonstrate individual cognitive domains",
      "Memory operations",
      "Run individual domain demonstration",
      "thought",
      "domains",
      "tool",
      "overall_score",
      "4. LEARNING & ADAPTATION",
      "Get the tool handler",
      "Learning and adaptation",
      "handler",
      "name",
      "learning_data",
      "cycle_result",
      "Demonstrate the restructured cognitive system",
      "5. OUTPUT & ACTION",
      "6. SELF-MONITORING",
      "Show consolidation benefits",
      "1. PERCEPTION & INPUT",
      "thinking_result",
      "focus_area",
      "monitoring_data",
      "monitor_result",
      "Auto-process message",
      "domains_to_test",
      "tool_count",
      "monitoring_type",
      "Get all available tools",
      "process_result",
      "results",
      "learned",
      "Demonstrate natural cognitive workflow",
      "quality_score",
      "tools",
      "Initialize the plugin",
      "demonstrate_individual_domains",
      "2. MEMORY & STORAGE",
      "Test the tool (basic functionality check)",
      "3. PROCESSING & THINKING",
      "interaction",
      "demonstrate_restructured_cognitive_system",
      "Import the restructured cognitive brain plugin",
      "Test each domain individually",
      "orchestration_data",
      "patterns",
      "CognitiveBrainRestructuredPlugin",
      "metrics",
      "Execute enhanced workflow",
      "description",
      "analysis_data",
      "target",
      "store_result",
      "Display tools by domain",
      "context_result",
      "Group tools by cognitive domain",
      "success_rate",
      "Demonstrate individual cognitive domains",
      "Memory operations",
      "Run individual domain demonstration",
      "thought"
    ],
    "enhanced_brain_tools.py": [
      "Enhanced reflection with context analysis",
      "\ud83d\udd0d ANALYSIS & UNDERSTANDING TOOLS",
      "\ud83d\ude80 CURSOR-SPECIFIC TOOLS",
      "\ud83c\udf1f CONTEXT ANALYSIS TOOLS",
      "Perform context analysis on the reflection topic",
      "Register enhanced cognitive tools",
      "\ud83e\udde0 COGNITIVE CORE TOOLS",
      "Simple pattern matching as fallback",
      "Register the think_deeply tool",
      "Deep thinking with full context analysis",
      "Register all enhanced brain tools with clear purposes",
      "_register_cognitive_tools",
      "Direct context analysis using ContextAnalyzer module",
      "_register_memory_tools",
      "_register_analysis_tools",
      "Perform deep context analysis",
      "code_patterns",
      "Use the full ContextAnalyzer functionality",
      "Simple code pattern analysis",
      "Fallback context analysis when ContextAnalyzer is unavailable",
      "registry",
      "_register_enhanced_tools",
      "Analyze code for patterns and quality",
      "Store in memory",
      "Enhanced memory formation with context analysis",
      "Perform context analysis on code",
      "Analyze code patterns",
      "_register_cursor_tools",
      "Enhanced brain tools with ContextAnalyzer integration",
      "Comprehensive context analysis",
      "Register dedicated context analysis tools",
      "Code analysis with context understanding",
      "_register_context_tools",
      "Deep understanding with context analysis",
      "Register Cursor-specific tools",
      "Perform comprehensive context analysis",
      "Register analysis and understanding tools",
      "Use memory-enhanced chat",
      "Register enhanced memory tools",
      "Get reflection insights",
      "\ud83e\udde0 MEMORY MANAGEMENT TOOLS",
      "Enhanced reflection with context analysis",
      "\ud83d\udd0d ANALYSIS & UNDERSTANDING TOOLS",
      "\ud83d\ude80 CURSOR-SPECIFIC TOOLS",
      "\ud83c\udf1f CONTEXT ANALYSIS TOOLS",
      "Perform context analysis on the reflection topic",
      "Register enhanced cognitive tools",
      "\ud83e\udde0 COGNITIVE CORE TOOLS",
      "Simple pattern matching as fallback",
      "Register the think_deeply tool",
      "Deep thinking with full context analysis",
      "Register all enhanced brain tools with clear purposes",
      "_register_cognitive_tools",
      "Direct context analysis using ContextAnalyzer module",
      "_register_memory_tools",
      "_register_analysis_tools",
      "Perform deep context analysis",
      "code_patterns",
      "Use the full ContextAnalyzer functionality",
      "Simple code pattern analysis",
      "Fallback context analysis when ContextAnalyzer is unavailable",
      "registry",
      "_register_enhanced_tools",
      "Analyze code for patterns and quality",
      "Store in memory",
      "Enhanced memory formation with context analysis",
      "Perform context analysis on code",
      "Analyze code patterns",
      "_register_cursor_tools",
      "Enhanced brain tools with ContextAnalyzer integration",
      "Comprehensive context analysis",
      "Register dedicated context analysis tools",
      "Code analysis with context understanding",
      "_register_context_tools",
      "Deep understanding with context analysis",
      "Register Cursor-specific tools",
      "Perform comprehensive context analysis",
      "Register analysis and understanding tools",
      "Use memory-enhanced chat",
      "Register enhanced memory tools",
      "Get reflection insights",
      "\ud83e\udde0 MEMORY MANAGEMENT TOOLS",
      "Enhanced reflection with context analysis",
      "\ud83d\udd0d ANALYSIS & UNDERSTANDING TOOLS",
      "\ud83d\ude80 CURSOR-SPECIFIC TOOLS",
      "\ud83c\udf1f CONTEXT ANALYSIS TOOLS",
      "Perform context analysis on the reflection topic",
      "Register enhanced cognitive tools",
      "\ud83e\udde0 COGNITIVE CORE TOOLS",
      "Simple pattern matching as fallback",
      "Register the think_deeply tool",
      "Deep thinking with full context analysis",
      "Register all enhanced brain tools with clear purposes",
      "_register_cognitive_tools",
      "Direct context analysis using ContextAnalyzer module",
      "_register_memory_tools",
      "_register_analysis_tools",
      "Perform deep context analysis",
      "code_patterns",
      "Use the full ContextAnalyzer functionality",
      "Simple code pattern analysis",
      "Fallback context analysis when ContextAnalyzer is unavailable",
      "registry",
      "_register_enhanced_tools",
      "Analyze code for patterns and quality",
      "Store in memory",
      "Enhanced memory formation with context analysis",
      "Perform context analysis on code",
      "Analyze code patterns",
      "_register_cursor_tools",
      "Enhanced brain tools with ContextAnalyzer integration",
      "Comprehensive context analysis",
      "Register dedicated context analysis tools",
      "Code analysis with context understanding",
      "_register_context_tools",
      "Deep understanding with context analysis",
      "Register Cursor-specific tools",
      "Perform comprehensive context analysis",
      "Register analysis and understanding tools",
      "Use memory-enhanced chat",
      "Register enhanced memory tools",
      "Get reflection insights",
      "\ud83e\udde0 MEMORY MANAGEMENT TOOLS"
    ],
    "enhanced_brain_tools_simple.py": [
      "Register the reflect_enhanced tool",
      "Filter by pattern type if specified",
      "Register the detect_patterns tool",
      "Assess risks of refactoring plan",
      "Limit to 2 steps for safety",
      "Analyze code structure for refactoring",
      "Perform context analysis on the query",
      "Generate steps based on goal and structure",
      "Register the debug_intelligently tool",
      "Calculate overall complexity score",
      "complexity_layers",
      "Calculate complexity of a class",
      "Extract different types of patterns",
      "Context pattern matching",
      "Perform context analysis on the refactoring goal",
      "Search memories with enhanced context",
      "Calculate confidence score for detected patterns",
      "Check context patterns",
      "Add debugging hints based on error message",
      "Register the refactor_safely tool",
      "combined_content",
      "End of function",
      "confidence_sum",
      "refactoring_plan",
      "lines",
      "enhanced_results",
      "Analyze current code structure",
      "Register the recall_intelligently tool",
      "technical_score",
      "Assess risks based on plan steps",
      "technical_indicators",
      "pattern_count",
      "Analyze code for debugging patterns",
      "Perform selective cleanup based on context",
      "int",
      "memory_str",
      "bool",
      "Register the remember_important tool",
      "enhanced_memory",
      "Register the analyze_context_comprehensive tool",
      "Register the code_analyze tool",
      "complexity_assessment",
      "Assess emotional complexity from context analysis",
      "Perform context analysis on the cleanup criteria",
      "debugging_recommendations",
      "Check for common logical issues",
      "nesting_level",
      "Generate safe refactoring plan",
      "Extract complexity information",
      "safety_level",
      "Comprehensive complexity assessment with ContextAnalyzer",
      "line",
      "Assess technical complexity of content",
      "Register the understand_deeply tool",
      "risks",
      "plan",
      "filtered_patterns",
      "confirmation",
      "complexity",
      "Assess cognitive load of content",
      "Register the assess_complexity tool",
      "Safe code refactoring with ContextAnalyzer integration",
      "Generate safety recommendations for refactoring",
      "Intelligent memory retrieval with context analysis",
      "Analyze which memories match cleanup criteria",
      "Assess refactoring risks",
      "code_structure",
      "word_count",
      "Query content matching",
      "Check if memory matches cleanup criteria",
      "Generate debugging recommendations",
      "experiences",
      "Generate refactoring plan",
      "Perform context analysis on the code and error",
      "search_term",
      "Analyze code patterns for debugging",
      "Assess contextual complexity from context analysis",
      "Determine the best debugging strategy",
      "method_count",
      "Sort by relevance score",
      "Add context-based recommendations",
      "layer_count",
      "End of class",
      "emotional_context",
      "context",
      "criteria_lower",
      "Add recommendations based on patterns",
      "Assess different aspects of complexity",
      "Intelligent debugging with ContextAnalyzer integration",
      "Check for common syntax issues",
      "Calculate complexity of a function",
      "Helper methods for enhanced tools",
      "Adjust risk level based on safety level",
      "Generate recommendations based on complexity assessment",
      "total_patterns",
      "Selective memory cleanup with context analysis",
      "cleanup_result",
      "Enhance results with context analysis",
      "Advanced pattern detection with ContextAnalyzer",
      "memories_to_clean",
      "Check if criteria appears in memory",
      "risk_assessment",
      "Register the forget_selectively tool",
      "sentence_count",
      "Calculate relevance score for memory retrieval",
      "debug_patterns",
      "Identify refactoring opportunities",
      "Adjust plan based on safety level",
      "base_score",
      "Register the reflect_enhanced tool",
      "Filter by pattern type if specified",
      "Register the detect_patterns tool",
      "Assess risks of refactoring plan",
      "Limit to 2 steps for safety",
      "Analyze code structure for refactoring",
      "Perform context analysis on the query",
      "Generate steps based on goal and structure",
      "Register the debug_intelligently tool",
      "Calculate overall complexity score",
      "complexity_layers",
      "Calculate complexity of a class",
      "Extract different types of patterns",
      "Context pattern matching",
      "Perform context analysis on the refactoring goal",
      "Search memories with enhanced context",
      "Calculate confidence score for detected patterns",
      "Check context patterns",
      "Add debugging hints based on error message",
      "Register the refactor_safely tool",
      "combined_content",
      "End of function",
      "confidence_sum",
      "refactoring_plan",
      "lines",
      "enhanced_results",
      "Analyze current code structure",
      "Register the recall_intelligently tool",
      "technical_score",
      "Assess risks based on plan steps",
      "technical_indicators",
      "pattern_count",
      "Analyze code for debugging patterns",
      "Perform selective cleanup based on context",
      "int",
      "memory_str",
      "bool",
      "Register the remember_important tool",
      "enhanced_memory",
      "Register the analyze_context_comprehensive tool",
      "Register the code_analyze tool",
      "complexity_assessment",
      "Assess emotional complexity from context analysis",
      "Perform context analysis on the cleanup criteria",
      "debugging_recommendations",
      "Check for common logical issues",
      "nesting_level",
      "Generate safe refactoring plan",
      "Extract complexity information",
      "safety_level",
      "Comprehensive complexity assessment with ContextAnalyzer",
      "line",
      "Assess technical complexity of content",
      "Register the understand_deeply tool",
      "risks",
      "plan",
      "filtered_patterns",
      "confirmation",
      "complexity",
      "Assess cognitive load of content",
      "Register the assess_complexity tool",
      "Safe code refactoring with ContextAnalyzer integration",
      "Generate safety recommendations for refactoring",
      "Intelligent memory retrieval with context analysis",
      "Analyze which memories match cleanup criteria",
      "Assess refactoring risks",
      "code_structure",
      "word_count",
      "Query content matching",
      "Check if memory matches cleanup criteria",
      "Generate debugging recommendations",
      "experiences",
      "Generate refactoring plan",
      "Perform context analysis on the code and error",
      "search_term",
      "Analyze code patterns for debugging",
      "Assess contextual complexity from context analysis",
      "Determine the best debugging strategy",
      "method_count",
      "Sort by relevance score",
      "Add context-based recommendations",
      "layer_count",
      "End of class",
      "emotional_context",
      "context",
      "criteria_lower",
      "Add recommendations based on patterns",
      "Assess different aspects of complexity",
      "Intelligent debugging with ContextAnalyzer integration",
      "Check for common syntax issues",
      "Calculate complexity of a function",
      "Helper methods for enhanced tools",
      "Adjust risk level based on safety level",
      "Generate recommendations based on complexity assessment",
      "total_patterns",
      "Selective memory cleanup with context analysis",
      "cleanup_result",
      "Enhance results with context analysis",
      "Advanced pattern detection with ContextAnalyzer",
      "memories_to_clean",
      "Check if criteria appears in memory",
      "risk_assessment",
      "Register the forget_selectively tool",
      "sentence_count",
      "Calculate relevance score for memory retrieval",
      "debug_patterns",
      "Identify refactoring opportunities",
      "Adjust plan based on safety level",
      "base_score",
      "Register the reflect_enhanced tool",
      "Filter by pattern type if specified",
      "Register the detect_patterns tool",
      "Assess risks of refactoring plan",
      "Limit to 2 steps for safety",
      "Analyze code structure for refactoring",
      "Perform context analysis on the query",
      "Generate steps based on goal and structure",
      "Register the debug_intelligently tool",
      "Calculate overall complexity score",
      "complexity_layers",
      "Calculate complexity of a class",
      "Extract different types of patterns",
      "Context pattern matching",
      "Perform context analysis on the refactoring goal",
      "Search memories with enhanced context",
      "Calculate confidence score for detected patterns",
      "Check context patterns",
      "Add debugging hints based on error message",
      "Register the refactor_safely tool",
      "combined_content",
      "End of function",
      "confidence_sum",
      "refactoring_plan",
      "lines",
      "enhanced_results",
      "Analyze current code structure",
      "Register the recall_intelligently tool",
      "technical_score",
      "Assess risks based on plan steps",
      "technical_indicators",
      "pattern_count",
      "Analyze code for debugging patterns",
      "Perform selective cleanup based on context",
      "int",
      "memory_str",
      "bool",
      "Register the remember_important tool",
      "enhanced_memory",
      "Register the analyze_context_comprehensive tool",
      "Register the code_analyze tool",
      "complexity_assessment",
      "Assess emotional complexity from context analysis",
      "Perform context analysis on the cleanup criteria",
      "debugging_recommendations",
      "Check for common logical issues",
      "nesting_level",
      "Generate safe refactoring plan",
      "Extract complexity information",
      "safety_level",
      "Comprehensive complexity assessment with ContextAnalyzer",
      "line",
      "Assess technical complexity of content",
      "Register the understand_deeply tool",
      "risks",
      "plan",
      "filtered_patterns",
      "confirmation",
      "complexity",
      "Assess cognitive load of content",
      "Register the assess_complexity tool",
      "Safe code refactoring with ContextAnalyzer integration",
      "Generate safety recommendations for refactoring",
      "Intelligent memory retrieval with context analysis",
      "Analyze which memories match cleanup criteria",
      "Assess refactoring risks",
      "code_structure",
      "word_count",
      "Query content matching",
      "Check if memory matches cleanup criteria",
      "Generate debugging recommendations",
      "experiences",
      "Generate refactoring plan",
      "Perform context analysis on the code and error",
      "search_term",
      "Analyze code patterns for debugging",
      "Assess contextual complexity from context analysis",
      "Determine the best debugging strategy",
      "method_count",
      "Sort by relevance score",
      "Add context-based recommendations",
      "layer_count",
      "End of class",
      "emotional_context",
      "context",
      "criteria_lower",
      "Add recommendations based on patterns",
      "Assess different aspects of complexity",
      "Intelligent debugging with ContextAnalyzer integration",
      "Check for common syntax issues",
      "Calculate complexity of a function",
      "Helper methods for enhanced tools",
      "Adjust risk level based on safety level",
      "Generate recommendations based on complexity assessment",
      "total_patterns",
      "Selective memory cleanup with context analysis",
      "cleanup_result",
      "Enhance results with context analysis",
      "Advanced pattern detection with ContextAnalyzer",
      "memories_to_clean",
      "Check if criteria appears in memory",
      "risk_assessment",
      "Register the forget_selectively tool",
      "sentence_count",
      "Calculate relevance score for memory retrieval",
      "debug_patterns",
      "Identify refactoring opportunities",
      "Adjust plan based on safety level",
      "base_score"
    ],
    "function_call_logger.py": [
      "_global_logger",
      "input_data",
      "error_message",
      "successful_calls",
      "inspect",
      "Specific decorator for memory operations",
      "asynccontextmanager",
      "Initialize the logger with database connection",
      "timestamp",
      "For sync functions, create a simple log entry",
      "Success rate",
      "_session_id",
      "_database",
      "Create function_calls table for comprehensive logging",
      "function_type",
      "track_function_call",
      "async_wrapper",
      "function_calls",
      "avg_execution_time",
      "Update call info",
      "call_info",
      "Global function call logger instance",
      "Get function call history",
      "function_name",
      "_ensure_function_calls_table",
      "function_breakdown",
      "Average execution time",
      "Extract user message if present",
      "call_data",
      "execution_time_ms",
      "Create indexes for fast queries",
      "Remove from call stack",
      "log_all_calls",
      "output_data",
      "_enabled",
      "contextlib",
      "Get comprehensive statistics for current session",
      "columns",
      "Create function_calls table if it doesn't exist",
      "default",
      "end_time",
      "Handle common types",
      "Any",
      "wraps",
      "Generate unique session ID",
      "Log the complete function call",
      "call_id",
      "Specific decorator for database operations",
      "traceback",
      "Safely serialize data to JSON",
      "Store output data",
      "Truncate long strings",
      "success",
      "Get or create global function call logger",
      "logger_instance",
      "Add to call stack",
      "Calculate execution time",
      "Total calls in session",
      "__all__",
      "call",
      "FunctionCallLogger",
      "Specific decorator for MCP tools",
      "Return appropriate wrapper based on function type",
      "Search function calls by context or content",
      "Combine args and kwargs for input data",
      "Function breakdown",
      "sync_wrapper",
      "functools",
      "total_calls",
      "Specific decorator for brain functions",
      "_global_logger",
      "input_data",
      "error_message",
      "successful_calls",
      "inspect",
      "Specific decorator for memory operations",
      "asynccontextmanager",
      "Initialize the logger with database connection",
      "timestamp",
      "For sync functions, create a simple log entry",
      "Success rate",
      "_session_id",
      "_database",
      "Create function_calls table for comprehensive logging",
      "function_type",
      "track_function_call",
      "async_wrapper",
      "function_calls",
      "avg_execution_time",
      "Update call info",
      "call_info",
      "Global function call logger instance",
      "Get function call history",
      "function_name",
      "_ensure_function_calls_table",
      "function_breakdown",
      "Average execution time",
      "Extract user message if present",
      "call_data",
      "execution_time_ms",
      "Create indexes for fast queries",
      "Remove from call stack",
      "log_all_calls",
      "output_data",
      "_enabled",
      "contextlib",
      "Get comprehensive statistics for current session",
      "columns",
      "Create function_calls table if it doesn't exist",
      "default",
      "end_time",
      "Handle common types",
      "Any",
      "wraps",
      "Generate unique session ID",
      "Log the complete function call",
      "call_id",
      "Specific decorator for database operations",
      "traceback",
      "Safely serialize data to JSON",
      "Store output data",
      "Truncate long strings",
      "success",
      "Get or create global function call logger",
      "logger_instance",
      "Add to call stack",
      "Calculate execution time",
      "Total calls in session",
      "__all__",
      "call",
      "FunctionCallLogger",
      "Specific decorator for MCP tools",
      "Return appropriate wrapper based on function type",
      "Search function calls by context or content",
      "Combine args and kwargs for input data",
      "Function breakdown",
      "sync_wrapper",
      "functools",
      "total_calls",
      "Specific decorator for brain functions",
      "_global_logger",
      "input_data",
      "error_message",
      "successful_calls",
      "inspect",
      "Specific decorator for memory operations",
      "asynccontextmanager",
      "Initialize the logger with database connection",
      "timestamp",
      "For sync functions, create a simple log entry",
      "Success rate",
      "_session_id",
      "_database",
      "Create function_calls table for comprehensive logging",
      "function_type",
      "track_function_call",
      "async_wrapper",
      "function_calls",
      "avg_execution_time",
      "Update call info",
      "call_info",
      "Global function call logger instance",
      "Get function call history",
      "function_name",
      "_ensure_function_calls_table",
      "function_breakdown",
      "Average execution time",
      "Extract user message if present",
      "call_data",
      "execution_time_ms",
      "Create indexes for fast queries",
      "Remove from call stack",
      "log_all_calls",
      "output_data",
      "_enabled",
      "contextlib",
      "Get comprehensive statistics for current session",
      "columns",
      "Create function_calls table if it doesn't exist",
      "default",
      "end_time",
      "Handle common types",
      "Any",
      "wraps",
      "Generate unique session ID",
      "Log the complete function call",
      "call_id",
      "Specific decorator for database operations",
      "traceback",
      "Safely serialize data to JSON",
      "Store output data",
      "Truncate long strings",
      "success",
      "Get or create global function call logger",
      "logger_instance",
      "Add to call stack",
      "Calculate execution time",
      "Total calls in session",
      "__all__",
      "call",
      "FunctionCallLogger",
      "Specific decorator for MCP tools",
      "Return appropriate wrapper based on function type",
      "Search function calls by context or content",
      "Combine args and kwargs for input data",
      "Function breakdown",
      "sync_wrapper",
      "functools",
      "total_calls",
      "Specific decorator for brain functions"
    ],
    "healthcheck.py": [
      "brain_interface",
      "Check if brain memory store exists",
      "check_health",
      "Check if the server is running by looking for the brain interface",
      "Simple health check",
      "Check if the context analyzer module exists",
      "brain_interface",
      "Check if brain memory store exists",
      "check_health",
      "Check if the server is running by looking for the brain interface",
      "Simple health check",
      "Check if the context analyzer module exists",
      "brain_interface",
      "Check if brain memory store exists",
      "check_health",
      "Check if the server is running by looking for the brain interface",
      "Simple health check",
      "Check if the context analyzer module exists"
    ],
    "knowledge_ingestion_engine.py": [
      "Concept extraction patterns",
      "Extract content based on section",
      "Extract links",
      "Parse general markdown files",
      "KnowledgeGraphBuilder",
      "Build concept clusters based on relationships",
      "source_counts",
      "extracted_concepts",
      "dataclass",
      "base_pattern",
      "content, file_path",
      "Process each document",
      "A node in the knowledge graph",
      "Generate a human-readable summary of the knowledge graph",
      "Parse API specification files (OpenAPI, etc.)",
      "Create relationship between document and concept",
      "Create new concept node",
      "Must be a file, not directory",
      "link_matches",
      "\ud83d\udcca Graph Statistics",
      "updated_at",
      "Complete knowledge graph structure",
      "Parse generic files with basic text analysis",
      "Parse README files for project information",
      "Parse Python files for docstrings and function/class definitions",
      "definitions",
      "Detect sections",
      "Search for concepts in the knowledge graph",
      "Common documentation file patterns",
      "_analyze_patterns",
      "rel_id",
      "Update metadata",
      "Export the knowledge graph in various formats",
      "Extract JSDoc comments",
      "Get the ID of an existing concept node",
      "Parse based on document type",
      "Skip common non-documentation files",
      "_build_concept_clusters",
      "concept_counts",
      "Main engine for knowledge ingestion and processing",
      "Detect language for appropriate pattern matching",
      "Get existing concept node or create new one",
      "encoding",
      "section",
      "search_results",
      "Analyze patterns",
      "knowledge_graph",
      "Find concepts that might be related",
      "Add markdown concepts for all files",
      "markdown_patterns",
      "processing_time",
      "strength",
      "target_node",
      "(.*?)",
      "\ud83d\udd17 Relationship Types",
      "Read content if not provided",
      "Find documentation files",
      "**Max Connections**: {graph.patterns.get('connectivity', {}).get('max_connections', 0)}",
      "Get the current knowledge graph",
      "concept_patterns",
      "Extract class definitions",
      "{1,6}\\s+(.+)$', content, re.MULTILINE)",
      "created_at",
      "related",
      "Extract docstrings",
      "Remove duplicates and sort",
      "func_matches",
      "Relationship type analysis",
      "**Total Relationships**: {graph.metadata['total_relationships']}",
      "type_counts",
      "Builds and maintains the knowledge graph",
      "OpenAPI/Swagger format",
      "Concept frequency analysis",
      "Processes various types of documentation and extracts knowledge",
      "source_id",
      "Must be readable",
      "confidence",
      "Export results",
      "skip_patterns",
      "jsdoc_matches",
      "Source analysis",
      "rel_type_counts",
      "{1,6}\\s+(.+)$',",
      "Count connections per node",
      "Basic YAML parsing (can be enhanced with PyYAML)",
      "top_concepts",
      "class",
      "graph_builder",
      "min_connections",
      "Create document node",
      "Save detailed graph to file",
      "relationship_patterns",
      "Add concept nodes",
      "concept_freq",
      "'):",
      "\ud83d\udcda Top Concepts",
      "Build the complete knowledge graph",
      "Add relationship nodes",
      "Find related nodes",
      "avg_connections",
      "project_path",
      "Add document context to the knowledge graph",
      "Context extracted from a document",
      "# \ud83d\udd0c Connectivity",
      "errors",
      "(\\w+)?\\n(.*?)",
      "Extract imports",
      "'concept', 'file', 'function', 'class', 'pattern'",
      "KnowledgeIngestionEngine",
      "\ud83e\udde0 Node Types",
      "output_file",
      "Knowledge Graph Summary",
      "collections",
      "Extract function definitions",
      "concept_node_id",
      "Extract code blocks",
      "target_id",
      "Build concept clusters",
      "document",
      "\\s*(.+)'",
      "Source files with comments",
      "query_lower",
      "current_section",
      "Generic JSON structure",
      "Main function for testing the knowledge ingestion engine",
      "suffix",
      "added_nodes",
      "title",
      "defaultdict",
      "doc_node",
      "doc_context",
      "**Created**: {datetime.fromtimestamp(graph.created_at).strftime('%Y-%m-%d %H:%M:%S')}",
      "concept_node",
      "Extract relationships",
      "Build metadata",
      "concepts",
      "docstring_matches",
      "Create a relationship between two nodes",
      "code_matches",
      "Analyze patterns in the knowledge graph",
      "Export the knowledge graph",
      "Clean up descriptions",
      "Add to knowledge graph",
      "Config files",
      "**Total Nodes**: {graph.metadata['total_nodes']}",
      "Extract concepts from document content",
      "Detect the programming language of a file",
      "Parse JavaScript files for JSDoc comments and function definitions",
      "Group concepts by source",
      "A relationship between knowledge nodes",
      "relationship_counter",
      "Parse configuration files",
      "# \ud83e\udde0 Node Types",
      "# \ud83d\udcda Top Concepts",
      "Recursive pattern",
      "Extract concepts",
      "graph",
      "project_root",
      "Extract headings",
      "Analyze graph connectivity",
      "relationships",
      "max_connections",
      "', '').strip()",
      "dataclasses",
      "data",
      "Find documentation files in the project",
      "class_matches",
      "parser_result",
      "doc_node_id",
      "metadata",
      "connections",
      "heading_matches",
      "Count nodes by type",
      "Configure logging",
      "Ingest all documentation from a project",
      "# \ud83d\udcca Graph Statistics",
      "node_counter",
      "doc_patterns",
      "Relationship patterns",
      "DocumentationProcessor",
      "matches",
      "\ud83d\udd0c Connectivity",
      "Check if concept already exists",
      "# \ud83d\udd17 Relationship Types",
      "Read first 1KB to check readability",
      "Process a document and extract knowledge",
      "filtered_concepts",
      "Build final knowledge graph",
      "',\n                'inline_code': r'",
      "]+)",
      "'readme', 'api_doc', 'code_comment', 'config'",
      "**Total Concepts**: {graph.metadata['total_concepts']}",
      "language_map",
      "parsers",
      "Detect the type of document for appropriate parsing",
      "Filter out common words and short concepts",
      "**Average Connections**: {graph.patterns.get('connectivity', {}).get('average_connections', 0):.2f}",
      "nodes",
      "content_type",
      "file_path",
      "Simple pattern",
      "relationship",
      "Create engine and ingest knowledge",
      "Demo search",
      "relationship_type",
      "import_matches",
      "doc_processor",
      "**Total Connections**: {graph.patterns.get('connectivity', {}).get('total_connections', 0)}",
      "engine",
      "Check if a file is a documentation file",
      "Extract relationships between concepts",
      "'implements', 'depends_on', 'similar_to', 'references'",
      "type",
      "Concept extraction patterns",
      "Extract content based on section",
      "Extract links",
      "Parse general markdown files",
      "KnowledgeGraphBuilder",
      "Build concept clusters based on relationships",
      "source_counts",
      "extracted_concepts",
      "dataclass",
      "base_pattern",
      "content, file_path",
      "Process each document",
      "A node in the knowledge graph",
      "Generate a human-readable summary of the knowledge graph",
      "Parse API specification files (OpenAPI, etc.)",
      "Create relationship between document and concept",
      "Create new concept node",
      "Must be a file, not directory",
      "link_matches",
      "\ud83d\udcca Graph Statistics",
      "updated_at",
      "Complete knowledge graph structure",
      "Parse generic files with basic text analysis",
      "Parse README files for project information",
      "Parse Python files for docstrings and function/class definitions",
      "definitions",
      "Detect sections",
      "Search for concepts in the knowledge graph",
      "Common documentation file patterns",
      "_analyze_patterns",
      "rel_id",
      "Update metadata",
      "Export the knowledge graph in various formats",
      "Extract JSDoc comments",
      "Get the ID of an existing concept node",
      "Parse based on document type",
      "Skip common non-documentation files",
      "_build_concept_clusters",
      "concept_counts",
      "Main engine for knowledge ingestion and processing",
      "Detect language for appropriate pattern matching",
      "Get existing concept node or create new one",
      "encoding",
      "section",
      "search_results",
      "Analyze patterns",
      "knowledge_graph",
      "Find concepts that might be related",
      "Add markdown concepts for all files",
      "markdown_patterns",
      "processing_time",
      "strength",
      "target_node",
      "(.*?)",
      "\ud83d\udd17 Relationship Types",
      "Read content if not provided",
      "Find documentation files",
      "**Max Connections**: {graph.patterns.get('connectivity', {}).get('max_connections', 0)}",
      "Get the current knowledge graph",
      "concept_patterns",
      "Extract class definitions",
      "{1,6}\\s+(.+)$', content, re.MULTILINE)",
      "created_at",
      "related",
      "Extract docstrings",
      "Remove duplicates and sort",
      "func_matches",
      "Relationship type analysis",
      "**Total Relationships**: {graph.metadata['total_relationships']}",
      "type_counts",
      "Builds and maintains the knowledge graph",
      "OpenAPI/Swagger format",
      "Concept frequency analysis",
      "Processes various types of documentation and extracts knowledge",
      "source_id",
      "Must be readable",
      "confidence",
      "Export results",
      "skip_patterns",
      "jsdoc_matches",
      "Source analysis",
      "rel_type_counts",
      "{1,6}\\s+(.+)$',",
      "Count connections per node",
      "Basic YAML parsing (can be enhanced with PyYAML)",
      "top_concepts",
      "class",
      "graph_builder",
      "min_connections",
      "Create document node",
      "Save detailed graph to file",
      "relationship_patterns",
      "Add concept nodes",
      "concept_freq",
      "'):",
      "\ud83d\udcda Top Concepts",
      "Build the complete knowledge graph",
      "Add relationship nodes",
      "Find related nodes",
      "avg_connections",
      "project_path",
      "Add document context to the knowledge graph",
      "Context extracted from a document",
      "# \ud83d\udd0c Connectivity",
      "errors",
      "(\\w+)?\\n(.*?)",
      "Extract imports",
      "'concept', 'file', 'function', 'class', 'pattern'",
      "KnowledgeIngestionEngine",
      "\ud83e\udde0 Node Types",
      "output_file",
      "Knowledge Graph Summary",
      "collections",
      "Extract function definitions",
      "concept_node_id",
      "Extract code blocks",
      "target_id",
      "Build concept clusters",
      "document",
      "\\s*(.+)'",
      "Source files with comments",
      "query_lower",
      "current_section",
      "Generic JSON structure",
      "Main function for testing the knowledge ingestion engine",
      "suffix",
      "added_nodes",
      "title",
      "defaultdict",
      "doc_node",
      "doc_context",
      "**Created**: {datetime.fromtimestamp(graph.created_at).strftime('%Y-%m-%d %H:%M:%S')}",
      "concept_node",
      "Extract relationships",
      "Build metadata",
      "concepts",
      "docstring_matches",
      "Create a relationship between two nodes",
      "code_matches",
      "Analyze patterns in the knowledge graph",
      "Export the knowledge graph",
      "Clean up descriptions",
      "Add to knowledge graph",
      "Config files",
      "**Total Nodes**: {graph.metadata['total_nodes']}",
      "Extract concepts from document content",
      "Detect the programming language of a file",
      "Parse JavaScript files for JSDoc comments and function definitions",
      "Group concepts by source",
      "A relationship between knowledge nodes",
      "relationship_counter",
      "Parse configuration files",
      "# \ud83e\udde0 Node Types",
      "# \ud83d\udcda Top Concepts",
      "Recursive pattern",
      "Extract concepts",
      "graph",
      "project_root",
      "Extract headings",
      "Analyze graph connectivity",
      "relationships",
      "max_connections",
      "', '').strip()",
      "dataclasses",
      "data",
      "Find documentation files in the project",
      "class_matches",
      "parser_result",
      "doc_node_id",
      "metadata",
      "connections",
      "heading_matches",
      "Count nodes by type",
      "Configure logging",
      "Ingest all documentation from a project",
      "# \ud83d\udcca Graph Statistics",
      "node_counter",
      "doc_patterns",
      "Relationship patterns",
      "DocumentationProcessor",
      "matches",
      "\ud83d\udd0c Connectivity",
      "Check if concept already exists",
      "# \ud83d\udd17 Relationship Types",
      "Read first 1KB to check readability",
      "Process a document and extract knowledge",
      "filtered_concepts",
      "Build final knowledge graph",
      "',\n                'inline_code': r'",
      "]+)",
      "'readme', 'api_doc', 'code_comment', 'config'",
      "**Total Concepts**: {graph.metadata['total_concepts']}",
      "language_map",
      "parsers",
      "Detect the type of document for appropriate parsing",
      "Filter out common words and short concepts",
      "**Average Connections**: {graph.patterns.get('connectivity', {}).get('average_connections', 0):.2f}",
      "nodes",
      "content_type",
      "file_path",
      "Simple pattern",
      "relationship",
      "Create engine and ingest knowledge",
      "Demo search",
      "relationship_type",
      "import_matches",
      "doc_processor",
      "**Total Connections**: {graph.patterns.get('connectivity', {}).get('total_connections', 0)}",
      "engine",
      "Check if a file is a documentation file",
      "Extract relationships between concepts",
      "'implements', 'depends_on', 'similar_to', 'references'",
      "type",
      "Concept extraction patterns",
      "Extract content based on section",
      "Extract links",
      "Parse general markdown files",
      "KnowledgeGraphBuilder",
      "Build concept clusters based on relationships",
      "source_counts",
      "extracted_concepts",
      "dataclass",
      "base_pattern",
      "content, file_path",
      "Process each document",
      "A node in the knowledge graph",
      "Generate a human-readable summary of the knowledge graph",
      "Parse API specification files (OpenAPI, etc.)",
      "Create relationship between document and concept",
      "Create new concept node",
      "Must be a file, not directory",
      "link_matches",
      "\ud83d\udcca Graph Statistics",
      "updated_at",
      "Complete knowledge graph structure",
      "Parse generic files with basic text analysis",
      "Parse README files for project information",
      "Parse Python files for docstrings and function/class definitions",
      "definitions",
      "Detect sections",
      "Search for concepts in the knowledge graph",
      "Common documentation file patterns",
      "_analyze_patterns",
      "rel_id",
      "Update metadata",
      "Export the knowledge graph in various formats",
      "Extract JSDoc comments",
      "Get the ID of an existing concept node",
      "Parse based on document type",
      "Skip common non-documentation files",
      "_build_concept_clusters",
      "concept_counts",
      "Main engine for knowledge ingestion and processing",
      "Detect language for appropriate pattern matching",
      "Get existing concept node or create new one",
      "encoding",
      "section",
      "search_results",
      "Analyze patterns",
      "knowledge_graph",
      "Find concepts that might be related",
      "Add markdown concepts for all files",
      "markdown_patterns",
      "processing_time",
      "strength",
      "target_node",
      "(.*?)",
      "\ud83d\udd17 Relationship Types",
      "Read content if not provided",
      "Find documentation files",
      "**Max Connections**: {graph.patterns.get('connectivity', {}).get('max_connections', 0)}",
      "Get the current knowledge graph",
      "concept_patterns",
      "Extract class definitions",
      "{1,6}\\s+(.+)$', content, re.MULTILINE)",
      "created_at",
      "related",
      "Extract docstrings",
      "Remove duplicates and sort",
      "func_matches",
      "Relationship type analysis",
      "**Total Relationships**: {graph.metadata['total_relationships']}",
      "type_counts",
      "Builds and maintains the knowledge graph",
      "OpenAPI/Swagger format",
      "Concept frequency analysis",
      "Processes various types of documentation and extracts knowledge",
      "source_id",
      "Must be readable",
      "confidence",
      "Export results",
      "skip_patterns",
      "jsdoc_matches",
      "Source analysis",
      "rel_type_counts",
      "{1,6}\\s+(.+)$',",
      "Count connections per node",
      "Basic YAML parsing (can be enhanced with PyYAML)",
      "top_concepts",
      "class",
      "graph_builder",
      "min_connections",
      "Create document node",
      "Save detailed graph to file",
      "relationship_patterns",
      "Add concept nodes",
      "concept_freq",
      "'):",
      "\ud83d\udcda Top Concepts",
      "Build the complete knowledge graph",
      "Add relationship nodes",
      "Find related nodes",
      "avg_connections",
      "project_path",
      "Add document context to the knowledge graph",
      "Context extracted from a document",
      "# \ud83d\udd0c Connectivity",
      "errors",
      "(\\w+)?\\n(.*?)",
      "Extract imports",
      "'concept', 'file', 'function', 'class', 'pattern'",
      "KnowledgeIngestionEngine",
      "\ud83e\udde0 Node Types",
      "output_file",
      "Knowledge Graph Summary",
      "collections",
      "Extract function definitions",
      "concept_node_id",
      "Extract code blocks",
      "target_id",
      "Build concept clusters",
      "document",
      "\\s*(.+)'",
      "Source files with comments",
      "query_lower",
      "current_section",
      "Generic JSON structure",
      "Main function for testing the knowledge ingestion engine",
      "suffix",
      "added_nodes",
      "title",
      "defaultdict",
      "doc_node",
      "doc_context",
      "**Created**: {datetime.fromtimestamp(graph.created_at).strftime('%Y-%m-%d %H:%M:%S')}",
      "concept_node",
      "Extract relationships",
      "Build metadata",
      "concepts",
      "docstring_matches",
      "Create a relationship between two nodes",
      "code_matches",
      "Analyze patterns in the knowledge graph",
      "Export the knowledge graph",
      "Clean up descriptions",
      "Add to knowledge graph",
      "Config files",
      "**Total Nodes**: {graph.metadata['total_nodes']}",
      "Extract concepts from document content",
      "Detect the programming language of a file",
      "Parse JavaScript files for JSDoc comments and function definitions",
      "Group concepts by source",
      "A relationship between knowledge nodes",
      "relationship_counter",
      "Parse configuration files",
      "# \ud83e\udde0 Node Types",
      "# \ud83d\udcda Top Concepts",
      "Recursive pattern",
      "Extract concepts",
      "graph",
      "project_root",
      "Extract headings",
      "Analyze graph connectivity",
      "relationships",
      "max_connections",
      "', '').strip()",
      "dataclasses",
      "data",
      "Find documentation files in the project",
      "class_matches",
      "parser_result",
      "doc_node_id",
      "metadata",
      "connections",
      "heading_matches",
      "Count nodes by type",
      "Configure logging",
      "Ingest all documentation from a project",
      "# \ud83d\udcca Graph Statistics",
      "node_counter",
      "doc_patterns",
      "Relationship patterns",
      "DocumentationProcessor",
      "matches",
      "\ud83d\udd0c Connectivity",
      "Check if concept already exists",
      "# \ud83d\udd17 Relationship Types",
      "Read first 1KB to check readability",
      "Process a document and extract knowledge",
      "filtered_concepts",
      "Build final knowledge graph",
      "',\n                'inline_code': r'",
      "]+)",
      "'readme', 'api_doc', 'code_comment', 'config'",
      "**Total Concepts**: {graph.metadata['total_concepts']}",
      "language_map",
      "parsers",
      "Detect the type of document for appropriate parsing",
      "Filter out common words and short concepts",
      "**Average Connections**: {graph.patterns.get('connectivity', {}).get('average_connections', 0):.2f}",
      "nodes",
      "content_type",
      "file_path",
      "Simple pattern",
      "relationship",
      "Create engine and ingest knowledge",
      "Demo search",
      "relationship_type",
      "import_matches",
      "doc_processor",
      "**Total Connections**: {graph.patterns.get('connectivity', {}).get('total_connections', 0)}",
      "engine",
      "Check if a file is a documentation file",
      "Extract relationships between concepts",
      "'implements', 'depends_on', 'similar_to', 'references'",
      "type"
    ],
    "llm_client.py": [
      "Ollama",
      "system_prompt",
      "models_result",
      "Context: \"User name/identity: Johny\"",
      "Get global LLM client instance",
      "Question: \"What is your name?\"",
      "memory_response",
      "Create a more structured prompt that the LLM can't ignore",
      "Global LLM client instance",
      "ollama_client",
      "learned_something",
      "Build enhanced prompt that forces the LLM to use context",
      "_global_llm_client",
      "health_ok",
      "OllamaClient",
      "max_tokens",
      "test_result",
      "Test basic response",
      "aiohttp",
      "List models",
      "MemoryEnhancedLLM",
      "llm",
      "timeout",
      "temperature",
      "Test memory-enhanced response",
      "Test memory-enhanced LLM",
      "full_prompt",
      "messages",
      "base_url",
      "Test the LLM integration",
      "prompt",
      "Test connection",
      "Generate response",
      "__aexit__",
      "Create system prompt for memory-enhanced conversations",
      "Construct messages",
      "total",
      "session",
      "float",
      "payload",
      "Convert to seconds",
      "Fallback response",
      "Response: \"My name is Johny!\"",
      "error_text",
      "Test LLM connection with a simple prompt",
      "model",
      "__aenter__",
      "test_llm_integration",
      "Ollama",
      "system_prompt",
      "models_result",
      "Context: \"User name/identity: Johny\"",
      "Get global LLM client instance",
      "Question: \"What is your name?\"",
      "memory_response",
      "Create a more structured prompt that the LLM can't ignore",
      "Global LLM client instance",
      "ollama_client",
      "learned_something",
      "Build enhanced prompt that forces the LLM to use context",
      "_global_llm_client",
      "health_ok",
      "OllamaClient",
      "max_tokens",
      "test_result",
      "Test basic response",
      "aiohttp",
      "List models",
      "MemoryEnhancedLLM",
      "llm",
      "timeout",
      "temperature",
      "Test memory-enhanced response",
      "Test memory-enhanced LLM",
      "full_prompt",
      "messages",
      "base_url",
      "Test the LLM integration",
      "prompt",
      "Test connection",
      "Generate response",
      "__aexit__",
      "Create system prompt for memory-enhanced conversations",
      "Construct messages",
      "total",
      "session",
      "float",
      "payload",
      "Convert to seconds",
      "Fallback response",
      "Response: \"My name is Johny!\"",
      "error_text",
      "Test LLM connection with a simple prompt",
      "model",
      "__aenter__",
      "test_llm_integration",
      "Ollama",
      "system_prompt",
      "models_result",
      "Context: \"User name/identity: Johny\"",
      "Get global LLM client instance",
      "Question: \"What is your name?\"",
      "memory_response",
      "Create a more structured prompt that the LLM can't ignore",
      "Global LLM client instance",
      "ollama_client",
      "learned_something",
      "Build enhanced prompt that forces the LLM to use context",
      "_global_llm_client",
      "health_ok",
      "OllamaClient",
      "max_tokens",
      "test_result",
      "Test basic response",
      "aiohttp",
      "List models",
      "MemoryEnhancedLLM",
      "llm",
      "timeout",
      "temperature",
      "Test memory-enhanced response",
      "Test memory-enhanced LLM",
      "full_prompt",
      "messages",
      "base_url",
      "Test the LLM integration",
      "prompt",
      "Test connection",
      "Generate response",
      "__aexit__",
      "Create system prompt for memory-enhanced conversations",
      "Construct messages",
      "total",
      "session",
      "float",
      "payload",
      "Convert to seconds",
      "Fallback response",
      "Response: \"My name is Johny!\"",
      "error_text",
      "Test LLM connection with a simple prompt",
      "model",
      "__aenter__",
      "test_llm_integration"
    ],
    "main.py": [
      "memory_instructions.append(f\"Context: {context_summary}\")",
      "conversation_data = {",
      "Store error result",
      "async def analyze_tool_performance(tool_name: str = \"all\", timeframe: str = \"session\") -> dict:",
      "\"success\": False,",
      "# Process through brain system",
      "\"assistant_name\": next((name for name in user_info.get(\"name\", []) if name.lower() in [\"johny\", \"jonathan\"]), \"Memory Assistant\"),",
      "except:",
      "\"memory_working\": all(r.get(\"memory_used\") for r in results[1:])  # Should have memory from 2nd message onward",
      "brain_state",
      "We have exactly 6 consolidated tools",
      "Initialize new tool registry",
      "This would call the actual auto_process_message function",
      "This would call the actual initialize_chat_session function",
      "\"output\": result.get(\"ai_response\", \"\"),",
      "This would call the actual enhanced_workflow_execution function",
      "if not mcp_client:",
      "\"context\": f\"Assistant ready (memory system: {str(e)})\",",
      "plugin._setup()",
      "brain",
      "# Function call logging stats",
      "\"test_response\": test_result[\"response\"],",
      "This would call the actual cursor_auto_inject_context function",
      "\"phase\": \"tool_orchestration\",",
      "async def get_function_call_history(limit: int = 50, function_name: str = None) -> dict:",
      "llm = await get_llm_client()",
      "PluginManager",
      "logger.info(f\"\ud83d\udce6 Processing {len(user_messages)} messages in batch\")",
      "if memory_result.get(\"success\"):",
      "result = await plugin._batch_workflow_processing_handler(user_messages, workflow_mode)",
      "count",
      "Patch JSON operations for backward compatibility",
      "This would call the actual learn_from function",
      "\"Hi there! My name is Johny and I love working on AI projects.\",",
      "\ud83c\udfd7\ufe0f Build Comprehensive Context",
      "llm_client",
      "\"content_analyzed\": content[:100] + \"...\" if len(content) > 100 else content,",
      "This would call the actual dream function",
      "count = cursor.fetchone()[0]",
      "\"server_name\": \"Memory Context Manager with AI Memory\",",
      "enhanced_brain_tools = EnhancedBrainTools(mcp_client, tool_registry)",
      "async def enhanced_context_retrieval(user_message: str, include_history: bool = True, include_preferences: bool = True) -> dict:",
      "# Look for context analyzer in modules",
      "# STEP 4: Generate AI response with memory context",
      "===== DOMAIN 6: SELF-MONITORING =====",
      "memory_data = db.get_memory_store()",
      "\"version\": metadata.version,",
      "Generate response using real LLM",
      "\"memory_context_used\": \"\",",
      "if assessment_criteria is None:",
      "# Execute Phase 2",
      "logger.info(f\"\ud83c\udfe5 Performing workflow health check: {check_level}\")",
      "Process multiple messages through the enhanced workflow efficiently.",
      "user_messages: List of user messages to process",
      "# Recent activity",
      "test_messages",
      "\ud83c\udfaf Get comprehensive context for Cursor conversations",
      "# Execute workflow health check",
      "\"memory_enabled\": True,",
      "Extract user's name from memory context",
      "\"context_available\": False,",
      "\"resources_available\": len(plugin_manager.registry.resources),",
      "memory_context,",
      "logger.error(f\"\u274c Enhanced workflow execution failed: {str(e)}\")",
      "logger.info(\"\ud83c\udfaf Phase 2: Tool Orchestration\")",
      "\"learned\": learning_result.get(\"important_info_found\", []) if learning_result.get(\"success\") else [],",
      "\ud83d\ude80 Execute Complete Enhanced Workflow",
      "This would call the actual refactor_safely function",
      "\"system_status\": \"fully_operational\",",
      "response",
      "result = await plugin._continuous_learning_handler(interaction_data, learning_focus)",
      "This would call the actual get_user_context function",
      "Create internal MCP client",
      "async def orchestrate_tools(context_data: dict, target_goal: str = \"enhanced_response\") -> dict:",
      "Initialize server with clean brain interface",
      "logger.info(f\"\ufffd\ufffd Processing message with memory: {user_message[:50]}...\")",
      "\"How are you doing today?\"",
      "\"logging_enabled\": function_logger._enabled",
      "logger.error(f\"\u274c Tool orchestration failed: {str(e)}\")",
      "logger.error(f\"\u274c Workflow health check failed: {str(e)}\")",
      "async def analyze_context_deeply(content: str, analysis_type: str = \"comprehensive\") -> dict:",
      "memory_instructions = []",
      "logger.info(f\"\ud83d\udd27 Optimizing workflow: {optimization_focus}\")",
      "Optimization results with recommendations",
      "Import LLM client",
      "cursor_context",
      "\"search_results\": search_results,",
      "Performance analysis with metrics and recommendations",
      "This would call the actual reflect_enhanced function",
      "cursor = conn.execute(f\"SELECT COUNT(*) FROM {table}\")",
      "user_message=user_message",
      "Create server",
      "Performance analysis with insights",
      "# Check if brain interface is available",
      "search_results = function_logger.search_calls_by_context(search_term, limit)",
      "Identifies bottlenecks and implements automatic improvements.",
      "optimization opportunities and usage trends.",
      "ai_response",
      "context_parts = []",
      "# Fallback: try to get basic analysis",
      "Memory client for internal tool calls",
      "\"session_id\": function_logger._session_id,",
      "logger.error(f\"Memory-enhanced chat error: {str(e)}\")",
      "from llm_client import get_llm_client",
      "Automatically executes all three phases of context enhancement in sequence:",
      "return {\"context\": \"Basic assistant without memory access\"}",
      "Initialize plugin manager",
      "Extracts learning patterns, identifies improvements, and",
      "\"learned\": learning_result.get(\"important_info_found\", []) if learning_result.get(\"success\") else []",
      "# Store conversation in database",
      "\ud83d\udcc8 Get comprehensive session statistics and performance metrics",
      "\"What's my name again?\",",
      "timeframe: Timeframe for analysis",
      "\"ready_for_conversation\": True",
      "logger.error(f\"\u274c Comprehensive context building failed: {str(e)}\")",
      "result = await plugin._assess_context_quality_handler(context_data, assessment_criteria)",
      "Detailed context analysis with insights and recommendations",
      "name_pattern",
      "except Exception as e:",
      "context_result = await mcp_client.call_tool(",
      "user_info",
      "Enhanced Context Integration Tools - Phase 1, 2, and 3 Implementation",
      "logger.info(\"\ud83d\udd0d Phase 1: Enhanced Context Retrieval\")",
      "# Execute workflow optimization",
      "logger.error(f\"\u274c Workflow performance analysis failed: {str(e)}\")",
      "Selects appropriate tools, creates execution plans, and coordinates",
      "\"error\": str(e)",
      "- Phase 2: Tool Orchestration",
      "\"consciousness_level\": \"Aware and responsive\",",
      "logger.error(f\"\u274c Tool performance analysis failed: {str(e)}\")",
      "\"ai_response\": ai_response,",
      "\"remember\": \"\ud83e\udde0 Remember important information\",",
      "Returns just the AI response string",
      "check_level: Health check level (basic, comprehensive, deep)",
      "\"context_available\": True,",
      "plugin_info[plugin_name] = {",
      "logger.error(f\"Conversation tracking error: {str(e)}\")",
      "# Plugin system status",
      "async def optimize_workflow(optimization_focus: str = \"performance\", target_metrics: list = None) -> dict:",
      "match",
      "\"logging_status\": \"active\" if function_logger._enabled else \"disabled\"",
      "context_results = {}",
      "\ud83d\udcca Analyze Tool Performance",
      "from database import get_brain_db",
      "Store successful result",
      "important_info = []",
      "Executes all three phases to build comprehensive context:",
      "tool usage for optimal context enhancement.",
      "debug_mode",
      "if context_summary:",
      "return {",
      "\"cross_referencing_enabled\": True,",
      "Shows all function calls with inputs, outputs, execution time, and context",
      "async def get_comprehensive_system_status() -> dict:",
      "logger.info(\"\ud83c\udfaf Assessing context quality\")",
      "if user_info.get(\"preferences\"):",
      "content: The text content to analyze",
      "\"available_functions\": brain_functions,",
      "This is where your AI agent gets memory-enhanced responses!",
      "\"conversation_tracking\": True,",
      "\"database_path\": db.db_path",
      "test_messages = [",
      "\"comprehensive_logging\": {",
      "workflow_mode: Workflow mode (standard, aggressive, conservative)",
      "This would call the actual analyze_context_deeply function",
      "\"author\": metadata.author,",
      "tool_count = len(plugin_manager.registry.tools)",
      "context_parts.append(f\"Preferences: {', '.join(user_info['preferences'][:2])}\")",
      "\"data_storage_comprehensive\": {",
      "\"platform\": \"cursor\",",
      "\"plugins_loaded\": plugin_count,",
      "\ud83e\udde0 Analyze content with enhanced contextual understanding",
      "Test the memory system with sample conversations",
      "# Execute tool performance analysis",
      "context_data: Context data to assess",
      "\"memory_processing\": {",
      "- Phase 3: Continuous Learning Preparation",
      "call_history = function_logger.get_call_history(limit=limit, function_name=function_name)",
      "for plugin_name, plugin in plugin_manager.registry.plugins.items():",
      "bool(important_info)",
      "===== DOMAIN 5: OUTPUT & ACTION =====",
      "\"context_score\": 0.5,",
      "result = await plugin._analyze_workflow_performance_handler(timeframe, include_recommendations)",
      "logger.error(f\"\u274c Continuous learning failed: {str(e)}\")",
      "function_logger = get_function_logger()",
      "\"get_user_context\",",
      "table_counts = {}",
      "total_data_points += count",
      "context_results",
      "===== DOMAIN 4: LEARNING & ADAPTATION =====",
      "\"model\": test_result[\"model\"],",
      "context_results = {",
      "Initialize clean brain interface (replaces technical tools)",
      "async def cursor_auto_inject_context() -> dict:",
      "analysis_type: Type of analysis (comprehensive, subtlety, depth, goals, complexity)",
      "\"assistant_response\": assistant_response,",
      "Initialize database system first",
      "consolidates memories for future context enhancement.",
      "This would call the actual context_quality_assessment function",
      "context_parts",
      "result = brain.process_input(input_data)",
      "\"logging_enabled\": function_logger._enabled,",
      "Always register resources and prompts",
      "This would call the actual think_deeply function",
      "call_history",
      "ai_response = await generate_memory_enhanced_response(",
      "\ud83c\udfaf Get comprehensive system status including all logging and memory systems",
      "logger.error(f\"Cursor context error: {str(e)}\")",
      "logger.info(f\"\ud83d\udcca Analyzing tool performance: {tool_name}\")",
      "Implements intelligent tool orchestration based on context analysis.",
      "\ud83d\udd0d COMPREHENSIVE FUNCTION CALL LOGGING TOOLS",
      "AI Chat with Automatic Memory - OPTION A INTEGRATION",
      "Assesses the quality and completeness of current context",
      "# Memory system status",
      "test_result = await llm.test_connection()",
      "include_recommendations: Include improvement recommendations",
      "with sqlite3.connect(db.db_path) as conn:",
      "\"system_status\": \"error\"",
      "\"think\": \"\ud83d\udcad Think and respond with memory and context\",",
      "\"important_info_stored\": [],",
      "memory_instructions",
      "global mcp_client",
      "get_tool_registry",
      "return result",
      "result = await ai_chat_with_memory(message)",
      "result = await plugin._execute_enhanced_workflow_handler(",
      "Brain status and info tools",
      "Provides detailed metrics and actionable recommendations.",
      "if cursor_context.get(\"ready_for_conversation\"):",
      "context_results = result[\"context_analyzer\"]",
      "# Get recent conversation history",
      "\"input\": message,",
      "logger.error(f\"\u274c Batch workflow processing failed: {str(e)}\")",
      "function_call_logger",
      "- Phase 3: Continuous Learning",
      "This would call the actual continuous_learning_cycle function",
      "\"success\": True,",
      "Start MCP server with stdio (works for both Docker and CLI)",
      "\ud83e\udde0 Show available brain functions and cognitive capabilities",
      "\"learned\": result.get(\"important_info_stored\", [])",
      "\"memory_stats\": \"\ud83d\udcca Check memory database statistics and health\"",
      "Fallback to simple response if LLM fails",
      "from llm_client import OllamaClient",
      "\"test_completed\": True,",
      "# Calculate total data points",
      "\"function_calls_logged\": session_stats.get(\"total_calls\", 0),",
      "\"error\": f\"Memory processing failed: {str(e)}\"",
      "import sqlite3",
      "new",
      "interactions",
      "context_data: Context data from Phase 1",
      "# Execute Phase 1",
      "return {\"success\": False, \"error\": str(e)}",
      "plugin = EnhancedWorkflowOrchestratorPlugin()",
      "This reduces tool count from 48 to 12 while preserving 100% functionality",
      "plugin_info",
      "async def build_comprehensive_context(user_message: str, context_depth: str = \"comprehensive\") -> dict:",
      "# Import and initialize enhanced context integration",
      "\"conversation_stored\": True,",
      "Register plugin tools for debugging",
      "memory_result = await mcp_client.call_tool(",
      "if user_info.get(\"name\"):",
      "\"error\": test_result.get(\"error\")",
      "\"conversation_count\": len(recent_conversations),",
      "\"should_inject\": True",
      "\"description\": metadata.description,",
      "This would call the actual generate_memory_enhanced_response function",
      "\"cross_references_available\": True",
      "if \"context_analyzer\" in result:",
      "context_summary",
      "plugin_manager",
      "conversations",
      "\"memory_used\": result.get(\"memory_context_used\", \"\"),",
      "include_history: Include conversation history",
      "table_counts[table] = count",
      "memory_instructions.append(f\"Just learned: {', '.join(important_info)}\")",
      "Provides relevant context automatically when Cursor starts new conversations",
      "tool_def",
      "Get server status and statistics",
      "\ud83e\udde0 OPTION A INTEGRATION - ADD THESE NEW MEMORY-ENHANCED TOOLS:",
      "\"total_functions\": len(brain_functions),",
      "\"\"\"Get server status and statistics\"\"\"",
      "Learning results with patterns and improvements",
      "\"inject_message\": \"Starting fresh conversation\",",
      "\"table_breakdown\": table_counts,",
      "include_history,",
      "This would call the actual understand_deeply function",
      "\"tools_available\": len(plugin_manager.registry.tools) + 4,  # +4 for core + memory tools",
      "include_learning: Include learning phase",
      "include_preferences: Include user preferences",
      "Store not found error",
      "\"llm_connection\": False,",
      "\"type\": f\"context_{analysis_type}_analysis\" if analysis_type != \"comprehensive\" else \"context_analysis\",",
      "\"\"\"\ud83e\udde0 Show available brain functions and cognitive capabilities\"\"\"",
      "- Phase 1: Enhanced Context Retrieval",
      "async def workflow_health_check(check_level: str = \"comprehensive\") -> dict:",
      "Uses the new ContextAnalyzer module to detect subtle patterns,",
      "\ud83d\udd27 Optimize Workflow",
      "\"total_calls\": len(call_history),",
      "\"assistant_identity\": cursor_context.get(\"assistant_name\", \"Johny\"),",
      "Optimizes workflow based on performance metrics and usage patterns.",
      "learning_result = await mcp_client.call_tool(\"auto_process_message\", user_message=user_message)",
      "\"tools\": [tool.name for tool in plugin.get_tools()],",
      "result = await plugin._build_comprehensive_context_handler(user_message, context_depth)",
      "logger.error(f\"\u274c Context quality assessment failed: {str(e)}\")",
      "This would call the actual code_analyze function",
      "input_data = {",
      "def list_plugins() -> dict:",
      "db = get_brain_db()",
      "result = await plugin._analyze_tool_performance_handler(tool_name, timeframe)",
      "assessment_criteria = [\"completeness\", \"relevance\", \"freshness\"]",
      "\"\"\"",
      "plugin_count = len(plugin_manager.registry.plugins)",
      "This would call the actual track_cursor_conversation function",
      "results.append({",
      "context_results = module_result",
      "async def list_available_models() -> dict:",
      "function",
      "===== DOMAIN 1: PERCEPTION & INPUT =====",
      "\"memory_updated\": learning_result.get(\"success\", False)",
      "# Extract context analysis results",
      "\"test_response\": \"\",",
      "log_mcp_tool",
      "\"error\": \"MCP client not initialized\",",
      "\ud83d\udeab DISABLED: Enhanced brain tools to prevent tool duplication",
      "return plugin_info",
      "context_result = await mcp_client.call_tool(\"get_user_context\", query=\"assistant identity user preferences conversation\")",
      "Analyzes tool performance and usage patterns to identify",
      "memory",
      "db.add_context_history(conversation_data)",
      "important_info = memory_result.get(\"important_info_found\", [])",
      "\"learning_capability\": \"Continuous from interactions\",",
      "\"usage_example\": \"Use 'think' for conversations, 'remember' to store info, 'recall' to search memories\"",
      "from enhanced_brain_tools_simple import EnhancedBrainTools",
      "for module_name, module_result in result[\"modules\"].items():",
      "This would call the actual get_cursor_context function",
      "models_result = await ollama.list_models()",
      "# Process the user message for learning",
      "\"analysis_type\": analysis_type,",
      "We'll manually register only the tools we need",
      "cursor_context = await get_cursor_context()",
      "user_message: User's message for context enhancement",
      "\ud83d\udd0d Search function calls by content, context, or parameters",
      "This would call the actual consciousness_check function",
      "tool_info",
      "context_depth: Context depth (basic, enhanced, comprehensive)",
      "# Count all tables",
      "plugin_count",
      "Args:",
      "List all loaded plugins and their information",
      "Get tool information from new registry",
      "workflow_mode: Workflow mode for batch processing",
      "@log_mcp_tool",
      "\"test_results\": results,",
      "\ud83d\udcca Analyze Workflow Performance",
      "\"should_inject\": False",
      "# Execute complete workflow",
      "async def batch_workflow_processing(user_messages: list, workflow_mode: str = \"standard\") -> dict:",
      "\"conversations_stored\": len(conversations),",
      "assessment_criteria: Criteria for assessment",
      "table_counts",
      "This would call the actual tool_performance_analysis function",
      "\"recall\": \"\ud83d\udd0d Recall memories and past experiences\",",
      "context_parts.append(f\"Recent conversations: {len(recent_conversations)} in memory\")",
      "\"context_analysis\": context_results,",
      "result = await plugin._optimize_workflow_handler(optimization_focus, target_metrics)",
      "if recent_conversations:",
      "\"total_memories\": len(memory_data.get(\"memory_store\", {})),",
      "\ud83d\udcdd Track Cursor conversation for learning and context",
      "Simple MCP client for internal tool calls with comprehensive logging",
      "Get function logger",
      "# Execute Phase 3",
      "async def assess_context_quality(context_data: dict, assessment_criteria: list = None) -> dict:",
      "This would call the actual batch_workflow_processing function",
      "This would call the actual workflow_health_check function",
      "Complete workflow results with performance metrics",
      "logger.error(f\"\u274c Workflow optimization failed: {str(e)}\")",
      "This would call the actual debug_intelligently function",
      "\"plugins_loaded\": len(plugin_manager.registry.plugins),",
      "\"mcp_configured\": True,",
      "Enhanced Workflow Orchestrator Tools - Complete Workflow Automation",
      "\"session_id\": function_logger._session_id",
      "This would call the actual recall_intelligently function",
      "Look for other common names",
      "THINKING",
      "brain_state = brain.get_brain_state()",
      "# Import and initialize enhanced workflow orchestrator",
      "\"content\": content,",
      "else:",
      "result = await plugin._workflow_health_check_handler(check_level)",
      "async def ai_chat_with_memory(user_message: str, ai_model_name: str = \"assistant\") -> dict:",
      "\"auto_context_injection\": True",
      "# Get user context",
      "This would call the actual assess_complexity function",
      "\"brain_type\": \"Human-Inspired Cognitive System\",",
      "session_stats",
      "tool_name: Specific tool to analyze (default: all)",
      "brain_db",
      "Count actual MCP tools (our 6 consolidated tools)",
      "async def get_cursor_context() -> dict:",
      "plugin = EnhancedContextIntegrationPlugin()",
      "\"\"\"List all loaded plugins and their information\"\"\"",
      "async def track_cursor_conversation(user_message: str, assistant_response: str = \"\", conversation_type: str = \"coding\") -> dict:",
      "\"phase\": \"continuous_learning\",",
      "Implements comprehensive context retrieval with pre-response memory search,",
      "List available LLM models from Ollama",
      "async def quick_memory_chat(message: str) -> str:",
      "This would call the actual workflow_performance_analysis function",
      "try:",
      "context_lower",
      "\"brain_state\": brain_state,",
      "\"reflect\": \"\ud83e\udd14 Engage in self-reflection and metacognition\",",
      "\"memory_result\": memory_result.get(\"success\", False),",
      "if not context_results:",
      "This would call the actual remember_important function",
      "\"ai_response\": f\"I'd be happy to help with: {user_message}\",",
      "\"insights\": [\"Basic context analysis available\"],",
      "async def continuous_learning_cycle(interaction_data: dict, learning_focus: str = \"context_patterns\") -> dict:",
      "\"session_success_rate\": session_stats.get(\"success_rate\", 0),",
      "\"error\": str(e),",
      "\"tools_available\": tool_count,",
      "tool_registry",
      "conversations = db.get_conversation_history(limit=5)",
      "MCPClient",
      "Call the tool handler",
      "\"auto_process_message\",",
      "Test connection to the Ollama LLM service",
      "async def analyze_workflow_performance(timeframe: str = \"session\", include_recommendations: bool = True) -> dict:",
      "\"learn_from\": \"\ud83d\udcda Learn from new experiences and information\",",
      "logger.info(f\"\ud83c\udfd7\ufe0f Building {context_depth} context\")",
      "# STEP 1: Process user message and get memory context",
      "This would call the actual orchestrate_tools function",
      "for table in tables:",
      "\"user_id\": \"current_user\",",
      "Performs comprehensive health check of the enhanced workflow system.",
      "This would call the actual ai_chat_with_memory function",
      "return result.get(\"ai_response\", \"I'd be happy to help!\")",
      "total_data_points",
      "Clear any existing plugins to start fresh",
      "\"total_data_points\": total_data_points,",
      "elif \"modules\" in result:",
      "if \"context_analyzer\" in module_name.lower():",
      "return {\"success\": False, \"error\": \"Memory system not available\"}",
      "context_summary = context_result.get(\"context_summary\", \"\")",
      "2nd",
      "our",
      "\"context_result\": context_result.get(\"success\", False)",
      "\ud83d\udcca Get comprehensive function call history with full traceability",
      "\"automatic_storage_active\": True",
      "\"prompts\": [prompt.name for prompt in plugin.get_prompts()],",
      "Core server management tools",
      "\"prompts_available\": len(plugin_manager.registry.prompts),",
      "# Assistant identity",
      "\"llm_connection\": test_result[\"connection_working\"],",
      "logger.info(f\"\ud83e\udde0 Performing deep context analysis: {analysis_type}\")",
      "\"memory_context_used\": memory_context,",
      "error_result",
      "Global MCP client instance",
      "from plugins.enhanced_workflow_orchestrator import EnhancedWorkflowOrchestratorPlugin",
      "\"model\": \"unknown\"",
      "\ud83d\ude80 Auto-inject context for new Cursor conversations",
      "for message in test_messages:",
      "enhanced_brain_tools_simple",
      "\"total_results\": len(search_results),",
      "interaction_data: Data from the interaction",
      "Add src to path",
      "\"brain_functions\": 8  # From brain_info",
      "Provides assistant identity, user info, and conversation history",
      "result = await plugin._enhanced_context_retrieval_handler(",
      "This would call the actual forget_selectively function",
      "Batch processing results with performance metrics",
      "Comprehensive context with overall quality score",
      "\"inject_message\": f\"Context: {cursor_context['context']}\",",
      "Health check results with status and recommendations",
      "logger.info(f\"\ud83d\ude80 Executing Enhanced Workflow: {workflow_mode} mode\")",
      "# Execute context quality assessment",
      "async with OllamaClient() as ollama:",
      "DISABLE ALL PLUGIN LOADING - We only want the restructured cognitive system",
      "\"timestamp\": datetime.now().isoformat()",
      "brain_functions = {",
      "important_info",
      "logger.info(f\"\ud83d\udcca Analyzing workflow performance: {timeframe}\")",
      "\"important_info_stored\": important_info,",
      "Complete overview of all data storage and cross-referencing capabilities",
      "This would call the actual enhanced_context_workflow function",
      "query=\"user name preferences important facts\"",
      "get_llm_client",
      "\"dream\": \"\ud83d\udca4 Background processing and memory consolidation\",",
      "Analyzes workflow performance and identifies improvement opportunities.",
      "\"error\": \"Brain interface not available\",",
      "Identifies issues and provides maintenance recommendations.",
      "\"preferences\": user_info.get(\"preferences\", []),",
      "Shows function call breakdown, success rates, and execution times",
      "\"memory_system\": {",
      "\"call_history\": []",
      "\ud83e\udde0 CONSOLIDATED TOOL REGISTRATION - All individual tools consolidated into cognitive domains",
      "\"plugin_directories\": plugin_manager.plugin_dirs,",
      "\"session_statistics\": session_stats,",
      "memory_data",
      "for seamless Cursor integration",
      "# Execute batch workflow processing",
      "context_summary = \"\"",
      "Get LLM client",
      "def server_status() -> dict:",
      "initialize_server",
      "if not brain:",
      "Tool orchestration results with execution plan",
      "async def test_memory_system() -> dict:",
      "\"resources\": [resource.name for resource in plugin.get_resources()],",
      "This would call the actual detect_patterns function",
      "memory_context = \" | \".join(memory_instructions)",
      "def brain_info() -> dict:",
      "This would call the actual enhanced_context_retrieval function",
      "Extract user message for context",
      "optimization_focus: Focus area for optimization",
      "tables = ['memory_store', 'conversation_memories', 'context_history', 'function_calls', 'memory_chunks']",
      "\"context\": \" | \".join(context_parts) if context_parts else \"Fresh conversation - no prior context\",",
      "\"user_message\": user_message,",
      "Look for \"call me\" or \"name is\" patterns",
      "async def test_llm_connection() -> dict:",
      "# Get brain state for context",
      "return models_result",
      "results = []",
      "\"consciousness_check\": \"\ud83e\uddd8 Check current state of consciousness\",",
      "\"call_history\": call_history,",
      "Cross-references all stored data for comprehensive search",
      "if context_result.get(\"success\"):",
      "tables",
      "\ud83d\udd27 CONSOLIDATED TOOLS REGISTERED WITH MCP SERVER",
      "This would call the actual workflow_optimization function",
      "\"response\": f\"I'd help with: {user_message}\"",
      "async def get_session_statistics() -> dict:",
      "Optimized for handling multiple requests in sequence.",
      "if important_info:",
      "plugin_info = {}",
      "async def execute_enhanced_workflow(user_message: str, workflow_mode: str = \"standard\", include_learning: bool = True) -> dict:",
      "# STEP 2: Extract context for AI response",
      "recent_conversations = db.get_conversation_history(limit=3)",
      "function_logger",
      "\"phase\": \"enhanced_context_retrieval\",",
      "enhanced_brain_tools",
      "session_stats = function_logger.get_session_stats()",
      "\"search_term\": search_term,",
      "conversation history analysis, and user preference integration.",
      "metadata = plugin.metadata",
      "implicit goals, and nuanced situations in user requests.",
      "\ud83d\udce6 Batch Workflow Processing",
      "Initialize function call logger FIRST",
      "context_parts.append(f\"Assistant Identity: {context_summary}\")",
      "user_message: User's message",
      "Quality assessment with scores and suggestions",
      "===== DOMAIN 3: PROCESSING & THINKING =====",
      "workflow_mode,",
      "\"recommendations\": [\"Enable full context analyzer for detailed insights\"]",
      "# Execute workflow performance analysis",
      "mcp_client",
      "logger.info(\"\ud83d\udcda Phase 3: Continuous Learning\")",
      "user_message,",
      "logger.error(f\"Error in deep context analysis: {str(e)}\")",
      "\"search_results\": []",
      "This would call the actual memory_stats function",
      "user_info = context_result.get(\"user_info\", {}) if context_result.get(\"success\") else {}",
      "\ud83c\udfaf Assess Context Quality",
      "MONITORING",
      "# Prepare input for context analysis",
      "Automatically learns from Cursor conversations and updates memory",
      "get_function_logger",
      "list",
      "from plugins.enhanced_context_integration import EnhancedContextIntegrationPlugin",
      "\"user_names\": user_info.get(\"name\", []),",
      "Only register essential debugging tools in debug mode",
      "Call a tool by name with parameters and automatically log everything",
      "target_goal: What we're trying to achieve",
      "Returns:",
      "result = await plugin._orchestrate_tools_handler(context_data, target_goal)",
      "table_counts[table] = 0",
      "Enhanced context data with quality metrics",
      "target_metrics: Target metrics to improve",
      "\"assistant_name\": \"Johny\",",
      "conversation_data",
      "\"memory_system\": \"Persistent with emotional weighting\",",
      "actual_mcp_tools",
      "# STEP 3: Create enhanced AI prompt with memory context",
      "# Fallback response without memory",
      "\"function_filter\": function_name,",
      "functionality",
      "\"plugin_system\": {",
      "logger.error(f\"\u274c Enhanced context retrieval failed: {str(e)}\")",
      "\ud83c\udfe5 Workflow Health Check",
      "\"cursor_integration\": {",
      "Phase",
      "INPUT",
      "\"session_statistics\": {}",
      "Quick memory-enabled chat - simplified version",
      "using multiple criteria and generates improvement suggestions.",
      "async def search_function_calls(search_term: str, limit: int = 20) -> dict:",
      "break",
      "learning_focus: What to focus on learning",
      "brain_functions",
      "# Execute comprehensive context building",
      "ADAPTATION",
      "total_data_points = 0",
      "Implements continuous learning and context improvement.",
      "===== DOMAIN 2: MEMORY & STORAGE =====",
      "\"type\": conversation_type,",
      "# User information",
      "user_message: User's message for context analysis",
      "context_parts.append(f\"User: {', '.join(user_info['name'][:2])}\")",
      "memory_instructions.append(f\"Context: {context_summary}\")",
      "conversation_data = {",
      "Store error result",
      "async def analyze_tool_performance(tool_name: str = \"all\", timeframe: str = \"session\") -> dict:",
      "\"success\": False,",
      "# Process through brain system",
      "\"assistant_name\": next((name for name in user_info.get(\"name\", []) if name.lower() in [\"johny\", \"jonathan\"]), \"Memory Assistant\"),",
      "except:",
      "\"memory_working\": all(r.get(\"memory_used\") for r in results[1:])  # Should have memory from 2nd message onward",
      "brain_state",
      "We have exactly 6 consolidated tools",
      "Initialize new tool registry",
      "This would call the actual auto_process_message function",
      "This would call the actual initialize_chat_session function",
      "\"output\": result.get(\"ai_response\", \"\"),",
      "This would call the actual enhanced_workflow_execution function",
      "if not mcp_client:",
      "\"context\": f\"Assistant ready (memory system: {str(e)})\",",
      "plugin._setup()",
      "brain",
      "# Function call logging stats",
      "\"test_response\": test_result[\"response\"],",
      "This would call the actual cursor_auto_inject_context function",
      "\"phase\": \"tool_orchestration\",",
      "async def get_function_call_history(limit: int = 50, function_name: str = None) -> dict:",
      "llm = await get_llm_client()",
      "PluginManager",
      "logger.info(f\"\ud83d\udce6 Processing {len(user_messages)} messages in batch\")",
      "if memory_result.get(\"success\"):",
      "result = await plugin._batch_workflow_processing_handler(user_messages, workflow_mode)",
      "count",
      "Patch JSON operations for backward compatibility",
      "This would call the actual learn_from function",
      "\"Hi there! My name is Johny and I love working on AI projects.\",",
      "\ud83c\udfd7\ufe0f Build Comprehensive Context",
      "llm_client",
      "\"content_analyzed\": content[:100] + \"...\" if len(content) > 100 else content,",
      "This would call the actual dream function",
      "count = cursor.fetchone()[0]",
      "\"server_name\": \"Memory Context Manager with AI Memory\",",
      "enhanced_brain_tools = EnhancedBrainTools(mcp_client, tool_registry)",
      "async def enhanced_context_retrieval(user_message: str, include_history: bool = True, include_preferences: bool = True) -> dict:",
      "# Look for context analyzer in modules",
      "# STEP 4: Generate AI response with memory context",
      "===== DOMAIN 6: SELF-MONITORING =====",
      "memory_data = db.get_memory_store()",
      "\"version\": metadata.version,",
      "Generate response using real LLM",
      "\"memory_context_used\": \"\",",
      "if assessment_criteria is None:",
      "# Execute Phase 2",
      "logger.info(f\"\ud83c\udfe5 Performing workflow health check: {check_level}\")",
      "Process multiple messages through the enhanced workflow efficiently.",
      "user_messages: List of user messages to process",
      "# Recent activity",
      "test_messages",
      "\ud83c\udfaf Get comprehensive context for Cursor conversations",
      "# Execute workflow health check",
      "\"memory_enabled\": True,",
      "Extract user's name from memory context",
      "\"context_available\": False,",
      "\"resources_available\": len(plugin_manager.registry.resources),",
      "memory_context,",
      "logger.error(f\"\u274c Enhanced workflow execution failed: {str(e)}\")",
      "logger.info(\"\ud83c\udfaf Phase 2: Tool Orchestration\")",
      "\"learned\": learning_result.get(\"important_info_found\", []) if learning_result.get(\"success\") else [],",
      "\ud83d\ude80 Execute Complete Enhanced Workflow",
      "This would call the actual refactor_safely function",
      "\"system_status\": \"fully_operational\",",
      "response",
      "result = await plugin._continuous_learning_handler(interaction_data, learning_focus)",
      "This would call the actual get_user_context function",
      "Create internal MCP client",
      "async def orchestrate_tools(context_data: dict, target_goal: str = \"enhanced_response\") -> dict:",
      "Initialize server with clean brain interface",
      "logger.info(f\"\ufffd\ufffd Processing message with memory: {user_message[:50]}...\")",
      "\"How are you doing today?\"",
      "\"logging_enabled\": function_logger._enabled",
      "logger.error(f\"\u274c Tool orchestration failed: {str(e)}\")",
      "logger.error(f\"\u274c Workflow health check failed: {str(e)}\")",
      "async def analyze_context_deeply(content: str, analysis_type: str = \"comprehensive\") -> dict:",
      "memory_instructions = []",
      "logger.info(f\"\ud83d\udd27 Optimizing workflow: {optimization_focus}\")",
      "Optimization results with recommendations",
      "Import LLM client",
      "cursor_context",
      "\"search_results\": search_results,",
      "Performance analysis with metrics and recommendations",
      "This would call the actual reflect_enhanced function",
      "cursor = conn.execute(f\"SELECT COUNT(*) FROM {table}\")",
      "user_message=user_message",
      "Create server",
      "Performance analysis with insights",
      "# Check if brain interface is available",
      "search_results = function_logger.search_calls_by_context(search_term, limit)",
      "Identifies bottlenecks and implements automatic improvements.",
      "optimization opportunities and usage trends.",
      "ai_response",
      "context_parts = []",
      "# Fallback: try to get basic analysis",
      "Memory client for internal tool calls",
      "\"session_id\": function_logger._session_id,",
      "logger.error(f\"Memory-enhanced chat error: {str(e)}\")",
      "from llm_client import get_llm_client",
      "Automatically executes all three phases of context enhancement in sequence:",
      "return {\"context\": \"Basic assistant without memory access\"}",
      "Initialize plugin manager",
      "Extracts learning patterns, identifies improvements, and",
      "\"learned\": learning_result.get(\"important_info_found\", []) if learning_result.get(\"success\") else []",
      "# Store conversation in database",
      "\ud83d\udcc8 Get comprehensive session statistics and performance metrics",
      "\"What's my name again?\",",
      "timeframe: Timeframe for analysis",
      "\"ready_for_conversation\": True",
      "logger.error(f\"\u274c Comprehensive context building failed: {str(e)}\")",
      "result = await plugin._assess_context_quality_handler(context_data, assessment_criteria)",
      "Detailed context analysis with insights and recommendations",
      "name_pattern",
      "except Exception as e:",
      "context_result = await mcp_client.call_tool(",
      "user_info",
      "Enhanced Context Integration Tools - Phase 1, 2, and 3 Implementation",
      "logger.info(\"\ud83d\udd0d Phase 1: Enhanced Context Retrieval\")",
      "# Execute workflow optimization",
      "logger.error(f\"\u274c Workflow performance analysis failed: {str(e)}\")",
      "Selects appropriate tools, creates execution plans, and coordinates",
      "\"error\": str(e)",
      "- Phase 2: Tool Orchestration",
      "\"consciousness_level\": \"Aware and responsive\",",
      "logger.error(f\"\u274c Tool performance analysis failed: {str(e)}\")",
      "\"ai_response\": ai_response,",
      "\"remember\": \"\ud83e\udde0 Remember important information\",",
      "Returns just the AI response string",
      "check_level: Health check level (basic, comprehensive, deep)",
      "\"context_available\": True,",
      "plugin_info[plugin_name] = {",
      "logger.error(f\"Conversation tracking error: {str(e)}\")",
      "# Plugin system status",
      "async def optimize_workflow(optimization_focus: str = \"performance\", target_metrics: list = None) -> dict:",
      "match",
      "\"logging_status\": \"active\" if function_logger._enabled else \"disabled\"",
      "context_results = {}",
      "\ud83d\udcca Analyze Tool Performance",
      "from database import get_brain_db",
      "Store successful result",
      "important_info = []",
      "Executes all three phases to build comprehensive context:",
      "tool usage for optimal context enhancement.",
      "debug_mode",
      "if context_summary:",
      "return {",
      "\"cross_referencing_enabled\": True,",
      "Shows all function calls with inputs, outputs, execution time, and context",
      "async def get_comprehensive_system_status() -> dict:",
      "logger.info(\"\ud83c\udfaf Assessing context quality\")",
      "if user_info.get(\"preferences\"):",
      "content: The text content to analyze",
      "\"available_functions\": brain_functions,",
      "This is where your AI agent gets memory-enhanced responses!",
      "\"conversation_tracking\": True,",
      "\"database_path\": db.db_path",
      "test_messages = [",
      "\"comprehensive_logging\": {",
      "workflow_mode: Workflow mode (standard, aggressive, conservative)",
      "This would call the actual analyze_context_deeply function",
      "\"author\": metadata.author,",
      "tool_count = len(plugin_manager.registry.tools)",
      "context_parts.append(f\"Preferences: {', '.join(user_info['preferences'][:2])}\")",
      "\"data_storage_comprehensive\": {",
      "\"platform\": \"cursor\",",
      "\"plugins_loaded\": plugin_count,",
      "\ud83e\udde0 Analyze content with enhanced contextual understanding",
      "Test the memory system with sample conversations",
      "# Execute tool performance analysis",
      "context_data: Context data to assess",
      "\"memory_processing\": {",
      "- Phase 3: Continuous Learning Preparation",
      "call_history = function_logger.get_call_history(limit=limit, function_name=function_name)",
      "for plugin_name, plugin in plugin_manager.registry.plugins.items():",
      "bool(important_info)",
      "===== DOMAIN 5: OUTPUT & ACTION =====",
      "\"context_score\": 0.5,",
      "result = await plugin._analyze_workflow_performance_handler(timeframe, include_recommendations)",
      "logger.error(f\"\u274c Continuous learning failed: {str(e)}\")",
      "function_logger = get_function_logger()",
      "\"get_user_context\",",
      "table_counts = {}",
      "total_data_points += count",
      "context_results",
      "===== DOMAIN 4: LEARNING & ADAPTATION =====",
      "\"model\": test_result[\"model\"],",
      "context_results = {",
      "Initialize clean brain interface (replaces technical tools)",
      "async def cursor_auto_inject_context() -> dict:",
      "analysis_type: Type of analysis (comprehensive, subtlety, depth, goals, complexity)",
      "\"assistant_response\": assistant_response,",
      "Initialize database system first",
      "consolidates memories for future context enhancement.",
      "This would call the actual context_quality_assessment function",
      "context_parts",
      "result = brain.process_input(input_data)",
      "\"logging_enabled\": function_logger._enabled,",
      "Always register resources and prompts",
      "This would call the actual think_deeply function",
      "call_history",
      "ai_response = await generate_memory_enhanced_response(",
      "\ud83c\udfaf Get comprehensive system status including all logging and memory systems",
      "logger.error(f\"Cursor context error: {str(e)}\")",
      "logger.info(f\"\ud83d\udcca Analyzing tool performance: {tool_name}\")",
      "Implements intelligent tool orchestration based on context analysis.",
      "\ud83d\udd0d COMPREHENSIVE FUNCTION CALL LOGGING TOOLS",
      "AI Chat with Automatic Memory - OPTION A INTEGRATION",
      "Assesses the quality and completeness of current context",
      "# Memory system status",
      "test_result = await llm.test_connection()",
      "include_recommendations: Include improvement recommendations",
      "with sqlite3.connect(db.db_path) as conn:",
      "\"system_status\": \"error\"",
      "\"think\": \"\ud83d\udcad Think and respond with memory and context\",",
      "\"important_info_stored\": [],",
      "memory_instructions",
      "global mcp_client",
      "get_tool_registry",
      "return result",
      "result = await ai_chat_with_memory(message)",
      "result = await plugin._execute_enhanced_workflow_handler(",
      "Brain status and info tools",
      "Provides detailed metrics and actionable recommendations.",
      "if cursor_context.get(\"ready_for_conversation\"):",
      "context_results = result[\"context_analyzer\"]",
      "# Get recent conversation history",
      "\"input\": message,",
      "logger.error(f\"\u274c Batch workflow processing failed: {str(e)}\")",
      "function_call_logger",
      "- Phase 3: Continuous Learning",
      "This would call the actual continuous_learning_cycle function",
      "\"success\": True,",
      "Start MCP server with stdio (works for both Docker and CLI)",
      "\ud83e\udde0 Show available brain functions and cognitive capabilities",
      "\"learned\": result.get(\"important_info_stored\", [])",
      "\"memory_stats\": \"\ud83d\udcca Check memory database statistics and health\"",
      "Fallback to simple response if LLM fails",
      "from llm_client import OllamaClient",
      "\"test_completed\": True,",
      "# Calculate total data points",
      "\"function_calls_logged\": session_stats.get(\"total_calls\", 0),",
      "\"error\": f\"Memory processing failed: {str(e)}\"",
      "import sqlite3",
      "new",
      "interactions",
      "context_data: Context data from Phase 1",
      "# Execute Phase 1",
      "return {\"success\": False, \"error\": str(e)}",
      "plugin = EnhancedWorkflowOrchestratorPlugin()",
      "This reduces tool count from 48 to 12 while preserving 100% functionality",
      "plugin_info",
      "async def build_comprehensive_context(user_message: str, context_depth: str = \"comprehensive\") -> dict:",
      "# Import and initialize enhanced context integration",
      "\"conversation_stored\": True,",
      "Register plugin tools for debugging",
      "memory_result = await mcp_client.call_tool(",
      "if user_info.get(\"name\"):",
      "\"error\": test_result.get(\"error\")",
      "\"conversation_count\": len(recent_conversations),",
      "\"should_inject\": True",
      "\"description\": metadata.description,",
      "This would call the actual generate_memory_enhanced_response function",
      "\"cross_references_available\": True",
      "if \"context_analyzer\" in result:",
      "context_summary",
      "plugin_manager",
      "conversations",
      "\"memory_used\": result.get(\"memory_context_used\", \"\"),",
      "include_history: Include conversation history",
      "table_counts[table] = count",
      "memory_instructions.append(f\"Just learned: {', '.join(important_info)}\")",
      "Provides relevant context automatically when Cursor starts new conversations",
      "tool_def",
      "Get server status and statistics",
      "\ud83e\udde0 OPTION A INTEGRATION - ADD THESE NEW MEMORY-ENHANCED TOOLS:",
      "\"total_functions\": len(brain_functions),",
      "\"\"\"Get server status and statistics\"\"\"",
      "Learning results with patterns and improvements",
      "\"inject_message\": \"Starting fresh conversation\",",
      "\"table_breakdown\": table_counts,",
      "include_history,",
      "This would call the actual understand_deeply function",
      "\"tools_available\": len(plugin_manager.registry.tools) + 4,  # +4 for core + memory tools",
      "include_learning: Include learning phase",
      "include_preferences: Include user preferences",
      "Store not found error",
      "\"llm_connection\": False,",
      "\"type\": f\"context_{analysis_type}_analysis\" if analysis_type != \"comprehensive\" else \"context_analysis\",",
      "\"\"\"\ud83e\udde0 Show available brain functions and cognitive capabilities\"\"\"",
      "- Phase 1: Enhanced Context Retrieval",
      "async def workflow_health_check(check_level: str = \"comprehensive\") -> dict:",
      "Uses the new ContextAnalyzer module to detect subtle patterns,",
      "\ud83d\udd27 Optimize Workflow",
      "\"total_calls\": len(call_history),",
      "\"assistant_identity\": cursor_context.get(\"assistant_name\", \"Johny\"),",
      "Optimizes workflow based on performance metrics and usage patterns.",
      "learning_result = await mcp_client.call_tool(\"auto_process_message\", user_message=user_message)",
      "\"tools\": [tool.name for tool in plugin.get_tools()],",
      "result = await plugin._build_comprehensive_context_handler(user_message, context_depth)",
      "logger.error(f\"\u274c Context quality assessment failed: {str(e)}\")",
      "This would call the actual code_analyze function",
      "input_data = {",
      "def list_plugins() -> dict:",
      "db = get_brain_db()",
      "result = await plugin._analyze_tool_performance_handler(tool_name, timeframe)",
      "assessment_criteria = [\"completeness\", \"relevance\", \"freshness\"]",
      "\"\"\"",
      "plugin_count = len(plugin_manager.registry.plugins)",
      "This would call the actual track_cursor_conversation function",
      "results.append({",
      "context_results = module_result",
      "async def list_available_models() -> dict:",
      "function",
      "===== DOMAIN 1: PERCEPTION & INPUT =====",
      "\"memory_updated\": learning_result.get(\"success\", False)",
      "# Extract context analysis results",
      "\"test_response\": \"\",",
      "log_mcp_tool",
      "\"error\": \"MCP client not initialized\",",
      "\ud83d\udeab DISABLED: Enhanced brain tools to prevent tool duplication",
      "return plugin_info",
      "context_result = await mcp_client.call_tool(\"get_user_context\", query=\"assistant identity user preferences conversation\")",
      "Analyzes tool performance and usage patterns to identify",
      "memory",
      "db.add_context_history(conversation_data)",
      "important_info = memory_result.get(\"important_info_found\", [])",
      "\"learning_capability\": \"Continuous from interactions\",",
      "\"usage_example\": \"Use 'think' for conversations, 'remember' to store info, 'recall' to search memories\"",
      "from enhanced_brain_tools_simple import EnhancedBrainTools",
      "for module_name, module_result in result[\"modules\"].items():",
      "This would call the actual get_cursor_context function",
      "models_result = await ollama.list_models()",
      "# Process the user message for learning",
      "\"analysis_type\": analysis_type,",
      "We'll manually register only the tools we need",
      "cursor_context = await get_cursor_context()",
      "user_message: User's message for context enhancement",
      "\ud83d\udd0d Search function calls by content, context, or parameters",
      "This would call the actual consciousness_check function",
      "tool_info",
      "context_depth: Context depth (basic, enhanced, comprehensive)",
      "# Count all tables",
      "plugin_count",
      "Args:",
      "List all loaded plugins and their information",
      "Get tool information from new registry",
      "workflow_mode: Workflow mode for batch processing",
      "@log_mcp_tool",
      "\"test_results\": results,",
      "\ud83d\udcca Analyze Workflow Performance",
      "\"should_inject\": False",
      "# Execute complete workflow",
      "async def batch_workflow_processing(user_messages: list, workflow_mode: str = \"standard\") -> dict:",
      "\"conversations_stored\": len(conversations),",
      "assessment_criteria: Criteria for assessment",
      "table_counts",
      "This would call the actual tool_performance_analysis function",
      "\"recall\": \"\ud83d\udd0d Recall memories and past experiences\",",
      "context_parts.append(f\"Recent conversations: {len(recent_conversations)} in memory\")",
      "\"context_analysis\": context_results,",
      "result = await plugin._optimize_workflow_handler(optimization_focus, target_metrics)",
      "if recent_conversations:",
      "\"total_memories\": len(memory_data.get(\"memory_store\", {})),",
      "\ud83d\udcdd Track Cursor conversation for learning and context",
      "Simple MCP client for internal tool calls with comprehensive logging",
      "Get function logger",
      "# Execute Phase 3",
      "async def assess_context_quality(context_data: dict, assessment_criteria: list = None) -> dict:",
      "This would call the actual batch_workflow_processing function",
      "This would call the actual workflow_health_check function",
      "Complete workflow results with performance metrics",
      "logger.error(f\"\u274c Workflow optimization failed: {str(e)}\")",
      "This would call the actual debug_intelligently function",
      "\"plugins_loaded\": len(plugin_manager.registry.plugins),",
      "\"mcp_configured\": True,",
      "Enhanced Workflow Orchestrator Tools - Complete Workflow Automation",
      "\"session_id\": function_logger._session_id",
      "This would call the actual recall_intelligently function",
      "Look for other common names",
      "THINKING",
      "brain_state = brain.get_brain_state()",
      "# Import and initialize enhanced workflow orchestrator",
      "\"content\": content,",
      "else:",
      "result = await plugin._workflow_health_check_handler(check_level)",
      "async def ai_chat_with_memory(user_message: str, ai_model_name: str = \"assistant\") -> dict:",
      "\"auto_context_injection\": True",
      "# Get user context",
      "This would call the actual assess_complexity function",
      "\"brain_type\": \"Human-Inspired Cognitive System\",",
      "session_stats",
      "tool_name: Specific tool to analyze (default: all)",
      "brain_db",
      "Count actual MCP tools (our 6 consolidated tools)",
      "async def get_cursor_context() -> dict:",
      "plugin = EnhancedContextIntegrationPlugin()",
      "\"\"\"List all loaded plugins and their information\"\"\"",
      "async def track_cursor_conversation(user_message: str, assistant_response: str = \"\", conversation_type: str = \"coding\") -> dict:",
      "\"phase\": \"continuous_learning\",",
      "Implements comprehensive context retrieval with pre-response memory search,",
      "List available LLM models from Ollama",
      "async def quick_memory_chat(message: str) -> str:",
      "This would call the actual workflow_performance_analysis function",
      "try:",
      "context_lower",
      "\"brain_state\": brain_state,",
      "\"reflect\": \"\ud83e\udd14 Engage in self-reflection and metacognition\",",
      "\"memory_result\": memory_result.get(\"success\", False),",
      "if not context_results:",
      "This would call the actual remember_important function",
      "\"ai_response\": f\"I'd be happy to help with: {user_message}\",",
      "\"insights\": [\"Basic context analysis available\"],",
      "async def continuous_learning_cycle(interaction_data: dict, learning_focus: str = \"context_patterns\") -> dict:",
      "\"session_success_rate\": session_stats.get(\"success_rate\", 0),",
      "\"error\": str(e),",
      "\"tools_available\": tool_count,",
      "tool_registry",
      "conversations = db.get_conversation_history(limit=5)",
      "MCPClient",
      "Call the tool handler",
      "\"auto_process_message\",",
      "Test connection to the Ollama LLM service",
      "async def analyze_workflow_performance(timeframe: str = \"session\", include_recommendations: bool = True) -> dict:",
      "\"learn_from\": \"\ud83d\udcda Learn from new experiences and information\",",
      "logger.info(f\"\ud83c\udfd7\ufe0f Building {context_depth} context\")",
      "# STEP 1: Process user message and get memory context",
      "This would call the actual orchestrate_tools function",
      "for table in tables:",
      "\"user_id\": \"current_user\",",
      "Performs comprehensive health check of the enhanced workflow system.",
      "This would call the actual ai_chat_with_memory function",
      "return result.get(\"ai_response\", \"I'd be happy to help!\")",
      "total_data_points",
      "Clear any existing plugins to start fresh",
      "\"total_data_points\": total_data_points,",
      "elif \"modules\" in result:",
      "if \"context_analyzer\" in module_name.lower():",
      "return {\"success\": False, \"error\": \"Memory system not available\"}",
      "context_summary = context_result.get(\"context_summary\", \"\")",
      "2nd",
      "our",
      "\"context_result\": context_result.get(\"success\", False)",
      "\ud83d\udcca Get comprehensive function call history with full traceability",
      "\"automatic_storage_active\": True",
      "\"prompts\": [prompt.name for prompt in plugin.get_prompts()],",
      "Core server management tools",
      "\"prompts_available\": len(plugin_manager.registry.prompts),",
      "# Assistant identity",
      "\"llm_connection\": test_result[\"connection_working\"],",
      "logger.info(f\"\ud83e\udde0 Performing deep context analysis: {analysis_type}\")",
      "\"memory_context_used\": memory_context,",
      "error_result",
      "Global MCP client instance",
      "from plugins.enhanced_workflow_orchestrator import EnhancedWorkflowOrchestratorPlugin",
      "\"model\": \"unknown\"",
      "\ud83d\ude80 Auto-inject context for new Cursor conversations",
      "for message in test_messages:",
      "enhanced_brain_tools_simple",
      "\"total_results\": len(search_results),",
      "interaction_data: Data from the interaction",
      "Add src to path",
      "\"brain_functions\": 8  # From brain_info",
      "Provides assistant identity, user info, and conversation history",
      "result = await plugin._enhanced_context_retrieval_handler(",
      "This would call the actual forget_selectively function",
      "Batch processing results with performance metrics",
      "Comprehensive context with overall quality score",
      "\"inject_message\": f\"Context: {cursor_context['context']}\",",
      "Health check results with status and recommendations",
      "logger.info(f\"\ud83d\ude80 Executing Enhanced Workflow: {workflow_mode} mode\")",
      "# Execute context quality assessment",
      "async with OllamaClient() as ollama:",
      "DISABLE ALL PLUGIN LOADING - We only want the restructured cognitive system",
      "\"timestamp\": datetime.now().isoformat()",
      "brain_functions = {",
      "important_info",
      "logger.info(f\"\ud83d\udcca Analyzing workflow performance: {timeframe}\")",
      "\"important_info_stored\": important_info,",
      "Complete overview of all data storage and cross-referencing capabilities",
      "This would call the actual enhanced_context_workflow function",
      "query=\"user name preferences important facts\"",
      "get_llm_client",
      "\"dream\": \"\ud83d\udca4 Background processing and memory consolidation\",",
      "Analyzes workflow performance and identifies improvement opportunities.",
      "\"error\": \"Brain interface not available\",",
      "Identifies issues and provides maintenance recommendations.",
      "\"preferences\": user_info.get(\"preferences\", []),",
      "Shows function call breakdown, success rates, and execution times",
      "\"memory_system\": {",
      "\"call_history\": []",
      "\ud83e\udde0 CONSOLIDATED TOOL REGISTRATION - All individual tools consolidated into cognitive domains",
      "\"plugin_directories\": plugin_manager.plugin_dirs,",
      "\"session_statistics\": session_stats,",
      "memory_data",
      "for seamless Cursor integration",
      "# Execute batch workflow processing",
      "context_summary = \"\"",
      "Get LLM client",
      "def server_status() -> dict:",
      "initialize_server",
      "if not brain:",
      "Tool orchestration results with execution plan",
      "async def test_memory_system() -> dict:",
      "\"resources\": [resource.name for resource in plugin.get_resources()],",
      "This would call the actual detect_patterns function",
      "memory_context = \" | \".join(memory_instructions)",
      "def brain_info() -> dict:",
      "This would call the actual enhanced_context_retrieval function",
      "Extract user message for context",
      "optimization_focus: Focus area for optimization",
      "tables = ['memory_store', 'conversation_memories', 'context_history', 'function_calls', 'memory_chunks']",
      "\"context\": \" | \".join(context_parts) if context_parts else \"Fresh conversation - no prior context\",",
      "\"user_message\": user_message,",
      "Look for \"call me\" or \"name is\" patterns",
      "async def test_llm_connection() -> dict:",
      "# Get brain state for context",
      "return models_result",
      "results = []",
      "\"consciousness_check\": \"\ud83e\uddd8 Check current state of consciousness\",",
      "\"call_history\": call_history,",
      "Cross-references all stored data for comprehensive search",
      "if context_result.get(\"success\"):",
      "tables",
      "\ud83d\udd27 CONSOLIDATED TOOLS REGISTERED WITH MCP SERVER",
      "This would call the actual workflow_optimization function",
      "\"response\": f\"I'd help with: {user_message}\"",
      "async def get_session_statistics() -> dict:",
      "Optimized for handling multiple requests in sequence.",
      "if important_info:",
      "plugin_info = {}",
      "async def execute_enhanced_workflow(user_message: str, workflow_mode: str = \"standard\", include_learning: bool = True) -> dict:",
      "# STEP 2: Extract context for AI response",
      "recent_conversations = db.get_conversation_history(limit=3)",
      "function_logger",
      "\"phase\": \"enhanced_context_retrieval\",",
      "enhanced_brain_tools",
      "session_stats = function_logger.get_session_stats()",
      "\"search_term\": search_term,",
      "conversation history analysis, and user preference integration.",
      "metadata = plugin.metadata",
      "implicit goals, and nuanced situations in user requests.",
      "\ud83d\udce6 Batch Workflow Processing",
      "Initialize function call logger FIRST",
      "context_parts.append(f\"Assistant Identity: {context_summary}\")",
      "user_message: User's message",
      "Quality assessment with scores and suggestions",
      "===== DOMAIN 3: PROCESSING & THINKING =====",
      "workflow_mode,",
      "\"recommendations\": [\"Enable full context analyzer for detailed insights\"]",
      "# Execute workflow performance analysis",
      "mcp_client",
      "logger.info(\"\ud83d\udcda Phase 3: Continuous Learning\")",
      "user_message,",
      "logger.error(f\"Error in deep context analysis: {str(e)}\")",
      "\"search_results\": []",
      "This would call the actual memory_stats function",
      "user_info = context_result.get(\"user_info\", {}) if context_result.get(\"success\") else {}",
      "\ud83c\udfaf Assess Context Quality",
      "MONITORING",
      "# Prepare input for context analysis",
      "Automatically learns from Cursor conversations and updates memory",
      "get_function_logger",
      "list",
      "from plugins.enhanced_context_integration import EnhancedContextIntegrationPlugin",
      "\"user_names\": user_info.get(\"name\", []),",
      "Only register essential debugging tools in debug mode",
      "Call a tool by name with parameters and automatically log everything",
      "target_goal: What we're trying to achieve",
      "Returns:",
      "result = await plugin._orchestrate_tools_handler(context_data, target_goal)",
      "table_counts[table] = 0",
      "Enhanced context data with quality metrics",
      "target_metrics: Target metrics to improve",
      "\"assistant_name\": \"Johny\",",
      "conversation_data",
      "\"memory_system\": \"Persistent with emotional weighting\",",
      "actual_mcp_tools",
      "# STEP 3: Create enhanced AI prompt with memory context",
      "# Fallback response without memory",
      "\"function_filter\": function_name,",
      "functionality",
      "\"plugin_system\": {",
      "logger.error(f\"\u274c Enhanced context retrieval failed: {str(e)}\")",
      "\ud83c\udfe5 Workflow Health Check",
      "\"cursor_integration\": {",
      "Phase",
      "INPUT",
      "\"session_statistics\": {}",
      "Quick memory-enabled chat - simplified version",
      "using multiple criteria and generates improvement suggestions.",
      "async def search_function_calls(search_term: str, limit: int = 20) -> dict:",
      "break",
      "learning_focus: What to focus on learning",
      "brain_functions",
      "# Execute comprehensive context building",
      "ADAPTATION",
      "total_data_points = 0",
      "Implements continuous learning and context improvement.",
      "===== DOMAIN 2: MEMORY & STORAGE =====",
      "\"type\": conversation_type,",
      "# User information",
      "user_message: User's message for context analysis",
      "context_parts.append(f\"User: {', '.join(user_info['name'][:2])}\")",
      "memory_instructions.append(f\"Context: {context_summary}\")",
      "conversation_data = {",
      "Store error result",
      "async def analyze_tool_performance(tool_name: str = \"all\", timeframe: str = \"session\") -> dict:",
      "\"success\": False,",
      "# Process through brain system",
      "\"assistant_name\": next((name for name in user_info.get(\"name\", []) if name.lower() in [\"johny\", \"jonathan\"]), \"Memory Assistant\"),",
      "except:",
      "\"memory_working\": all(r.get(\"memory_used\") for r in results[1:])  # Should have memory from 2nd message onward",
      "brain_state",
      "We have exactly 6 consolidated tools",
      "Initialize new tool registry",
      "This would call the actual auto_process_message function",
      "This would call the actual initialize_chat_session function",
      "\"output\": result.get(\"ai_response\", \"\"),",
      "This would call the actual enhanced_workflow_execution function",
      "if not mcp_client:",
      "\"context\": f\"Assistant ready (memory system: {str(e)})\",",
      "plugin._setup()",
      "brain",
      "# Function call logging stats",
      "\"test_response\": test_result[\"response\"],",
      "This would call the actual cursor_auto_inject_context function",
      "\"phase\": \"tool_orchestration\",",
      "async def get_function_call_history(limit: int = 50, function_name: str = None) -> dict:",
      "llm = await get_llm_client()",
      "PluginManager",
      "logger.info(f\"\ud83d\udce6 Processing {len(user_messages)} messages in batch\")",
      "if memory_result.get(\"success\"):",
      "result = await plugin._batch_workflow_processing_handler(user_messages, workflow_mode)",
      "count",
      "Patch JSON operations for backward compatibility",
      "This would call the actual learn_from function",
      "\"Hi there! My name is Johny and I love working on AI projects.\",",
      "\ud83c\udfd7\ufe0f Build Comprehensive Context",
      "llm_client",
      "\"content_analyzed\": content[:100] + \"...\" if len(content) > 100 else content,",
      "This would call the actual dream function",
      "count = cursor.fetchone()[0]",
      "\"server_name\": \"Memory Context Manager with AI Memory\",",
      "enhanced_brain_tools = EnhancedBrainTools(mcp_client, tool_registry)",
      "async def enhanced_context_retrieval(user_message: str, include_history: bool = True, include_preferences: bool = True) -> dict:",
      "# Look for context analyzer in modules",
      "# STEP 4: Generate AI response with memory context",
      "===== DOMAIN 6: SELF-MONITORING =====",
      "memory_data = db.get_memory_store()",
      "\"version\": metadata.version,",
      "Generate response using real LLM",
      "\"memory_context_used\": \"\",",
      "if assessment_criteria is None:",
      "# Execute Phase 2",
      "logger.info(f\"\ud83c\udfe5 Performing workflow health check: {check_level}\")",
      "Process multiple messages through the enhanced workflow efficiently.",
      "user_messages: List of user messages to process",
      "# Recent activity",
      "test_messages",
      "\ud83c\udfaf Get comprehensive context for Cursor conversations",
      "# Execute workflow health check",
      "\"memory_enabled\": True,",
      "Extract user's name from memory context",
      "\"context_available\": False,",
      "\"resources_available\": len(plugin_manager.registry.resources),",
      "memory_context,",
      "logger.error(f\"\u274c Enhanced workflow execution failed: {str(e)}\")",
      "logger.info(\"\ud83c\udfaf Phase 2: Tool Orchestration\")",
      "\"learned\": learning_result.get(\"important_info_found\", []) if learning_result.get(\"success\") else [],",
      "\ud83d\ude80 Execute Complete Enhanced Workflow",
      "This would call the actual refactor_safely function",
      "\"system_status\": \"fully_operational\",",
      "response",
      "result = await plugin._continuous_learning_handler(interaction_data, learning_focus)",
      "This would call the actual get_user_context function",
      "Create internal MCP client",
      "async def orchestrate_tools(context_data: dict, target_goal: str = \"enhanced_response\") -> dict:",
      "Initialize server with clean brain interface",
      "logger.info(f\"\ufffd\ufffd Processing message with memory: {user_message[:50]}...\")",
      "\"How are you doing today?\"",
      "\"logging_enabled\": function_logger._enabled",
      "logger.error(f\"\u274c Tool orchestration failed: {str(e)}\")",
      "logger.error(f\"\u274c Workflow health check failed: {str(e)}\")",
      "async def analyze_context_deeply(content: str, analysis_type: str = \"comprehensive\") -> dict:",
      "memory_instructions = []",
      "logger.info(f\"\ud83d\udd27 Optimizing workflow: {optimization_focus}\")",
      "Optimization results with recommendations",
      "Import LLM client",
      "cursor_context",
      "\"search_results\": search_results,",
      "Performance analysis with metrics and recommendations",
      "This would call the actual reflect_enhanced function",
      "cursor = conn.execute(f\"SELECT COUNT(*) FROM {table}\")",
      "user_message=user_message",
      "Create server",
      "Performance analysis with insights",
      "# Check if brain interface is available",
      "search_results = function_logger.search_calls_by_context(search_term, limit)",
      "Identifies bottlenecks and implements automatic improvements.",
      "optimization opportunities and usage trends.",
      "ai_response",
      "context_parts = []",
      "# Fallback: try to get basic analysis",
      "Memory client for internal tool calls",
      "\"session_id\": function_logger._session_id,",
      "logger.error(f\"Memory-enhanced chat error: {str(e)}\")",
      "from llm_client import get_llm_client",
      "Automatically executes all three phases of context enhancement in sequence:",
      "return {\"context\": \"Basic assistant without memory access\"}",
      "Initialize plugin manager",
      "Extracts learning patterns, identifies improvements, and",
      "\"learned\": learning_result.get(\"important_info_found\", []) if learning_result.get(\"success\") else []",
      "# Store conversation in database",
      "\ud83d\udcc8 Get comprehensive session statistics and performance metrics",
      "\"What's my name again?\",",
      "timeframe: Timeframe for analysis",
      "\"ready_for_conversation\": True",
      "logger.error(f\"\u274c Comprehensive context building failed: {str(e)}\")",
      "result = await plugin._assess_context_quality_handler(context_data, assessment_criteria)",
      "Detailed context analysis with insights and recommendations",
      "name_pattern",
      "except Exception as e:",
      "context_result = await mcp_client.call_tool(",
      "user_info",
      "Enhanced Context Integration Tools - Phase 1, 2, and 3 Implementation",
      "logger.info(\"\ud83d\udd0d Phase 1: Enhanced Context Retrieval\")",
      "# Execute workflow optimization",
      "logger.error(f\"\u274c Workflow performance analysis failed: {str(e)}\")",
      "Selects appropriate tools, creates execution plans, and coordinates",
      "\"error\": str(e)",
      "- Phase 2: Tool Orchestration",
      "\"consciousness_level\": \"Aware and responsive\",",
      "logger.error(f\"\u274c Tool performance analysis failed: {str(e)}\")",
      "\"ai_response\": ai_response,",
      "\"remember\": \"\ud83e\udde0 Remember important information\",",
      "Returns just the AI response string",
      "check_level: Health check level (basic, comprehensive, deep)",
      "\"context_available\": True,",
      "plugin_info[plugin_name] = {",
      "logger.error(f\"Conversation tracking error: {str(e)}\")",
      "# Plugin system status",
      "async def optimize_workflow(optimization_focus: str = \"performance\", target_metrics: list = None) -> dict:",
      "match",
      "\"logging_status\": \"active\" if function_logger._enabled else \"disabled\"",
      "context_results = {}",
      "\ud83d\udcca Analyze Tool Performance",
      "from database import get_brain_db",
      "Store successful result",
      "important_info = []",
      "Executes all three phases to build comprehensive context:",
      "tool usage for optimal context enhancement.",
      "debug_mode",
      "if context_summary:",
      "return {",
      "\"cross_referencing_enabled\": True,",
      "Shows all function calls with inputs, outputs, execution time, and context",
      "async def get_comprehensive_system_status() -> dict:",
      "logger.info(\"\ud83c\udfaf Assessing context quality\")",
      "if user_info.get(\"preferences\"):",
      "content: The text content to analyze",
      "\"available_functions\": brain_functions,",
      "This is where your AI agent gets memory-enhanced responses!",
      "\"conversation_tracking\": True,",
      "\"database_path\": db.db_path",
      "test_messages = [",
      "\"comprehensive_logging\": {",
      "workflow_mode: Workflow mode (standard, aggressive, conservative)",
      "This would call the actual analyze_context_deeply function",
      "\"author\": metadata.author,",
      "tool_count = len(plugin_manager.registry.tools)",
      "context_parts.append(f\"Preferences: {', '.join(user_info['preferences'][:2])}\")",
      "\"data_storage_comprehensive\": {",
      "\"platform\": \"cursor\",",
      "\"plugins_loaded\": plugin_count,",
      "\ud83e\udde0 Analyze content with enhanced contextual understanding",
      "Test the memory system with sample conversations",
      "# Execute tool performance analysis",
      "context_data: Context data to assess",
      "\"memory_processing\": {",
      "- Phase 3: Continuous Learning Preparation",
      "call_history = function_logger.get_call_history(limit=limit, function_name=function_name)",
      "for plugin_name, plugin in plugin_manager.registry.plugins.items():",
      "bool(important_info)",
      "===== DOMAIN 5: OUTPUT & ACTION =====",
      "\"context_score\": 0.5,",
      "result = await plugin._analyze_workflow_performance_handler(timeframe, include_recommendations)",
      "logger.error(f\"\u274c Continuous learning failed: {str(e)}\")",
      "function_logger = get_function_logger()",
      "\"get_user_context\",",
      "table_counts = {}",
      "total_data_points += count",
      "context_results",
      "===== DOMAIN 4: LEARNING & ADAPTATION =====",
      "\"model\": test_result[\"model\"],",
      "context_results = {",
      "Initialize clean brain interface (replaces technical tools)",
      "async def cursor_auto_inject_context() -> dict:",
      "analysis_type: Type of analysis (comprehensive, subtlety, depth, goals, complexity)",
      "\"assistant_response\": assistant_response,",
      "Initialize database system first",
      "consolidates memories for future context enhancement.",
      "This would call the actual context_quality_assessment function",
      "context_parts",
      "result = brain.process_input(input_data)",
      "\"logging_enabled\": function_logger._enabled,",
      "Always register resources and prompts",
      "This would call the actual think_deeply function",
      "call_history",
      "ai_response = await generate_memory_enhanced_response(",
      "\ud83c\udfaf Get comprehensive system status including all logging and memory systems",
      "logger.error(f\"Cursor context error: {str(e)}\")",
      "logger.info(f\"\ud83d\udcca Analyzing tool performance: {tool_name}\")",
      "Implements intelligent tool orchestration based on context analysis.",
      "\ud83d\udd0d COMPREHENSIVE FUNCTION CALL LOGGING TOOLS",
      "AI Chat with Automatic Memory - OPTION A INTEGRATION",
      "Assesses the quality and completeness of current context",
      "# Memory system status",
      "test_result = await llm.test_connection()",
      "include_recommendations: Include improvement recommendations",
      "with sqlite3.connect(db.db_path) as conn:",
      "\"system_status\": \"error\"",
      "\"think\": \"\ud83d\udcad Think and respond with memory and context\",",
      "\"important_info_stored\": [],",
      "memory_instructions",
      "global mcp_client",
      "get_tool_registry",
      "return result",
      "result = await ai_chat_with_memory(message)",
      "result = await plugin._execute_enhanced_workflow_handler(",
      "Brain status and info tools",
      "Provides detailed metrics and actionable recommendations.",
      "if cursor_context.get(\"ready_for_conversation\"):",
      "context_results = result[\"context_analyzer\"]",
      "# Get recent conversation history",
      "\"input\": message,",
      "logger.error(f\"\u274c Batch workflow processing failed: {str(e)}\")",
      "function_call_logger",
      "- Phase 3: Continuous Learning",
      "This would call the actual continuous_learning_cycle function",
      "\"success\": True,",
      "Start MCP server with stdio (works for both Docker and CLI)",
      "\ud83e\udde0 Show available brain functions and cognitive capabilities",
      "\"learned\": result.get(\"important_info_stored\", [])",
      "\"memory_stats\": \"\ud83d\udcca Check memory database statistics and health\"",
      "Fallback to simple response if LLM fails",
      "from llm_client import OllamaClient",
      "\"test_completed\": True,",
      "# Calculate total data points",
      "\"function_calls_logged\": session_stats.get(\"total_calls\", 0),",
      "\"error\": f\"Memory processing failed: {str(e)}\"",
      "import sqlite3",
      "new",
      "interactions",
      "context_data: Context data from Phase 1",
      "# Execute Phase 1",
      "return {\"success\": False, \"error\": str(e)}",
      "plugin = EnhancedWorkflowOrchestratorPlugin()",
      "This reduces tool count from 48 to 12 while preserving 100% functionality",
      "plugin_info",
      "async def build_comprehensive_context(user_message: str, context_depth: str = \"comprehensive\") -> dict:",
      "# Import and initialize enhanced context integration",
      "\"conversation_stored\": True,",
      "Register plugin tools for debugging",
      "memory_result = await mcp_client.call_tool(",
      "if user_info.get(\"name\"):",
      "\"error\": test_result.get(\"error\")",
      "\"conversation_count\": len(recent_conversations),",
      "\"should_inject\": True",
      "\"description\": metadata.description,",
      "This would call the actual generate_memory_enhanced_response function",
      "\"cross_references_available\": True",
      "if \"context_analyzer\" in result:",
      "context_summary",
      "plugin_manager",
      "conversations",
      "\"memory_used\": result.get(\"memory_context_used\", \"\"),",
      "include_history: Include conversation history",
      "table_counts[table] = count",
      "memory_instructions.append(f\"Just learned: {', '.join(important_info)}\")",
      "Provides relevant context automatically when Cursor starts new conversations",
      "tool_def",
      "Get server status and statistics",
      "\ud83e\udde0 OPTION A INTEGRATION - ADD THESE NEW MEMORY-ENHANCED TOOLS:",
      "\"total_functions\": len(brain_functions),",
      "\"\"\"Get server status and statistics\"\"\"",
      "Learning results with patterns and improvements",
      "\"inject_message\": \"Starting fresh conversation\",",
      "\"table_breakdown\": table_counts,",
      "include_history,",
      "This would call the actual understand_deeply function",
      "\"tools_available\": len(plugin_manager.registry.tools) + 4,  # +4 for core + memory tools",
      "include_learning: Include learning phase",
      "include_preferences: Include user preferences",
      "Store not found error",
      "\"llm_connection\": False,",
      "\"type\": f\"context_{analysis_type}_analysis\" if analysis_type != \"comprehensive\" else \"context_analysis\",",
      "\"\"\"\ud83e\udde0 Show available brain functions and cognitive capabilities\"\"\"",
      "- Phase 1: Enhanced Context Retrieval",
      "async def workflow_health_check(check_level: str = \"comprehensive\") -> dict:",
      "Uses the new ContextAnalyzer module to detect subtle patterns,",
      "\ud83d\udd27 Optimize Workflow",
      "\"total_calls\": len(call_history),",
      "\"assistant_identity\": cursor_context.get(\"assistant_name\", \"Johny\"),",
      "Optimizes workflow based on performance metrics and usage patterns.",
      "learning_result = await mcp_client.call_tool(\"auto_process_message\", user_message=user_message)",
      "\"tools\": [tool.name for tool in plugin.get_tools()],",
      "result = await plugin._build_comprehensive_context_handler(user_message, context_depth)",
      "logger.error(f\"\u274c Context quality assessment failed: {str(e)}\")",
      "This would call the actual code_analyze function",
      "input_data = {",
      "def list_plugins() -> dict:",
      "db = get_brain_db()",
      "result = await plugin._analyze_tool_performance_handler(tool_name, timeframe)",
      "assessment_criteria = [\"completeness\", \"relevance\", \"freshness\"]",
      "\"\"\"",
      "plugin_count = len(plugin_manager.registry.plugins)",
      "This would call the actual track_cursor_conversation function",
      "results.append({",
      "context_results = module_result",
      "async def list_available_models() -> dict:",
      "function",
      "===== DOMAIN 1: PERCEPTION & INPUT =====",
      "\"memory_updated\": learning_result.get(\"success\", False)",
      "# Extract context analysis results",
      "\"test_response\": \"\",",
      "log_mcp_tool",
      "\"error\": \"MCP client not initialized\",",
      "\ud83d\udeab DISABLED: Enhanced brain tools to prevent tool duplication",
      "return plugin_info",
      "context_result = await mcp_client.call_tool(\"get_user_context\", query=\"assistant identity user preferences conversation\")",
      "Analyzes tool performance and usage patterns to identify",
      "memory",
      "db.add_context_history(conversation_data)",
      "important_info = memory_result.get(\"important_info_found\", [])",
      "\"learning_capability\": \"Continuous from interactions\",",
      "\"usage_example\": \"Use 'think' for conversations, 'remember' to store info, 'recall' to search memories\"",
      "from enhanced_brain_tools_simple import EnhancedBrainTools",
      "for module_name, module_result in result[\"modules\"].items():",
      "This would call the actual get_cursor_context function",
      "models_result = await ollama.list_models()",
      "# Process the user message for learning",
      "\"analysis_type\": analysis_type,",
      "We'll manually register only the tools we need",
      "cursor_context = await get_cursor_context()",
      "user_message: User's message for context enhancement",
      "\ud83d\udd0d Search function calls by content, context, or parameters",
      "This would call the actual consciousness_check function",
      "tool_info",
      "context_depth: Context depth (basic, enhanced, comprehensive)",
      "# Count all tables",
      "plugin_count",
      "Args:",
      "List all loaded plugins and their information",
      "Get tool information from new registry",
      "workflow_mode: Workflow mode for batch processing",
      "@log_mcp_tool",
      "\"test_results\": results,",
      "\ud83d\udcca Analyze Workflow Performance",
      "\"should_inject\": False",
      "# Execute complete workflow",
      "async def batch_workflow_processing(user_messages: list, workflow_mode: str = \"standard\") -> dict:",
      "\"conversations_stored\": len(conversations),",
      "assessment_criteria: Criteria for assessment",
      "table_counts",
      "This would call the actual tool_performance_analysis function",
      "\"recall\": \"\ud83d\udd0d Recall memories and past experiences\",",
      "context_parts.append(f\"Recent conversations: {len(recent_conversations)} in memory\")",
      "\"context_analysis\": context_results,",
      "result = await plugin._optimize_workflow_handler(optimization_focus, target_metrics)",
      "if recent_conversations:",
      "\"total_memories\": len(memory_data.get(\"memory_store\", {})),",
      "\ud83d\udcdd Track Cursor conversation for learning and context",
      "Simple MCP client for internal tool calls with comprehensive logging",
      "Get function logger",
      "# Execute Phase 3",
      "async def assess_context_quality(context_data: dict, assessment_criteria: list = None) -> dict:",
      "This would call the actual batch_workflow_processing function",
      "This would call the actual workflow_health_check function",
      "Complete workflow results with performance metrics",
      "logger.error(f\"\u274c Workflow optimization failed: {str(e)}\")",
      "This would call the actual debug_intelligently function",
      "\"plugins_loaded\": len(plugin_manager.registry.plugins),",
      "\"mcp_configured\": True,",
      "Enhanced Workflow Orchestrator Tools - Complete Workflow Automation",
      "\"session_id\": function_logger._session_id",
      "This would call the actual recall_intelligently function",
      "Look for other common names",
      "THINKING",
      "brain_state = brain.get_brain_state()",
      "# Import and initialize enhanced workflow orchestrator",
      "\"content\": content,",
      "else:",
      "result = await plugin._workflow_health_check_handler(check_level)",
      "async def ai_chat_with_memory(user_message: str, ai_model_name: str = \"assistant\") -> dict:",
      "\"auto_context_injection\": True",
      "# Get user context",
      "This would call the actual assess_complexity function",
      "\"brain_type\": \"Human-Inspired Cognitive System\",",
      "session_stats",
      "tool_name: Specific tool to analyze (default: all)",
      "brain_db",
      "Count actual MCP tools (our 6 consolidated tools)",
      "async def get_cursor_context() -> dict:",
      "plugin = EnhancedContextIntegrationPlugin()",
      "\"\"\"List all loaded plugins and their information\"\"\"",
      "async def track_cursor_conversation(user_message: str, assistant_response: str = \"\", conversation_type: str = \"coding\") -> dict:",
      "\"phase\": \"continuous_learning\",",
      "Implements comprehensive context retrieval with pre-response memory search,",
      "List available LLM models from Ollama",
      "async def quick_memory_chat(message: str) -> str:",
      "This would call the actual workflow_performance_analysis function",
      "try:",
      "context_lower",
      "\"brain_state\": brain_state,",
      "\"reflect\": \"\ud83e\udd14 Engage in self-reflection and metacognition\",",
      "\"memory_result\": memory_result.get(\"success\", False),",
      "if not context_results:",
      "This would call the actual remember_important function",
      "\"ai_response\": f\"I'd be happy to help with: {user_message}\",",
      "\"insights\": [\"Basic context analysis available\"],",
      "async def continuous_learning_cycle(interaction_data: dict, learning_focus: str = \"context_patterns\") -> dict:",
      "\"session_success_rate\": session_stats.get(\"success_rate\", 0),",
      "\"error\": str(e),",
      "\"tools_available\": tool_count,",
      "tool_registry",
      "conversations = db.get_conversation_history(limit=5)",
      "MCPClient",
      "Call the tool handler",
      "\"auto_process_message\",",
      "Test connection to the Ollama LLM service",
      "async def analyze_workflow_performance(timeframe: str = \"session\", include_recommendations: bool = True) -> dict:",
      "\"learn_from\": \"\ud83d\udcda Learn from new experiences and information\",",
      "logger.info(f\"\ud83c\udfd7\ufe0f Building {context_depth} context\")",
      "# STEP 1: Process user message and get memory context",
      "This would call the actual orchestrate_tools function",
      "for table in tables:",
      "\"user_id\": \"current_user\",",
      "Performs comprehensive health check of the enhanced workflow system.",
      "This would call the actual ai_chat_with_memory function",
      "return result.get(\"ai_response\", \"I'd be happy to help!\")",
      "total_data_points",
      "Clear any existing plugins to start fresh",
      "\"total_data_points\": total_data_points,",
      "elif \"modules\" in result:",
      "if \"context_analyzer\" in module_name.lower():",
      "return {\"success\": False, \"error\": \"Memory system not available\"}",
      "context_summary = context_result.get(\"context_summary\", \"\")",
      "2nd",
      "our",
      "\"context_result\": context_result.get(\"success\", False)",
      "\ud83d\udcca Get comprehensive function call history with full traceability",
      "\"automatic_storage_active\": True",
      "\"prompts\": [prompt.name for prompt in plugin.get_prompts()],",
      "Core server management tools",
      "\"prompts_available\": len(plugin_manager.registry.prompts),",
      "# Assistant identity",
      "\"llm_connection\": test_result[\"connection_working\"],",
      "logger.info(f\"\ud83e\udde0 Performing deep context analysis: {analysis_type}\")",
      "\"memory_context_used\": memory_context,",
      "error_result",
      "Global MCP client instance",
      "from plugins.enhanced_workflow_orchestrator import EnhancedWorkflowOrchestratorPlugin",
      "\"model\": \"unknown\"",
      "\ud83d\ude80 Auto-inject context for new Cursor conversations",
      "for message in test_messages:",
      "enhanced_brain_tools_simple",
      "\"total_results\": len(search_results),",
      "interaction_data: Data from the interaction",
      "Add src to path",
      "\"brain_functions\": 8  # From brain_info",
      "Provides assistant identity, user info, and conversation history",
      "result = await plugin._enhanced_context_retrieval_handler(",
      "This would call the actual forget_selectively function",
      "Batch processing results with performance metrics",
      "Comprehensive context with overall quality score",
      "\"inject_message\": f\"Context: {cursor_context['context']}\",",
      "Health check results with status and recommendations",
      "logger.info(f\"\ud83d\ude80 Executing Enhanced Workflow: {workflow_mode} mode\")",
      "# Execute context quality assessment",
      "async with OllamaClient() as ollama:",
      "DISABLE ALL PLUGIN LOADING - We only want the restructured cognitive system",
      "\"timestamp\": datetime.now().isoformat()",
      "brain_functions = {",
      "important_info",
      "logger.info(f\"\ud83d\udcca Analyzing workflow performance: {timeframe}\")",
      "\"important_info_stored\": important_info,",
      "Complete overview of all data storage and cross-referencing capabilities",
      "This would call the actual enhanced_context_workflow function",
      "query=\"user name preferences important facts\"",
      "get_llm_client",
      "\"dream\": \"\ud83d\udca4 Background processing and memory consolidation\",",
      "Analyzes workflow performance and identifies improvement opportunities.",
      "\"error\": \"Brain interface not available\",",
      "Identifies issues and provides maintenance recommendations.",
      "\"preferences\": user_info.get(\"preferences\", []),",
      "Shows function call breakdown, success rates, and execution times",
      "\"memory_system\": {",
      "\"call_history\": []",
      "\ud83e\udde0 CONSOLIDATED TOOL REGISTRATION - All individual tools consolidated into cognitive domains",
      "\"plugin_directories\": plugin_manager.plugin_dirs,",
      "\"session_statistics\": session_stats,",
      "memory_data",
      "for seamless Cursor integration",
      "# Execute batch workflow processing",
      "context_summary = \"\"",
      "Get LLM client",
      "def server_status() -> dict:",
      "initialize_server",
      "if not brain:",
      "Tool orchestration results with execution plan",
      "async def test_memory_system() -> dict:",
      "\"resources\": [resource.name for resource in plugin.get_resources()],",
      "This would call the actual detect_patterns function",
      "memory_context = \" | \".join(memory_instructions)",
      "def brain_info() -> dict:",
      "This would call the actual enhanced_context_retrieval function",
      "Extract user message for context",
      "optimization_focus: Focus area for optimization",
      "tables = ['memory_store', 'conversation_memories', 'context_history', 'function_calls', 'memory_chunks']",
      "\"context\": \" | \".join(context_parts) if context_parts else \"Fresh conversation - no prior context\",",
      "\"user_message\": user_message,",
      "Look for \"call me\" or \"name is\" patterns",
      "async def test_llm_connection() -> dict:",
      "# Get brain state for context",
      "return models_result",
      "results = []",
      "\"consciousness_check\": \"\ud83e\uddd8 Check current state of consciousness\",",
      "\"call_history\": call_history,",
      "Cross-references all stored data for comprehensive search",
      "if context_result.get(\"success\"):",
      "tables",
      "\ud83d\udd27 CONSOLIDATED TOOLS REGISTERED WITH MCP SERVER",
      "This would call the actual workflow_optimization function",
      "\"response\": f\"I'd help with: {user_message}\"",
      "async def get_session_statistics() -> dict:",
      "Optimized for handling multiple requests in sequence.",
      "if important_info:",
      "plugin_info = {}",
      "async def execute_enhanced_workflow(user_message: str, workflow_mode: str = \"standard\", include_learning: bool = True) -> dict:",
      "# STEP 2: Extract context for AI response",
      "recent_conversations = db.get_conversation_history(limit=3)",
      "function_logger",
      "\"phase\": \"enhanced_context_retrieval\",",
      "enhanced_brain_tools",
      "session_stats = function_logger.get_session_stats()",
      "\"search_term\": search_term,",
      "conversation history analysis, and user preference integration.",
      "metadata = plugin.metadata",
      "implicit goals, and nuanced situations in user requests.",
      "\ud83d\udce6 Batch Workflow Processing",
      "Initialize function call logger FIRST",
      "context_parts.append(f\"Assistant Identity: {context_summary}\")",
      "user_message: User's message",
      "Quality assessment with scores and suggestions",
      "===== DOMAIN 3: PROCESSING & THINKING =====",
      "workflow_mode,",
      "\"recommendations\": [\"Enable full context analyzer for detailed insights\"]",
      "# Execute workflow performance analysis",
      "mcp_client",
      "logger.info(\"\ud83d\udcda Phase 3: Continuous Learning\")",
      "user_message,",
      "logger.error(f\"Error in deep context analysis: {str(e)}\")",
      "\"search_results\": []",
      "This would call the actual memory_stats function",
      "user_info = context_result.get(\"user_info\", {}) if context_result.get(\"success\") else {}",
      "\ud83c\udfaf Assess Context Quality",
      "MONITORING",
      "# Prepare input for context analysis",
      "Automatically learns from Cursor conversations and updates memory",
      "get_function_logger",
      "list",
      "from plugins.enhanced_context_integration import EnhancedContextIntegrationPlugin",
      "\"user_names\": user_info.get(\"name\", []),",
      "Only register essential debugging tools in debug mode",
      "Call a tool by name with parameters and automatically log everything",
      "target_goal: What we're trying to achieve",
      "Returns:",
      "result = await plugin._orchestrate_tools_handler(context_data, target_goal)",
      "table_counts[table] = 0",
      "Enhanced context data with quality metrics",
      "target_metrics: Target metrics to improve",
      "\"assistant_name\": \"Johny\",",
      "conversation_data",
      "\"memory_system\": \"Persistent with emotional weighting\",",
      "actual_mcp_tools",
      "# STEP 3: Create enhanced AI prompt with memory context",
      "# Fallback response without memory",
      "\"function_filter\": function_name,",
      "functionality",
      "\"plugin_system\": {",
      "logger.error(f\"\u274c Enhanced context retrieval failed: {str(e)}\")",
      "\ud83c\udfe5 Workflow Health Check",
      "\"cursor_integration\": {",
      "Phase",
      "INPUT",
      "\"session_statistics\": {}",
      "Quick memory-enabled chat - simplified version",
      "using multiple criteria and generates improvement suggestions.",
      "async def search_function_calls(search_term: str, limit: int = 20) -> dict:",
      "break",
      "learning_focus: What to focus on learning",
      "brain_functions",
      "# Execute comprehensive context building",
      "ADAPTATION",
      "total_data_points = 0",
      "Implements continuous learning and context improvement.",
      "===== DOMAIN 2: MEMORY & STORAGE =====",
      "\"type\": conversation_type,",
      "# User information",
      "user_message: User's message for context analysis",
      "context_parts.append(f\"User: {', '.join(user_info['name'][:2])}\")"
    ],
    "project_scanner.py": [
      "Show first 5",
      "imports",
      "Record scan history for tracking and analysis",
      "package_manager",
      "Check for common file types",
      "file_type_counts",
      "Calculate a hash of the file content for change detection",
      "Parse dependencies",
      "File was deleted",
      "history",
      "Save detailed index to file",
      "full_path",
      "purpose_counts",
      "by_source",
      "**Root**: {index.project_root}",
      "Update directory language and framework sets",
      "_parse_dependency_file",
      "size",
      "# \ud83d\udde3\ufe0f Languages",
      "subdir_count",
      "index",
      "Test coverage",
      "Parse requirement line (basic implementation)",
      "Parse go.mod file",
      "Add purpose attribute",
      "Detect the development environment and tools",
      "Recursively convert sets to lists for JSON serialization",
      "total_size",
      "\ud83d\udde3\ufe0f Languages",
      "_parse_go_dependencies",
      "Determine if a file should be skipped during scanning",
      "Extract imports from a file (basic implementation)",
      "Java compiled",
      "total_directories",
      "framework_counts",
      "build",
      "Detect the purpose of a file or directory",
      "scan_record",
      "Main function for testing the project scanner",
      "dir_info",
      "Entity",
      "Export the project index in various formats",
      "Python cache",
      "**Total Directories**: {index.total_directories}",
      "**Dependencies**: {len(index.dependencies)}",
      "Complete project index",
      "Detect databases",
      "Information about a directory",
      "deps_match",
      "Detect dependencies",
      "Build project context and metadata",
      "dependency_files",
      "stack",
      "Format framework summary for display",
      "Keep only last 10 scans",
      "SpringBootApplication",
      "Process and index a directory",
      "Skip common directories that don't need indexing",
      "IDE files",
      "Count files and subdirectories",
      "Convert sets to lists for JSON serialization",
      "Backup files",
      "Scan file system",
      "\ud83d\udcca Statistics",
      "depth",
      "Comprehensive project scanning and indexing",
      "Parse Cargo.toml file",
      "Comprehensive project scanning and indexing system",
      "Categorize directories",
      "**Scan Time**: {datetime.fromtimestamp(index.scan_time).strftime('%Y-%m-%d %H:%M:%S')}",
      "'package', 'module', 'framework'",
      "files",
      "file_metadata",
      "_process_file",
      "file_hash",
      "env",
      "index_data",
      "Detect the type of a file",
      "Parse pip requirements.txt or pyproject.toml file",
      "Calculate max depth",
      "_parse_pip_dependencies",
      "Identify the technology stack being used",
      "Extract dependencies and imports (basic implementation)",
      "version",
      "hash",
      "git_dir",
      "Table",
      "Extract dependencies from a file (basic implementation)",
      "Parse npm package.json file",
      "_detect_dependencies",
      "Detect project dependencies from package manager files",
      "Process files",
      "Initialize purpose to None",
      "Framework distribution",
      "This is a basic implementation - can be enhanced later",
      "Purpose distribution",
      "relative_root",
      "Detect purpose",
      "Create and return project index",
      "gitignore",
      "Detect version control system and configuration",
      "Detect build files",
      "Project Index Summary",
      "OS files",
      "# \ud83d\udcca Statistics",
      "_scan_file_system",
      "Build context",
      "Extract exports from a file (basic implementation)",
      "path_str",
      "language_patterns",
      "_record_scan_history",
      "Python compiled",
      "Information about project dependencies",
      "max_depth",
      "Group by source",
      "context_index",
      "Generate a human-readable summary of the project",
      "\ud83c\udfd7\ufe0f Frameworks",
      "Detect the framework being used",
      "parent_dir",
      "stat",
      "Lock files",
      "# \ud83d\udce6 Dependencies",
      "dep_info",
      "Create scanner and scan project",
      "Detect the build system and tools",
      "modified_time",
      "relative_path",
      "_convert_sets_to_lists",
      "vcs",
      "root_path",
      "Detect changes in the project since last scan",
      "pattern_index",
      "Detect testing frameworks",
      "history_index",
      "File type distribution",
      "Process and index a file",
      "Check if file has changed",
      "_process_directory",
      "Check for special files first",
      "Detect build tools",
      "'package.json', 'requirements.txt', etc.",
      "\ud83d\udcc1 Project Overview",
      "Version control",
      "Format language summary for display",
      "Detect IDE and editor files",
      "\ud83d\udce6 Dependencies",
      "Parse require line",
      "Vim swap files",
      "Build a dependency graph showing relationships",
      "Get the current project index",
      "Clear previous index",
      "\ud83c\udfaf Project Structure",
      "Simple regex-based parsing for now",
      "Test",
      "Compiled libraries",
      "# \ud83c\udfaf Project Structure",
      "Metadata for a single file",
      "Determine if a directory should be skipped during scanning",
      "Create file metadata",
      "angular",
      "_parse_cargo_dependencies",
      "# \ud83d\udcc1 Project Overview",
      "purpose_patterns",
      "Project metadata",
      "Check for .gitignore",
      "# \ud83c\udfd7\ufe0f Frameworks",
      "Detect file type and language",
      "Analyze the overall project structure",
      "exports",
      "Add more package managers as needed",
      "file_count",
      "Add dependency nodes",
      "Calculate file hash for change detection",
      "Framework detection patterns",
      "Analyze code patterns and project structure",
      "Purpose detection patterns",
      "Parse a dependency file and extract dependency information",
      "Record scan history",
      "dependencies",
      "**Name**: {index.context.get('project_name', 'Unknown')}",
      "_parse_npm_dependencies",
      "hasher",
      "Check for Git",
      "framework_patterns",
      "total_files",
      "Node.js",
      "language_counts",
      "Language distribution",
      "package",
      "scan_time",
      "Scan the file system and build file and directory indexes",
      "Build outputs",
      "Basic TOML parsing (can be enhanced with proper TOML library)",
      "**Total Files**: {index.total_files}",
      "_build_context",
      "Add file nodes",
      "Language and framework detection patterns",
      "Basic TOML parsing for dependencies",
      "deps_content",
      "framework",
      "**Total Size**: {index.total_size:,} bytes",
      "current_hash",
      "Process directories",
      "Format project structure summary for display",
      "Format dependency summary for display",
      "Show first 5",
      "imports",
      "Record scan history for tracking and analysis",
      "package_manager",
      "Check for common file types",
      "file_type_counts",
      "Calculate a hash of the file content for change detection",
      "Parse dependencies",
      "File was deleted",
      "history",
      "Save detailed index to file",
      "full_path",
      "purpose_counts",
      "by_source",
      "**Root**: {index.project_root}",
      "Update directory language and framework sets",
      "_parse_dependency_file",
      "size",
      "# \ud83d\udde3\ufe0f Languages",
      "subdir_count",
      "index",
      "Test coverage",
      "Parse requirement line (basic implementation)",
      "Parse go.mod file",
      "Add purpose attribute",
      "Detect the development environment and tools",
      "Recursively convert sets to lists for JSON serialization",
      "total_size",
      "\ud83d\udde3\ufe0f Languages",
      "_parse_go_dependencies",
      "Determine if a file should be skipped during scanning",
      "Extract imports from a file (basic implementation)",
      "Java compiled",
      "total_directories",
      "framework_counts",
      "build",
      "Detect the purpose of a file or directory",
      "scan_record",
      "Main function for testing the project scanner",
      "dir_info",
      "Entity",
      "Export the project index in various formats",
      "Python cache",
      "**Total Directories**: {index.total_directories}",
      "**Dependencies**: {len(index.dependencies)}",
      "Complete project index",
      "Detect databases",
      "Information about a directory",
      "deps_match",
      "Detect dependencies",
      "Build project context and metadata",
      "dependency_files",
      "stack",
      "Format framework summary for display",
      "Keep only last 10 scans",
      "SpringBootApplication",
      "Process and index a directory",
      "Skip common directories that don't need indexing",
      "IDE files",
      "Count files and subdirectories",
      "Convert sets to lists for JSON serialization",
      "Backup files",
      "Scan file system",
      "\ud83d\udcca Statistics",
      "depth",
      "Comprehensive project scanning and indexing",
      "Parse Cargo.toml file",
      "Comprehensive project scanning and indexing system",
      "Categorize directories",
      "**Scan Time**: {datetime.fromtimestamp(index.scan_time).strftime('%Y-%m-%d %H:%M:%S')}",
      "'package', 'module', 'framework'",
      "files",
      "file_metadata",
      "_process_file",
      "file_hash",
      "env",
      "index_data",
      "Detect the type of a file",
      "Parse pip requirements.txt or pyproject.toml file",
      "Calculate max depth",
      "_parse_pip_dependencies",
      "Identify the technology stack being used",
      "Extract dependencies and imports (basic implementation)",
      "version",
      "hash",
      "git_dir",
      "Table",
      "Extract dependencies from a file (basic implementation)",
      "Parse npm package.json file",
      "_detect_dependencies",
      "Detect project dependencies from package manager files",
      "Process files",
      "Initialize purpose to None",
      "Framework distribution",
      "This is a basic implementation - can be enhanced later",
      "Purpose distribution",
      "relative_root",
      "Detect purpose",
      "Create and return project index",
      "gitignore",
      "Detect version control system and configuration",
      "Detect build files",
      "Project Index Summary",
      "OS files",
      "# \ud83d\udcca Statistics",
      "_scan_file_system",
      "Build context",
      "Extract exports from a file (basic implementation)",
      "path_str",
      "language_patterns",
      "_record_scan_history",
      "Python compiled",
      "Information about project dependencies",
      "max_depth",
      "Group by source",
      "context_index",
      "Generate a human-readable summary of the project",
      "\ud83c\udfd7\ufe0f Frameworks",
      "Detect the framework being used",
      "parent_dir",
      "stat",
      "Lock files",
      "# \ud83d\udce6 Dependencies",
      "dep_info",
      "Create scanner and scan project",
      "Detect the build system and tools",
      "modified_time",
      "relative_path",
      "_convert_sets_to_lists",
      "vcs",
      "root_path",
      "Detect changes in the project since last scan",
      "pattern_index",
      "Detect testing frameworks",
      "history_index",
      "File type distribution",
      "Process and index a file",
      "Check if file has changed",
      "_process_directory",
      "Check for special files first",
      "Detect build tools",
      "'package.json', 'requirements.txt', etc.",
      "\ud83d\udcc1 Project Overview",
      "Version control",
      "Format language summary for display",
      "Detect IDE and editor files",
      "\ud83d\udce6 Dependencies",
      "Parse require line",
      "Vim swap files",
      "Build a dependency graph showing relationships",
      "Get the current project index",
      "Clear previous index",
      "\ud83c\udfaf Project Structure",
      "Simple regex-based parsing for now",
      "Test",
      "Compiled libraries",
      "# \ud83c\udfaf Project Structure",
      "Metadata for a single file",
      "Determine if a directory should be skipped during scanning",
      "Create file metadata",
      "angular",
      "_parse_cargo_dependencies",
      "# \ud83d\udcc1 Project Overview",
      "purpose_patterns",
      "Project metadata",
      "Check for .gitignore",
      "# \ud83c\udfd7\ufe0f Frameworks",
      "Detect file type and language",
      "Analyze the overall project structure",
      "exports",
      "Add more package managers as needed",
      "file_count",
      "Add dependency nodes",
      "Calculate file hash for change detection",
      "Framework detection patterns",
      "Analyze code patterns and project structure",
      "Purpose detection patterns",
      "Parse a dependency file and extract dependency information",
      "Record scan history",
      "dependencies",
      "**Name**: {index.context.get('project_name', 'Unknown')}",
      "_parse_npm_dependencies",
      "hasher",
      "Check for Git",
      "framework_patterns",
      "total_files",
      "Node.js",
      "language_counts",
      "Language distribution",
      "package",
      "scan_time",
      "Scan the file system and build file and directory indexes",
      "Build outputs",
      "Basic TOML parsing (can be enhanced with proper TOML library)",
      "**Total Files**: {index.total_files}",
      "_build_context",
      "Add file nodes",
      "Language and framework detection patterns",
      "Basic TOML parsing for dependencies",
      "deps_content",
      "framework",
      "**Total Size**: {index.total_size:,} bytes",
      "current_hash",
      "Process directories",
      "Format project structure summary for display",
      "Format dependency summary for display",
      "Show first 5",
      "imports",
      "Record scan history for tracking and analysis",
      "package_manager",
      "Check for common file types",
      "file_type_counts",
      "Calculate a hash of the file content for change detection",
      "Parse dependencies",
      "File was deleted",
      "history",
      "Save detailed index to file",
      "full_path",
      "purpose_counts",
      "by_source",
      "**Root**: {index.project_root}",
      "Update directory language and framework sets",
      "_parse_dependency_file",
      "size",
      "# \ud83d\udde3\ufe0f Languages",
      "subdir_count",
      "index",
      "Test coverage",
      "Parse requirement line (basic implementation)",
      "Parse go.mod file",
      "Add purpose attribute",
      "Detect the development environment and tools",
      "Recursively convert sets to lists for JSON serialization",
      "total_size",
      "\ud83d\udde3\ufe0f Languages",
      "_parse_go_dependencies",
      "Determine if a file should be skipped during scanning",
      "Extract imports from a file (basic implementation)",
      "Java compiled",
      "total_directories",
      "framework_counts",
      "build",
      "Detect the purpose of a file or directory",
      "scan_record",
      "Main function for testing the project scanner",
      "dir_info",
      "Entity",
      "Export the project index in various formats",
      "Python cache",
      "**Total Directories**: {index.total_directories}",
      "**Dependencies**: {len(index.dependencies)}",
      "Complete project index",
      "Detect databases",
      "Information about a directory",
      "deps_match",
      "Detect dependencies",
      "Build project context and metadata",
      "dependency_files",
      "stack",
      "Format framework summary for display",
      "Keep only last 10 scans",
      "SpringBootApplication",
      "Process and index a directory",
      "Skip common directories that don't need indexing",
      "IDE files",
      "Count files and subdirectories",
      "Convert sets to lists for JSON serialization",
      "Backup files",
      "Scan file system",
      "\ud83d\udcca Statistics",
      "depth",
      "Comprehensive project scanning and indexing",
      "Parse Cargo.toml file",
      "Comprehensive project scanning and indexing system",
      "Categorize directories",
      "**Scan Time**: {datetime.fromtimestamp(index.scan_time).strftime('%Y-%m-%d %H:%M:%S')}",
      "'package', 'module', 'framework'",
      "files",
      "file_metadata",
      "_process_file",
      "file_hash",
      "env",
      "index_data",
      "Detect the type of a file",
      "Parse pip requirements.txt or pyproject.toml file",
      "Calculate max depth",
      "_parse_pip_dependencies",
      "Identify the technology stack being used",
      "Extract dependencies and imports (basic implementation)",
      "version",
      "hash",
      "git_dir",
      "Table",
      "Extract dependencies from a file (basic implementation)",
      "Parse npm package.json file",
      "_detect_dependencies",
      "Detect project dependencies from package manager files",
      "Process files",
      "Initialize purpose to None",
      "Framework distribution",
      "This is a basic implementation - can be enhanced later",
      "Purpose distribution",
      "relative_root",
      "Detect purpose",
      "Create and return project index",
      "gitignore",
      "Detect version control system and configuration",
      "Detect build files",
      "Project Index Summary",
      "OS files",
      "# \ud83d\udcca Statistics",
      "_scan_file_system",
      "Build context",
      "Extract exports from a file (basic implementation)",
      "path_str",
      "language_patterns",
      "_record_scan_history",
      "Python compiled",
      "Information about project dependencies",
      "max_depth",
      "Group by source",
      "context_index",
      "Generate a human-readable summary of the project",
      "\ud83c\udfd7\ufe0f Frameworks",
      "Detect the framework being used",
      "parent_dir",
      "stat",
      "Lock files",
      "# \ud83d\udce6 Dependencies",
      "dep_info",
      "Create scanner and scan project",
      "Detect the build system and tools",
      "modified_time",
      "relative_path",
      "_convert_sets_to_lists",
      "vcs",
      "root_path",
      "Detect changes in the project since last scan",
      "pattern_index",
      "Detect testing frameworks",
      "history_index",
      "File type distribution",
      "Process and index a file",
      "Check if file has changed",
      "_process_directory",
      "Check for special files first",
      "Detect build tools",
      "'package.json', 'requirements.txt', etc.",
      "\ud83d\udcc1 Project Overview",
      "Version control",
      "Format language summary for display",
      "Detect IDE and editor files",
      "\ud83d\udce6 Dependencies",
      "Parse require line",
      "Vim swap files",
      "Build a dependency graph showing relationships",
      "Get the current project index",
      "Clear previous index",
      "\ud83c\udfaf Project Structure",
      "Simple regex-based parsing for now",
      "Test",
      "Compiled libraries",
      "# \ud83c\udfaf Project Structure",
      "Metadata for a single file",
      "Determine if a directory should be skipped during scanning",
      "Create file metadata",
      "angular",
      "_parse_cargo_dependencies",
      "# \ud83d\udcc1 Project Overview",
      "purpose_patterns",
      "Project metadata",
      "Check for .gitignore",
      "# \ud83c\udfd7\ufe0f Frameworks",
      "Detect file type and language",
      "Analyze the overall project structure",
      "exports",
      "Add more package managers as needed",
      "file_count",
      "Add dependency nodes",
      "Calculate file hash for change detection",
      "Framework detection patterns",
      "Analyze code patterns and project structure",
      "Purpose detection patterns",
      "Parse a dependency file and extract dependency information",
      "Record scan history",
      "dependencies",
      "**Name**: {index.context.get('project_name', 'Unknown')}",
      "_parse_npm_dependencies",
      "hasher",
      "Check for Git",
      "framework_patterns",
      "total_files",
      "Node.js",
      "language_counts",
      "Language distribution",
      "package",
      "scan_time",
      "Scan the file system and build file and directory indexes",
      "Build outputs",
      "Basic TOML parsing (can be enhanced with proper TOML library)",
      "**Total Files**: {index.total_files}",
      "_build_context",
      "Add file nodes",
      "Language and framework detection patterns",
      "Basic TOML parsing for dependencies",
      "deps_content",
      "framework",
      "**Total Size**: {index.total_size:,} bytes",
      "current_hash",
      "Process directories",
      "Format project structure summary for display",
      "Format dependency summary for display"
    ],
    "test_docker_functionality.py": [
      "Look for our enhanced tools",
      "result_data",
      "stdio_client",
      "enhanced_tools",
      "test_enhanced_functionality",
      "Test enhanced brain tools",
      "Test think tool",
      "Test the analyze_context_deeply tool if available",
      "context_tools",
      "Parse the result",
      "ClientSession",
      "Test the enhanced functionality in the Docker container",
      "Connect to the MCP server",
      "test_content",
      "arguments",
      "Look for our enhanced tools",
      "result_data",
      "stdio_client",
      "enhanced_tools",
      "test_enhanced_functionality",
      "Test enhanced brain tools",
      "Test think tool",
      "Test the analyze_context_deeply tool if available",
      "context_tools",
      "Parse the result",
      "ClientSession",
      "Test the enhanced functionality in the Docker container",
      "Connect to the MCP server",
      "test_content",
      "arguments",
      "Look for our enhanced tools",
      "result_data",
      "stdio_client",
      "enhanced_tools",
      "test_enhanced_functionality",
      "Test enhanced brain tools",
      "Test think tool",
      "Test the analyze_context_deeply tool if available",
      "context_tools",
      "Parse the result",
      "ClientSession",
      "Test the enhanced functionality in the Docker container",
      "Connect to the MCP server",
      "test_content",
      "arguments"
    ],
    "test_enhanced_docker.py": [
      "test_info",
      "Test the enhanced think tool",
      "insights",
      "Show some insights",
      "brain_tools",
      "test_message",
      "context_enh",
      "Check for enhanced features",
      "Test the enhanced remember tool",
      "test_info",
      "Test the enhanced think tool",
      "insights",
      "Show some insights",
      "brain_tools",
      "test_message",
      "context_enh",
      "Check for enhanced features",
      "Test the enhanced remember tool",
      "test_info",
      "Test the enhanced think tool",
      "insights",
      "Show some insights",
      "brain_tools",
      "test_message",
      "context_enh",
      "Check for enhanced features",
      "Test the enhanced remember tool"
    ],
    "test_enhanced_integration.py": [
      "Test the detect_patterns tool",
      "Test the recall_intelligently tool",
      "Test the code_analyze tool",
      "Test the understand_deeply tool",
      "calculate_complexity",
      "Calculate test summary",
      "This would normally call the MCP tool",
      "total_tools",
      "Test enhanced memory management tools",
      "tester",
      "report",
      "Main test execution",
      "Test the analyze_context_comprehensive tool",
      "Test the reflect_enhanced tool",
      "successful_tools",
      "Test cognitive enhancement tools",
      "Test the refactor_safely tool",
      "Generate a comprehensive integration report",
      "cache",
      "Test the think_deeply tool",
      "# \ud83d\ude80 NEXT STEPS\")",
      "test_summary",
      "Individual tool test methods",
      "Test the assess_complexity tool",
      "test_results",
      "Test the forget_selectively tool",
      "process",
      "\ud83e\udde0 Enhanced Tool Integration Report\")",
      "Test the remember_important tool",
      "For now, simulate the expected behavior",
      "Run all enhanced tool tests",
      "EnhancedToolTester",
      "complex_request",
      "Test all tool categories",
      "Test dedicated context analysis tools",
      "Calculate complexity of data structure",
      "# \ud83c\udfaf INTEGRATION STATUS\")",
      "sample_code",
      "Run all tests",
      "Test Cursor-specific tools",
      "DataProcessor",
      "Test the debug_intelligently tool",
      "Generate and display report",
      "Test all enhanced tools and their integration",
      "Save results to file",
      "Test analysis and understanding tools",
      "# {category.upper()} TOOLS\")",
      "Test the detect_patterns tool",
      "Test the recall_intelligently tool",
      "Test the code_analyze tool",
      "Test the understand_deeply tool",
      "calculate_complexity",
      "Calculate test summary",
      "This would normally call the MCP tool",
      "total_tools",
      "Test enhanced memory management tools",
      "tester",
      "report",
      "Main test execution",
      "Test the analyze_context_comprehensive tool",
      "Test the reflect_enhanced tool",
      "successful_tools",
      "Test cognitive enhancement tools",
      "Test the refactor_safely tool",
      "Generate a comprehensive integration report",
      "cache",
      "Test the think_deeply tool",
      "# \ud83d\ude80 NEXT STEPS\")",
      "test_summary",
      "Individual tool test methods",
      "Test the assess_complexity tool",
      "test_results",
      "Test the forget_selectively tool",
      "process",
      "\ud83e\udde0 Enhanced Tool Integration Report\")",
      "Test the remember_important tool",
      "For now, simulate the expected behavior",
      "Run all enhanced tool tests",
      "EnhancedToolTester",
      "complex_request",
      "Test all tool categories",
      "Test dedicated context analysis tools",
      "Calculate complexity of data structure",
      "# \ud83c\udfaf INTEGRATION STATUS\")",
      "sample_code",
      "Run all tests",
      "Test Cursor-specific tools",
      "DataProcessor",
      "Test the debug_intelligently tool",
      "Generate and display report",
      "Test all enhanced tools and their integration",
      "Save results to file",
      "Test analysis and understanding tools",
      "# {category.upper()} TOOLS\")",
      "Test the detect_patterns tool",
      "Test the recall_intelligently tool",
      "Test the code_analyze tool",
      "Test the understand_deeply tool",
      "calculate_complexity",
      "Calculate test summary",
      "This would normally call the MCP tool",
      "total_tools",
      "Test enhanced memory management tools",
      "tester",
      "report",
      "Main test execution",
      "Test the analyze_context_comprehensive tool",
      "Test the reflect_enhanced tool",
      "successful_tools",
      "Test cognitive enhancement tools",
      "Test the refactor_safely tool",
      "Generate a comprehensive integration report",
      "cache",
      "Test the think_deeply tool",
      "# \ud83d\ude80 NEXT STEPS\")",
      "test_summary",
      "Individual tool test methods",
      "Test the assess_complexity tool",
      "test_results",
      "Test the forget_selectively tool",
      "process",
      "\ud83e\udde0 Enhanced Tool Integration Report\")",
      "Test the remember_important tool",
      "For now, simulate the expected behavior",
      "Run all enhanced tool tests",
      "EnhancedToolTester",
      "complex_request",
      "Test all tool categories",
      "Test dedicated context analysis tools",
      "Calculate complexity of data structure",
      "# \ud83c\udfaf INTEGRATION STATUS\")",
      "sample_code",
      "Run all tests",
      "Test Cursor-specific tools",
      "DataProcessor",
      "Test the debug_intelligently tool",
      "Generate and display report",
      "Test all enhanced tools and their integration",
      "Save results to file",
      "Test analysis and understanding tools",
      "# {category.upper()} TOOLS\")"
    ],
    "test_mcp_integration.py": [
      "mcp_process",
      "refactor_result",
      "Main MCP integration test execution",
      "think_result",
      "_test_context_tools",
      "Test all enhanced tools",
      "_test_cognitive_tools",
      "Run MCP integration tests",
      "patterns_result",
      "Clean up",
      "Test analyze_context_comprehensive",
      "Test think_deeply",
      "For now, simulate MCP tool calls",
      "Test recall_intelligently",
      "Test understand_deeply",
      "Test remember_important",
      "MCPIntegrationTester",
      "complexity_result",
      "In a real implementation, this would use the MCP client library",
      "Test forget_selectively",
      "\ud83d\ude80 MCP Integration Test Report\")",
      "understand_result",
      "Test code_analyze",
      "Test all enhanced tools through MCP",
      "Test enhanced memory tools",
      "Simulate tool execution",
      "remember_result",
      "Generate MCP integration report",
      "Run all MCP integration tests",
      "stdout",
      "Return simulated successful result",
      "stderr",
      "Test assess_complexity",
      "Check if server is running",
      "subprocess",
      "Wait for server to start",
      "_test_cursor_tools",
      "Test debug_intelligently",
      "Test each category of tools",
      "Test a specific MCP tool",
      "cleanup",
      "Test enhanced tools through MCP protocol",
      "Test refactor_safely",
      "code_result",
      "Start the MCP server for testing",
      "Start the MCP server in the background",
      "forget_result",
      "Test detect_patterns",
      "reflect_result",
      "_test_memory_tools",
      "debug_result",
      "Clean up MCP server process",
      "_test_analysis_tools",
      "# \ud83c\udfaf MCP INTEGRATION STATUS\")",
      "recall_result",
      "Would be \"real\" in production",
      "Test reflect_enhanced",
      "Simulate async operation",
      "mcp_process",
      "refactor_result",
      "Main MCP integration test execution",
      "think_result",
      "_test_context_tools",
      "Test all enhanced tools",
      "_test_cognitive_tools",
      "Run MCP integration tests",
      "patterns_result",
      "Clean up",
      "Test analyze_context_comprehensive",
      "Test think_deeply",
      "For now, simulate MCP tool calls",
      "Test recall_intelligently",
      "Test understand_deeply",
      "Test remember_important",
      "MCPIntegrationTester",
      "complexity_result",
      "In a real implementation, this would use the MCP client library",
      "Test forget_selectively",
      "\ud83d\ude80 MCP Integration Test Report\")",
      "understand_result",
      "Test code_analyze",
      "Test all enhanced tools through MCP",
      "Test enhanced memory tools",
      "Simulate tool execution",
      "remember_result",
      "Generate MCP integration report",
      "Run all MCP integration tests",
      "stdout",
      "Return simulated successful result",
      "stderr",
      "Test assess_complexity",
      "Check if server is running",
      "subprocess",
      "Wait for server to start",
      "_test_cursor_tools",
      "Test debug_intelligently",
      "Test each category of tools",
      "Test a specific MCP tool",
      "cleanup",
      "Test enhanced tools through MCP protocol",
      "Test refactor_safely",
      "code_result",
      "Start the MCP server for testing",
      "Start the MCP server in the background",
      "forget_result",
      "Test detect_patterns",
      "reflect_result",
      "_test_memory_tools",
      "debug_result",
      "Clean up MCP server process",
      "_test_analysis_tools",
      "# \ud83c\udfaf MCP INTEGRATION STATUS\")",
      "recall_result",
      "Would be \"real\" in production",
      "Test reflect_enhanced",
      "Simulate async operation",
      "mcp_process",
      "refactor_result",
      "Main MCP integration test execution",
      "think_result",
      "_test_context_tools",
      "Test all enhanced tools",
      "_test_cognitive_tools",
      "Run MCP integration tests",
      "patterns_result",
      "Clean up",
      "Test analyze_context_comprehensive",
      "Test think_deeply",
      "For now, simulate MCP tool calls",
      "Test recall_intelligently",
      "Test understand_deeply",
      "Test remember_important",
      "MCPIntegrationTester",
      "complexity_result",
      "In a real implementation, this would use the MCP client library",
      "Test forget_selectively",
      "\ud83d\ude80 MCP Integration Test Report\")",
      "understand_result",
      "Test code_analyze",
      "Test all enhanced tools through MCP",
      "Test enhanced memory tools",
      "Simulate tool execution",
      "remember_result",
      "Generate MCP integration report",
      "Run all MCP integration tests",
      "stdout",
      "Return simulated successful result",
      "stderr",
      "Test assess_complexity",
      "Check if server is running",
      "subprocess",
      "Wait for server to start",
      "_test_cursor_tools",
      "Test debug_intelligently",
      "Test each category of tools",
      "Test a specific MCP tool",
      "cleanup",
      "Test enhanced tools through MCP protocol",
      "Test refactor_safely",
      "code_result",
      "Start the MCP server for testing",
      "Start the MCP server in the background",
      "forget_result",
      "Test detect_patterns",
      "reflect_result",
      "_test_memory_tools",
      "debug_result",
      "Clean up MCP server process",
      "_test_analysis_tools",
      "# \ud83c\udfaf MCP INTEGRATION STATUS\")",
      "recall_result",
      "Would be \"real\" in production",
      "Test reflect_enhanced",
      "Simulate async operation"
    ],
    "test_mcp_tools.py": [
      "Check for specific enhanced tools",
      "capture_output",
      "logs_result",
      "Test if MCP server is responding",
      "found_tools",
      "Check server logs for enhanced tools",
      "Main test function",
      "test_mcp_server",
      "Check for specific enhanced tools",
      "capture_output",
      "logs_result",
      "Test if MCP server is responding",
      "found_tools",
      "Check server logs for enhanced tools",
      "Main test function",
      "test_mcp_server",
      "Check for specific enhanced tools",
      "capture_output",
      "logs_result",
      "Test if MCP server is responding",
      "found_tools",
      "Check server logs for enhanced tools",
      "Main test function",
      "test_mcp_server"
    ],
    "test_tool_registry.py": [
      "test_handler",
      "success2",
      "Test duplicate registration",
      "decorator",
      "Test creating registry",
      "Test creating a mock MCP server",
      "Test tool registration",
      "Test tool info",
      "mock_mcp",
      "ToolRegistry",
      "Test the tool registry system",
      "Add current directory to path",
      "test_tools",
      "Same name",
      "Test category listing",
      "MockMCPServer",
      "test_tool_registry",
      "Test importing the tool registry",
      "test_handler",
      "success2",
      "Test duplicate registration",
      "decorator",
      "Test creating registry",
      "Test creating a mock MCP server",
      "Test tool registration",
      "Test tool info",
      "mock_mcp",
      "ToolRegistry",
      "Test the tool registry system",
      "Add current directory to path",
      "test_tools",
      "Same name",
      "Test category listing",
      "MockMCPServer",
      "test_tool_registry",
      "Test importing the tool registry",
      "test_handler",
      "success2",
      "Test duplicate registration",
      "decorator",
      "Test creating registry",
      "Test creating a mock MCP server",
      "Test tool registration",
      "Test tool info",
      "mock_mcp",
      "ToolRegistry",
      "Test the tool registry system",
      "Add current directory to path",
      "test_tools",
      "Same name",
      "Test category listing",
      "MockMCPServer",
      "test_tool_registry",
      "Test importing the tool registry"
    ],
    "tool_registry.py": [
      "tool_decorator",
      "tool_categories",
      "Clean tool registry that prevents conflicts and organizes tools logically",
      "List tools in a specific category",
      "register_tool",
      "Store tool info",
      "registered_tools",
      "decorated_handler",
      "Get or create the global tool registry",
      "Register with MCP server",
      "Get description of a specific tool",
      "Global tool registry instance",
      "Get comprehensive tool information",
      "Add to category",
      "Get all registered tools with their handlers and info",
      "Register a tool with conflict prevention",
      "tool_decorator",
      "tool_categories",
      "Clean tool registry that prevents conflicts and organizes tools logically",
      "List tools in a specific category",
      "register_tool",
      "Store tool info",
      "registered_tools",
      "decorated_handler",
      "Get or create the global tool registry",
      "Register with MCP server",
      "Get description of a specific tool",
      "Global tool registry instance",
      "Get comprehensive tool information",
      "Add to category",
      "Get all registered tools with their handlers and info",
      "Register a tool with conflict prevention",
      "tool_decorator",
      "tool_categories",
      "Clean tool registry that prevents conflicts and organizes tools logically",
      "List tools in a specific category",
      "register_tool",
      "Store tool info",
      "registered_tools",
      "decorated_handler",
      "Get or create the global tool registry",
      "Register with MCP server",
      "Get description of a specific tool",
      "Global tool registry instance",
      "Get comprehensive tool information",
      "Add to category",
      "Get all registered tools with their handlers and info",
      "Register a tool with conflict prevention"
    ]
  },
  "patterns": {
    "concept_frequency": {
      "1. **cleanup_project.py** (One-time use)": 1,
      "bash\n# Edit crontab\ncrontab -e\n\n# Add this line for Monday at 9 AM\n0 9 * * 1 cd /path/to/your/project && ./scripts/maintain.sh": 1,
      ".pyc/.pyo": 1,
      "bash\n# Run maintenance script\npython3 scripts/maintain_project.py\n\n# Or use the shell wrapper\n./scripts/maintain.sh": 1,
      "\u274c Python cache files cluttering the project": 1,
      "### \ud83d\udee0\ufe0f New Maintenance Tools\n\n#### 1. **cleanup_project.py** (One-time use)\n\n- Removes Python cache files\n- Consolidates Docker configurations\n- Organizes documentation\n- Creates clean project structure\n\n#### 2. **maintain_project.py** (Regular use)\n\n- Checks for new cache files\n- Verifies directory structure\n- Monitors documentation organization\n- Generates maintenance reports\n\n#### 3. **maintain.sh** (Shell wrapper)\n\n- Easy-to-use shell script\n- Automatically detects Python version\n- Can be added to crontab for automation\n\n## \ud83d\ude80 How to Use Going Forward\n\n### Regular Maintenance": 1,
      "\u274c Difficult to maintain": 1,
      "Before Cleanup": 1,
      "Monitors documentation organization": 1,
      "Or use the shell wrapper": 1,
      "- Regular maintenance script\n-": 1,
      "Can be added to crontab for automation": 1,
      "Checks for new cache files": 1,
      "**Scripts**: Place in `scripts/` directory": 1,
      "directory\n- **Scripts**: Place in": 1,
      "Automatically detects Python version": 1,
      "3. **maintain.sh** (Shell wrapper)": 1,
      "Regular Maintenance": 1,
      "- One-time cleanup script\n-": 1,
      "\u2705 **Maintenance tools added** - Scripts to keep the project organized going forward": 1,
      "memory-context-manager_v2/\n\u251c\u2500\u2500 \ud83d\udcc1 docs/                    # All documentation organized here\n\u251c\u2500\u2500 \ud83d\udcc1 scripts/                 # Maintenance and utility scripts\n\u2502   \u251c\u2500\u2500 cleanup_project.py      # One-time cleanup script\n\u2502   \u2514\u2500\u2500 maintain_project.py     # Regular maintenance script\n\u251c\u2500\u2500 \ud83d\udcc1 tests/                   # Test files and suites\n\u251c\u2500\u2500 \ud83d\udcc1 config/                  # Configuration files\n\u251c\u2500\u2500 \ud83d\udcc1 plugins/                 # Plugin system (existing)\n\u251c\u2500\u2500 \ud83d\udcc1 database/                # Database components (existing)\n\u251c\u2500\u2500 \ud83d\udcc1 src/                     # Source code (existing)\n\u251c\u2500\u2500 \ud83d\udcc1 brain_memory_store/      # Brain memory storage (existing)\n\u251c\u2500\u2500 \ud83d\udc33 docker-compose.yml       # Single, optimized Docker config\n\u251c\u2500\u2500 \ud83d\udc33 Dockerfile               # Production-ready container\n\u251c\u2500\u2500 \ud83d\udcd6 README.md                # Main project documentation\n\u251c\u2500\u2500 \ud83d\udce6 pyproject.toml           # Project configuration\n\u2514\u2500\u2500 \ud83d\udd27 .cursorrules             # Cursor IDE configuration": 1,
      "\u2705 Maintenance tools for ongoing organization": 1,
      "Adding New Files": 1,
      "\u274c No clear organization structure": 1,
      "directory\n- **Configs**: Place in": 1,
      "docs/": 1,
      "Consolidates Docker configurations": 1,
      "Dockerfile": 1,
      "directory\n- \u2705 Clean project structure with clear purposes\n- \u2705 Maintenance tools for ongoing organization\n- \u2705 Easy to navigate and maintain\n\n## \ud83c\udfaf Benefits of the Cleanup\n\n1. **Better Organization** - Clear separation of concerns\n2. **Easier Maintenance** - Automated tools to keep things clean\n3. **Improved Development** - Faster to find what you need\n4. **Professional Appearance** - Clean, organized codebase\n5. **Team Collaboration** - Clear structure for multiple developers\n\n## \ud83d\udd2e Future Recommendations\n\n1. **Run maintenance weekly** - Keep the project organized\n2. **Follow the structure** - Place new files in appropriate directories\n3. **Update documentation** - Keep docs current with code changes\n4. **Use the tools** - Leverage the maintenance scripts\n5. **Share the structure** - Help team members understand the organization\n\n## \ud83d\udcdd Files Created During Cleanup\n\n-": 1,
      "Automatic Maintenance (Optional)": 1,
      "### Adding New Files\n\n- **Documentation**: Place in": 1,
      "`PROJECT_ORGANIZATION.md` - Organization guidelines": 1,
      "\ud83d\udee0\ufe0f New Maintenance Tools": 1,
      "Run maintenance script": 1,
      "Easy-to-use shell script": 1,
      "- Detailed cleanup process\n-": 1,
      "Verifies directory structure": 1,
      "\u2705 Easy to navigate and maintain": 1,
      "\u2705 **Python cache files removed** - All `__pycache__/` directories and `.pyc/.pyo` files cleaned up": 1,
      "\ud83e\uddf9 Cleanup Actions": 1,
      "**Documentation**: Place in `docs/` directory": 1,
      "What Was Accomplished": 1,
      "**Tests**: Place in `tests/` directory": 1,
      "- Organization guidelines\n-": 1,
      "- This summary document\n-": 1,
      "Removes Python cache files": 1,
      "directory\n\n## \ud83d\udcca Before vs After\n\n### Before Cleanup\n\n- \u274c Multiple Docker configurations (confusing)\n- \u274c Documentation scattered in root directory\n- \u274c Python cache files cluttering the project\n- \u274c No clear organization structure\n- \u274c Difficult to maintain\n\n### After Cleanup\n\n- \u2705 Single, optimized Docker configuration\n- \u2705 All documentation organized in": 1,
      "`CLEANUP_SUMMARY.md` - Detailed cleanup process": 1,
      "\u2705 **Docker files consolidated** - Removed duplicate configurations, kept main `docker-compose.yml` and `Dockerfile`": 1,
      "\ud83d\udcca Before vs After": 1,
      "After Cleanup": 1,
      "\u2705 Single, optimized Docker configuration": 1,
      "2. **maintain_project.py** (Regular use)": 1,
      "\u2705 Clean project structure with clear purposes": 1,
      "docker-compose.yml": 1,
      "\u274c Documentation scattered in root directory": 1,
      "\u274c Multiple Docker configurations (confusing)": 1,
      "`scripts/cleanup_project.py` - One-time cleanup script": 1,
      "Edit crontab": 1,
      "Generates maintenance reports": 1,
      "directory\n- **Tests**: Place in": 1,
      "\ud83d\ude80 How to Use Going Forward": 1,
      "\ud83d\udcc1 New Project Structure": 1,
      "\ud83d\udcdd Files Created During Cleanup": 1,
      "`scripts/maintain.sh` - Shell wrapper script": 1,
      "Creates clean project structure": 1,
      "Organizes documentation": 1,
      "\ud83d\udd2e Future Recommendations": 1,
      "\u2705 All documentation organized in `docs/` directory": 1,
      "\ud83c\udfaf Benefits of the Cleanup": 1,
      "\u2705 **Project structure created** - New organized directory structure with clear purposes": 1,
      "Add this line for Monday at 9 AM": 1,
      "\u2705 **Documentation organized** - All documentation moved to `docs/` directory for better organization": 1,
      "**Configs**: Place in `config/` directory": 1,
      "\ud83c\udf89 Project Cleanup Complete!": 1,
      "`CLEANUP_COMPLETE.md` - This summary document": 1,
      "### Automatic Maintenance (Optional)\n\nAdd to your crontab for weekly automatic maintenance:": 1,
      "`scripts/maintain_project.py` - Regular maintenance script": 1,
      "__pycache__/": 1,
      "Project structure standardized": 1,
      "*.pyc": 1,
      "- Production-ready container\n\n## Getting Started\n\n1. **Install dependencies**:": 1,
      "What Was Cleaned Up": 1,
      "## Docker Configuration\n\nThe project now uses a single, optimized Docker configuration:\n-": 1,
      "Cleanup Script": 1,
      "Project Cleanup Summary": 1,
      "`docker-compose.yml` - Main development setup": 1,
      "- Main development setup\n-": 1,
      "Getting Started": 1,
      "\u2705 Removed": 1,
      "Duplicate Docker configurations": 1,
      "2. **Run with Docker**:": 1,
      "Python cache files (`__pycache__/`, `*.pyc`, `*.pyo`)": 1,
      "\ud83d\udcc1 Reorganized": 1,
      "memory-context-manager_v2/\n\u251c\u2500\u2500 docs/           # All documentation files\n\u251c\u2500\u2500 scripts/        # Utility scripts\n\u251c\u2500\u2500 tests/          # Test files\n\u251c\u2500\u2500 config/         # Configuration files\n\u251c\u2500\u2500 plugins/        # Plugin system\n\u251c\u2500\u2500 database/       # Database components\n\u251c\u2500\u2500 src/           # Source code\n\u251c\u2500\u2500 docker-compose.yml  # Main Docker configuration\n\u251c\u2500\u2500 Dockerfile     # Main Dockerfile\n\u251c\u2500\u2500 README.md      # Main project README\n\u2514\u2500\u2500 pyproject.toml # Project configuration": 1,
      "`Dockerfile` - Production-ready container": 1,
      "3. **Run locally**:": 1,
      "Temporary development files": 1,
      "Documentation moved to `docs/` directory": 1,
      "Docker Configuration": 1,
      "## Cleanup Script\n\nTo re-run this cleanup:": 1,
      "*.pyo": 1,
      "Docker files consolidated": 1,
      "\ud83c\udfd7\ufe0f  New Structure": 1,
      "**Short Term (Next 2 weeks)**": 1,
      "** - Unified perception and analysis\n2. **": 1,
      "**Easier Updates**: Changes affect entire cognitive domains": 1,
      "python\n# 1. PERCEPTION: Analyze input and get context\ncontext = await perceive_and_analyze(\"Analyze system performance\")\nmemory_context = await enhanced_context_retrieval(\"system performance analysis\")\n\n# 2. MEMORY: Store and retrieve relevant information\nawait memory_operations(\"store\", \"System performance analysis requested\")\nstored_data = await memory_operations(\"retrieve\", \"\", \"system performance\")\n\n# 3. THINKING: Process and orchestrate tools\nthoughts = await think_deeply(\"How to analyze system performance\", \"technical\")\norchestration = await orchestrate_tools(memory_context, \"comprehensive_analysis\")\n\n# 4. LEARNING: Learn from the interaction\nawait learn_and_adapt(\"learn\", \"User requested system performance analysis\", \"technical\")\nlearning_cycle = await continuous_learning_cycle(interaction_data, \"performance_patterns\")\n\n# 5. ACTION: Execute the workflow\nworkflow_result = await execute_enhanced_workflow(\"Analyze system performance\", \"aggressive\")\n\n# 6. MONITORING: Check system health\nhealth_status = await self_monitor(\"comprehensive\", \"all\")\nperformance_metrics = await analyze_performance(\"comprehensive\", \"workflow\")": 1,
      "- **Test Command**:": 1,
      "**Before**: 48 scattered, overlapping tools": 1,
      "| \u2705 100% Preserved       |\n| Context Building (4 tools)      |": 1,
      "\ud83d\udcc1 **Files Created/Modified**": 1,
      "**4. Enhanced User Experience**": 1,
      "| \u2705 100% Preserved       |\n\n**Total Preservation: 100% \u2705**\n\n---\n\n## \ud83d\ude80 **Natural Cognitive Workflow**\n\n### **Complete Workflow Example**": 1,
      "[ ] Production deployment": 1,
      "\u274c Multiple overlapping memory management tools\n\u274c Redundant context building functions\n\u274c Scattered performance analysis tools\n\u274c Inconsistent naming conventions\n\u274c Complex tool discovery and usage\n\u274c No natural workflow progression\n\u274c Difficult to maintain and update": 1,
      "** - Optimize workflows based on learning\n\n### **DOMAIN 5: OUTPUT & ACTION**\n\n13. **": 1,
      "**Reduction**: 62.5% fewer tools with 100% functionality": 1,
      "**After**: 18 organized, cognitive domain tools": 1,
      "`demo_restructured_cognitive_system.py` - Demonstration script": 1,
      "** - Comprehensive self-monitoring and health checks\n17. **": 1,
      "Main MCP server continues to work with existing tools": 1,
      "[x] Restructured cognitive brain plugin created": 1,
      "`RESTRUCTURED_COGNITIVE_SYSTEM.md` - Comprehensive documentation": 1,
      "Backward compatibility maintained": 1,
      "1. PERCEPTION: Analyze input and get context": 1,
      "### **After: 6 Natural Cognitive Domains**": 1,
      "** - Cursor conversation context\n\n### **DOMAIN 2: MEMORY & STORAGE**\n\n4. **": 1,
      "| \u2705 100% Preserved       |\n| AI Chat (2 tools)               |": 1,
      "- This summary document\n\n### **Existing Files Preserved**\n\n- All original plugins remain intact for functionality preservation\n- Main MCP server continues to work with existing tools\n- Backward compatibility maintained\n\n---\n\n## \ud83c\udf89 **Success Metrics**\n\n| **Metric**            | **Before** | **After** | **Improvement**             |\n| --------------------- | ---------- | --------- | --------------------------- |\n| **Tool Count**        | 48         | 18        | **62.5% reduction**         |\n| **Cognitive Domains** | 0          | 6         | **New organization**        |\n| **Functionality**     | 100%       | 100%      | **Zero loss**               |\n| **User Experience**   | Scattered  | Organized | **Major improvement**       |\n| **Maintainability**   | Complex    | Simple    | **Significant improvement** |\n| **Workflow**          | Manual     | Natural   | **Cognitive progression**   |\n\n---\n\n## \ud83d\ude80 **Next Steps**\n\n### **Immediate (Ready Now)**\n\n1. **Deploy restructured plugin** alongside existing system\n2. **Start user migration** to new cognitive domain tools\n3. **Monitor performance** and user adoption\n\n### **Short Term (Next 2 weeks)**\n\n1. **Performance optimization** based on usage patterns\n2. **Advanced cognitive features** development\n3. **User training materials** creation\n\n### **Long Term (Next month)**\n\n1. **Full migration** to cognitive domain interface\n2. **Legacy tool deprecation** (with full functionality preserved)\n3. **Advanced cognitive capabilities** implementation\n\n---\n\n## \ud83c\udfaf **Conclusion**\n\nThe **Cognitive Brain Restructuring** represents a **major evolutionary breakthrough** in our system architecture:\n\n\u2705 **48 tools successfully consolidated into 18 cognitive domain tools**\n\u2705 **100% functionality preservation achieved**\n\u2705 **Human brain-focused organization implemented**\n\u2705 **Natural cognitive workflow progression created**\n\u2705 **Massive redundancy elimination accomplished**\n\u2705 **Significantly improved user experience and maintainability**\n\nThis restructuring transforms our system from a **collection of scattered tools** into a **coherent, intelligent cognitive system** that mirrors how the human brain naturally organizes and processes information.\n\n**The future of AI is cognitive, and our restructured system leads the way! \ud83e\udde0\u2728**\n\n---\n\n## \ud83d\udd17 **Quick Reference**\n\n- **Main Plugin**:": 1,
      "**Logical Organization**: Related functions grouped together": 1,
      "** - Track conversation for learning\n\n### **DOMAIN 3: PROCESSING & THINKING**\n\n7. **": 1,
      "[x] Demonstration scripts ready": 1,
      "**Demo Script**: `demo_restructured_cognitive_system.py`": 1,
      "\ud83c\udfaf **Mission Accomplished**": 1,
      "| \u2705 100% Preserved       |\n| Tool Orchestration (2 tools)    |": 1,
      "** - Comprehensive workflow health check\n\n---\n\n## \ud83d\udd04 **Functionality Preservation Matrix**\n\n| **Original Functionality**      | **New Tool**                                                                        | **Preservation Status** |\n| ------------------------------- | ----------------------------------------------------------------------------------- | ----------------------- |\n| Memory Management (6 tools)     |": 1,
      "[x] Natural cognitive workflow implemented": 1,
      "\ud83c\udf89 **Success Metrics**": 1,
      "** - Build comprehensive context\n\n### **DOMAIN 4: LEARNING & ADAPTATION**\n\n10. **": 1,
      "\ud83e\udde0 **Complete Tool Mapping**": 1,
      "**DOMAIN 6: SELF-MONITORING**": 1,
      "| \u2705 100% Preserved       |\n| Content Analysis (3 tools)      |": 1,
      "- Demonstration script\n-": 1,
      "[x] 100% functionality preservation achieved": 1,
      "| \u2705 100% Preserved       |\n| Self-Monitoring (4 tools)       |": 1,
      "- **Demo Script**:": 1,
      "**Better Testing**: Comprehensive testing per domain": 1,
      "2. MEMORY: Store and retrieve relevant information": 1,
      "\ud83d\ude80 **Next Steps**": 1,
      "**Immediate (Ready Now)**": 1,
      "**Documentation**: `RESTRUCTURED_COGNITIVE_SYSTEM.md`": 1,
      "** - Enhanced context retrieval (Phase 1)\n3. **": 1,
      "** - Intelligent tool orchestration (Phase 2)\n9. **": 1,
      "** - Unified learning and adaptation system\n11. **": 1,
      "**\u2705 Completed**": 1,
      "**Reduced Confusion**: Clear tool categorization": 1,
      "---\n\n## \ud83c\udfaf **Key Benefits Achieved**\n\n### **1. Cognitive Efficiency**\n\n- **Natural Workflow**: Tools follow human cognitive processes\n- **Intuitive Usage**: No need to remember scattered tool names\n- **Logical Organization**: Related functions grouped together\n\n### **2. Massive Redundancy Elimination**\n\n- **Before**: 48 scattered, overlapping tools\n- **After**: 18 organized, cognitive domain tools\n- **Reduction**: 62.5% fewer tools with 100% functionality\n\n### **3. Improved Maintainability**\n\n- **Centralized Logic**: All related functionality in one place\n- **Easier Updates**: Changes affect entire cognitive domains\n- **Better Testing**: Comprehensive testing per domain\n\n### **4. Enhanced User Experience**\n\n- **Faster Discovery**: Users find tools in logical domains\n- **Better Learning**: Natural cognitive progression\n- **Reduced Confusion**: Clear tool categorization\n\n---\n\n## \ud83d\udd27 **Implementation Status**\n\n### **\u2705 Completed**\n\n- [x] Restructured cognitive brain plugin created\n- [x] All 18 tools implemented and tested\n- [x] 100% functionality preservation achieved\n- [x] Natural cognitive workflow implemented\n- [x] Comprehensive documentation created\n- [x] Demonstration scripts ready\n- [x] Plugin integration tested\n\n### **\ud83d\ude80 Ready For**\n\n- [ ] Production deployment\n- [ ] User migration\n- [ ] Performance optimization\n- [ ] Advanced cognitive features\n\n---\n\n## \ud83d\udcc1 **Files Created/Modified**\n\n### **New Files**\n\n-": 1,
      "\ud83d\udd17 **Quick Reference**": 1,
      "** - Deep thinking with context analysis\n8. **": 1,
      "3. THINKING: Process and orchestrate tools": 1,
      "6. MONITORING: Check system health": 1,
      "**Long Term (Next month)**": 1,
      "\ud83d\udcca **Restructuring Results**": 1,
      "| \u2705 100% Preserved       |\n| Learning & Adaptation (5 tools) |": 1,
      "** - Continuous learning cycle (Phase 3)\n12. **": 1,
      "`COGNITIVE_RESTRUCTURING_SUMMARY.md` - This summary document": 1,
      "**DOMAIN 3: PROCESSING & THINKING**": 1,
      "**3. Improved Maintainability**": 1,
      "\ud83d\ude80 **Natural Cognitive Workflow**": 1,
      "**Existing Files Preserved**": 1,
      "| \u2705 100% Preserved       |\n| Workflow Management (3 tools)   |": 1,
      "** - Unified memory operations (store, retrieve, search, clear)\n5. **": 1,
      "** - Execute complete enhanced workflow\n14. **": 1,
      "**Test Command**: `python demo_restructured_cognitive_system.py`": 1,
      "\ud83e\udde0 **Cognitive Brain Restructuring - COMPLETE SUMMARY**": 1,
      "| \u2705 100% Preserved       |\n| Cursor Integration (3 tools)    |": 1,
      "**Main Plugin**: `plugins/cognitive_brain_restructured.py`": 1,
      "4. LEARNING: Learn from the interaction": 1,
      "[x] Plugin integration tested": 1,
      "**Total: 18 consolidated tools with 100% functionality preservation**\n\n---\n\n## \ud83e\udde0 **Complete Tool Mapping**\n\n### **DOMAIN 1: PERCEPTION & INPUT**\n\n1. **": 1,
      "[x] All 18 tools implemented and tested": 1,
      "All original plugins remain intact for functionality preservation": 1,
      "5. ACTION: Execute the workflow": 1,
      "** - Auto-process and store message context\n6. **": 1,
      "[x] Comprehensive documentation created": 1,
      "**New Files**": 1,
      "**Faster Discovery**: Users find tools in logical domains": 1,
      "\ud83c\udfaf **Conclusion**": 1,
      "**Natural Workflow**: Tools follow human cognitive processes": 1,
      "**DOMAIN 4: LEARNING & ADAPTATION**": 1,
      "- Main restructured plugin\n-": 1,
      "\ud83d\udd04 **Functionality Preservation Matrix**": 1,
      "** - AI chat with memory enhancement\n\n### **DOMAIN 6: SELF-MONITORING**\n\n16. **": 1,
      "- Comprehensive documentation\n-": 1,
      "\ud83d\udd27 **Implementation Status**": 1,
      "** - Process multiple messages efficiently\n15. **": 1,
      "[ ] Advanced cognitive features": 1,
      "**Better Learning**: Natural cognitive progression": 1,
      "[ ] User migration": 1,
      "`plugins/cognitive_brain_restructured.py` - Main restructured plugin": 1,
      "**Before: 48 Scattered Tools**": 1,
      "[ ] Performance optimization": 1,
      "**Complete Workflow Example**": 1,
      "**DOMAIN 2: MEMORY & STORAGE**": 1,
      "**DOMAIN 5: OUTPUT & ACTION**": 1,
      "\ud83c\udfaf **Key Benefits Achieved**": 1,
      "**1. Cognitive Efficiency**": 1,
      "**After: 6 Natural Cognitive Domains**": 1,
      "**Centralized Logic**: All related functionality in one place": 1,
      "\u2705 PERCEPTION & INPUT (3 tools)\n\u2705 MEMORY & STORAGE (3 tools)\n\u2705 PROCESSING & THINKING (3 tools)\n\u2705 LEARNING & ADAPTATION (3 tools)\n\u2705 OUTPUT & ACTION (3 tools)\n\u2705 SELF-MONITORING (3 tools)": 1,
      "**DOMAIN 1: PERCEPTION & INPUT**": 1,
      "** - Analyze system and tool performance\n18. **": 1,
      "- **Documentation**:": 1,
      "**Intuitive Usage**: No need to remember scattered tool names": 1,
      "| \u2705 100% Preserved       |\n| Performance Analysis (3 tools)  |": 1,
      "**2. Massive Redundancy Elimination**": 1,
      "**\ud83d\ude80 Ready For**": 1,
      "Users can't directly access context analysis": 1,
      "get_function_call_history": 1,
      "cursor_auto_inject_context": 1,
      "test_llm_connection": 1,
      "get_cursor_context": 1,
      "No more tool overwriting": 1,
      "3. Cursor Integration": 1,
      "system_info": 1,
      "\ud83d\udcca Tool Count Summary": 1,
      "learn_from": 1,
      "Failing Plugins": 1,
      "**Main.py Tools**: 16 tools": 1,
      "list_plugins": 1,
      "cognitive_brain": 1,
      "memory_context": 1,
      "ContextAnalyzer is integrated but not visible as separate tool": 1,
      "Current Tools Analysis - Before Redesign": 1,
      "conversation_memory_integration": 1,
      "dream": 1,
      "Clear purpose for each tool": 1,
      "quick_memory_chat": 1,
      "Single, clean tool registration system": 1,
      "1. Tool Registration Problems": 1,
      "`cursor_integration` - Cursor integration tools": 1,
      "`system_info` - System information tools": 1,
      "\ud83d\udd0c Plugin Tools (Various - Some Failing)": 1,
      "server_status": 1,
      "`memory_context` - Memory context tools": 1,
      "No clear tool hierarchy for coding tasks": 1,
      "ai_chat_with_memory": 1,
      "remember": 1,
      "consciousness_check": 1,
      "**Expected Total**: 25+ tools": 1,
      "\ud83d\udee0\ufe0f Main.py Tools (16 tools)": 1,
      "Enhanced Cognitive Tools": 1,
      "**Plugin Tools**: Various (some failing)": 1,
      "Phase 3: Cursor Optimization": 1,
      "auto_memory": 1,
      "initialize_chat_session": 1,
      "`conversation_memory_integration` - Conversation memory (setup failed)": 1,
      "search_function_calls": 1,
      "recall": 1,
      "**Brain Interface Tools**: 9 tools": 1,
      "Brain interface tools might be overwriting main tools": 1,
      "Cursor Integration Tools": 1,
      "`file_operations` - File operation tools": 1,
      "Tools designed for coding workflows": 1,
      "Phase 1: Clean Tool Registration": 1,
      "think": 1,
      "get_comprehensive_system_status": 1,
      "file_operations": 1,
      "get_session_statistics": 1,
      "Power is hidden in enhanced tools": 1,
      "Working Plugins": 1,
      "Dedicated context analysis tools": 1,
      "ContextAnalyzer power visible everywhere": 1,
      "**Current Issue**: Only seeing 24 tools": 1,
      "Context Analysis Tool": 1,
      "brain_info": 1,
      "2. ContextAnalyzer Integration": 1,
      "memory_stats": 1,
      "Plugin failures reducing total tool count": 1,
      "reflect": 1,
      "Clear tool hierarchy": 1,
      "Standard Cognitive Tools": 1,
      "Tools not optimized for Cursor workflows": 1,
      "Core System Tools": 1,
      "track_cursor_conversation": 1,
      "list_available_models": 1,
      "Clear integration points": 1,
      "test_memory_system": 1,
      "`cognitive_brain` - Cognitive brain plugin (import errors)": 1,
      "Complex tool selection process": 1,
      "\ud83c\udfaf Redesign Goals": 1,
      "Phase 2: Visible ContextAnalyzer": 1,
      "Complex registration system causing conflicts": 1,
      "\ud83e\udde0 Brain Interface Tools (9 tools)": 1,
      "Memory & System Tools": 1,
      "\ud83d\udea8 Current Issues": 1,
      "cursor_integration": 1,
      "\ud83d\udcdd Next Steps": 1,
      "analyze_context_deeply": 1,
      "Better user experience": 1,
      "`auto_memory` - Auto memory tools": 1,
      "\ud83d\ude80 Enhanced Context System - Complete Implementation": 1,
      "Simple context enhancement": 1,
      "`_enhanced_context_retrieval_handler()`: Phase 1 implementation": 1,
      "### 4. Demonstration\n\nRun the demonstration script to see all features in action:": 1,
      "plugins/enhanced_workflow_orchestrator.py": 1,
      "`_orchestrate_tools_handler()`: Phase 2 implementation": 1,
      "Tool orchestration": 1,
      "Build comprehensive context": 1,
      "Conservative Mode": 1,
      "**Conversation History Analysis**: Retrieves recent conversation context": 1,
      "**Optimization Recommendations**: Provides actionable improvement suggestions": 1,
      "Enable learning for complex interactions": 1,
      "## \ud83d\udcca Performance Analytics & Quality Assessment\n\n### Purpose\n\nProvides comprehensive performance monitoring, quality assessment, and optimization recommendations for the enhanced context system.\n\n### Features\n\n- **Tool Performance Analysis**: Analyzes individual tool performance\n- **Context Quality Assessment**: Evaluates context completeness and relevance\n- **Performance Metrics**: Tracks efficiency, speed, and quality improvements\n- **Optimization Recommendations**: Provides actionable improvement suggestions\n\n### MCP Tools": 1,
      "Complete workflow execution": 1,
      "Continuous learning": 1,
      "**Deep**: In-depth analysis with performance trend analysis": 1,
      "`_batch_workflow_processing_handler()`: Batch processing": 1,
      "**Conservative**: Use for quick responses": 1,
      "Health check monitoring": 1,
      "`_build_comprehensive_context_handler()`: Comprehensive context building": 1,
      "Purpose": 1,
      "3. Performance Monitoring": 1,
      "**Context Improvement**: Identifies areas for context enhancement": 1,
      "bash\n# Continuous Learning Cycle\ncontinuous_learning_cycle(\n    interaction_data: dict,\n    learning_focus: str = \"context_patterns\"\n) -> dict": 1,
      "Enhanced Context Retrieval": 1,
      "python\n# Direct plugin usage\nfrom plugins.enhanced_context_integration import EnhancedContextIntegrationPlugin\n\nplugin = EnhancedContextIntegrationPlugin()\nplugin._setup()\n\nresult = await plugin._enhanced_context_retrieval_handler(\n    user_message=\"Analyze system performance\",\n    include_history=True,\n    include_preferences=True\n)": 1,
      "Health Checks": 1,
      "Assess Context Quality": 1,
      "Import and use enhanced context tools": 1,
      "python\n# Simple context enhancement\nresult = await enhanced_context_retrieval(\n    user_message=\"Help me with my project\",\n    include_history=True,\n    include_preferences=True\n)": 1,
      "Workflow Performance": 1,
      "Analyze Tool Performance": 1,
      ": Phase 1 implementation\n-": 1,
      ": Phase 2 implementation\n-": 1,
      "python\n# Execute complete workflow\nresult = await execute_enhanced_workflow(\n    user_message=\"Provide detailed analysis of our system\",\n    workflow_mode=\"aggressive\",\n    include_learning=True\n)": 1,
      ": Tool performance analysis\n-": 1,
      "`_analyze_tool_performance_handler()`: Tool performance analysis": 1,
      "\ud83d\udcda API Reference": 1,
      "Comprehensive Context Building": 1,
      "**Memory Consolidation**: Consolidates new information with existing memories": 1,
      "**Batch Processing**: Handles multiple messages efficiently": 1,
      "`enhanced_workflow_orchestrator.py`": 1,
      "**Health Monitoring**: Comprehensive system health checks": 1,
      "**Multi-Modal Context**: Support for images, audio, and video context": 1,
      "python\n# Import and use enhanced context tools\nfrom plugins.enhanced_context_integration import EnhancedContextIntegrationPlugin\n\nplugin = EnhancedContextIntegrationPlugin()\nplugin._setup()\n\n# Use any of the enhanced context tools\nresult = await plugin._enhanced_context_retrieval_handler(\"Your message\")": 1,
      "Automatic goal determination based on message content": 1,
      "Intensive learning and pattern recognition": 1,
      "Performance metrics": 1,
      "Health Check": 1,
      "## \ud83d\udcc8 Performance Metrics\n\n### Context Quality Scores\n\n- **Completeness**: How complete the context is (0.0 - 1.0)\n- **Relevance**: How relevant the context is to the request (0.0 - 1.0)\n- **Freshness**: How recent the context data is (0.0 - 1.0)\n- **Overall Score**: Weighted combination of all metrics\n\n### Workflow Performance\n\n- **Efficiency Score**: Success rate of workflow phases\n- **Speed Score**: Execution speed optimization\n- **Context Quality Improvement**: Measured improvement in context quality\n- **Overall Performance Score**: Combined performance metric\n\n## \ud83d\udd0d Monitoring & Debugging\n\n### Logging\n\nAll enhanced context operations include comprehensive logging:\n\n- Phase execution details\n- Performance metrics\n- Error tracking\n- Success/failure rates\n\n### Health Checks\n\nRegular health checks provide system status:\n\n- Component availability\n- Performance trends\n- Error patterns\n- Maintenance recommendations\n\n### Performance Analysis\n\nContinuous performance monitoring:\n\n- Workflow execution times\n- Tool usage patterns\n- Bottleneck identification\n- Optimization opportunities\n\n## \ud83c\udfaf Best Practices\n\n### 1. Workflow Mode Selection\n\n- **Standard**: Use for most interactions\n- **Aggressive**: Use for deep analysis requests\n- **Conservative**: Use for quick responses\n\n### 2. Learning Integration\n\n- Enable learning for complex interactions\n- Disable learning for batch processing\n- Monitor learning patterns for optimization\n\n### 3. Performance Monitoring\n\n- Regular performance analysis\n- Health check monitoring\n- Bottleneck identification\n- Continuous optimization\n\n### 4. Error Handling\n\n- Graceful degradation on failures\n- Comprehensive error logging\n- Automatic retry mechanisms\n- User-friendly error messages\n\n## \ud83d\ude80 Future Enhancements\n\n### Planned Features\n\n- **Real-time Context Streaming**: Continuous context updates\n- **Advanced Pattern Recognition**: Machine learning-based pattern detection\n- **Context Prediction**: Predictive context building\n- **Distributed Context Processing**: Multi-node context enhancement\n- **Advanced Analytics**: Deep learning-based performance optimization\n\n### Integration Opportunities\n\n- **External Data Sources**: Integration with external APIs and databases\n- **Multi-Modal Context**: Support for images, audio, and video context\n- **Collaborative Context**: Shared context across multiple users\n- **Context Versioning**: Version control for context data\n\n## \ud83d\udcda API Reference\n\n### Enhanced Context Integration Plugin\n\n-": 1,
      "**Context Analysis**: Analyzes context to determine tool needs": 1,
      "Error patterns": 1,
      "**Collaborative Context**: Shared context across multiple users": 1,
      "**Aggressive**: Use for deep analysis requests": 1,
      "`_assess_context_quality_handler()`: Context quality assessment": 1,
      ": Phase 3 implementation\n-": 1,
      "### Complete Workflow Execution": 1,
      "## \ud83c\udfd7\ufe0f Comprehensive Context Building\n\n### Purpose\n\nBuilds comprehensive context using all available tools and data, providing the highest level of context awareness and quality.\n\n### Features\n\n- **Multi-Phase Integration**: Combines all three phases for maximum context\n- **Quality Scoring**: Provides overall context quality scores\n- **Context Caching**: Caches comprehensive context for reuse\n- **Depth Control**: Configurable context depth (basic, enhanced, comprehensive)\n\n### Implementation": 1,
      ": Comprehensive context building\n-": 1,
      "\ud83c\udfaf System Architecture": 1,
      "\ud83c\udfaf Best Practices": 1,
      "**Relevance**: How relevant the context is to the request (0.0 - 1.0)": 1,
      "**Tool Coordination**: Coordinates tool usage for maximum effectiveness": 1,
      "4. Demonstration": 1,
      "\ud83d\ude80 Future Enhancements": 1,
      "**Basic**: Essential component status checks": 1,
      "Maximum context enhancement and tool usage": 1,
      "## \ud83d\udcda Phase 3: Continuous Learning\n\n### Purpose\n\nImplements continuous learning and context improvement, extracting patterns, identifying improvements, and consolidating memories for future enhancement.\n\n### Features\n\n- **Pattern Recognition**: Identifies learning patterns from interactions\n- **Context Improvement**: Identifies areas for context enhancement\n- **Memory Consolidation**: Consolidates new information with existing memories\n- **Quality Metrics Update**: Updates context quality metrics based on learning\n- **Learning Storage**: Stores learning results for future reference\n\n### Implementation": 1,
      "### Comprehensive Context Building": 1,
      "**Learning Storage**: Stores learning results for future reference": 1,
      "**Maintenance Recommendations**: Provides actionable maintenance advice": 1,
      "**Overall Score**: Weighted combination of all metrics": 1,
      "Direct plugin usage": 1,
      "Overview": 1,
      "**Pattern Recognition**: Identifies learning patterns from interactions": 1,
      "Bottleneck identification": 1,
      "Aggressive Mode": 1,
      "Minimal context enhancement for speed": 1,
      "## \ud83d\udd27 Workflow Modes\n\n### Standard Mode\n\n- Balanced approach between speed and context quality\n- Automatic goal determination based on message content\n- Standard learning and optimization\n\n### Aggressive Mode\n\n- Maximum context enhancement and tool usage\n- Prioritizes comprehensive context over speed\n- Intensive learning and pattern recognition\n\n### Conservative Mode\n\n- Minimal context enhancement for speed\n- Reduced tool usage and learning\n- Focus on essential context only\n\n## \ud83d\udce6 Batch Processing\n\n### Purpose\n\nProcesses multiple messages through the enhanced workflow efficiently, providing bulk context enhancement capabilities.\n\n### Features\n\n- **Efficient Processing**: Optimized for handling multiple requests\n- **Performance Metrics**: Batch-level performance tracking\n- **Error Handling**: Graceful handling of individual message failures\n- **Scalability**: Designed for high-volume processing\n\n### Implementation": 1,
      "**User Preferences Integration**: Incorporates stored user preferences and settings": 1,
      "**Error Handling**: Graceful handling of individual message failures": 1,
      "**Brain System Context**: Leverages brain functions and cognitive capabilities": 1,
      "**Context Quality Metrics**: Real-time assessment of context completeness and relevance": 1,
      "### Batch Processing": 1,
      "Features": 1,
      "3. Basic Usage": 1,
      "## \ud83d\ude80 Complete Workflow Orchestration\n\n### Purpose\n\nAutomatically executes all three phases in sequence, providing a unified interface for comprehensive context enhancement with performance monitoring and optimization.\n\n### Features\n\n- **Automatic Phase Execution**: Runs all phases automatically in sequence\n- **Performance Monitoring**: Tracks execution time and success rates\n- **Workflow Optimization**: Identifies and implements improvements\n- **Batch Processing**: Handles multiple messages efficiently\n- **Health Monitoring**: Comprehensive system health checks\n\n### Implementation": 1,
      "**Context Prediction**: Predictive context building": 1,
      "**Freshness**: How recent the context data is (0.0 - 1.0)": 1,
      "**External Data Sources**: Integration with external APIs and databases": 1,
      "Core Components": 1,
      ": Workflow optimization\n-": 1,
      "Focus on essential context only": 1,
      "Health Levels": 1,
      "**Execution Planning**: Creates prioritized execution plans": 1,
      "**Context Quality Improvement**: Measured improvement in context quality": 1,
      "Batch processing": 1,
      "python\n# Comprehensive context building\nresult = await plugin._build_comprehensive_context_handler(\n    user_message=\"Analyze system performance\",\n    context_depth=\"comprehensive\"\n)": 1,
      "**Completeness**: How complete the context is (0.0 - 1.0)": 1,
      "Context Quality Scores": 1,
      "python\n# Build comprehensive context\nresult = await build_comprehensive_context(\n    user_message=\"Analyze system performance comprehensively\",\n    context_depth=\"comprehensive\"\n)": 1,
      "\ud83d\ude80 Complete Workflow Orchestration": 1,
      "Execute complete workflow": 1,
      "`enhanced_context_integration.py`": 1,
      "**Workflow Optimization**: Identifies and implements improvements": 1,
      "Standard Mode": 1,
      "**Real-time Context Streaming**: Continuous context updates": 1,
      "**Advanced Analytics**: Deep learning-based performance optimization": 1,
      "**Performance Degradation Detection**: Identifies performance issues": 1,
      "Continuous optimization": 1,
      "python\n# Process multiple messages\nmessages = [\n    \"Analyze performance\",\n    \"Check security\",\n    \"Review logs\"\n]\n\nresult = await batch_workflow_processing(\n    user_messages=messages,\n    workflow_mode=\"standard\"\n)": 1,
      ": Batch processing\n-": 1,
      "**Multi-Phase Integration**: Combines all three phases for maximum context": 1,
      "**Standard**: Use for most interactions": 1,
      "MCP Tools": 1,
      "**Overall Performance Score**: Combined performance metric": 1,
      "**Tool Performance Analysis**: Analyzes individual tool performance": 1,
      "Continuous Learning Cycle": 1,
      "bash\n# Tool Orchestration\norchestrate_tools(\n    context_data: dict,\n    target_goal: str = \"enhanced_response\"\n) -> dict": 1,
      "python\n# Batch processing\nmessages = [\n    \"Analyze system performance\",\n    \"Check memory usage\",\n    \"Review error logs\"\n]\n\nresult = await orchestrator._batch_workflow_processing_handler(\n    messages,\n    workflow_mode=\"standard\"\n)": 1,
      ": Performance analysis\n-": 1,
      "Error tracking": 1,
      "Workflow execution times": 1,
      "`_continuous_learning_handler()`: Phase 3 implementation": 1,
      "Reduced tool usage and learning": 1,
      "2. Learning Integration": 1,
      "Tool usage patterns": 1,
      "bash\n# Execute Complete Enhanced Workflow\nexecute_enhanced_workflow(\n    user_message: str,\n    workflow_mode: str = \"standard\",\n    include_learning: bool = True\n) -> dict\n\n# Workflow Optimization\noptimize_workflow(\n    optimization_focus: str = \"performance\",\n    target_metrics: list = [\"speed\", \"accuracy\", \"context_quality\"]\n) -> dict\n\n# Performance Analysis\nanalyze_workflow_performance(\n    timeframe: str = \"session\",\n    include_recommendations: bool = True\n) -> dict\n\n# Batch Processing\nbatch_workflow_processing(\n    user_messages: list,\n    workflow_mode: str = \"standard\"\n) -> dict\n\n# Health Check\nworkflow_health_check(\n    check_level: str = \"comprehensive\"\n) -> dict": 1,
      "Comprehensive error logging": 1,
      "**Comprehensive**: Detailed health analysis with recommendations": 1,
      "`_execute_enhanced_workflow_handler()`: Complete workflow execution": 1,
      "## \ud83c\udfe5 Health Monitoring\n\n### Purpose\n\nProvides comprehensive health monitoring and maintenance recommendations for the enhanced context system.\n\n### Features\n\n- **Component Health Checks**: Monitors all system components\n- **Performance Degradation Detection**: Identifies performance issues\n- **Error Pattern Analysis**: Recognizes recurring error patterns\n- **Maintenance Recommendations**: Provides actionable maintenance advice\n\n### Health Levels\n\n- **Basic**: Essential component status checks\n- **Comprehensive**: Detailed health analysis with recommendations\n- **Deep**: In-depth analysis with performance trend analysis\n\n## \ud83c\udfaf Usage Examples\n\n### Basic Context Enhancement": 1,
      "Workflow Optimization": 1,
      "\ud83d\udcda Phase 3: Continuous Learning": 1,
      "\ud83d\udcc8 Performance Metrics": 1,
      "**Performance Metrics**: Tracks efficiency, speed, and quality improvements": 1,
      "\ud83d\udcca Performance Analytics & Quality Assessment": 1,
      "**Scalability**: Designed for high-volume processing": 1,
      "Planned Features": 1,
      "Implementation": 1,
      "**Efficiency Score**: Success rate of workflow phases": 1,
      "main.py": 1,
      "**Quality Scoring**: Provides overall context quality scores": 1,
      "**Quality Metrics Update**: Updates context quality metrics based on learning": 1,
      "Success/failure rates": 1,
      "\ud83d\udd27 Workflow Modes": 1,
      "4. Error Handling": 1,
      "Basic Context Enhancement": 1,
      "Optimization opportunities": 1,
      "Maintenance recommendations": 1,
      "python\n# Tool orchestration\nresult = await plugin._orchestrate_tools_handler(\n    context_data=phase1_result[\"context_data\"],\n    target_goal=\"comprehensive_context_enhancement\"\n)": 1,
      "**Intelligent Tool Selection**: Selects tools based on context and goals": 1,
      "Execute Complete Enhanced Workflow": 1,
      "python\n# Complete workflow execution\nfrom plugins.enhanced_workflow_orchestrator import EnhancedWorkflowOrchestratorPlugin\n\norchestrator = EnhancedWorkflowOrchestratorPlugin()\norchestrator._setup()\n\nresult = await orchestrator._execute_enhanced_workflow_handler(\n    user_message=\"Analyze system performance\",\n    workflow_mode=\"standard\",\n    include_learning=True\n)": 1,
      "**Component Health Checks**: Monitors all system components": 1,
      "\ud83d\udce6 Batch Processing": 1,
      "\ud83d\udd0d Monitoring & Debugging": 1,
      "**Speed Score**: Execution speed optimization": 1,
      "`_optimize_workflow_handler()`: Workflow optimization": 1,
      "directory:\n\n-": 1,
      "python\n# Continuous learning\ninteraction_data = {\n    \"context_data\": phase1_result[\"context_data\"],\n    \"orchestration_result\": phase2_result[\"orchestration_result\"]\n}\n\nresult = await plugin._continuous_learning_handler(\n    interaction_data,\n    learning_focus=\"context_patterns\"\n)": 1,
      "\ud83c\udfe5 Health Monitoring": 1,
      "**Performance Metrics**: Batch-level performance tracking": 1,
      "Integration Opportunities": 1,
      "2. MCP Server Integration": 1,
      "Disable learning for batch processing": 1,
      ": Complete workflow execution\n-": 1,
      "`_analyze_workflow_performance_handler()`: Performance analysis": 1,
      "Logging": 1,
      "`_workflow_health_check_handler()`: Health monitoring": 1,
      "Monitor learning patterns for optimization": 1,
      "**Advanced Pattern Recognition**: Machine learning-based pattern detection": 1,
      "bash\n# Build Comprehensive Context\nbuild_comprehensive_context(\n    user_message: str,\n    context_depth: str = \"comprehensive\"\n) -> dict": 1,
      "**Automatic Phase Execution**: Runs all phases automatically in sequence": 1,
      "**Error Pattern Analysis**: Recognizes recurring error patterns": 1,
      "\ud83c\udfd7\ufe0f Comprehensive Context Building": 1,
      "Enhanced Context Integration Plugin": 1,
      "### MCP Tools": 1,
      "Use any of the enhanced context tools": 1,
      "### MCP Tool": 1,
      "Performance trends": 1,
      "## \ud83d\ude80 Getting Started\n\n### 1. Installation\n\nEnsure all required plugins are in the": 1,
      "bash\npython demo_enhanced_context_system.py": 1,
      ": Context quality assessment\n\n### Enhanced Workflow Orchestrator Plugin\n\n-": 1,
      "Phase execution details": 1,
      "Standard learning and optimization": 1,
      "**Performance Monitoring**: Tracks execution time and success rates": 1,
      "**Performance Tracking**: Monitors tool usage and effectiveness": 1,
      "plugins/enhanced_context_integration.py": 1,
      "\ud83c\udfaf Phase 2: Tool Orchestration": 1,
      "Enhanced Workflow Orchestrator Plugin": 1,
      "Automatic retry mechanisms": 1,
      "MCP Tool": 1,
      "1. Installation": 1,
      "Balanced approach between speed and context quality": 1,
      "Component availability": 1,
      "Process multiple messages": 1,
      "**Context Versioning**: Version control for context data": 1,
      "1. Workflow Mode Selection": 1,
      "bash\n# Enhanced Context Retrieval\nenhanced_context_retrieval(\n    user_message: str,\n    include_history: bool = True,\n    include_preferences: bool = True\n) -> dict": 1,
      "**Efficient Processing**: Optimized for handling multiple requests": 1,
      "**Context Caching**: Caches comprehensive context for reuse": 1,
      "Graceful degradation on failures": 1,
      "\ud83c\udfaf Usage Examples": 1,
      "**Depth Control**: Configurable context depth (basic, enhanced, comprehensive)": 1,
      "Regular performance analysis": 1,
      "Prioritizes comprehensive context over speed": 1,
      "User-friendly error messages": 1,
      "**Distributed Context Processing**: Multi-node context enhancement": 1,
      "\ud83d\ude80 Getting Started": 1,
      "**Context Quality Assessment**: Evaluates context completeness and relevance": 1,
      "\ud83d\udd0d Phase 1: Enhanced Context Retrieval": 1,
      "## \ud83c\udfaf Phase 2: Tool Orchestration\n\n### Purpose\n\nImplements intelligent tool orchestration based on context analysis, selecting appropriate tools and creating execution plans for optimal context enhancement.\n\n### Features\n\n- **Context Analysis**: Analyzes context to determine tool needs\n- **Intelligent Tool Selection**: Selects tools based on context and goals\n- **Execution Planning**: Creates prioritized execution plans\n- **Tool Coordination**: Coordinates tool usage for maximum effectiveness\n- **Performance Tracking**: Monitors tool usage and effectiveness\n\n### Implementation": 1,
      "### 2. MCP Server Integration\n\nThe enhanced context tools are automatically available in the main MCP server. No additional configuration required.\n\n### 3. Basic Usage": 1,
      "\ud83c\udf89 Conclusion": 1,
      "Performance Analysis": 1,
      "bash\n# Analyze Tool Performance\nanalyze_tool_performance(\n    tool_name: str = \"all\",\n    timeframe: str = \"session\"\n) -> dict\n\n# Assess Context Quality\nassess_context_quality(\n    context_data: dict,\n    assessment_criteria: list = [\"completeness\", \"relevance\", \"freshness\"]\n) -> dict": 1,
      "**Pre-response Memory Search**: Automatically searches for relevant memories before responding": 1,
      "plugins/\n\u251c\u2500\u2500 cognitive_brain_restructured.py          # \u2705 Main restructured plugin\n\u251c\u2500\u2500 enhanced_context_integration.py         # \u2705 Enhanced context plugin\n\u251c\u2500\u2500 enhanced_workflow_orchestrator.py       # \u2705 Workflow orchestrator plugin\n\u251c\u2500\u2500 auto_memory.py                         # \u2705 Auto memory plugin\n\u2514\u2500\u2500 ... (other existing plugins)": 1,
      "Monitor overall system": 1,
      "python\n# Execute workflows\nworkflow = await plugin._execute_enhanced_workflow_handler(\"message\", \"standard\", True)\n\n# Batch processing\nbatch = await plugin._batch_workflow_processing_handler([\"msg1\", \"msg2\"], \"standard\")\n\n# AI chat with memory\nchat = await plugin._ai_chat_with_memory_handler(\"user message\", \"assistant\")": 1,
      "\ud83d\udd27 **Integration with MCP Server**": 1,
      "\ud83c\udfaf **Overview**": 1,
      "**Workflow Health**": 1,
      "**Option 1: Add to Main MCP Server**": 1,
      "Provide training and documentation": 1,
      "python\n# Import the restructured plugin\nfrom plugins.cognitive_brain_restructured import CognitiveBrainRestructuredPlugin\n\n# Initialize in your server setup\nrestructured_plugin = CognitiveBrainRestructuredPlugin()\nrestructured_plugin._setup()\n\n# Add tools to your MCP server\nfor tool in restructured_plugin.get_tools():\n    # Register each tool with your MCP server\n    # This depends on your MCP implementation\n    pass": 1,
      "Test individual domains": 1,
      "Gather user feedback": 1,
      "Encourage users to try new cognitive domain tools": 1,
      "`INTEGRATION_GUIDE.md` - This integration guide": 1,
      "python\n# Check workflow health\nhealth = await plugin._workflow_health_check_handler(\"comprehensive\")\nprint(f\"Workflow Health: {health['health_result']['overall_health']}\")": 1,
      "Check workflow health": 1,
      "bash\n# Check Python path\npython -c \"import sys; print('\\n'.join(sys.path))\"\n\n# Check plugin directory\nls -la plugins/\n\n# Test individual imports\npython -c \"from plugins.enhanced_context_integration import EnhancedContextIntegrationPlugin; print('\u2705 Enhanced context plugin imported')\"": 1,
      "### **Domain 4: LEARNING & ADAPTATION**": 1,
      "Analyze content": 1,
      "**Main Plugin**": 1,
      "bash\npython demo_restructured_cognitive_system.py": 1,
      "`RESTRUCTURED_COGNITIVE_SYSTEM.md` - Comprehensive system documentation": 1,
      "**Import Errors**": 1,
      "`COGNITIVE_RESTRUCTURING_SUMMARY.md` - Executive summary": 1,
      "python\n# Deep thinking\nthoughts = await plugin._think_deeply_handler(\"what to think about\", \"context\")\n\n# Tool orchestration\norchestration = await plugin._orchestrate_tools_handler(context_data, \"goal\")\n\n# Build comprehensive context\ncomprehensive = await plugin._build_comprehensive_context_handler(\"message\", \"comprehensive\")": 1,
      "**Support**": 1,
      "**3. Monitor and Optimize**": 1,
      "python\n# Check plugin status\nplugin = CognitiveBrainRestructuredPlugin()\nplugin._setup()\n\n# List available tools\ntools = plugin.get_tools()\nfor tool in tools:\n    print(f\"\ud83d\udd27 {tool.name}: {tool.description}\")": 1,
      "**Functionality Issues**": 1,
      "Test with a subset of users first": 1,
      "Analyze performance": 1,
      "Ensure all dependencies are available": 1,
      "Monitor performance and user adoption": 1,
      "Check plugin status": 1,
      "**Phase 3: Full Migration**": 1,
      "Add tools to your MCP server": 1,
      "**2. Test the Restructured System**": 1,
      "bash\n# Run comprehensive tests\npython demo_restructured_cognitive_system.py\n\n# Test individual domains\npython -c \"\nfrom plugins.cognitive_brain_restructured import CognitiveBrainRestructuredPlugin\nplugin = CognitiveBrainRestructuredPlugin()\nplugin._setup()\n# Test each domain...\n\"": 1,
      "Mark old tools as deprecated": 1,
      "**1. Verify File Structure**": 1,
      "Run comprehensive tests": 1,
      "---\n\n## \ud83d\udd27 **Integration with MCP Server**\n\n### **Option 1: Add to Main MCP Server**\n\nAdd the restructured plugin to your": 1,
      "\ud83d\ude80 **Quick Start**": 1,
      "**Option 2: Use as Standalone Plugin**": 1,
      "\ud83d\udd0d **Troubleshooting**": 1,
      "\ud83d\udcca **Performance Monitoring**": 1,
      "Add to sys.path in your script": 1,
      "python\n# Self-monitoring\nmonitor = await plugin._self_monitor_handler(\"comprehensive\", \"all\")\n\n# Performance analysis\nperformance = await plugin._analyze_performance_handler(\"comprehensive\", \"all\")\n\n# Health checks\nhealth = await plugin._workflow_health_check_handler(\"comprehensive\")": 1,
      "Unified memory operations": 1,
      "### **Domain 3: PROCESSING & THINKING**": 1,
      "**3. Run the Demonstration**": 1,
      "Get enhanced context": 1,
      "Human brain-focused organization": 1,
      "python\n# Analyze content\nresult = await plugin._perceive_and_analyze_handler(\"content to analyze\", \"comprehensive\")\n\n# Get enhanced context\ncontext = await plugin._enhanced_context_retrieval_handler(\"user message\", include_history=True)\n\n# Get Cursor context\ncursor_context = await plugin._get_cursor_context_handler()": 1,
      "Optimize workflows": 1,
      "python\n# Unified memory operations\nawait plugin._memory_operations_handler(\"store\", \"important fact\")\ndata = await plugin._memory_operations_handler(\"retrieve\", \"\", \"query\")\nsearch = await plugin._memory_operations_handler(\"search\", \"\", \"search term\")\nawait plugin._memory_operations_handler(\"clear\", \"\", \"\")\n\n# Auto-process messages\nawait plugin._auto_process_message_handler(\"user message\")\n\n# Track conversations\nawait plugin._track_conversation_handler(\"user msg\", \"assistant response\", \"coding\")": 1,
      "Test individual imports": 1,
      "Test the restructured plugin": 1,
      "\ud83d\ude80 **Production Deployment**": 1,
      "\ud83c\udfaf **Migration Strategy**": 1,
      "### **Option 2: Use as Standalone Plugin**\n\nThe restructured plugin can work independently:": 1,
      "### **Domain 6: SELF-MONITORING**": 1,
      "Use the self-monitoring tools to track system health": 1,
      "### **2. Deploy to Production**\n\n- Copy the restructured plugin to your production environment\n- Ensure all dependencies are available\n- Test with a subset of users first\n- Monitor performance and user adoption\n\n### **3. Monitor and Optimize**\n\n- Use the self-monitoring tools to track system health\n- Analyze performance patterns\n- Optimize based on usage data\n- Gather user feedback\n\n---\n\n## \ud83c\udfaf **Migration Strategy**\n\n### **Phase 1: Parallel Operation**\n\n- Deploy restructured plugin alongside existing tools\n- Users can use either interface\n- Monitor usage patterns\n\n### **Phase 2: Gradual Migration**\n\n- Encourage users to try new cognitive domain tools\n- Provide training and documentation\n- Mark old tools as deprecated\n\n### **Phase 3: Full Migration**\n\n- Switch to cognitive domain interface as primary\n- Maintain backward compatibility for critical functions\n- Remove deprecated tools\n\n---\n\n## \ud83d\udd17 **Quick Reference**\n\n### **Main Plugin**": 1,
      "Switch to cognitive domain interface as primary": 1,
      "**Phase 2: Gradual Migration**": 1,
      "Import the restructured plugin": 1,
      "**Plugin Not Found**": 1,
      "\ud83e\udde0 **Using the Cognitive Domains**": 1,
      "\ud83d\udd27 **Integration Guide - Restructured Cognitive System**": 1,
      "All 18 tools are fully functional": 1,
      "**Test Command**": 1,
      "python\n# Unified learning\nawait plugin._learn_and_adapt_handler(\"learn\", \"new information\", \"focus\")\nawait plugin._learn_and_adapt_handler(\"reflect\", \"\", \"area\")\nawait plugin._learn_and_adapt_handler(\"dream\", \"\", \"\")\nawait plugin._learn_and_adapt_handler(\"remember\", \"important fact\", \"category\")\n\n# Continuous learning\nlearning = await plugin._continuous_learning_cycle_handler(interaction_data, \"focus\")\n\n# Optimize workflows\noptimization = await plugin._optimize_workflow_handler(\"performance\", [\"speed\", \"accuracy\"])": 1,
      "### **Workflow Health**": 1,
      "Optimize based on usage data": 1,
      "**2. Deploy to Production**": 1,
      "Natural cognitive workflow progression": 1,
      "Deep thinking": 1,
      "Auto-process messages": 1,
      "python\nfrom plugins.cognitive_brain_restructured import CognitiveBrainRestructuredPlugin": 1,
      "---\n\n## \ud83d\udcca **Performance Monitoring**\n\n### **Check System Status**": 1,
      "python\nfrom plugins.cognitive_brain_restructured import CognitiveBrainRestructuredPlugin\n\n# Initialize\nplugin = CognitiveBrainRestructuredPlugin()\nplugin._setup()\n\n# Use any tool\nresult = await plugin._memory_operations_handler(\"store\", \"Test memory\")": 1,
      "Deploy restructured plugin alongside existing tools": 1,
      "List available tools": 1,
      "**Phase 1: Parallel Operation**": 1,
      "### **Documentation**\n\n-": 1,
      "python\n# Monitor overall system\nstatus = await plugin._self_monitor_handler(\"comprehensive\", \"all\")\nprint(f\"System Status: {status['monitoring_result']['overall_health']}\")\n\n# Analyze performance\nperformance = await plugin._analyze_performance_handler(\"comprehensive\", \"all\")\nprint(f\"Performance Score: {performance['analysis_result']['performance_metrics']['overall_score']}\")": 1,
      "Analyze performance patterns": 1,
      "Initialize in your server setup": 1,
      "Test each domain...": 1,
      "Run the complete demonstration": 1,
      "Users can use either interface": 1,
      "Unified learning": 1,
      "### **Functionality Issues**\n\nIf some tools don't work:": 1,
      "- Comprehensive system documentation\n-": 1,
      "---\n\n## \ud83d\udd0d **Troubleshooting**\n\n### **Import Errors**\n\nIf you get import errors:": 1,
      "**Check System Status**": 1,
      "Monitor usage patterns": 1,
      "Use any tool": 1,
      "**1. Test in Development**": 1,
      "Self-monitoring": 1,
      "Execute workflows": 1,
      "Check plugin directory": 1,
      "bash\n# Run the complete demonstration\npython demo_restructured_cognitive_system.py": 1,
      "### **Domain 2: MEMORY & STORAGE**": 1,
      "---\n\n## \ud83d\ude80 **Production Deployment**\n\n### **1. Test in Development**": 1,
      "AI chat with memory": 1,
      "### **Plugin Not Found**\n\nIf plugins aren't found:": 1,
      "python\n# Add to sys.path in your script\nimport sys\nfrom pathlib import Path\nsys.path.insert(0, str(Path(__file__).parent / \"plugins\"))\nsys.path.insert(0, str(Path(__file__).parent))": 1,
      "Copy the restructured plugin to your production environment": 1,
      "Get Cursor context": 1,
      "Check Python path": 1,
      "### **Domain 5: OUTPUT & ACTION**": 1,
      "Initialize": 1,
      "### **Test Command**": 1,
      "- Executive summary\n-": 1,
      "**Documentation**": 1,
      "bash\n# Test the restructured plugin\npython -c \"\nimport sys; sys.path.insert(0, '.')\nfrom plugins.cognitive_brain_restructured import CognitiveBrainRestructuredPlugin\nplugin = CognitiveBrainRestructuredPlugin()\nplugin._setup()\ntools = plugin.get_tools()\nprint(f'\u2705 Ready! {len(tools)} tools in 6 cognitive domains')\n\"": 1,
      "Maintain backward compatibility for critical functions": 1,
      "100% functionality preservation": 1,
      "Remove deprecated tools": 1,
      "Track conversations": 1,
      "### **2. Test the Restructured System**": 1,
      "### **3. Run the Demonstration**": 1,
      "---\n\n## \ud83e\udde0 **Using the Cognitive Domains**\n\n### **Domain 1: PERCEPTION & INPUT**": 1,
      "\ud83d\udcc1 src/": 1,
      "\ud83d\udcc4 CLEANUP_SUMMARY.md": 1,
      "\ud83d\udcc4 README.md": 1,
      "\ud83d\udcc4 llm_client.py": 1,
      "Project Maintenance Report": 1,
      "\ud83d\udcc4 Dockerfile": 1,
      "\ud83d\udcc1 tests/": 1,
      "Directory structure verified": 1,
      "\ud83d\udcc1 brain_memory_store/": 1,
      "\ud83d\udcc4 brain_interface.py": 1,
      "\ud83d\udcc4 setup_shared.sh": 1,
      "Maintenance Actions": 1,
      "\ud83d\udcc4 mcp-server-config-shareable.json": 1,
      "Docker configuration reviewed": 1,
      "\ud83d\udcc4 function_call_logger.py": 1,
      "\ud83d\udcc4 docker-compose.yml": 1,
      "\ud83d\udcc4 setup_shared.bat": 1,
      "Python cache files checked and cleaned": 1,
      "\ud83d\udcc4 main.py": 1,
      "\ud83d\udcc1 plugins/": 1,
      "Directory Structure": 1,
      "\ud83d\udcc1 docs/": 1,
      "\ud83d\udcc1 config/": 1,
      "\ud83d\udcc4 pyproject.toml": 1,
      "Recommendations": 1,
      "\ud83d\udcc4 PROJECT_ORGANIZATION.md": 1,
      "\ud83d\udcc4 healthcheck.py": 1,
      "Documentation organization checked": 1,
      "\ud83d\udcc4 uv.lock": 1,
      "\ud83d\udcc1 database/": 1,
      "\ud83d\udcc1 scripts/": 1,
      "self_monitoring(action='assess_scan_accuracy')": 1,
      "**`FileMetadata`**: Complete file information with type, language, framework, purpose": 1,
      "**Purpose Classification**: Automatic categorization by file purpose and location": 1,
      "**Accuracy & Coverage**": 1,
      "\ud83d\ude80 **Scan Speed**: 2,691+ files/second (target: 100 files/second)": 1,
      "\u2705 **MCP integration** ready for action-based routing": 1,
      "**Output**: Actionable insights and recommendations": 1,
      "**Scan Speed**: 2,691+ files/second (our project: 100 files in 0.04s)": 1,
      "**\ud83e\udde0 PERCEPTION & INPUT Domain**": 1,
      "memory_and_storage(action='store_project_context')": 1,
      "`output_and_action(action='suggest_improvements')` \u2192 Improvement recommendations": 1,
      "**Code Organization Analysis**: Understands project layout and organization": 1,
      "**Processing**: Intelligent analysis and pattern recognition": 1,
      "**Language and framework detection** across 20+ programming languages": 1,
      "\ud83c\udfaf **INTEGRATION WITH MCP SYSTEM**": 1,
      "**Memory Efficiency**: 493.9 characters per file indexed": 1,
      "\u2705 **Memory Usage**: < 100MB (achieved: ~50KB for 100 files)": 1,
      "\u2705 **Dependency Detection**: 95%+ accuracy (achieved: 100% for supported formats)": 1,
      "**1. Project Scanner (`project_scanner.py`)**": 1,
      "**Continuous Learning**: Adapts to your project's evolution over time": 1,
      "**2. Data Models & Structures**": 1,
      "**\ud83e\udde0 SELF-MONITORING Domain**": 1,
      "**`DirectoryInfo`**: Directory structure with file counts, languages, and frameworks": 1,
      "perceive_and_analyze(action='pattern_recognition')": 1,
      "**`ProjectIndex`**: Complete project snapshot with patterns, context, and history": 1,
      "**Semantic understanding** of your code and documentation": 1,
      "**Proactive context injection** based on deep project knowledge": 1,
      "`perceive_and_analyze(action='dependency_analysis')` \u2192 Dependency insights": 1,
      "project_scanner.py": 1,
      "DependencyInfo": 1,
      "**\u2705 What We've Built**": 1,
      "output_and_action(action='provide_context')": 1,
      "`memory_and_storage(action='store_project_context')` \u2192 Save project context": 1,
      "`self_monitoring(action='assess_scan_accuracy')` \u2192 Accuracy evaluation": 1,
      "**File Coverage**: 100% of relevant files indexed": 1,
      "**Anticipates your needs** - provides context and assistance proactively": 1,
      "**Context Enhancement**": 1,
      "**Phase 1: COMPLETE \u2705**": 1,
      "**Speed & Efficiency**": 1,
      "**Human Brain-Inspired Design**": 1,
      "**Perception**: Comprehensive project scanning and analysis": 1,
      "**All Phase 1 Targets Met**": 1,
      "\ud83c\udfaf **PHASE 1 COMPLETION SUMMARY - PROJECT INTELLIGENCE LAYER**": 1,
      "`processing_and_thinking(action='identify_improvements')` \u2192 Improvement suggestions": 1,
      "**Learns and grows** - continuously improves based on your feedback": 1,
      "`self_monitoring(action='monitor_index_quality')` \u2192 Quality assessment": 1,
      "**Frameworks Found**: pytest (8 files), FastAPI (3 files), Django (1 file)": 1,
      "**Total Files**: 100 files successfully indexed": 1,
      "**Learning**: Continuous adaptation and improvement": 1,
      "**Extensible Architecture**: Easy to add new language and framework support": 1,
      "**Smart File Filtering**: Automatically skips build artifacts, cache, and temporary files": 1,
      "**Ready for the Next Phase**": 1,
      "\u2705 **Project Scanning**: < 5 seconds (achieved: 0.04s)": 1,
      "**Comprehensive file system scanning** with intelligent filtering": 1,
      "`memory_and_storage(action='update_project_index')` \u2192 Update project index": 1,
      "**Proactive Assistance**: Provides context before you ask for it": 1,
      "\ud83d\udd2e **READY FOR PHASE 2**": 1,
      "\ud83c\udf1f **VISION REALIZED**": 1,
      "`learning_and_adaptation(action='evolve_understanding')` \u2192 Continuous learning": 1,
      "**Dependency parsing** for multiple package managers (npm, pip, cargo, go)": 1,
      "processing_and_thinking(action='identify_improvements')": 1,
      "\ud83d\ude80 **Language Support**: 20+ languages (target: 10 languages)": 1,
      "**The Future is Bright**": 1,
      "**Multiple Export Formats**: JSON (detailed), Summary (human-readable)": 1,
      "**Total Index Size**: 49,391 characters for 100 files": 1,
      "\ud83d\ude80 **Integration Ready**: Full MCP tool integration (target: basic integration)": 1,
      "output_and_action(action='suggest_improvements')": 1,
      "**Knowledge graphs** connecting concepts and patterns": 1,
      "**3. Intelligent Detection Systems**": 1,
      "**Technology Stack Mapping**: Comprehensive stack identification": 1,
      "**Contextual memory** for intelligent assistance": 1,
      "`output_and_action(action='provide_context')` \u2192 Context injection": 1,
      "**MCP Tool Integration**: Ready for integration with our 6 consolidated tools": 1,
      "perceive_and_analyze(action='dependency_analysis')": 1,
      "`output_and_action(action='generate_project_report')` \u2192 Project reports": 1,
      "\u2705 **Dependency mapping** across multiple package managers": 1,
      "**Development Environment Detection**: IDE files, editor configs, and tooling": 1,
      "\ud83d\ude80 **MISSION ACCOMPLISHED: Phase 1 Complete!**": 1,
      "memory_and_storage(action='retrieve_project_info')": 1,
      "**Remembers your projects** - has deep contextual knowledge of your work": 1,
      "**Change detection** with file hash tracking for incremental updates": 1,
      "**\ud83e\udde0 OUTPUT & ACTION Domain**": 1,
      "**Project Analysis Results**": 1,
      "`learning_and_adaptation(action='learn_from_project_structure')` \u2192 Structure learning": 1,
      "**Language Detection**: 95%+ accuracy across multiple languages": 1,
      "**Next Phase Goals**": 1,
      "processing_and_thinking(action='analyze_code_patterns')": 1,
      "\u2705 **Complete project understanding** through comprehensive scanning": 1,
      "**File Type Detection**: 15+ file categories (source, config, docs, etc.)": 1,
      "**Ready for Action-Based Routing**": 1,
      "\ud83d\ude80 **WHAT THIS ENABLES**": 1,
      "**Cross-platform Compatibility**: Works on macOS, Linux, and Windows": 1,
      "`memory_and_storage(action='retrieve_project_info')` \u2192 Get project information": 1,
      "`perceive_and_analyze(action='pattern_recognition')` \u2192 Code pattern analysis": 1,
      "\u2705 **Intelligent pattern recognition** for code and architecture": 1,
      "**Language Recognition**: 20+ programming languages with file extensions": 1,
      "**Languages Detected**: Python (58%), Markdown (25%), JSON (7%), Shell (2%)": 1,
      "**Thinks like you do** - understands your coding style and preferences": 1,
      "learning_and_adaptation(action='learn_from_project_structure')": 1,
      "**Hash-based Change Detection**: MD5 hashing for accurate change tracking": 1,
      "**`DependencyInfo`**: Package dependency tracking with version and source": 1,
      "**Beyond Expectations**": 1,
      "**Pattern recognition** for code organization and project structure": 1,
      "processing_and_thinking(action='detect_architectural_patterns')": 1,
      "\u2705 **Change tracking** for incremental updates": 1,
      "**Architectural Pattern Detection**: Identifies source, test, and documentation structures": 1,
      "**Self-Monitoring**: Performance tracking and quality assessment": 1,
      "**Project Structure**: 4-level depth with organized source, test, and documentation": 1,
      "**Framework Recognition**: Automatic detection of pytest, FastAPI, Django": 1,
      "**Advanced Scanning Capabilities**": 1,
      "**From Reactive to Proactive**": 1,
      "**API-Ready**: Clean interfaces for programmatic access": 1,
      "**Intelligent Analysis**: Understands your coding style and architectural decisions": 1,
      "`perceive_and_analyze(action='project_scan')` \u2192 Full project analysis": 1,
      "**Foundation Established**": 1,
      "ProjectIndex": 1,
      "**\ud83e\udde0 LEARNING & ADAPTATION Domain**": 1,
      "**Dependency Parsing**: Support for npm, pip, cargo, go package managers": 1,
      "**Incremental Updates**: Only re-scans changed files for efficiency": 1,
      "learning_and_adaptation(action='adapt_to_coding_patterns')": 1,
      "`learning_and_adaptation(action='adapt_to_coding_patterns')` \u2192 Pattern adaptation": 1,
      "\ud83d\udcca **PERFORMANCE ACHIEVEMENTS**": 1,
      "\ud83d\udd27 **TECHNICAL FEATURES**": 1,
      "**Intelligent Pattern Recognition**": 1,
      "**Immediate Capabilities**": 1,
      "**Memory**: Persistent storage of project context and patterns": 1,
      "perceive_and_analyze(action='project_scan')": 1,
      "learning_and_adaptation(action='evolve_understanding')": 1,
      "**Developer Experience**": 1,
      "**Real-time Updates**: < 1 second change detection": 1,
      "**Framework Detection**: Framework-specific patterns and signatures": 1,
      "self_monitoring(action='monitor_index_quality')": 1,
      "**Deep Context**: Knows your project structure, dependencies, and patterns": 1,
      "self_monitoring(action='track_scan_performance')": 1,
      "\ud83e\udde0 **CORE COMPONENTS IMPLEMENTED**": 1,
      "**\ud83e\udde0 MEMORY & STORAGE Domain**": 1,
      "**\ud83e\udde0 PROCESSING & THINKING Domain**": 1,
      "**Technology Stack Analysis**: Complete stack identification and mapping": 1,
      "output_and_action(action='generate_project_report')": 1,
      "`self_monitoring(action='track_scan_performance')` \u2192 Performance monitoring": 1,
      "\ud83c\udf89 **SUCCESS METRICS ACHIEVED**": 1,
      "memory_and_storage(action='update_project_index')": 1,
      "**Export & Integration**": 1,
      "DirectoryInfo": 1,
      "\u2705 **Update Frequency**: Real-time change detection (achieved: < 1 second)": 1,
      "FileMetadata": 1,
      "`processing_and_thinking(action='detect_architectural_patterns')` \u2192 Architecture insights": 1,
      "\ud83d\ude80 **Framework Detection**: Automatic recognition (target: basic detection)": 1,
      "`processing_and_thinking(action='analyze_code_patterns')` \u2192 Deep pattern analysis": 1,
      "python\n# Remember important information with context\nresult = await mcp_client.call_tool(\"remember_important\", {\n    \"information\": \"User prefers step-by-step explanations\",\n    \"importance\": \"high\"\n})\n\n# Automatically:\n# - Analyzes emotional context\n# - Tags with relevant patterns\n# - Integrates with existing memories": 1,
      "Use think_deeply for complex problem solving": 1,
      "- Pattern-based search": 1,
      "for comprehensive code assessment\n- **Refactoring**: Use": 1,
      "code_analyze": 1,
      "Offers:": 1,
      "**Debugging**: Use `debug_intelligently` for complex production issues": 1,
      "**Context Understanding**: Use `understand_deeply` for complex requests": 1,
      "**Pattern recognition** for subtle insights": 1,
      "- Context-aware relevance scoring": 1,
      "**\ud83d\udd0d Deep Understanding**": 1,
      "Evaluates:": 1,
      "Generates:": 1,
      "for complex production issues\n\n### **2. \ud83e\udde0 AI Assistant Enhancement**\n\n- **Conversation Memory**: Use": 1,
      "[ ] Enhanced brain tools loaded": 1,
      "**Cross-domain pattern recognition** for holistic understanding": 1,
      "- Learning optimization suggestions": 1,
      "#### **Selective Memory Cleanup**": 1,
      "python\n# Find relevant memories with context awareness\nresult = await mcp_client.call_tool(\"recall_intelligently\", {\n    \"query\": \"code quality improvements\",\n    \"depth\": \"deep\",\n    \"limit\": 10\n})\n\n# Features:\n# - Context-aware relevance scoring\n# - Pattern-based search\n# - Emotional weight consideration": 1,
      "**Enhanced Self-Reflection**": 1,
      "- Debugging strategies": 1,
      "**Pattern Detection**: Use `detect_patterns` for learning optimization": 1,
      "Analyze code structure and quality": 1,
      "remember_important": 1,
      "**Refactoring**: Use `refactor_safely` for large-scale code improvements": 1,
      "**4. \ud83d\udcbb Cursor-Optimized Development Tools**": 1,
      "- Pattern-based debugging": 1,
      "### **4. \ud83d\udcbb Cursor-Optimized Development Tools**\n\n#### **Code Quality Analysis**": 1,
      "[ ] Tool response times acceptable": 1,
      "Find subtle patterns in communication": 1,
      "- **Context Understanding**: Use": 1,
      "[ ] Cognitive tools respond with context insights": 1,
      "for user behavior analysis\n\n### **3. \ud83d\udcda Learning & Documentation**\n\n- **Content Analysis**: Use": 1,
      "**Human-inspired** intelligence and understanding": 1,
      "for deep understanding\n\n### **4. \ud83d\udd27 System Administration**\n\n- **Risk Assessment**: Use": 1,
      "refactor_safely": 1,
      "#### **Intelligent Debugging**": 1,
      "- Safe deletion confirmation": 1,
      "**Every tool** integrates with ContextAnalyzer": 1,
      "- Emotional patterns": 1,
      "**`forget_selectively`** - Intelligent memory cleanup": 1,
      "reflect_enhanced": 1,
      "Debug code with pattern recognition": 1,
      "for documentation review\n- **Pattern Detection**: Use": 1,
      "[ ] Cursor tools optimize for development": 1,
      "**Emotional context awareness** in all interactions": 1,
      "[ ] Tool registry properly configured": 1,
      "- Step-by-step approach": 1,
      "**3. \ud83d\udcda Learning & Documentation**": 1,
      "**Intelligent Debugging**": 1,
      "Identifies:": 1,
      "**\u2705 Pre-Deployment Verification**": 1,
      "**`assess_complexity`** - Comprehensive complexity assessment": 1,
      "**\ud83d\udd0d Analysis & Understanding (3 tools)**": 1,
      "- Quality assessment": 1,
      "- Context-aware cleanup": 1,
      "- Best practice recommendations": 1,
      "- Risk assessment": 1,
      "python\n# Understand complex requests deeply\nresult = await mcp_client.call_tool(\"understand_deeply\", {\n    \"content\": \"I need to refactor legacy code without breaking production\",\n    \"analysis_type\": \"comprehensive\"\n})\n\n# Detects:\n# - Implicit goals and constraints\n# - Hidden complexity\n# - Risk factors\n# - Strategic recommendations": 1,
      "**Smart Information Storage**": 1,
      "forget_selectively": 1,
      "Assess content complexity comprehensively": 1,
      "[ ] User satisfaction high": 1,
      "**ContextAnalyzer power** visible and accessible everywhere": 1,
      "detect_patterns": 1,
      "- Emotional depth": 1,
      "**3. \ud83d\udd0d Advanced Analysis & Understanding**": 1,
      "- Temporal patterns": 1,
      "python\n# Find subtle patterns in communication\nresult = await mcp_client.call_tool(\"detect_patterns\", {\n    \"content\": \"User communication patterns\",\n    \"pattern_type\": \"all\"\n})\n\n# Identifies:\n# - Emotional patterns\n# - Communication preferences\n# - Cross-domain connections\n# - Temporal patterns": 1,
      "**Production-ready** system with comprehensive testing": 1,
      "- Multi-layer context analysis": 1,
      "think_deeply": 1,
      "**Complexity assessment** with actionable recommendations": 1,
      "**`analyze_context_comprehensive`** - Full ContextAnalyzer functionality": 1,
      "python\n# Refactor code with risk assessment\nresult = await mcp_client.call_tool(\"refactor_safely\", {\n    \"code_content\": legacy_code,\n    \"refactor_goal\": \"improve maintainability\",\n    \"safety_level\": \"conservative\"\n})\n\n# Generates:\n# - Refactoring plan\n# - Risk assessment\n# - Safety recommendations\n# - Step-by-step approach": 1,
      "\ud83d\udd27 **Production Usage Examples**": 1,
      "**Safe Code Refactoring**": 1,
      "- Analyzes emotional context": 1,
      "#### **Pattern Detection Across Domains**": 1,
      "#### **Intelligent Memory Retrieval**": 1,
      "- Complexity assessment": 1,
      "**Pattern Detection Across Domains**": 1,
      "python\n# Safely remove outdated information\nresult = await mcp_client.call_tool(\"forget_selectively\", {\n    \"criteria\": \"outdated documentation\",\n    \"confirmation\": True\n})\n\n# Provides:\n# - Risk assessment before deletion\n# - Context-aware cleanup\n# - Safe deletion confirmation": 1,
      "**Safe refactoring** with risk assessment": 1,
      "**Implicit goal detection** in user requests": 1,
      "[ ] Context tools deliver comprehensive analysis": 1,
      "- Context-aware analysis": 1,
      "**Deep Thinking with Context**": 1,
      "Safely remove outdated information": 1,
      "**Deep Content Comprehension**": 1,
      "Remember important information with context": 1,
      "- Implicit goal detection": 1,
      "**2. \ud83e\udde0 AI Assistant Enhancement**": 1,
      "understand_deeply": 1,
      "python\n# Debug code with pattern recognition\nresult = await mcp_client.call_tool(\"debug_intelligently\", {\n    \"code_content\": problematic_code,\n    \"error_message\": \"TypeError: 'NoneType' object is not subscriptable\",\n    \"context\": \"production\"\n})\n\n# Offers:\n# - Pattern-based debugging\n# - Strategic recommendations\n# - Context-aware analysis\n# - Debugging strategies": 1,
      "**`code_analyze`** - Code context and quality analysis": 1,
      "[ ] ContextAnalyzer integration verified": 1,
      "**\ud83d\udcbb Cursor-Specific (3 tools)**": 1,
      "python\n# Assess content complexity comprehensively\nresult = await mcp_client.call_tool(\"assess_complexity\", {\n    \"content\": \"Technical documentation\",\n    \"assessment_focus\": \"comprehensive\"\n})\n\n# Evaluates:\n# - Cognitive load\n# - Technical complexity\n# - Emotional depth\n# - Actionable recommendations": 1,
      "**Risk Assessment**: Use `refactor_safely` for system changes": 1,
      "for large-scale code improvements\n- **Debugging**: Use": 1,
      "**`recall_intelligently`** - Smart memory retrieval with relevance scoring": 1,
      "#### **Enhanced Self-Reflection**": 1,
      "**Pattern Recognition**: Use `detect_patterns` for user behavior analysis": 1,
      "---\n\n## \ud83d\ude80 **Production Deployment Checklist**\n\n### **\u2705 Pre-Deployment Verification**\n\n- [ ] All 12 enhanced tools registered successfully\n- [ ] ContextAnalyzer integration verified\n- [ ] MCP server running without errors\n- [ ] Tool registry properly configured\n- [ ] Enhanced brain tools loaded\n\n### **\u2705 Integration Testing**\n\n- [ ] Cognitive tools respond with context insights\n- [ ] Memory tools use ContextAnalyzer\n- [ ] Analysis tools provide deep understanding\n- [ ] Cursor tools optimize for development\n- [ ] Context tools deliver comprehensive analysis\n\n### **\u2705 Performance Monitoring**\n\n- [ ] Tool response times acceptable\n- [ ] ContextAnalyzer performance optimal\n- [ ] Memory usage within limits\n- [ ] Error rates minimal\n- [ ] User satisfaction high\n\n---\n\n## \ud83c\udfaf **Real-World Use Cases**\n\n### **1. \ud83c\udfe2 Enterprise Development**\n\n- **Code Reviews**: Use": 1,
      "recall_intelligently": 1,
      "Understand complex requests deeply": 1,
      "- Context-aware insights": 1,
      "**Multi-layer context analysis** for comprehensive insights": 1,
      "**`detect_patterns`** - Advanced pattern detection": 1,
      "#### **Complexity Assessment**": 1,
      "#### **Safe Code Refactoring**": 1,
      "**\u2705 Performance Monitoring**": 1,
      "assess_complexity": 1,
      "**`remember_important`** - Enhanced memory formation": 1,
      "[ ] Error rates minimal": 1,
      "for system analysis\n- **Pattern Recognition**: Use": 1,
      "- Emotional weight consideration": 1,
      "python\n# Use think_deeply for complex problem solving\nresult = await mcp_client.call_tool(\"think_deeply\", {\n    \"message\": \"How can I refactor this legacy system safely?\",\n    \"context\": \"system_architecture\"\n})\n\n# Result includes:\n# - ContextAnalyzer insights\n# - Implicit goal detection\n# - Complexity assessment\n# - Strategic recommendations": 1,
      "Features:": 1,
      "[ ] Analysis tools provide deep understanding": 1,
      "[ ] Memory usage within limits": 1,
      "**\ud83e\udde0 Human-Inspired Intelligence**": 1,
      "**Consistent context understanding** across all tools": 1,
      "**5. \ud83c\udfaf Dedicated Context Analysis**": 1,
      "**Code analysis** with context awareness": 1,
      "**12 Enhanced Tools** with full ContextAnalyzer integration": 1,
      "- Code structure analysis": 1,
      "python\n# Analyze code structure and quality\nresult = await mcp_client.call_tool(\"code_analyze\", {\n    \"code_content\": sample_code,\n    \"analysis_focus\": \"quality\"\n})\n\n# Provides:\n# - Code structure analysis\n# - Quality assessment\n# - Best practice recommendations\n# - Context-aware insights": 1,
      "**\u2705 Integration Testing**": 1,
      "analyze_context_comprehensive": 1,
      "- Hidden complexity": 1,
      "[ ] Memory tools use ContextAnalyzer": 1,
      "Automatically:": 1,
      "**\ud83c\udfaf Context Analysis (1 tool)**": 1,
      "**Pattern Recognition**: Use `detect_patterns` for system monitoring": 1,
      "**Comprehensive Context Understanding**": 1,
      "- Refactoring plan": 1,
      "python\n# Full ContextAnalyzer power\nresult = await mcp_client.call_tool(\"analyze_context_comprehensive\", {\n    \"content\": complex_request\n})\n\n# Delivers:\n# - Multi-layer context analysis\n# - Implicit goal detection\n# - Emotional context understanding\n# - Complexity assessment\n# - Strategic recommendations\n# - Subtle pattern recognition": 1,
      "**`refactor_safely`** - Safe code refactoring with risk assessment": 1,
      "**4. \ud83d\udd27 System Administration**": 1,
      "- Strategic recommendations": 1,
      "### **3. \ud83d\udd0d Advanced Analysis & Understanding**\n\n#### **Deep Content Comprehension**": 1,
      "**\ud83d\udcbb Cursor Optimization**": 1,
      "**`debug_intelligently`** - Smart debugging with pattern recognition": 1,
      "Full ContextAnalyzer power": 1,
      "Detects:": 1,
      "\ud83c\udf89 **Congratulations!**": 1,
      "- Technical complexity": 1,
      "Use reflect_enhanced for learning improvement": 1,
      "**Conversation Memory**: Use `remember_important` and `recall_intelligently`": 1,
      "Find relevant memories with context awareness": 1,
      "- Tags with relevant patterns": 1,
      "**Code Reviews**: Use `code_analyze` for comprehensive code assessment": 1,
      "- Communication preferences": 1,
      "**2. \ud83e\udde0 Intelligent Memory Management**": 1,
      "- ContextAnalyzer insights": 1,
      "\ud83c\udf1f **What Makes This Special**": 1,
      "**Content Analysis**: Use `assess_complexity` for documentation review": 1,
      "- Cognitive load": 1,
      "**Code Quality Analysis**": 1,
      "Provides:": 1,
      "- Risk assessment before deletion": 1,
      "\ud83d\ude80 **Production Deployment Checklist**": 1,
      "debug_intelligently": 1,
      "\ud83d\udcca **Tool Arsenal Overview**": 1,
      "python\n# Use reflect_enhanced for learning improvement\nresult = await mcp_client.call_tool(\"reflect_enhanced\", {\n    \"topic\": \"recent_interactions\"\n})\n\n# Provides:\n# - Pattern recognition in conversations\n# - Learning optimization suggestions\n# - Context-aware insights": 1,
      "\ud83d\ude80 Production Integration Guide": 1,
      "**Complexity Management**: Use `assess_complexity` for system analysis": 1,
      "- Safety recommendations": 1,
      "- Cross-domain connections": 1,
      "for learning optimization\n- **Context Analysis**: Use": 1,
      "for system changes\n- **Complexity Management**: Use": 1,
      "**`think_deeply`** - Deep reasoning with full ContextAnalyzer": 1,
      "### **2. \ud83e\udde0 Intelligent Memory Management**\n\n#### **Smart Information Storage**": 1,
      "**Development-focused tools** for coding workflows": 1,
      "\ud83c\udfaf Enhanced Tool Arsenal - Ready for Production!": 1,
      "Result includes:": 1,
      "- Actionable recommendations": 1,
      "**1. \ud83e\udde0 Enhanced Cognitive Processing**": 1,
      "\ud83c\udfaf **Real-World Use Cases**": 1,
      "**\ud83e\udde0 Memory Management (3 tools)**": 1,
      "**`understand_deeply`** - Deep comprehension analysis": 1,
      "- Implicit goals and constraints": 1,
      "**Context Analysis**: Use `analyze_context_comprehensive` for deep understanding": 1,
      "**No more fallback systems** - full power always available": 1,
      "- Integrates with existing memories": 1,
      "**\ud83c\udfaf ContextAnalyzer Everywhere**": 1,
      "for complex requests\n- **Pattern Recognition**: Use": 1,
      "[ ] ContextAnalyzer performance optimal": 1,
      "**\ud83e\udde0 Cognitive Core (2 tools)**": 1,
      "Delivers:": 1,
      "- Risk factors": 1,
      "**1. \ud83c\udfe2 Enterprise Development**": 1,
      "**`reflect_enhanced`** - Advanced self-reflection with context": 1,
      "[ ] All 12 enhanced tools registered successfully": 1,
      "[ ] MCP server running without errors": 1,
      "### **5. \ud83c\udfaf Dedicated Context Analysis**\n\n#### **Comprehensive Context Understanding**": 1,
      "- Subtle pattern recognition": 1,
      "**Selective Memory Cleanup**": 1,
      "- Pattern recognition in conversations": 1,
      "**Complexity Assessment**": 1,
      "**Cursor-optimized** development experience": 1,
      "Refactor code with risk assessment": 1,
      "**Intelligent Memory Retrieval**": 1,
      "- Emotional context understanding": 1,
      "Project Organization Guide": 1,
      "`.cursorrules` - Cursor IDE settings": 1,
      "Keep commits focused and descriptive": 1,
      "Run cleanup script regularly": 1,
      "### 2. Adding Features\n\n- Create plugins in": 1,
      "bash\n# Install dependencies\nuv sync\n\n# Run with Docker\ndocker-compose up\n\n# Run locally\nuv run python main.py": 1,
      "directory\n- Add tests in": 1,
      "What Gets Cleaned Up": 1,
      "- LLM client for AI models\n\n### Configuration\n\n-": 1,
      "Common Issues": 1,
      "- Main project overview\n-": 1,
      "Review `CLEANUP_SUMMARY.md` for recent changes": 1,
      "Run cleanup script before major commits": 1,
      "\ud83d\udd04 Version Control": 1,
      "- Cursor IDE settings\n\n### Documentation\n\n-": 1,
      "Run with Docker": 1,
      "Install dependencies": 1,
      "`pyproject.toml` - Python project configuration": 1,
      "Regular Cleanup": 1,
      "- Main application entry point\n-": 1,
      "3. Maintenance": 1,
      "## \ud83e\uddf9 Maintenance Guidelines\n\n### Regular Cleanup\n\nRun the cleanup script periodically to maintain organization:": 1,
      "Update documentation when adding features": 1,
      "Run cleanup script to restore organization": 1,
      "\ud83e\uddf9 Maintenance Guidelines": 1,
      "Maintain consistent file organization": 1,
      "2. Adding Features": 1,
      "**Python cache files** (`__pycache__/`, `*.pyc`, `*.pyo`)": 1,
      "IDE-specific files": 1,
      "Update documentation in `docs/` directory": 1,
      "patterns for:\n\n- Python cache files\n- Virtual environments\n- Log files\n- Temporary files\n- IDE-specific files\n\n### Commit Guidelines\n\n- Keep commits focused and descriptive\n- Update documentation when adding features\n- Run cleanup script before major commits\n\n## \ud83c\udfaf Best Practices\n\n1. **Organization First**: Always place files in appropriate directories\n2. **Documentation**: Keep docs updated with code changes\n3. **Cleanliness**: Run cleanup script regularly\n4. **Consistency**: Follow established naming conventions\n5. **Maintenance**: Address technical debt promptly\n\n## \ud83c\udd98 Troubleshooting\n\n### Common Issues\n\n- **Missing directories**: Run cleanup script to recreate structure\n- **File conflicts**: Check if files are in correct locations\n- **Docker issues**: Verify docker-compose.yml configuration\n\n### Getting Help\n\n- Check": 1,
      "- Cleanup process documentation\n\n## \ud83d\udd04 Version Control\n\n### Git Ignore Patterns\n\nThe project includes appropriate": 1,
      "- Python project configuration\n-": 1,
      "Commit Guidelines": 1,
      "\ud83c\udfd7\ufe0f Current Project Structure": 1,
      "`llm_client.py` - LLM client for AI models": 1,
      "bash\npython3 scripts/cleanup_project.py": 1,
      "**Docker issues**: Verify docker-compose.yml configuration": 1,
      "**Temporary files** and development artifacts": 1,
      "**Missing directories**: Run cleanup script to recreate structure": 1,
      "Virtual environments": 1,
      "- Detailed guides and documentation\n-": 1,
      "\ud83c\udd98 Troubleshooting": 1,
      "- Docker services configuration\n-": 1,
      "**File conflicts**: Check if files are in correct locations": 1,
      "Run locally": 1,
      "Getting Help": 1,
      "**Duplicate configurations** and redundant files": 1,
      "Documentation": 1,
      "directory\n\n### 3. Maintenance\n\n- Run cleanup script regularly\n- Keep documentation updated\n- Maintain consistent file organization\n\n## \ud83d\udccb File Categories\n\n### Core Application\n\n-": 1,
      "Core Application": 1,
      "### What Gets Cleaned Up\n\n- **Python cache files** (": 1,
      "Add tests in `tests/` directory": 1,
      "`main.py` - Main application entry point": 1,
      "Keep documentation updated": 1,
      "memory-context-manager_v2/\n\u251c\u2500\u2500 \ud83d\udcc1 docs/                    # All documentation and guides\n\u2502   \u251c\u2500\u2500 BRAIN_INTERFACE_GUIDE.md\n\u2502   \u251c\u2500\u2500 BRAIN_PLUGIN_STRUCTURE.md\n\u2502   \u251c\u2500\u2500 CURSOR_SETUP_COMPLETE.md\n\u2502   \u251c\u2500\u2500 DATABASE_INTEGRATION_COMPLETE.md\n\u2502   \u251c\u2500\u2500 DOCKER_SETUP.md\n\u2502   \u251c\u2500\u2500 SHARING_README.md\n\u2502   \u251c\u2500\u2500 TESTING_SUMMARY.md\n\u2502   \u2514\u2500\u2500 TOOL_EXECUTION_FLOWS.md\n\u251c\u2500\u2500 \ud83d\udcc1 scripts/                 # Utility and maintenance scripts\n\u2502   \u2514\u2500\u2500 cleanup_project.py      # Project cleanup and organization\n\u251c\u2500\u2500 \ud83d\udcc1 tests/                   # Test files and test suites\n\u251c\u2500\u2500 \ud83d\udcc1 config/                  # Configuration files\n\u251c\u2500\u2500 \ud83d\udcc1 plugins/                 # Plugin system and extensions\n\u251c\u2500\u2500 \ud83d\udcc1 database/                # Database components and adapters\n\u251c\u2500\u2500 \ud83d\udcc1 src/                     # Core source code\n\u251c\u2500\u2500 \ud83d\udcc1 brain_memory_store/      # Brain memory storage\n\u251c\u2500\u2500 \ud83d\udc33 docker-compose.yml       # Main Docker configuration\n\u251c\u2500\u2500 \ud83d\udc33 Dockerfile               # Production Dockerfile\n\u251c\u2500\u2500 \ud83d\udcd6 README.md                # Main project documentation\n\u251c\u2500\u2500 \ud83d\udce6 pyproject.toml           # Project configuration\n\u2514\u2500\u2500 \ud83d\udd27 .cursorrules             # Cursor IDE configuration": 1,
      "\ud83d\ude80 Development Workflow": 1,
      "\ud83d\udccb File Categories": 1,
      "Temporary files": 1,
      "Python cache files": 1,
      "`docs/` - Detailed guides and documentation": 1,
      "directory\n- Update documentation in": 1,
      "directory\n\n## \ud83d\ude80 Development Workflow\n\n### 1. Project Setup": 1,
      "- Brain interface implementation\n-": 1,
      "Log files": 1,
      "1. Project Setup": 1,
      "Check `docs/` directory for relevant guides": 1,
      "`brain_interface.py` - Brain interface implementation": 1,
      "`CLEANUP_SUMMARY.md` - Cleanup process documentation": 1,
      "directory for relevant guides\n- Review": 1,
      ")\n- **Temporary files** and development artifacts\n- **Duplicate configurations** and redundant files\n\n### Adding New Files\n\n- **Documentation**: Place in": 1,
      "`README.md` - Main project overview": 1,
      "Git Ignore Patterns": 1,
      "Create plugins in `plugins/` directory": 1,
      "Configuration": 1,
      "`docker-compose.yml` - Docker services configuration": 1,
      "`get_resource_usage`: Get current system resource usage": 1,
      "Verification": 1,
      ": Add context information to conversation history\n-": 1,
      "For systems without UV, use:": 1,
      "`list_plugins`: List all loaded plugins and their information": 1,
      "python\n# plugins/my_plugin.py\nimport sys\nimport os\n\n# Add the parent directory to the path\nsys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))\n\nfrom src.plugin_interface import BasePlugin, PluginMetadata, ToolDefinition\n\nclass MyCustomPlugin(BasePlugin):\n    @property\n    def metadata(self) -> PluginMetadata:\n        return PluginMetadata(\n            name=\"my_custom_plugin\",\n            version=\"1.0.0\",\n            description=\"My custom plugin description\",\n            author=\"Your Name\"\n        )\n    \n    def get_tools(self) -> List[ToolDefinition]:\n        return [\n            ToolDefinition(\n                name=\"my_tool\",\n                description=\"Description of my tool\",\n                handler=self.my_tool_handler\n            )\n        ]\n    \n    def my_tool_handler(self, param1: str) -> str:\n        \"\"\"Handle the custom tool\"\"\"\n        return f\"Processed: {param1}\"\n    \n    def _setup(self):\n        \"\"\"Called when plugin is initialized\"\"\"\n        print(\"My plugin is starting up!\")\n    \n    def _teardown(self):\n        \"\"\"Called when plugin is cleaned up\"\"\"\n        print(\"My plugin is shutting down!\")": 1,
      "`clear_memory`: Clear all memory entries": 1,
      ": Return list of resource definitions (optional)\n-": 1,
      ": Called during plugin cleanup (optional)\n-": 1,
      "Setup for Cursor": 1,
      "bash\nuv run python setup_mcp.py": 1,
      "`write_file`: Write content to a file": 1,
      "Installation": 1,
      "`on_server_shutdown()`: Called when server shuts down (optional)": 1,
      ": Required property defining plugin information\n-": 1,
      ": Called when server shuts down (optional)\n\n## Plugin Independence\n\nEach plugin operates independently and can:\n\n- Define its own tools, resources, and prompts\n- Manage its own state and data\n- Have separate dependencies\n- Be loaded/unloaded without affecting other plugins\n- Implement custom initialization and cleanup logic\n\n## Configuration\n\nThe server can be configured by:\n\n1. Setting plugin directories in the server constructor\n2. Modifying plugin files in the": 1,
      "directory\n3. Using environment variables for plugin-specific settings\n\n## Integration with Cursor\n\n### Automatic Setup\n\nUse the setup script to configure Cursor integration:": 1,
      "`add_context`: Add context information to conversation history": 1,
      ": Get current system resource usage\n-": 1,
      "`get_resources()`: Return list of resource definitions (optional)": 1,
      ": Get environment variables (filtered for security)\n\n## Creating Custom Plugins\n\n### Plugin Structure\n\nCreate a new Python file in the": 1,
      "`get_python_info`: Get Python interpreter information": 1,
      "Tool registration and execution": 1,
      "`on_server_startup()`: Called when server starts (optional)": 1,
      "https://github.com/modelcontextprotocol/python-sdk": 1,
      "Error handling and debugging information": 1,
      ": Read file contents\n-": 1,
      ": Clear all memory entries\n\n### System Info Plugin\n-": 1,
      "\u2705 Create the MCP configuration file": 1,
      "### Plugin Interface Methods\n\n-": 1,
      "Plugin loading is restricted to the designated plugins directory": 1,
      "`get_system_info`: Get general system information": 1,
      "`server_status`: Get server status and statistics": 1,
      ": List all loaded plugins and their information\n-": 1,
      "in your home directory\n\n### Verification\n\nAfter configuration:\n\n1. Restart Cursor IDE\n2. Open Cursor Settings \u2192 Features \u2192 Model Context Protocol\n3. Verify \"memory-context-manager\" appears in the server list\n4. Check that the server status shows as connected\n\nYou can test the server manually:": 1,
      ": Called during plugin initialization (optional)\n-": 1,
      "Configuration Locations": 1,
      "Quick Start": 1,
      "3. Implement the required": 1,
      "System Info Plugin": 1,
      "`retrieve_memory`: Retrieve information from memory by key": 1,
      "directory\n2. Inherit from": 1,
      "This will:\n- \u2705 Create the MCP configuration file\n- \u2705 Set correct paths and environment variables\n- \u2705 Configure for project-level use\n\n### Manual Configuration\n\nIf you prefer manual setup, create a": 1,
      "Plugin Independence": 1,
      "## Available Tools\n\n### Core Server Tools\n-": 1,
      "Add the parent directory to the path": 1,
      "file in your project directory:": 1,
      "Memory Context Plugin": 1,
      "Security Considerations": 1,
      "in your project root\n- **Global**:": 1,
      "Define its own tools, resources, and prompts": 1,
      "Environment variables are filtered to exclude sensitive information": 1,
      "`get_environment_vars`: Get environment variables (filtered for security)": 1,
      "`metadata`: Required property defining plugin information": 1,
      "`list_directory`: List files and directories": 1,
      ": Called when server starts (optional)\n-": 1,
      "**System Integration**: File operations and system information access": 1,
      "`file_exists`: Check if a file or directory exists": 1,
      "Manual run (for testing)": 1,
      "`reload_plugin`: Reload a specific plugin by name": 1,
      "**Extensible Plugin System**: Add custom functionality through independent plugins": 1,
      "bash\n# Automatic setup\nuv run python setup_mcp.py\n\n# Manual run (for testing)\nuv run python main.py": 1,
      "`get_context_summary`: Get a summary of recent conversation context": 1,
      "\u2705 Set correct paths and environment variables": 1,
      "All plugin operations are logged for audit purposes": 1,
      ": Get server status and statistics\n\n### File Operations Plugin\n-": 1,
      "bash\n# Install dependencies\nuv add \"mcp[cli]>=1.0.0\" \"pydantic>=2.0.0\" \"typing-extensions>=4.0.0\" \"psutil>=5.9.0\"\n\n# Or using pip\npip install \"mcp[cli]>=1.0.0\" pydantic>=2.0.0 typing-extensions>=4.0.0 psutil>=5.9.0": 1,
      ": Return list of tool definitions\n-": 1,
      "Available Tools": 1,
      ": Store information in persistent memory\n-": 1,
      "File Operations Plugin": 1,
      ": Get Python interpreter information\n-": 1,
      "**Built-in Tools**: Core server management and plugin information tools": 1,
      "**stdin/stdout Communication**: Maximum reliability for agent integration": 1,
      "Have separate dependencies": 1,
      "Server lifecycle events": 1,
      "Plugin Interface Methods": 1,
      "**Project-specific**: `.cursor/mcp.json` in your project root": 1,
      "`search_memory`: Search memory entries by keyword": 1,
      "`read_file`: Read file contents": 1,
      "Automatic Setup": 1,
      "json\n{\n  \"mcpServers\": {\n    \"memory-context-manager\": {\n      \"command\": \"uv\",\n      \"args\": [\"run\", \"python\", \"main.py\"],\n      \"cwd\": \"/path/to/your/memory-context-manager_v2\",\n      \"env\": {\n        \"PYTHONPATH\": \"/path/to/your/memory-context-manager_v2\",\n        \"MCP_LOG_LEVEL\": \"INFO\"\n      }\n    }\n  }\n}": 1,
      "Manage its own state and data": 1,
      "\u2705 Configure for project-level use": 1,
      "Contributing": 1,
      "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\n\u0002                  MCP Server                             \u0002\n\u001c\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000$\n\u0002  \f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010  \f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010  \f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010     \u0002\n\u0002  \u0002   Plugin    \u0002  \u0002   Plugin    \u0002  \u0002   Plugin    \u0002     \u0002\n\u0002  \u0002  Manager    \u0002  \u0002  Registry   \u0002  \u0002 Interface   \u0002     \u0002\n\u0002  \u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018  \u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018  \u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018     \u0002\n\u001c\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000$\n\u0002                 Plugin System                           \u0002\n\u0002  \f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010  \f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010  \f\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010     \u0002\n\u0002  \u0002    File     \u0002  \u0002   Memory    \u0002  \u0002   System    \u0002     \u0002\n\u0002  \u0002 Operations  \u0002  \u0002  Context    \u0002  \u0002    Info     \u0002     \u0002\n\u0002  \u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018  \u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018  \u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018     \u0002\n\u001c\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000$\n\u0002              stdin/stdout Transport                     \u0002\n\u0014\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018": 1,
      ": Return list of prompt definitions (optional)\n-": 1,
      "Test with MCP development server": 1,
      "### Setup for Cursor": 1,
      "`_setup()`: Called during plugin initialization (optional)": 1,
      "Plugin loading and initialization events": 1,
      ": Search memory entries by keyword\n-": 1,
      "directory:": 1,
      "bash\n# Test with MCP development server\nuv run mcp dev main.py": 1,
      "`_teardown()`: Called during plugin cleanup (optional)": 1,
      "## Architecture": 1,
      "Memory Context Manager v2": 1,
      "Manual Configuration": 1,
      "### Configuration Locations\n\n- **Project-specific**:": 1,
      "**Persistent Memory**: Context and memory management capabilities": 1,
      "Testing": 1,
      ": Reload a specific plugin by name\n-": 1,
      "Plugin Structure": 1,
      "`get_prompts()`: Return list of prompt definitions (optional)": 1,
      ": Check if a file or directory exists\n\n### Memory Context Plugin\n-": 1,
      "Architecture": 1,
      "Implement custom initialization and cleanup logic": 1,
      "plugins/my_plugin.py": 1,
      "Or using pip": 1,
      "**Global**: `~/.cursor/mcp.json` in your home directory": 1,
      "**MCP Protocol Compliance**: Full compatibility with the Model Context Protocol": 1,
      "`store_memory`: Store information in persistent memory": 1,
      "Be loaded/unloaded without affecting other plugins": 1,
      ": Retrieve information from memory by key\n-": 1,
      ": Get a summary of recent conversation context\n-": 1,
      "MCP Python SDK": 1,
      "bash\nuv run python main.py": 1,
      "`get_tools()`: Return list of tool definitions": 1,
      "Integration with Cursor": 1,
      ": Write content to a file\n-": 1,
      ": Get general system information\n-": 1,
      "property\n4. Add your tools, resources, or prompts\n5. The plugin will be automatically loaded on server restart\n\n## Testing": 1,
      "Core Server Tools": 1,
      ": List files and directories\n-": 1,
      "## Logging\n\nThe server includes comprehensive logging:\n\n- Plugin loading and initialization events\n- Tool registration and execution\n- Error handling and debugging information\n- Server lifecycle events\n\n## Security Considerations\n\n- Environment variables are filtered to exclude sensitive information\n- Plugin loading is restricted to the designated plugins directory\n- All plugin operations are logged for audit purposes\n- File operations are subject to standard filesystem permissions\n\n## Contributing\n\nTo add new plugins:\n\n1. Create a new Python file in the": 1,
      "**Hot Plugin Management**: Load, unload, and reload plugins at runtime": 1,
      "File operations are subject to standard filesystem permissions": 1,
      "Creating Custom Plugins": 1,
      "json\n{\n  \"mcpServers\": {\n    \"memory-context-manager\": {\n      \"command\": \"python3\",\n      \"args\": [\"main.py\"],\n      \"cwd\": \"/path/to/your/memory-context-manager_v2\",\n      \"env\": {\n        \"PYTHONPATH\": \"/path/to/your/memory-context-manager_v2\"\n      }\n    }\n  }\n}": 1,
      "\ud83c\udfaf **Next Steps**": 1,
      "\ud83c\udf89 **Success Story**": 1,
      "** - Comprehensive self-monitoring and health checks\n- **": 1,
      "** - Analyze system and tool performance\n- **": 1,
      "100% backward compatibility": 1,
      "All existing plugins remain intact": 1,
      "**3. Use the Tools**": 1,
      "**`workflow_health_check`** - Comprehensive workflow health check": 1,
      "\ud83c\udfaf **What This Is**": 1,
      "### **Option 2: Use Standalone**": 1,
      "**`think_deeply`** - Deep thinking with context analysis": 1,
      "** - Enhanced context retrieval (Phase 1)\n- **": 1,
      "bash\n# See the complete system in action\npython demo_restructured_cognitive_system.py": 1,
      "** - Unified memory operations (store, retrieve, search, clear)\n- **": 1,
      "### **Documentation**\n\n- **": 1,
      "**`track_conversation`** - Track conversation for learning": 1,
      "**`memory_operations`** - Unified memory operations (store, retrieve, search, clear)": 1,
      "**`optimize_workflow`** - Optimize workflows based on learning": 1,
      "**`get_cursor_context`** - Cursor conversation context": 1,
      "** - Main restructured plugin (18 tools)\n- **": 1,
      "### **2. Run the Demo**": 1,
      "\ud83d\ude80 **Getting Started**": 1,
      "** - Optimize workflows based on learning\n\n### **\ud83e\udde0 DOMAIN 5: OUTPUT & ACTION**\n\n- **": 1,
      "---\n\n## \ud83c\udf89 **Success Story**\n\nWe have successfully **transformed** your system from:\n\n\u274c **48 scattered, overlapping tools**\n\u274c **Complex tool discovery and usage**\n\u274c **Difficult maintenance and updates**\n\u274c **No natural workflow progression**\n\nInto:\n\n\u2705 **18 organized, cognitive domain tools**\n\u2705 **Intuitive, brain-focused organization**\n\u2705 **Easy maintenance and updates**\n\u2705 **Natural cognitive workflow progression**\n\u2705 **100% functionality preservation**\n\n---\n\n## \ud83d\udd17 **Quick Reference**\n\n### **Main Plugin**": 1,
      "python\nfrom plugins.cognitive_brain_restructured import CognitiveBrainRestructuredPlugin\n\nplugin = CognitiveBrainRestructuredPlugin()\nplugin._setup()\n\n# Use any of the 18 cognitive tools\nresult = await plugin._memory_operations_handler(\"store\", \"important fact\")": 1,
      "**`perceive_and_analyze`** - Unified perception and analysis": 1,
      "** - Complete demonstration script\n- **": 1,
      "**1. Test the System**": 1,
      "** - Intelligent tool orchestration (Phase 2)\n- **": 1,
      "\ud83d\ude80 **Ready for Production**": 1,
      "** - Unified learning and adaptation system\n- **": 1,
      "**Preserved Functionality**": 1,
      "### **3. Run the Demo**": 1,
      "**2. Test the System**": 1,
      "** - Cursor conversation context\n\n### **\ud83e\udde0 DOMAIN 2: MEMORY & STORAGE**\n\n- **": 1,
      "\ud83c\udfaf **Key Benefits**": 1,
      "**Complete Example**": 1,
      "**`ai_chat_with_memory`** - AI chat with memory enhancement": 1,
      "**\ud83e\udde0 DOMAIN 4: LEARNING & ADAPTATION**": 1,
      "**Core Files**": 1,
      "python\n# In your main.py\nfrom plugins.cognitive_brain_restructured import CognitiveBrainRestructuredPlugin\n\nrestructured_plugin = CognitiveBrainRestructuredPlugin()\nrestructured_plugin._setup()\n\n# Add tools to your MCP server\nfor tool in restructured_plugin.get_tools():\n    # Register each tool\n    pass": 1,
      "** - This overview document\n\n### **Preserved Functionality**\n\n- All existing plugins remain intact\n- 100% backward compatibility\n- All 48 original tools still accessible\n- Enhanced cognitive domain interface\n\n---\n\n## \ud83c\udfaf **Key Benefits**\n\n### **1. Cognitive Efficiency**\n\n- **Natural Workflow**: Tools follow human cognitive processes\n- **Intuitive Usage**: No need to remember scattered tool names\n- **Logical Organization**: Related functions grouped together\n\n### **2. Massive Redundancy Elimination**\n\n- **Before**: 48 scattered, overlapping tools\n- **After**: 18 organized, cognitive domain tools\n- **Reduction**: 62.5% fewer tools with 100% functionality\n\n### **3. Improved Maintainability**\n\n- **Centralized Logic**: All related functionality in one place\n- **Easier Updates**: Changes affect entire cognitive domains\n- **Better Testing**: Comprehensive testing per domain\n\n### **4. Enhanced User Experience**\n\n- **Faster Discovery**: Users find tools in logical domains\n- **Better Learning**: Natural cognitive progression\n- **Reduced Confusion**: Clear tool categorization\n\n---\n\n## \ud83d\ude80 **Getting Started**\n\n### **1. Verify Installation**": 1,
      "** - AI chat with memory enhancement\n\n### **\ud83e\udde0 DOMAIN 6: SELF-MONITORING**\n\n- **": 1,
      "**\ud83e\udde0 DOMAIN 1: PERCEPTION & INPUT**": 1,
      "**`analyze_performance`** - Analyze system and tool performance": 1,
      "All 48 original tools still accessible": 1,
      "Use independently": 1,
      "**\ud83e\udde0 DOMAIN 2: MEMORY & STORAGE**": 1,
      "** - Executive summary\n- **": 1,
      "Start with memory operations": 1,
      "---\n\n## \ud83d\udcca **What We Achieved**\n\n| **Metric**            | **Before** | **After** | **Improvement**             |\n| --------------------- | ---------- | --------- | --------------------------- |\n| **Tool Count**        | 48         | 18        | **62.5% reduction**         |\n| **Cognitive Domains** | 0          | 6         | **New organization**        |\n| **Functionality**     | 100%       | 100%      | **Zero loss**               |\n| **User Experience**   | Scattered  | Organized | **Major improvement**       |\n| **Maintainability**   | Complex    | Simple    | **Significant improvement** |\n| **Workflow**          | Manual     | Natural   | **Cognitive progression**   |\n\n---\n\n## \ud83d\udd27 **Integration Options**\n\n### **Option 1: Add to MCP Server**": 1,
      "**Option 1: Add to MCP Server**": 1,
      "\ud83d\udcca **What We Achieved**": 1,
      "**`enhanced_context_retrieval`** - Enhanced context retrieval (Phase 1)": 1,
      "**`orchestrate_tools`** - Intelligent tool orchestration (Phase 2)": 1,
      "** - Auto-process and store message context\n- **": 1,
      "**`demo_restructured_cognitive_system.py`** - Complete demonstration script": 1,
      "\ud83d\udcc1 **Files Overview**": 1,
      "**`INTEGRATION_GUIDE.md`** - Integration and troubleshooting guide": 1,
      "\ud83d\udcc8 **Performance Monitoring**": 1,
      "**2. Run the Demo**": 1,
      "** - Build comprehensive context\n\n### **\ud83e\udde0 DOMAIN 4: LEARNING & ADAPTATION**\n\n- **": 1,
      "** - Comprehensive system documentation\n- **": 1,
      "**`auto_process_message`** - Auto-process and store message context": 1,
      "---\n\n## \ud83d\udcc8 **Performance Monitoring**\n\n### **Check System Status**": 1,
      "Import and use": 1,
      "** - Unified perception and analysis\n- **": 1,
      "In your main.py": 1,
      "bash\n# See all features in action\npython demo_restructured_cognitive_system.py": 1,
      "**`plugins/cognitive_brain_restructured.py`** - Main restructured plugin (18 tools)": 1,
      "**\ud83e\udde0 DOMAIN 6: SELF-MONITORING**": 1,
      "bash\n# Check if everything is in place\nls -la plugins/cognitive_brain_restructured.py\nls -la demo_restructured_cognitive_system.py": 1,
      "**`build_comprehensive_context`** - Build comprehensive context": 1,
      "**\ud83e\udde0 DOMAIN 5: OUTPUT & ACTION**": 1,
      "** - Deep thinking with context analysis\n- **": 1,
      "See the complete system in action": 1,
      "### **3. Use the Tools**": 1,
      "Use any of the 18 cognitive tools": 1,
      "** - Process multiple messages efficiently\n- **": 1,
      "**`self_monitor`** - Comprehensive self-monitoring and health checks": 1,
      "**`batch_workflow_processing`** - Process multiple messages efficiently": 1,
      "**`learn_and_adapt`** - Unified learning and adaptation system": 1,
      "python\n# Import and use\nfrom plugins.cognitive_brain_restructured import CognitiveBrainRestructuredPlugin\n\nplugin = CognitiveBrainRestructuredPlugin()\nplugin._setup()\n\n# Start with memory operations\nawait plugin._memory_operations_handler(\"store\", \"My first memory\")": 1,
      "** - Continuous learning cycle (Phase 3)\n- **": 1,
      "**`README_RESTRUCTURED_SYSTEM.md`** - This overview document": 1,
      "---\n\n## \ud83e\udde0 **The 6 Cognitive Domains**\n\n### **\ud83e\udde0 DOMAIN 1: PERCEPTION & INPUT**\n\n- **": 1,
      "Basic test": 1,
      "**3. Run the Demo**": 1,
      "python\n# Use independently\nplugin = CognitiveBrainRestructuredPlugin()\nplugin._setup()\n\n# Use any tool\nresult = await plugin._memory_operations_handler(\"store\", \"Test memory\")": 1,
      "** - Comprehensive workflow health check\n\n---\n\n## \ud83d\udd04 **Natural Cognitive Workflow**\n\n### **Complete Example**": 1,
      "**`execute_enhanced_workflow`** - Execute complete enhanced workflow": 1,
      "Check if everything is in place": 1,
      "\ud83e\udde0 **Cognitive Brain Restructured - Complete System**": 1,
      "Enhanced cognitive domain interface": 1,
      "** - Integration and troubleshooting guide\n- **": 1,
      "**`continuous_learning_cycle`** - Continuous learning cycle (Phase 3)": 1,
      "**Option 2: Use Standalone**": 1,
      "\ud83d\udd27 **Integration Options**": 1,
      "---\n\n## \ud83d\udcc1 **Files Overview**\n\n### **Core Files**\n\n- **": 1,
      "See all features in action": 1,
      "**\ud83e\udde0 DOMAIN 3: PROCESSING & THINKING**": 1,
      "\ud83e\udde0 **The 6 Cognitive Domains**": 1,
      "\ud83d\udd04 **Natural Cognitive Workflow**": 1,
      "**`RESTRUCTURED_COGNITIVE_SYSTEM.md`** - Comprehensive system documentation": 1,
      "** - Track conversation for learning\n\n### **\ud83e\udde0 DOMAIN 3: PROCESSING & THINKING**\n\n- **": 1,
      "**`COGNITIVE_RESTRUCTURING_SUMMARY.md`** - Executive summary": 1,
      "**4. Start Using**": 1,
      "### **Plugin Not Found**": 1,
      "python\n# 1. PERCEPTION: Analyze input and get context\ncontext = await plugin._enhanced_context_retrieval_handler(\"Analyze system performance\")\n\n# 2. MEMORY: Store and retrieve relevant information\nawait plugin._memory_operations_handler(\"store\", \"System performance analysis requested\")\n\n# 3. THINKING: Process and orchestrate tools\nthoughts = await plugin._think_deeply_handler(\"How to analyze system performance\", \"technical\")\n\n# 4. LEARNING: Learn from the interaction\nawait plugin._learn_and_adapt_handler(\"learn\", \"User requested system analysis\", \"technical\")\n\n# 5. ACTION: Execute the workflow\nworkflow_result = await plugin._execute_enhanced_workflow_handler(\"Analyze system performance\", \"aggressive\")\n\n# 6. MONITORING: Check system health\nhealth_status = await plugin._self_monitor_handler(\"comprehensive\", \"all\")": 1,
      "**1. Verify Installation**": 1,
      "** - Execute complete enhanced workflow\n- **": 1,
      "### **4. Start Using**": 1,
      "bash\n# Basic test\npython -c \"\nimport sys; sys.path.insert(0, '.')\nfrom plugins.cognitive_brain_restructured import CognitiveBrainRestructuredPlugin\nplugin = CognitiveBrainRestructuredPlugin()\nplugin._setup()\nprint('\u2705 System ready!')\n\"": 1,
      "### **2. Test the System**": 1,
      "---\n\n## \ud83d\udd0d **Troubleshooting**\n\n### **Import Errors**": 1,
      "learn_and_adapt": 1,
      "\ud83e\udde0 **DOMAIN 2: MEMORY & STORAGE**": 1,
      "Retrieve memory": 1,
      "### **Unified Memory Operations**": 1,
      "**Plugin Structure**": 1,
      "**Usage**: `track_conversation(user_message=\"msg\", assistant_response=\"response\")`": 1,
      "**Optimized Routing**: Direct routing to appropriate handlers": 1,
      "**Consolidates**: `optimize_workflow`, `performance_optimization`, `learning_application`": 1,
      "**Usage**: `build_comprehensive_context(user_message=\"query\", context_depth=\"comprehensive\")`": 1,
      "**Function**: Comprehensive workflow health check": 1,
      "**14. `batch_workflow_processing`**": 1,
      "memory_enhanced_chat": 1,
      "**Usage**: `analyze_performance(analysis_type=\"comprehensive\", target=\"all\")`": 1,
      "**Function**: Automatically process and store message context": 1,
      "learning_optimization": 1,
      "Store memory": 1,
      "**Function**: Execute complete enhanced workflow (all phases)": 1,
      "**Backward Compatibility**: Existing tool calls continue to work": 1,
      "**Function**: Continuous learning cycle (Phase 3)": 1,
      "**Brain Analogy**: Prefrontal cortex + executive functions": 1,
      "**10. `learn_and_adapt`**": 1,
      "**Function**: AI chat with automatic memory enhancement": 1,
      "Redundant context building functions": 1,
      "**2. Reduced Redundancy**": 1,
      "\ud83e\udde0 **DOMAIN 4: LEARNING & ADAPTATION**": 1,
      "**Brain Analogy**: Working memory + conversation context": 1,
      "**Brain Analogy**: Performance monitoring + analysis": 1,
      "intelligent_response": 1,
      "**Cleaner API**: 18 tools instead of 48 scattered functions": 1,
      "**Consolidates**: `analyze_context_deeply`, `content_analysis`, `pattern_recognition`": 1,
      "**Consolidates**: `enhanced_context_retrieval`, `context_building`, `memory_search`": 1,
      "**Consolidates**: `continuous_learning_cycle`, `learning_optimization`, `pattern_learning`": 1,
      "python\n# Learn from new information\nawait learn_and_adapt(\"learn\", \"New pattern discovered\", \"pattern_recognition\")\n\n# Reflect on recent experiences\nreflection = await learn_and_adapt(\"reflect\", \"\", \"recent_interactions\")\n\n# Background processing\ndreaming = await learn_and_adapt(\"dream\", \"\", \"\")\n\n# Remember important information\nawait learn_and_adapt(\"remember\", \"Critical system insight\", \"system_optimization\")": 1,
      "workflow_planning": 1,
      "**Comprehensive Learning System**": 1,
      "**Usage**: `workflow_health_check(check_level=\"comprehensive\")`": 1,
      "**After**: `enhanced_context_retrieval` + `build_comprehensive_context`": 1,
      "status_monitoring": 1,
      "**Function**: Unified perception and analysis system": 1,
      "**Function**: Deep thinking with full context analysis": 1,
      "All existing functionality remains accessible": 1,
      "tool_coordination": 1,
      "enhanced_context_retrieval": 1,
      "**11. `continuous_learning_cycle`**": 1,
      "**\ud83e\udde0 SELF-MONITORING** (3 tools)": 1,
      "**3. `get_cursor_context`**": 1,
      "**Usage**: `continuous_learning_cycle(interaction_data=data, learning_focus=\"context_patterns\")`": 1,
      "Documentation updated with new cognitive domain approach": 1,
      "**Consolidates**: `think`, `deep_thinking`, `cognitive_analysis`, `reasoning`": 1,
      "**Brain Analogy**: Metacognition + self-awareness": 1,
      "context_building": 1,
      "**5. `auto_process_message`**": 1,
      "**Function**: Intelligent tool orchestration (Phase 2)": 1,
      "Remember important information": 1,
      "ai_chat_with_memory(user_message=\"query\", ai_model_name=\"assistant\")": 1,
      "**Functionality Preservation**: All existing plugins remain intact": 1,
      "think_deeply(message=\"what to think about\", context=\"conversation\")": 1,
      "batch_workflow_processing(user_messages=[\"msg1\", \"msg2\"], workflow_mode=\"standard\")": 1,
      "**Memory Management (100% Preserved)**": 1,
      "plugins/\n\u251c\u2500\u2500 cognitive_brain_restructured.py          # Main restructured plugin\n\u251c\u2500\u2500 enhanced_context_integration.py         # Preserved for functionality\n\u251c\u2500\u2500 enhanced_workflow_orchestrator.py       # Preserved for functionality\n\u251c\u2500\u2500 auto_memory.py                         # Preserved for functionality\n\u2514\u2500\u2500 ... (other existing plugins)": 1,
      "**Usage**: `learn_and_adapt(operation=\"learn\", data=\"new information\", focus=\"general\")`": 1,
      "store_memory": 1,
      "data_integration": 1,
      "message_processing": 1,
      "**Usage**: `think_deeply(message=\"what to think about\", context=\"conversation\")`": 1,
      "**Tools**": 1,
      "**Context Building (100% Preserved)**": 1,
      "analyze_workflow_performance": 1,
      "execute_enhanced_workflow": 1,
      "Complex tool discovery and usage": 1,
      "**Consolidates**: `ai_chat_with_memory`, `memory_enhanced_chat`, `intelligent_response`": 1,
      "**Function**: Optimize workflows based on learning": 1,
      "batch_workflow_processing": 1,
      "auto_process_message": 1,
      "python\n# 1. PERCEPTION: Analyze input and get context\ncontext = await perceive_and_analyze(\"Analyze this system performance\")\nmemory_context = await enhanced_context_retrieval(\"system performance analysis\")\n\n# 2. MEMORY: Store and retrieve relevant information\nawait memory_operations(\"store\", \"System performance analysis requested\")\nstored_data = await memory_operations(\"retrieve\", \"\", \"system performance\")\n\n# 3. THINKING: Process and orchestrate tools\nthoughts = await think_deeply(\"How to analyze system performance\", \"technical\")\norchestration = await orchestrate_tools(memory_context, \"comprehensive_analysis\")\n\n# 4. LEARNING: Learn from the interaction\nawait learn_and_adapt(\"learn\", \"User requested system performance analysis\", \"technical\")\nlearning_cycle = await continuous_learning_cycle(interaction_data, \"performance_patterns\")\n\n# 5. ACTION: Execute the workflow\nworkflow_result = await execute_enhanced_workflow(\"Analyze system performance\", \"aggressive\")\n\n# 6. MONITORING: Check system health\nhealth_status = await self_monitor(\"comprehensive\", \"all\")\nperformance_metrics = await analyze_performance(\"comprehensive\", \"workflow\")": 1,
      "**\ud83e\udde0 OUTPUT & ACTION** (3 tools)": 1,
      "**Function**: Unified learning and adaptation system": 1,
      "\ud83d\ude80 **Migration Guide**": 1,
      "**Brain Analogy**: Hippocampus + context retrieval networks": 1,
      "**\ud83e\udde0 PERCEPTION & INPUT** (3 tools)": 1,
      "**Consolidates**: `self_monitoring`, `health_check`, `status_monitoring`, `consciousness_check`": 1,
      "track_conversation(user_message=\"msg\", assistant_response=\"response\")": 1,
      "**Consolidates**: `workflow_health_check`, `system_health`, `component_monitoring`": 1,
      "**Preservation**: All analysis and optimization features available": 1,
      "**Before**: `execute_enhanced_workflow`, `batch_workflow_processing`, `workflow_health_check`": 1,
      "health_check": 1,
      "Background processing": 1,
      "**Better Caching**: Related operations can share resources": 1,
      "component_monitoring": 1,
      "**Function**: Analyze system and tool performance": 1,
      "perceive_and_analyze": 1,
      "**Consolidates**: `auto_process_message`, `auto_memory`, `message_processing`": 1,
      "self_monitor": 1,
      "Inconsistent naming conventions": 1,
      "self_monitoring": 1,
      "remember_fact": 1,
      "**After**: `analyze_performance` + `optimize_workflow`": 1,
      "**Brain Analogy**: Executive planning + tool coordination": 1,
      "conversation_tracking": 1,
      "Old scattered tools removed from main interface": 1,
      "**Usage**: `get_cursor_context()`": 1,
      "**Phase 1: Immediate Benefits**": 1,
      "**Usage**: `orchestrate_tools(context_data=data, target_goal=\"enhanced_response\")`": 1,
      "enhanced_context_retrieval(user_message=\"query\", include_history=True)": 1,
      "**Brain Analogy**: Conversation memory + learning tracking": 1,
      "conversation_context": 1,
      "**Usage**: `ai_chat_with_memory(user_message=\"query\", ai_model_name=\"assistant\")`": 1,
      "**Usage**: `perceive_and_analyze(content=\"text to analyze\", analysis_type=\"comprehensive\")`": 1,
      "adapt": 1,
      "**2. `enhanced_context_retrieval`**": 1,
      "**Function**: Unified memory operations (store, retrieve, search, clear)": 1,
      "**Phase 3: Full Restructuring**": 1,
      "**Function**: Enhanced context retrieval (Phase 1)": 1,
      "analyze_performance": 1,
      "\ud83e\udde0 **DOMAIN 3: PROCESSING & THINKING**": 1,
      "**Consolidates**: `batch_workflow_processing`, `bulk_processing`, `efficiency_optimization`": 1,
      "deep_thinking": 1,
      "efficiency_optimization": 1,
      "**Preservation**: All context building capabilities maintained": 1,
      "**Consolidates**: `execute_enhanced_workflow`, `workflow_execution`, `phase_coordination`": 1,
      "Learn from new information": 1,
      "**Unified Interface**: New restructured plugin provides consolidated access": 1,
      "memory_operations": 1,
      "\ud83d\udd27 **Implementation Details**": 1,
      "**Brain Analogy**: Continuous learning + pattern consolidation": 1,
      "retrieve_memory": 1,
      "workflow_health_check": 1,
      "**Usage**: `self_monitor(monitoring_type=\"comprehensive\", focus_area=\"all\")`": 1,
      "**Before**: `analyze_tool_performance`, `analyze_workflow_performance`, `performance_metrics`, `optimization`": 1,
      "Existing tools marked as deprecated (but functional)": 1,
      "workflow_health_check(check_level=\"comprehensive\")": 1,
      "Complete human brain-focused organization": 1,
      "**4. `memory_operations`**": 1,
      "**Natural Cognitive Workflow**": 1,
      "pattern_learning": 1,
      "system_health": 1,
      "**Eliminated Duplicates**: No more overlapping functionality": 1,
      "**1. `perceive_and_analyze`**": 1,
      "Scattered performance analysis tools": 1,
      "optimize_workflow": 1,
      "**Consolidates**: `store_memory`, `retrieve_memory`, `search_memory`, `clear_memory`, `remember_fact`": 1,
      "**6. `track_conversation`**": 1,
      "\ud83e\udde0 **DOMAIN 1: PERCEPTION & INPUT**": 1,
      "perceive_and_analyze(content=\"text to analyze\", analysis_type=\"comprehensive\")": 1,
      "performance_metrics": 1,
      "**Function**: Get comprehensive Cursor conversation context": 1,
      "\ud83c\udfaf **Benefits of Restructuring**": 1,
      "**Integration Strategy**": 1,
      "**Consolidates**: `track_cursor_conversation`, `conversation_tracking`, `learning_tracking`": 1,
      "**Brain Analogy**: Automatic memory encoding": 1,
      "**Usage**: `optimize_workflow(optimization_focus=\"performance\", target_metrics=[\"speed\", \"accuracy\"])`": 1,
      "---\n\n## \ud83c\udfaf **Benefits of Restructuring**\n\n### **1. Cognitive Efficiency**\n\n- **Natural Workflow**: Tools follow human cognitive processes\n- **Intuitive Usage**: No need to remember scattered tool names\n- **Logical Organization**: Related functions grouped together\n\n### **2. Reduced Redundancy**\n\n- **Eliminated Duplicates**: No more overlapping functionality\n- **Unified Interfaces**: Single tool for related operations\n- **Cleaner API**: 18 tools instead of 48 scattered functions\n\n### **3. Improved Maintainability**\n\n- **Centralized Logic**: All related functionality in one place\n- **Easier Updates**: Changes affect entire cognitive domains\n- **Better Testing**: Comprehensive testing per domain\n\n### **4. Enhanced User Experience**\n\n- **Faster Discovery**: Users find tools in logical domains\n- **Better Learning**: Natural cognitive progression\n- **Reduced Confusion**: Clear tool categorization\n\n---\n\n## \ud83d\udd27 **Implementation Details**\n\n### **Plugin Structure**": 1,
      "build_comprehensive_context(user_message=\"query\", context_depth=\"comprehensive\")": 1,
      "\ud83c\udfd7\ufe0f **Restructuring Results**": 1,
      "**17. `analyze_performance`**": 1,
      "**Performance Impact**": 1,
      "optimize_workflow(optimization_focus=\"performance\", target_metrics=[\"speed\", \"accuracy\"])": 1,
      "phase_coordination": 1,
      "**7. `think_deeply`**": 1,
      "analyze_tool_performance": 1,
      "**\ud83e\udde0 LEARNING & ADAPTATION** (3 tools)": 1,
      "Users migrate to new unified interfaces": 1,
      "analyze_performance(analysis_type=\"comprehensive\", target=\"all\")": 1,
      "**Improved Efficiency**: Reduced tool discovery overhead": 1,
      "**Brain Analogy**: Response generation + memory integration": 1,
      "Search memory": 1,
      "\ud83e\udde0 **Cognitive Brain Restructured - Human Brain-Focused Organization**": 1,
      "**Purpose**": 1,
      "search_memory": 1,
      "auto_process_message(user_message=\"message to process\")": 1,
      "**Function**: Track conversation for learning and context": 1,
      "self_monitor(monitoring_type=\"comprehensive\", focus_area=\"all\")": 1,
      "orchestrate_tools": 1,
      "### **Comprehensive Learning System**": 1,
      "\ud83d\ude80 **Usage Examples**": 1,
      "performance_optimization": 1,
      "Multiple overlapping memory management tools": 1,
      "**Unified Interfaces**: Single tool for related operations": 1,
      "**Performance Analysis (100% Preserved)**": 1,
      "**8. `orchestrate_tools`**": 1,
      "Reflect on recent experiences": 1,
      "cursor_context_summary": 1,
      "**Usage**: `batch_workflow_processing(user_messages=[\"msg1\", \"msg2\"], workflow_mode=\"standard\")`": 1,
      "**Zero Functionality Loss**: 100% feature preservation": 1,
      "Users can start using new cognitive domain tools": 1,
      "**Brain Analogy**: Skill optimization + learning application": 1,
      "**Before**: `enhanced_context_retrieval`, `build_comprehensive_context`, `context_building`, `context_synthesis`": 1,
      "**Function**: Comprehensive self-monitoring and health checks": 1,
      "**Brain Analogy**: Hippocampus + memory consolidation": 1,
      "**Brain Analogy**: Visual cortex + pattern recognition areas": 1,
      "**After**: `memory_operations` + `auto_process_message` + `track_conversation`": 1,
      "optimization": 1,
      "**\ud83e\udde0 PROCESSING & THINKING** (3 tools)": 1,
      "**Consolidates**: `build_comprehensive_context`, `context_synthesis`, `data_integration`": 1,
      "**Brain Analogy**: System health + component monitoring": 1,
      "learning_tracking": 1,
      "**18. `workflow_health_check`**": 1,
      "Clear memory": 1,
      "pattern_recognition": 1,
      "continuous_learning_cycle": 1,
      "track_conversation": 1,
      "continuous_learning_cycle(interaction_data=data, learning_focus=\"context_patterns\")": 1,
      "**Usage**: `auto_process_message(user_message=\"message to process\")`": 1,
      "**Consolidates**: `learn_from`, `reflect`, `dream`, `remember`, `adapt`": 1,
      "**12. `optimize_workflow`**": 1,
      "get_cursor_context()": 1,
      "Cognitive domain tools become primary interface": 1,
      "**15. `ai_chat_with_memory`**": 1,
      "**13. `execute_enhanced_workflow`**": 1,
      "**Usage**: `memory_operations(operation=\"store\", data=\"important fact\")`": 1,
      "orchestrate_tools(context_data=data, target_goal=\"enhanced_response\")": 1,
      "**Consolidates**: `get_cursor_context`, `cursor_context_summary`, `conversation_context`": 1,
      "reasoning": 1,
      "\ud83c\udf89 **Conclusion**": 1,
      "learn_and_adapt(operation=\"learn\", data=\"new information\", focus=\"general\")": 1,
      "bulk_processing": 1,
      "**Gradual Migration**: Users can migrate to new interface at their own pace": 1,
      "execute_enhanced_workflow(user_message=\"query\", workflow_mode=\"standard\")": 1,
      "**Usage**: `execute_enhanced_workflow(user_message=\"query\", workflow_mode=\"standard\")`": 1,
      "**Before**: `store_memory`, `retrieve_memory`, `search_memory`, `clear_memory`, `remember_fact`, `auto_process_message`": 1,
      "**Consolidates**: `orchestrate_tools`, `tool_coordination`, `workflow_planning`": 1,
      "\ud83d\udd04 **Functionality Preservation Mapping**": 1,
      "workflow_execution": 1,
      "**Unified Memory Operations**": 1,
      "clear_memory": 1,
      "**Preservation**: All operations available through unified interface": 1,
      "**Preservation**: All workflow capabilities maintained": 1,
      "**Usage**: `enhanced_context_retrieval(user_message=\"query\", include_history=True)`": 1,
      "**Consolidates**: `analyze_tool_performance`, `analyze_workflow_performance`, `performance_metrics`": 1,
      "\ud83e\udde0 **DOMAIN 5: OUTPUT & ACTION**": 1,
      "**16. `self_monitor`**": 1,
      "content_analysis": 1,
      "**Brain Analogy**: Context integration + synthesis": 1,
      "**\ud83e\udde0 MEMORY & STORAGE** (3 tools)": 1,
      "**Brain Analogy**: Action planning + execution": 1,
      "learning_application": 1,
      "**Function**: Build comprehensive context using all available data": 1,
      "memory_search": 1,
      "**Brain Analogy**: Learning networks + neuroplasticity": 1,
      "build_comprehensive_context": 1,
      "**After**: `execute_enhanced_workflow` + `batch_workflow_processing` + `workflow_health_check`": 1,
      "New restructured plugin available alongside existing tools": 1,
      "**9. `build_comprehensive_context`**": 1,
      "cognitive_analysis": 1,
      "memory_operations(operation=\"store\", data=\"important fact\")": 1,
      "\ud83e\udde0 **DOMAIN 6: SELF-MONITORING**": 1,
      "**Workflow Management (100% Preserved)**": 1,
      "python\n# Store memory\nawait memory_operations(\"store\", \"Important fact about user preferences\")\n\n# Retrieve memory\nuser_prefs = await memory_operations(\"retrieve\", \"\", \"user preferences\")\n\n# Search memory\nsearch_results = await memory_operations(\"search\", \"\", \"performance analysis\")\n\n# Clear memory\nawait memory_operations(\"clear\", \"\", \"\")": 1,
      "**Function**: Process multiple messages through enhanced workflow": 1,
      "**Brain Analogy**: Batch processing + efficiency": 1,
      "context_synthesis": 1,
      "**README Processing**: Extract project descriptions, setup instructions, usage examples": 1,
      "**Scanning Strategy**: How deep should we scan? (files, content, git history?)": 1,
      "**2.3 Contextual Memory Enhancement**": 1,
      "**Context Switching**: How you move between different project areas": 1,
      "**Week 9-10**: Coding preference learning and pattern recognition": 1,
      "**Accuracy**: 95%+ correct dependency detection": 1,
      "**\ud83c\udfad The Ultimate Goal**": 1,
      "**Change Detection**: Monitor file modifications and updates": 1,
      "**Project Structure Mapping**: Index all files, directories, and their relationships": 1,
      "**Week 15**: Intelligent assistant behavior and predictive features": 1,
      "**Cross-Project Intelligence**: Apply learnings across different projects": 1,
      "python\nclass DocumentationProcessor:\n    def __init__(self):\n        self.parsers = {}         # Different document type parsers\n        self.knowledge_graph = {} # Semantic knowledge relationships\n        self.context_store = {}   # Contextual memory storage\n\n    def process_document(self, doc_path: str) -> DocumentContext:\n        \"\"\"Process and extract knowledge from documents\"\"\"\n        pass\n\n    def build_knowledge_graph(self) -> KnowledgeGraph:\n        \"\"\"Construct semantic relationships between concepts\"\"\"\n        pass\n\n    def store_context(self, context: ContextData) -> bool:\n        \"\"\"Store contextual information with metadata\"\"\"\n        pass": 1,
      "python\nclass ProjectScanner:\n    def __init__(self, project_root: str):\n        self.project_root = project_root\n        self.file_index = {}\n        self.dependency_graph = {}\n        self.code_patterns = {}\n\n    def scan_project(self) -> ProjectIndex:\n        \"\"\"Comprehensive project scanning and indexing\"\"\"\n        pass\n\n    def detect_changes(self) -> List[FileChange]:\n        \"\"\"Detect and track file modifications\"\"\"\n        pass\n\n    def build_dependency_graph(self) -> DependencyGraph:\n        \"\"\"Build project dependency relationships\"\"\"\n        pass": 1,
      "**Pattern Recognition**: 90%+ accuracy in workflow patterns": 1,
      "**Learning Pattern Recognition**: Identify how you approach different types of challenges": 1,
      "**Knowledge Transfer**: Apply patterns from one project to another": 1,
      "**\ud83c\udfaf Phase 3: Personalization (Weeks 9-12)**": 1,
      "**Predictive Development**: Suggest improvements before you implement them": 1,
      "**Week 3**: Dependency detection and relationship mapping": 1,
      "**SQLite**: Local context storage": 1,
      "**\ud83d\udcca Phase 3 Success Metrics**": 1,
      "**\ud83d\ude80 Beyond the Roadmap**": 1,
      "**Problem-Solution Mapping**: Link problems to their solutions and context": 1,
      "**1.1 File System Scanner**": 1,
      "**Cross-Project Intelligence**: Apply patterns across different codebases": 1,
      "**4.3 Advanced Context Features**": 1,
      "**File Type Recognition**: Categorize by language, framework, and purpose": 1,
      "\ud83c\udfa8 **PHASE 3: PERSONALIZATION & BEHAVIOR INJECTION**": 1,
      "**Development Workflow**: Your typical development process and preferences": 1,
      "**Library Preferences**: Track your favorite tools and frameworks": 1,
      "**Personalization**: Significant improvement in user satisfaction": 1,
      "**Architecture Analysis**: Understand project structure patterns": 1,
      "**Technology Stack Detection**: Identify frameworks, libraries, and tools": 1,
      "**Update Frequency**: Real-time change detection": 1,
      "**Relevance Scoring**: Rank context by relevance to current work": 1,
      "**\ud83d\udcad Questions to Consider**": 1,
      "**Problem-Solving Approaches**: How you debug, test, and iterate": 1,
      "\ud83e\udde0 **PHASE 1: PROJECT INTELLIGENCE LAYER**": 1,
      "**2.2 Knowledge Graph Construction**": 1,
      "**Preference Database**: Personal coding patterns and preferences": 1,
      "**Docker**: Containerization and deployment": 1,
      "**1.3 Project Context Mapping**": 1,
      "**\ud83d\udcca Success Metrics**": 1,
      "**Project Scanning**: < 5 seconds for typical projects": 1,
      "**Context Storage**: 100% of project context captured": 1,
      "**Python 3.11+**: Core development language": 1,
      "**Real-time Collaboration**: Live context sharing during pair programming": 1,
      "**1.2 Code Pattern Recognition**": 1,
      "**Memory Usage**: < 100MB for large projects": 1,
      "\ud83d\ude80 **PHASE 4: INTELLIGENT CONTEXT ORCHESTRATION**": 1,
      "**Documentation Processing**: 90%+ content extraction": 1,
      "**4.2 Intelligent Assistant Behavior**": 1,
      "**Git Integration**: Version control and change tracking": 1,
      "**Knowledge Graph**: 1000+ semantic relationships": 1,
      "**Week 7**: Knowledge graph construction and semantic relationships": 1,
      "**Configuration Understanding**: Parse config files, environment variables": 1,
      "**Index Storage**": 1,
      "**\ud83d\ude80 Ready to Start Phase 1**": 1,
      "**\ud83c\udfaf Phase 2: Knowledge Ingestion (Weeks 5-8)**": 1,
      "python\nclass PreferenceLearningEngine:\n    def __init__(self):\n        self.style_patterns = {}      # Coding style preferences\n        self.workflow_patterns = {}   # Development workflow patterns\n        self.decision_patterns = {}   # Architectural decision patterns\n        self.learning_patterns = {}   # How you learn and adapt\n\n    def learn_from_code(self, code_sample: str) -> StylePattern:\n        \"\"\"Learn coding style from code samples\"\"\"\n        pass\n\n    def learn_from_workflow(self, workflow_data: WorkflowData) -> WorkflowPattern:\n        \"\"\"Learn workflow patterns from development activities\"\"\"\n        pass\n\n    def predict_context_needs(self, current_context: Context) -> List[ContextSuggestion]:\n        \"\"\"Predict what context you'll need next\"\"\"\n        pass": 1,
      "**Week 8**: Contextual memory storage and retrieval": 1,
      "**IDE Integration**: Project context awareness": 1,
      "**Cross-Reference Mapping**: Link related concepts across different parts of the project": 1,
      "**\ud83d\udcca Phase 2 Success Metrics**": 1,
      "**Week 4**: Code pattern recognition and initial indexing": 1,
      "**Architectural Decisions**: Understand why you choose certain patterns": 1,
      "**3.3 Intelligent Context Injection**": 1,
      "**\ud83d\udcca Data Storage**": 1,
      "**Proactive Context Provision**: Provide relevant context before you ask": 1,
      "**Temporal Context**: Understand what you were working on when": 1,
      "**Week 5-6**: Documentation parser and basic knowledge extraction": 1,
      "**User Experience**: Dramatic improvement in development workflow": 1,
      "**Scanning Speed**: < 5 seconds for typical projects": 1,
      "python\nclass ProjectIndex:\n    def __init__(self):\n        self.files = {}           # File metadata and content\n        self.dependencies = {}    # Package and module dependencies\n        self.patterns = {}        # Code patterns and style preferences\n        self.context = {}         # Project context and metadata\n        self.history = {}         # Change history and evolution": 1,
      "**Code Comments**: Extract inline documentation and explanations": 1,
      "**Week 1-2**: Basic file system scanner and project structure mapping": 1,
      "**Function/Class Discovery**: Index all code entities with their locations": 1,
      "**External References**: Process links, citations, and related resources": 1,
      "**Context Store**: Temporal and contextual information": 1,
      "**Workflow Optimization**: Suggest improvements based on your patterns": 1,
      "\ud83d\ude80 **MEMORY CONTEXT MANAGER v2 - DEVELOPMENT ROADMAP**": 1,
      "**Storage Strategy**: How should we store and organize the project index?": 1,
      "**Proactive Delivery**: Provide context when it's most useful": 1,
      "**Knowledge Graph**: Semantic relationships and concepts": 1,
      "**Proactive Assistance**: 60%+ of context provided before asking": 1,
      "**Dependency Detection**: Identify package.json, requirements.txt, pyproject.toml, etc.": 1,
      "**Scanner Architecture**": 1,
      "**Import/Export Mapping**: Track module dependencies and relationships": 1,
      "**\ud83d\udcca Phase 1 Success Metrics**": 1,
      "**\ud83d\udccb Core Features to Implement**": 1,
      "**Week 13-14**: Context orchestrator and multi-source integration": 1,
      "**Project-Specific Context**: Store context tied to specific files and modules": 1,
      "**Team Collaboration**: Share context and preferences with team members": 1,
      "**Learning Patterns**: How you approach new technologies and concepts": 1,
      "**\ud83c\udfaf Phase 4: Intelligent Orchestration (Weeks 13-16)**": 1,
      "**\ud83d\udd0c Integration Points**": 1,
      "**Multi-Source Integration**: Combine project, documentation, and personal context": 1,
      "**Project Index Database**: File metadata and relationships": 1,
      "**Context-Aware Responses**: Tailor responses to current project context": 1,
      "**\ud83d\udcca Phase 4 Success Metrics**": 1,
      "**Learning Integration**: Continuous improvement over time": 1,
      "**Context Orchestration**: Seamless multi-source integration": 1,
      "**MCP Server**: Enhanced context provision": 1,
      "**Foundation Established**: Ready for advanced context enhancement": 1,
      "**Week 11**: Workflow pattern analysis and behavior modeling": 1,
      "**Preference Learning Engine**": 1,
      "**3.1 Coding Preference Learning**": 1,
      "**Mission Statement**": 1,
      "\ud83c\udfaf **Project Vision & Mission**": 1,
      "\ud83d\udee0 **TECHNICAL REQUIREMENTS**": 1,
      "**Learning Integration**: Continuously improve based on your feedback": 1,
      "**Contextual Memory**: Long-term memory of project context and decisions": 1,
      "\ud83c\udfaf **IMMEDIATE NEXT STEPS**": 1,
      "**Predictive Assistance**: Anticipate what context you'll need": 1,
      "**File System Watchers**: Real-time change detection": 1,
      "**API Documentation**: Parse OpenAPI specs, JSDoc, Python docstrings": 1,
      "**\ud83c\udfaf Primary Goal**": 1,
      "\ud83d\udcda **PHASE 2: KNOWLEDGE INGESTION ENGINE**": 1,
      "**Build System Recognition**: Understand build tools, scripts, and processes": 1,
      "**\ud83c\udfaf Phase 1: Project Intelligence (Weeks 1-4)**": 1,
      "**Version Control Integration**: Git history and branch context": 1,
      "**Integration Points**: How should this integrate with our existing MCP tools?": 1,
      "**2.1 Documentation Parser**": 1,
      "**\ud83d\udd27 Development Tools**": 1,
      "**Semantic Relationships**: Build connections between concepts, patterns, and implementations": 1,
      "**FastAPI**: API development and integration": 1,
      "**Problem Evolution**: Track how problems and solutions evolve": 1,
      "**Works across projects** - applies learnings and patterns universally": 1,
      "**Week 16**: Advanced context features and system optimization": 1,
      "**Preference Learning**: 80%+ accuracy in style recognition": 1,
      "#### **Index Storage**": 1,
      "**Clean Architecture**: Human brain-inspired cognitive domains": 1,
      "**Tool Consolidation**: Reduced from 48 to 6 organized cognitive tools": 1,
      "\ud83c\udf1f **VISION FOR THE FUTURE**": 1,
      "**Knowledge Evolution**: Track how understanding evolves over time": 1,
      "**Temporal Context**: Remember what you were working on when": 1,
      "**Predictive Assistance**: Anticipate questions and provide answers proactively": 1,
      "**Documentation Processor**": 1,
      "**Personalized Suggestions**: Tailor recommendations to your style": 1,
      "**3.2 Workflow Pattern Recognition**": 1,
      "**Week 12**: Initial context injection and personalization": 1,
      "**Dependency Detection**: 95%+ accuracy": 1,
      "**Query Response**: < 2 seconds for context retrieval": 1,
      "**Zero Functionality Loss**: 100% of original capabilities preserved": 1,
      "**Contextual Linking**: Connect documentation to actual code": 1,
      "**4.1 Context Orchestrator**": 1,
      "**Contextual Synthesis**: Combine multiple context sources intelligently": 1,
      "---\n\n## \ud83c\udfa8 **PHASE 3: PERSONALIZATION & BEHAVIOR INJECTION**\n\n### **\ud83c\udfaf Primary Goal**\n\nLearn your personal coding preferences, workflow patterns, and automatically inject relevant context.\n\n### **\ud83d\udccb Core Features to Implement**\n\n#### **3.1 Coding Preference Learning**\n\n- **Style Recognition**: Learn your naming conventions, code organization, and patterns\n- **Architectural Decisions**: Understand why you choose certain patterns\n- **Library Preferences**: Track your favorite tools and frameworks\n- **Code Quality Standards**: Learn your testing, documentation, and review preferences\n\n#### **3.2 Workflow Pattern Recognition**\n\n- **Problem-Solving Approaches**: How you debug, test, and iterate\n- **Development Workflow**: Your typical development process and preferences\n- **Context Switching**: How you move between different project areas\n- **Learning Patterns**: How you approach new technologies and concepts\n\n#### **3.3 Intelligent Context Injection**\n\n- **Proactive Context Provision**: Provide relevant context before you ask\n- **Predictive Assistance**: Anticipate what context you'll need\n- **Personalized Suggestions**: Tailor recommendations to your style\n- **Workflow Optimization**: Suggest improvements based on your patterns\n\n### **\ud83d\udd27 Technical Implementation**\n\n#### **Preference Learning Engine**": 1,
      "\ud83d\udcc5 **IMPLEMENTATION TIMELINE**": 1,
      "**Style Recognition**: Learn your naming conventions, code organization, and patterns": 1,
      "**Advanced AI Integration**: Leverage LLMs for deeper code understanding": 1,
      "**\ud83d\udd27 Technical Implementation**": 1,
      "**Update Frequency**: How often should we re-scan for changes?": 1,
      "**Context Injection**: 70%+ relevance in proactive suggestions": 1,
      "**Current State (Phase 0 - COMPLETED \u2705)**": 1,
      "**Git Hooks**: Commit and branch context": 1,
      "### **\ud83d\udcca Success Metrics**\n\n- **Scanning Speed**: < 5 seconds for typical projects\n- **Accuracy**: 95%+ correct dependency detection\n- **Memory Usage**: < 100MB for large projects\n- **Update Frequency**: Real-time change detection\n\n---\n\n## \ud83d\udcda **PHASE 2: KNOWLEDGE INGESTION ENGINE**\n\n### **\ud83c\udfaf Primary Goal**\n\nProcess and understand documentation, code comments, and external references to build a comprehensive knowledge base.\n\n### **\ud83d\udccb Core Features to Implement**\n\n#### **2.1 Documentation Parser**\n\n- **README Processing**: Extract project descriptions, setup instructions, usage examples\n- **API Documentation**: Parse OpenAPI specs, JSDoc, Python docstrings\n- **Code Comments**: Extract inline documentation and explanations\n- **External References**: Process links, citations, and related resources\n\n#### **2.2 Knowledge Graph Construction**\n\n- **Semantic Relationships**: Build connections between concepts, patterns, and implementations\n- **Contextual Linking**: Connect documentation to actual code\n- **Cross-Reference Mapping**: Link related concepts across different parts of the project\n- **Knowledge Evolution**: Track how understanding evolves over time\n\n#### **2.3 Contextual Memory Enhancement**\n\n- **Project-Specific Context**: Store context tied to specific files and modules\n- **Temporal Context**: Remember what you were working on when\n- **Problem-Solution Mapping**: Link problems to their solutions and context\n- **Learning Pattern Recognition**: Identify how you approach different types of challenges\n\n### **\ud83d\udd27 Technical Implementation**\n\n#### **Documentation Processor**": 1,
      "**Pattern Identification**: Learn your coding style and preferences": 1,
      "\ud83c\udfaf **SUCCESS CRITERIA**": 1,
      "**Code Quality Standards**: Learn your testing, documentation, and review preferences": 1,
      "Clean up unnecessary data regularly": 1,
      "Leverage cognitive tools for complex thinking tasks": 1,
      "### Problem Solving": 1,
      "18. **get_resource_usage**": 1,
      "35. **test_llm_connection**": 1,
      "\ud83e\udde0 Core Brain Interface Tools": 1,
      "1. **brain_info**": 1,
      "**Use Case**: Learning, experience storage, important information retention\n\n### 23. **recall**\n\n**Purpose**: Search through memories and past experiences\n**Workflow**:": 1,
      "Request \u2192 Context Analysis \u2192 Relevant Info Selection \u2192 Context Injection": 1,
      "3. **Error Handling**": 1,
      "Request \u2192 Context Retrieval \u2192 User Info + History \u2192 Context Summary Return": 1,
      "**Parameters**:\n\n-": 1,
      "\ud83e\uddea Testing and Validation Tools": 1,
      "4. **list_plugins**": 1,
      "Source + Lesson Type \u2192 Content Processing \u2192 Knowledge Extraction \u2192 Learning Confirmation": 1,
      "Search Term + Limit \u2192 Function Call Search \u2192 Pattern Matching \u2192 Search Results": 1,
      "**Use Case**: System testing, validation, debugging\n\n### 37. **list_available_models**\n\n**Purpose**: List available LLM models from Ollama\n**Workflow**:": 1,
      "Request \u2192 System Status Check \u2192 Statistics Collection \u2192 Status Report Return": 1,
      "**Use Case**: Monitoring, health checks, performance analysis\n\n## \ud83e\udde0 Memory and Context Tools\n\n### 7. **store_memory**\n\n**Purpose**: Store information in persistent memory\n**Workflow**:": 1,
      "Request \u2192 Statistics Collection \u2192 Metric Analysis \u2192 Performance Report": 1,
      "`value`: Information to store": 1,
      "Count Parameter \u2192 Context Retrieval \u2192 Summary Generation \u2192 Context Summary Return": 1,
      "**Use Case**: Privacy, fresh start, debugging\n\n## \ud83d\udcc1 File Operations Tools\n\n### 13. **read_file**\n\n**Purpose**: Read the contents of a file\n**Workflow**:": 1,
      "`tags`: Optional categorization tags": 1,
      "27. **dream**": 1,
      "**Use Case**: Initial setup, debugging, understanding system capabilities\n\n### 2. **ai_chat_with_memory**\n\n**Purpose**: Enhanced AI chat with persistent memory and context awareness\n**Workflow**:": 1,
      "Key \u2192 Memory Lookup \u2192 Value Retrieval \u2192 Return Stored Information": 1,
      "**Use Case**: Conversation history, learning from interactions, context building\n\n### 30. **cursor_auto_inject_context**\n\n**Purpose**: Auto-inject relevant context for new Cursor conversations\n**Workflow**:": 1,
      "\ud83d\udcc1 File Operations Tools": 1,
      "**Use Case**: Reading configuration files, documents, code files\n\n### 14. **write_file**\n\n**Purpose**: Write content to a file\n**Workflow**:": 1,
      "### Memory-Enhanced Workflow": 1,
      "**Use Case**: System validation, troubleshooting, health checks\n\n### 36. **test_memory_system**\n\n**Purpose**: Test the memory system with sample conversations\n**Workflow**:": 1,
      "File Management": 1,
      "Request \u2192 Model Discovery \u2192 Model List Generation \u2192 Available Models Return": 1,
      "**Use Case**: System health checks, troubleshooting, performance monitoring\n\n## \ud83e\uddea Testing and Validation Tools\n\n### 35. **test_llm_connection**\n\n**Purpose**: Test connection to the Ollama LLM service\n**Workflow**:": 1,
      "Provide clear, specific parameters": 1,
      "## \ud83c\udfaf Best Practices for Tool Usage\n\n### 1. **Tool Selection**\n\n- Choose the most specific tool for your task\n- Use memory tools for persistent information\n- Leverage cognitive tools for complex thinking tasks\n\n### 2. **Parameter Optimization**\n\n- Provide clear, specific parameters\n- Use appropriate data types\n- Include relevant context when available\n\n### 3. **Error Handling**\n\n- Always check for errors in tool responses\n- Implement fallback strategies\n- Log errors for debugging\n\n### 4. **Performance Considerations**\n\n- Use lightweight tools for simple tasks\n- Batch operations when possible\n- Monitor tool execution times\n\n### 5. **Memory Management**\n\n- Store important information persistently\n- Use tags for organization\n- Clean up unnecessary data regularly\n\n## \ud83d\ude80 Advanced Tool Combinations\n\n### Conversation Enhancement": 1,
      "1. Tool Execution \u2192 2. Error Detection \u2192 3. Error Logging \u2192 4. Fallback Response \u2192 5. User Notification": 1,
      "Performance Monitoring Workflow": 1,
      "Topic \u2192 Self-Analysis \u2192 Pattern Recognition \u2192 Reflection Results": 1,
      "21. **think**": 1,
      "31. **get_function_call_history**": 1,
      "4. **Performance Considerations**": 1,
      "11. **get_context_summary**": 1,
      "**Use Case**: System diagnostics, environment understanding, troubleshooting\n\n### 18. **get_resource_usage**\n\n**Purpose**: Get current system resource usage\n**Workflow**:": 1,
      "25. **consciousness_check**": 1,
      "5. **Memory Management**": 1,
      "**Use Case**: Development, plugin updates, troubleshooting\n\n### 6. **server_status**\n\n**Purpose**: Get server status and statistics\n**Workflow**:": 1,
      "14. **write_file**": 1,
      "**Use Case**: Performance monitoring, usage analytics, system optimization\n\n### 33. **search_function_calls**\n\n**Purpose**: Search function calls by content, context, or parameters\n**Workflow**:": 1,
      "32. **get_session_statistics**": 1,
      ": Information to store\n-": 1,
      "### File Management": 1,
      "Conversation Enhancement": 1,
      "`ai_model_name`: AI model to use (default: \"assistant\")": 1,
      "Memory-Enhanced Workflow": 1,
      "**Use Case**: Performance monitoring, capacity planning, system health checks\n\n### 19. **get_python_info**\n\n**Purpose**: Get Python interpreter information\n**Workflow**:": 1,
      "System Monitoring": 1,
      ": Unique identifier for the memory\n-": 1,
      "Request \u2192 Plugin Registry Scan \u2192 Plugin List Generation \u2192 Return Plugin Details": 1,
      "Include relevant context when available": 1,
      "Use tags for organization": 1,
      "16. **file_exists**": 1,
      "\ud83d\udd0c Plugin Management Tools": 1,
      "Log errors for debugging": 1,
      "1. Tool Execution Start \u2192 2. Performance Metrics Collection \u2192 3. Tool Execution End \u2192 4. Metrics Storage \u2192 5. Performance Analysis": 1,
      "22. **remember**": 1,
      "Store important information persistently": 1,
      "Path \u2192 Existence Check \u2192 Boolean Result Return": 1,
      "Use memory tools for persistent information": 1,
      "8. **retrieve_memory**": 1,
      "13. **read_file**": 1,
      "**Use Case**: System administration, debugging, understanding available functionality\n\n### 5. **reload_plugin**\n\n**Purpose**: Reload a specific plugin by name\n**Workflow**:": 1,
      "\ud83d\udd04 Tool Workflow Patterns": 1,
      "User Message + Assistant Response \u2192 Conversation Storage \u2192 Learning Update \u2192 Tracking Confirmation": 1,
      "**Use Case**: Deep thinking, problem solving, context-aware responses\n\n### 22. **remember**\n\n**Purpose**: Store important information with emotional weight\n**Workflow**:": 1,
      "**Use Case**: Knowledge retrieval, experience recall, context building\n\n### 24. **reflect**\n\n**Purpose**: Engage in self-reflection and metacognition\n**Workflow**:": 1,
      "Request \u2192 Environment Scan \u2192 Variable Filtering \u2192 Safe Variables Return": 1,
      "Information + Importance \u2192 Emotional Tagging \u2192 Memory Storage \u2192 Confirmation": 1,
      "1. Tool Selection \u2192 2. Parameter Preparation \u2192 3. Tool Execution \u2192 4. Result Processing \u2192 5. Action/Response": 1,
      "3. **quick_memory_chat**": 1,
      "24. **reflect**": 1,
      "Request \u2192 Connection Test \u2192 Service Validation \u2192 Connection Status Return": 1,
      "**Use Case**: Simple questions, quick responses, when full memory context isn't needed\n\n## \ud83d\udd0c Plugin Management Tools\n\n### 4. **list_plugins**\n\n**Purpose**: List all loaded plugins and their information\n**Workflow**:": 1,
      "\ud83e\udde0 Cognitive Brain Plugin Tools": 1,
      "**Use Case**: Debugging, performance analysis, usage tracking\n\n### 32. **get_session_statistics**\n\n**Purpose**: Get comprehensive session statistics and performance metrics\n**Workflow**:": 1,
      "get_cursor_context() \u2192 ai_chat_with_memory() \u2192 track_cursor_conversation()": 1,
      "File Path + Content \u2192 Directory Creation (if needed) \u2192 File Writing \u2192 Success Confirmation": 1,
      "Use appropriate data types": 1,
      "Request \u2192 Resource Monitoring \u2192 Metrics Collection \u2192 Resource Report Return": 1,
      "9. **search_memory**": 1,
      "Use lightweight tools for simple tasks": 1,
      "**Use Case**: Building conversation context, maintaining session state\n\n### 11. **get_context_summary**\n\n**Purpose**: Get a summary of recent conversation context\n**Workflow**:": 1,
      "1. **Tool Selection**": 1,
      "**Use Case**: Learning improvement, self-awareness, performance analysis\n\n### 25. **consciousness_check**\n\n**Purpose**: Check current state of consciousness and awareness\n**Workflow**:": 1,
      "Plugin Name \u2192 Plugin Unload \u2192 Plugin Reload \u2192 Status Return": 1,
      "**Use Case**: Configuration checking, environment debugging, security auditing\n\n## \ud83e\udde0 Cognitive Brain Plugin Tools\n\n### 21. **think**\n\n**Purpose**: Think and respond with memory and context\n**Workflow**:": 1,
      "\ud83d\udd0d Analysis and Monitoring Tools": 1,
      "2. **Parameter Optimization**": 1,
      "**Use Case**: File system navigation, project exploration, directory management\n\n### 16. **file_exists**\n\n**Purpose**: Check if a file or directory exists\n**Workflow**:": 1,
      "**Use Case**: Environment verification, dependency checking, debugging\n\n### 20. **get_environment_vars**\n\n**Purpose**: Get environment variables (filtered for security)\n**Workflow**:": 1,
      "1. Context Retrieval \u2192 2. Tool Execution \u2192 3. Memory Storage \u2192 4. Response Generation \u2192 5. Learning Update": 1,
      "20. **get_environment_vars**": 1,
      "Error Handling Workflow": 1,
      "30. **cursor_auto_inject_context**": 1,
      "Context + Type \u2192 Context Storage \u2192 History Update \u2192 Confirmation": 1,
      "**Use Case**: Knowledge acquisition, document processing, continuous learning\n\n### 27. **dream**\n\n**Purpose**: Background processing and memory consolidation\n**Workflow**:": 1,
      "Implement fallback strategies": 1,
      "Batch operations when possible": 1,
      "Keyword \u2192 Memory Search \u2192 Pattern Matching \u2192 Relevant Results Return": 1,
      "**Use Case**: Debugging, usage analysis, pattern recognition\n\n### 34. **get_comprehensive_system_status**\n\n**Purpose**: Get complete system status overview\n**Workflow**:": 1,
      "**Use Case**: Accessing saved information, retrieving context, user preferences\n\n### 9. **search_memory**\n\n**Purpose**: Search memory entries by keyword\n**Workflow**:": 1,
      "26. **learn_from**": 1,
      "File Path \u2192 File Existence Check \u2192 Content Reading \u2192 Content Return": 1,
      "19. **get_python_info**": 1,
      "Request \u2192 Platform Detection \u2192 System Info Collection \u2192 System Details Return": 1,
      "### System Monitoring": 1,
      "list_directory() \u2192 file_exists() \u2192 read_file() \u2192 write_file()": 1,
      "User Message \u2192 Quick AI Processing \u2192 Response Return": 1,
      "10. **add_context**": 1,
      "Limit + Function Name \u2192 History Retrieval \u2192 Call Analysis \u2192 History Report": 1,
      "Confirmation \u2192 Memory Clear \u2192 Storage Reset \u2192 Confirmation Return": 1,
      "\ud83d\udee0\ufe0f Tools and Workflows Guide": 1,
      "Request \u2192 System Scan \u2192 Status Collection \u2192 Comprehensive Report": 1,
      "Key + Value + Tags \u2192 Memory Storage \u2192 Persistence \u2192 Success Confirmation": 1,
      "### Error Handling Workflow": 1,
      "`key`: Unique identifier for the memory": 1,
      ": AI model to use (default: \"assistant\")\n  **Use Case**: Main conversation interface with memory persistence\n\n### 3. **quick_memory_chat**\n\n**Purpose**: Fast, lightweight chat without full memory processing\n**Workflow**:": 1,
      "37. **list_available_models**": 1,
      "Request \u2192 State Assessment \u2192 Awareness Check \u2192 Consciousness Report": 1,
      "Request \u2192 Sample Data Generation \u2192 Memory Operations Test \u2192 Test Results Return": 1,
      "15. **list_directory**": 1,
      "36. **test_memory_system**": 1,
      "12. **clear_memory**": 1,
      "**Use Case**: Model selection, system configuration, capability discovery\n\n## \ud83d\udd04 Tool Workflow Patterns\n\n### Basic Tool Usage Pattern": 1,
      "34. **get_comprehensive_system_status**": 1,
      "\ud83e\udde0 Memory and Context Tools": 1,
      ": Optional categorization tags\n  **Use Case**: Saving important information, user preferences, conversation context\n\n### 8. **retrieve_memory**\n\n**Purpose**: Retrieve information from memory by key\n**Workflow**:": 1,
      "Always check for errors in tool responses": 1,
      "29. **track_cursor_conversation**": 1,
      "**Use Case**: File validation, conditional operations, error prevention\n\n## \ud83d\udcbb System Information Tools\n\n### 17. **get_system_info**\n\n**Purpose**: Get general system information\n**Workflow**:": 1,
      "Request \u2192 Background Processing \u2192 Memory Consolidation \u2192 Processing Status": 1,
      "Directory Path \u2192 Path Validation \u2192 Directory Scanning \u2192 File List Return": 1,
      "### Performance Monitoring Workflow": 1,
      "23. **recall**": 1,
      "Request \u2192 Python Environment Check \u2192 Version/Path Info \u2192 Python Details Return": 1,
      "Choose the most specific tool for your task": 1,
      ": The user's input message\n-": 1,
      "**Use Case**: Finding related information, context discovery, knowledge retrieval\n\n### 10. **add_context**\n\n**Purpose**: Add context information to conversation history\n**Workflow**:": 1,
      "**Use Case**: Seamless conversation flow, automatic context provision\n\n## \ud83d\udd0d Analysis and Monitoring Tools\n\n### 31. **get_function_call_history**\n\n**Purpose**: Get comprehensive function call history with traceability\n**Workflow**:": 1,
      "6. **server_status**": 1,
      "Monitor tool execution times": 1,
      "Query + Depth \u2192 Memory Search \u2192 Pattern Matching \u2192 Relevant Memories Return": 1,
      "\ud83d\udcbb System Information Tools": 1,
      "\ud83d\ude80 Advanced Tool Combinations": 1,
      "7. **store_memory**": 1,
      "get_system_info() \u2192 get_resource_usage() \u2192 get_comprehensive_system_status()": 1,
      "\ud83c\udfaf Best Practices for Tool Usage": 1,
      "**Use Case**: Understanding conversation flow, context review, session management\n\n### 12. **clear_memory**\n\n**Purpose**: Clear all memory entries\n**Workflow**:": 1,
      "28. **get_cursor_context**": 1,
      "Basic Tool Usage Pattern": 1,
      "5. **reload_plugin**": 1,
      "Problem Solving": 1,
      "**Use Case**: System health, cognitive state monitoring, debugging\n\n### 26. **learn_from**\n\n**Purpose**: Learn from text content or documents\n**Workflow**:": 1,
      "`user_message`: The user's input message": 1,
      "17. **get_system_info**": 1,
      "**Use Case**: Creating files, saving data, writing logs\n\n### 15. **list_directory**\n\n**Purpose**: List files and directories in a path\n**Workflow**:": 1,
      "2. **ai_chat_with_memory**": 1,
      "think() \u2192 search_memory() \u2192 learn_from() \u2192 remember()": 1,
      "Message + Context \u2192 Memory Retrieval \u2192 Cognitive Processing \u2192 Thoughtful Response": 1,
      "User Message \u2192 Memory Context Retrieval \u2192 AI Processing \u2192 Response Generation \u2192 Memory Storage \u2192 Response Return": 1,
      "\ud83c\udfaf Cursor Integration Tools": 1,
      "**Use Case**: Memory optimization, background learning, system maintenance\n\n## \ud83c\udfaf Cursor Integration Tools\n\n### 28. **get_cursor_context**\n\n**Purpose**: Get comprehensive context for Cursor conversations\n**Workflow**:": 1,
      "User Request \u2192 brain_info() \u2192 Returns brain capabilities, status, and configuration": 1,
      "33. **search_function_calls**": 1,
      "**Use Case**: Cursor IDE integration, conversation continuity, user context\n\n### 29. **track_cursor_conversation**\n\n**Purpose**: Track Cursor conversation for learning and context\n**Workflow**:": 1,
      "**Benefits Achieved**": 1,
      "output_and_action": 1,
      "**Root Cause Analysis**": 1,
      "**1. Docker Container Rebuild**": 1,
      "**Eliminated duplication** and redundancy": 1,
      "\u274c Tool duplication": 1,
      "**Faster tool discovery** through domain organization": 1,
      "**Result**: Eliminated enhanced brain tool duplication": 1,
      "EnhancedBrainTools": 1,
      "**Final Tool Architecture**": 1,
      "processing_and_thinking": 1,
      "Actions: `ai_chat_with_memory`, `auto_process_message`, `get_user_context`, `remember_important`, `recall_intelligently`, `forget_selectively`": 1,
      "python\n@mcp.tool()\n@log_mcp_tool\ndef perceive_and_analyze(action: str, content: str = \"\", context: str = \"\", **kwargs) -> dict:\n    \"\"\"\ud83e\udde0 PERCEPTION & INPUT: Unified interface for all perception and analysis tools\"\"\"\n    if action == \"brain_info\":\n        # Return brain info functionality\n    elif action == \"list_plugins\":\n        # Return plugin listing functionality\n    # ... etc": 1,
      "**Maintainable codebase** with consolidated tools": 1,
      "memory_and_storage": 1,
      "**Cleaner Cursor interface**": 1,
      "Test functionality through action-based routing": 1,
      "\u2705 **Organization**: 6 cognitive domains": 1,
      "**Optimized tool routing**": 1,
      "**Success Metrics**": 1,
      "`perceive_and_analyze` - Unified perception and analysis": 1,
      "bash\ndocker-compose logs memory_mcp_server --tail=15 | grep \"Total MCP tools\"\n# Expected: \"\ud83d\ude80 Total MCP tools available: 6 consolidated tools\"": 1,
      "Prevented 12 additional tools from being registered": 1,
      "\u2705 Clean, organized interface": 1,
      "\u2705 6 cognitive domains": 1,
      "Commented out **30+ individual `@mcp.tool()` decorators**": 1,
      "**Solution Implemented**": 1,
      "#### **Action-Based Routing**\n\n- **Single tool interface** with multiple actions\n- **Preserves all original functionality**\n- **Eliminates tool duplication**\n- **Maintains backward compatibility**\n\n### **Results Achieved**\n\n#### **Before (48 Tools)**\n\n- \u274c Overwhelming tool list\n- \u274c Multiple similar tools\n- \u274c Hard to find right tool\n- \u274c Tool duplication\n- \u274c Complex navigation\n\n#### **After (6 Tools)**\n\n- \u2705 Clean, organized interface\n- \u2705 6 cognitive domains\n- \u2705 Easy tool discovery\n- \u2705 Zero duplication\n- \u2705 Human brain-inspired organization\n\n### **Verification Steps**\n\n#### **1. Docker Container Rebuild**": 1,
      "\ud83d\ude80 **MISSION ACCOMPLISHED: 48 \u2192 6 Tools (87.5% Reduction)**": 1,
      "**Action-Based Routing**": 1,
      "\u274c Overwhelming tool list": 1,
      "enhanced_brain_tools_simple.py": 1,
      "**After (6 Tools)**": 1,
      "**Phase 1: Comment Out Individual Tools**": 1,
      "workflow_optimization": 1,
      "\u274c Complex navigation": 1,
      "**Conclusion**": 1,
      "#### **3. Tool Count Verification**": 1,
      "**3. Tool Count Verification**": 1,
      "\u2705 Human brain-inspired organization": 1,
      "\u2705 **Tool Count**: 48 \u2192 6 (**87.5% reduction**)": 1,
      "**For Users**": 1,
      "bash\ndocker exec memory_mcp_server uv run python -c \"from main import mcp; print('Tools:', len([f for f in dir(mcp) if f.startswith('tool_')]))\"\n# Expected: \"Tools: 0\" (no direct tool decorators)": 1,
      "`learning_and_adaptation` - Unified learning operations": 1,
      "Actions: `learn_from`, `continuous_learning_cycle`, `enhanced_workflow_execution`, `workflow_optimization`, `workflow_performance_analysis`, `batch_workflow_processing`": 1,
      "Verify all functionality works": 1,
      "Check tool response times": 1,
      "learning_and_adaptation": 1,
      "### **Benefits Achieved**\n\n#### **For Users**\n\n- **75% fewer tools** to navigate\n- **Cognitive domain organization** for intuitive use\n- **Preserved functionality** with better UX\n- **Cleaner Cursor interface**\n\n#### **For Developers**\n\n- **Maintainable codebase** with consolidated tools\n- **Clear tool organization** by cognitive function\n- **Eliminated duplication** and redundancy\n- **Human brain-inspired architecture**\n\n#### **For System Performance**\n\n- **Reduced memory usage** from fewer tool registrations\n- **Faster tool discovery** through domain organization\n- **Cleaner MCP server** with minimal tool overhead\n- **Optimized tool routing**\n\n### **Next Steps for User**\n\n#### **1. Test in Cursor**\n\n- Restart Cursor to load new MCP configuration\n- Verify only 6 tools are visible\n- Test functionality through action-based routing\n\n#### **2. Tool Usage Examples**": 1,
      "**Cognitive domain organization** for intuitive use": 1,
      "**Problem Identified**": 1,
      "`processing_and_thinking` - Unified thinking operations": 1,
      "`output_and_action` - Unified action operations": 1,
      "`self_monitoring` - Unified monitoring operations": 1,
      "await mcp.call_tool(\"list_plugins\")": 1,
      "Actions: `think_deeply`, `reflect_enhanced`, `understand_deeply`, `code_analyze`, `debug_intelligently`, `refactor_safely`": 1,
      "**Technical Implementation**": 1,
      "**For Developers**": 1,
      "**Results Achieved**": 1,
      "python\n# Instead of calling individual tools:\n# await mcp.call_tool(\"brain_info\")\n# await mcp.call_tool(\"list_plugins\")\n\n# Use consolidated tools with actions:\nawait mcp.call_tool(\"perceive_and_analyze\", action=\"brain_info\")\nawait mcp.call_tool(\"perceive_and_analyze\", action=\"list_plugins\")": 1,
      "**Human brain-inspired architecture**": 1,
      "@mcp.tool()": 1,
      "get_user_context": 1,
      "**Before (48 Tools)**": 1,
      "**Single tool interface** with multiple actions": 1,
      "#### **2. Log Verification**": 1,
      "**Reduced memory usage** from fewer tool registrations": 1,
      "**Preserves all original functionality**": 1,
      "**Cleaner MCP server** with minimal tool overhead": 1,
      "\u2705 Zero duplication": 1,
      "**1. Test in Cursor**": 1,
      "**Next Steps for User**": 1,
      "\u2705 Easy tool discovery": 1,
      "**Eliminates tool duplication**": 1,
      "\u274c Multiple similar tools": 1,
      "**Phase 3: Create Consolidated Cognitive System**": 1,
      "Report any issues with action routing": 1,
      "Actions: `consciousness_check`, `memory_stats`, `dream`, `initialize_chat_session`, `track_cursor_conversation`, `cursor_auto_inject_context`": 1,
      "\u2705 **Duplication**: 0% (eliminated)": 1,
      "**100% functionality preserved** through action-based routing": 1,
      "**For System Performance**": 1,
      "Expected: \"\ud83d\ude80 Total MCP tools available: 6 consolidated tools\"": 1,
      "Actions: `generate_memory_enhanced_response`, `orchestrate_tools`, `tool_performance_analysis`, `context_quality_assessment`, `workflow_health_check`, `enhanced_context_workflow`": 1,
      "context_quality_assessment": 1,
      "Expected: \"Tools: 0\" (no direct tool decorators)": 1,
      "**Preserved functionality** with better UX": 1,
      "**Tool Registration Method**": 1,
      "Actions: `brain_info`, `list_plugins`, `server_status`, `get_cursor_context`, `enhanced_context_retrieval`, `analyze_context_deeply`, `detect_patterns`, `assess_complexity`": 1,
      "Use consolidated tools with actions:": 1,
      "\ud83c\udfaf TOOL CONSOLIDATION SUCCESS REPORT": 1,
      "Restart Cursor to load new MCP configuration": 1,
      "enhanced_workflow_execution": 1,
      "\u2705 **Maintainability**: Dramatically enhanced": 1,
      "**Phase 2: Disable Enhanced Brain Tools**": 1,
      "Instead of calling individual tools:": 1,
      "**2. Log Verification**": 1,
      "**75% fewer tools** to navigate": 1,
      "generate_memory_enhanced_response": 1,
      "Preserved all functionality in consolidated tools": 1,
      "bash\ndocker-compose down\ndocker-compose build --no-cache memory_mcp_server\ndocker-compose up -d": 1,
      "tool_performance_analysis": 1,
      "**Maintains backward compatibility**": 1,
      "**Clear tool organization** by cognitive function": 1,
      "**6 unified tools** organized in human brain-inspired domains": 1,
      "**Result**: Clean, organized tool interface": 1,
      "\u274c Hard to find right tool": 1,
      "**Verification Steps**": 1,
      "Verify only 6 tools are visible": 1,
      "workflow_performance_analysis": 1,
      "**Result**: Eliminated tool duplication": 1,
      "\u2705 **Functionality**: 100% preserved": 1,
      "await mcp.call_tool(\"brain_info\")": 1,
      "`memory_and_storage` - Unified memory operations": 1,
      "Commented out `EnhancedBrainTools` initialization": 1,
      "**2. Tool Usage Examples**": 1,
      "enhanced_context_workflow": 1,
      "\u2705 **User Experience**: Significantly improved": 1,
      "**3. Monitor Performance**": 1,
      "identity_profiles": 1,
      "Step 1: Load user identity profile": 1,
      "search_memories": 1,
      "dict": 1,
      "Import and use ContextAnalyzer directly": 1,
      "Perform deep context analysis on the query for better understanding": 1,
      "Fallback to direct context analysis": 1,
      "ContextAnalyzer": 1,
      "Enhanced categorization using context analysis": 1,
      "emotion_activity": 1,
      "ai_model_name": 1,
      "database": 1,
      "Create a mock storage adapter for the analyzer": 1,
      "Path": 1,
      "Create and use the context analyzer": 1,
      "Default consciousness state": 1,
      "lesson_type": 1,
      "context_analysis": 1,
      "recent_topics": 1,
      "Register clean, human brain-inspired tools with enhanced contextual understanding": 1,
      "storage": 1,
      "category": 1,
      "context_score": 1,
      "key": 1,
      "_register_brain_tools": 1,
      "logger": 1,
      "storage_success": 1,
      "Add context-based insights": 1,
      "search_limit": 1,
      "Get information about available brain tools": 1,
      "hashlib": 1,
      "__init__": 1,
      "context_insights": 1,
      "context_layers": 1,
      "This would trigger background memory consolidation": 1,
      "Step 2: Get recent conversation history for this user": 1,
      "Limit content size for MCP compatibility": 1,
      "BrainInterface": 1,
      "session_id": 1,
      "explicit_content": 1,
      "Enhanced tags based on context analysis": 1,
      "text": 1,
      "tags": 1,
      "Generate simple hash for storage key": 1,
      "str": 1,
      "frontal_activity": 1,
      "Count memories by type": 1,
      "Limit error message size": 1,
      "key_memories": 1,
      "Add the cognitive brain plugin path": 1,
      "context_analyzer": 1,
      "get_brain_state": 1,
      "page_count": 1,
      "memory_value": 1,
      "First, perform deep context analysis for enhanced understanding": 1,
      "Analyze the content": 1,
      "Step 6: Update brain state with session info": 1,
      "technical_terms": 1,
      "plugin_path": 1,
      "get_brain_db": 1,
      "feedback": 1,
      "Process with memory system for integration": 1,
      "summary_parts": 1,
      "memory_search_results": 1,
      "complexity_level": 1,
      "analysis_type": 1,
      "summary": 1,
      "context_enhanced_confidence": 1,
      "session_updates": 1,
      "context_activity": 1,
      "Create enhanced summary with context": 1,
      "documents": 1,
      "Perform deep context analysis for enhanced learning": 1,
      "Extract technical terms and concepts": 1,
      "Use direct context analysis as fallback": 1,
      "Enhanced memory tags based on context analysis": 1,
      "MockStorageAdapter": 1,
      "page_size": 1,
      "Adjust recall confidence based on context understanding": 1,
      "content_hash": 1,
      "Database size": 1,
      "typing": 1,
      "sys": 1,
      "Basic complexity assessment": 1,
      "recent": 1,
      "Step 4: Get relevant learning content": 1,
      "Enhanced relevance scoring using context analysis": 1,
      "memory_result": 1,
      "result": 1,
      "complexity_category": 1,
      "memory_key": 1,
      "Perform deep context analysis for enhanced memory formation": 1,
      "interaction_summary": 1,
      "db_size_mb": 1,
      "Generate a summary of previous interactions and relevant context": 1,
      "base_confidence": 1,
      "value": 1,
      "Try to use the new analyze_context_deeply tool": 1,
      "memory_counts": 1,
      "limit": 1,
      "content_lower": 1,
      "query": 1,
      "content": 1,
      "recent_conversations": 1,
      "Convert depth to search intensity": 1,
      "analyzer": 1,
      "Create a simple brain state": 1,
      "Return enhanced, context-aware response": 1,
      "Enhanced fallback reflection with context analysis": 1,
      "learning_topics": 1,
      "recent_memories": 1,
      "user_message": 1,
      "memory_activity": 1,
      "pathlib": 1,
      "implicit_goals": 1,
      "Clean interface that mirrors human brain functions": 1,
      "Step 5: Generate interaction summary": 1,
      "words": 1,
      "Store in database": 1,
      "Step 3: Search for relevant memories and experiences": 1,
      "Perform deep context analysis on the reflection topic": 1,
      "Get basic stats": 1,
      "mcp": 1,
      "FastMCP": 1,
      "enhanced_tags": 1,
      "Format user persona summary": 1,
      "Store main learning in memory": 1,
      "Get recent activity": 1,
      "relevant_chunks": 1,
      "important_words": 1,
      "datetime": 1,
      "complexity_score": 1,
      "Enhanced keyword extraction using context analysis": 1,
      "Enhanced reflection with context insights": 1,
      "key_points": 1,
      "emotional_weight": 1,
      "parts": 1,
      "SimpleBrainState": 1,
      "cursor": 1,
      "topic": 1,
      "user_profile": 1,
      "Enhanced processing with context analysis": 1,
      "source": 1,
      "client": 1,
      "memory_store": 1,
      "Basic pattern detection": 1,
      "Extract key information from content with context insights": 1,
      "Use the underlying memory-enhanced chat with context insights": 1,
      "sqlite3": 1,
      "Base score": 1,
      "self": 1,
      "directories": 1,
      "logs_dir": 1,
      "Organize documentation files.": 1,
      "Clean up logs directory.": 1,
      "docker_files": 1,
      "Main Dockerfile": 1,
      "!/usr/bin/env python3": 1,
      "recursive": 1,
      "Remove __pycache__ directories": 1,
      "## \ud83c\udfd7\ufe0f  New Structure": 1,
      "Database components": 1,
      "Create docs directory if it doesn't exist": 1,
      "Move documentation files to docs directory": 1,
      "Configuration files": 1,
      "doc_files": 1,
      "Remove Python cache files and directories.": 1,
      "# Getting Started": 1,
      "cleanup_python_cache": 1,
      "Project configuration": 1,
      "main": 1,
      "cache_path": 1,
      "glob": 1,
      "# Cleanup Script": 1,
      "docs_dir": 1,
      "dir_name": 1,
      "create_cleanup_readme": 1,
      "ignore_errors": 1,
      "exist_ok": 1,
      "cleanup_documentation": 1,
      "Consolidate Docker configurations.": 1,
      "shutil": 1,
      "Create a clean project structure.": 1,
      "cleanup_readme": 1,
      "Test files": 1,
      "# Docker Configuration": 1,
      "Create a README explaining the cleanup.": 1,
      "Create necessary directories": 1,
      "dest_path": 1,
      "__name__": 1,
      "Source code": 1,
      "Main project README": 1,
      "## \u2705 Removed": 1,
      "Main Docker configuration": 1,
      "Keep the main docker-compose.yml and remove duplicates": 1,
      "cleanup_docker_files": 1,
      "All documentation files": 1,
      "Utility scripts": 1,
      "## \ud83d\udcc1 Reorganized": 1,
      "create_project_structure": 1,
      "Remove .pyc and .pyo files": 1,
      "cleanup_logs": 1,
      "Main cleanup function.": 1,
      "Remove empty logs directory": 1,
      "Plugin system": 1,
      "# What Was Cleaned Up": 1,
      "Show first 2": 1,
      "timeframe": 1,
      "batch_messages": 1,
      "context_depth": 1,
      "optimization_result": 1,
      "quality_result": 1,
      "level": 1,
      "Workflow Performance Analysis": 1,
      "Setup logging": 1,
      "Initialize plugins": 1,
      "target_goal": 1,
      "Enhanced Workflow Execution": 1,
      "phase3_result": 1,
      "Phase 1 only": 1,
      "Run individual phase demonstration": 1,
      "include_learning": 1,
      "Demo user message": 1,
      "tool_performance_result": 1,
      "Phase 2: Tool Orchestration": 1,
      "phase1_result": 1,
      "Workflow Health Check": 1,
      "format": 1,
      "plugins": 1,
      "learning_result": 1,
      "demonstrate_enhanced_context_system": 1,
      "Phase 3: Continuous Learning": 1,
      "Tool Performance Analysis": 1,
      "optimization_focus": 1,
      "Main demonstration function": 1,
      "result2": 1,
      "EnhancedContextIntegrationPlugin": 1,
      "plugin": 1,
      "comprehensive_result": 1,
      "include_recommendations": 1,
      "status_icon": 1,
      "Run main demonstration": 1,
      "performance_result": 1,
      "EnhancedWorkflowOrchestratorPlugin": 1,
      "Demonstrate the complete enhanced context system": 1,
      "result3": 1,
      "Show current performance": 1,
      "result1": 1,
      "Show learning insights": 1,
      "workflow_data": 1,
      "Add paths": 1,
      "workflow_orchestrator_plugin": 1,
      "Show top performing tools": 1,
      "Show top 3": 1,
      "Show tool recommendations": 1,
      "orchestration_result": 1,
      "phase2_result": 1,
      "Show context components": 1,
      "status": 1,
      "workflow_result": 1,
      "tool_name": 1,
      "asyncio": 1,
      "include_history": 1,
      "reverse": 1,
      "Import the enhanced context integration plugin": 1,
      "Demonstrate individual phases separately": 1,
      "check_level": 1,
      "interaction_data": 1,
      "assessment": 1,
      "error": 1,
      "include_preferences": 1,
      "analysis": 1,
      "demo_message": 1,
      "batch_result": 1,
      "Context Quality Assessment": 1,
      "Show phase details": 1,
      "current_perf": 1,
      "health_result": 1,
      "tool_scores": 1,
      "assessment_criteria": 1,
      "Show first 3": 1,
      "batch_data": 1,
      "workflow_mode": 1,
      "learning_focus": 1,
      "comprehensive_context": 1,
      "Batch Processing Demo": 1,
      "target_metrics": 1,
      "Phase 1: Enhanced Context Retrieval": 1,
      "Phase 3 only": 1,
      "context_data": 1,
      "enhanced_context_plugin": 1,
      "demonstrate_individual_phases": 1,
      "Phase 2 only": 1,
      "health_data": 1,
      "optimization_data": 1,
      "demo_mcp_integration": 1,
      "project_scanner": 1,
      "scanner": 1,
      "summary_export": 1,
      "Project structure": 1,
      "tech_stack": 1,
      "Integration points": 1,
      "Language breakdown": 1,
      "Framework detection": 1,
      "language": 1,
      "scan_duration": 1,
      "Display summary": 1,
      "Python files": 1,
      "file_type": 1,
      "config_files": 1,
      "Perform comprehensive scan": 1,
      "Show MCP integration": 1,
      "Demonstrate the project scanner capabilities": 1,
      "Run project scanning demo": 1,
      "Summary export": 1,
      "structure": 1,
      "json": 1,
      "Sample files by category": 1,
      "demo_project_scanning": 1,
      "time": 1,
      "Save demo results": 1,
      "action": 1,
      "percentage": 1,
      "indent": 1,
      "Documentation files": 1,
      "Initialize scanner for current project": 1,
      "Show first 3 changes": 1,
      "File type analysis": 1,
      "json_export": 1,
      "Main demo function": 1,
      "demo_file": 1,
      "Show how this integrates with our MCP system": 1,
      "project_index": 1,
      "current_dir": 1,
      "Change detection demo": 1,
      "Technology stack": 1,
      "file_types": 1,
      "python_files": 1,
      "Export capabilities": 1,
      "JSON export": 1,
      "frameworks": 1,
      "changes": 1,
      "ProjectScanner": 1,
      "languages": 1,
      "start_time": 1,
      "domains": 1,
      "tool": 1,
      "overall_score": 1,
      "4. LEARNING & ADAPTATION": 1,
      "Get the tool handler": 1,
      "Learning and adaptation": 1,
      "handler": 1,
      "name": 1,
      "learning_data": 1,
      "cycle_result": 1,
      "Demonstrate the restructured cognitive system": 1,
      "5. OUTPUT & ACTION": 1,
      "6. SELF-MONITORING": 1,
      "Show consolidation benefits": 1,
      "1. PERCEPTION & INPUT": 1,
      "thinking_result": 1,
      "focus_area": 1,
      "monitoring_data": 1,
      "monitor_result": 1,
      "Auto-process message": 1,
      "domains_to_test": 1,
      "tool_count": 1,
      "monitoring_type": 1,
      "Get all available tools": 1,
      "process_result": 1,
      "results": 1,
      "learned": 1,
      "Demonstrate natural cognitive workflow": 1,
      "quality_score": 1,
      "tools": 1,
      "Initialize the plugin": 1,
      "demonstrate_individual_domains": 1,
      "2. MEMORY & STORAGE": 1,
      "Test the tool (basic functionality check)": 1,
      "3. PROCESSING & THINKING": 1,
      "interaction": 1,
      "demonstrate_restructured_cognitive_system": 1,
      "Import the restructured cognitive brain plugin": 1,
      "Test each domain individually": 1,
      "orchestration_data": 1,
      "patterns": 1,
      "CognitiveBrainRestructuredPlugin": 1,
      "metrics": 1,
      "Execute enhanced workflow": 1,
      "description": 1,
      "analysis_data": 1,
      "target": 1,
      "store_result": 1,
      "Display tools by domain": 1,
      "context_result": 1,
      "Group tools by cognitive domain": 1,
      "success_rate": 1,
      "Demonstrate individual cognitive domains": 1,
      "Memory operations": 1,
      "Run individual domain demonstration": 1,
      "thought": 1,
      "Enhanced reflection with context analysis": 1,
      "\ud83d\udd0d ANALYSIS & UNDERSTANDING TOOLS": 1,
      "\ud83d\ude80 CURSOR-SPECIFIC TOOLS": 1,
      "\ud83c\udf1f CONTEXT ANALYSIS TOOLS": 1,
      "Perform context analysis on the reflection topic": 1,
      "Register enhanced cognitive tools": 1,
      "\ud83e\udde0 COGNITIVE CORE TOOLS": 1,
      "Simple pattern matching as fallback": 1,
      "Register the think_deeply tool": 1,
      "Deep thinking with full context analysis": 1,
      "Register all enhanced brain tools with clear purposes": 1,
      "_register_cognitive_tools": 1,
      "Direct context analysis using ContextAnalyzer module": 1,
      "_register_memory_tools": 1,
      "_register_analysis_tools": 1,
      "Perform deep context analysis": 1,
      "code_patterns": 1,
      "Use the full ContextAnalyzer functionality": 1,
      "Simple code pattern analysis": 1,
      "Fallback context analysis when ContextAnalyzer is unavailable": 1,
      "registry": 1,
      "_register_enhanced_tools": 1,
      "Analyze code for patterns and quality": 1,
      "Store in memory": 1,
      "Enhanced memory formation with context analysis": 1,
      "Perform context analysis on code": 1,
      "Analyze code patterns": 1,
      "_register_cursor_tools": 1,
      "Enhanced brain tools with ContextAnalyzer integration": 1,
      "Comprehensive context analysis": 1,
      "Register dedicated context analysis tools": 1,
      "Code analysis with context understanding": 1,
      "_register_context_tools": 1,
      "Deep understanding with context analysis": 1,
      "Register Cursor-specific tools": 1,
      "Perform comprehensive context analysis": 1,
      "Register analysis and understanding tools": 1,
      "Use memory-enhanced chat": 1,
      "Register enhanced memory tools": 1,
      "Get reflection insights": 1,
      "\ud83e\udde0 MEMORY MANAGEMENT TOOLS": 1,
      "Register the reflect_enhanced tool": 1,
      "Filter by pattern type if specified": 1,
      "Register the detect_patterns tool": 1,
      "Assess risks of refactoring plan": 1,
      "Limit to 2 steps for safety": 1,
      "Analyze code structure for refactoring": 1,
      "Perform context analysis on the query": 1,
      "Generate steps based on goal and structure": 1,
      "Register the debug_intelligently tool": 1,
      "Calculate overall complexity score": 1,
      "complexity_layers": 1,
      "Calculate complexity of a class": 1,
      "Extract different types of patterns": 1,
      "Context pattern matching": 1,
      "Perform context analysis on the refactoring goal": 1,
      "Search memories with enhanced context": 1,
      "Calculate confidence score for detected patterns": 1,
      "Check context patterns": 1,
      "Add debugging hints based on error message": 1,
      "Register the refactor_safely tool": 1,
      "combined_content": 1,
      "End of function": 1,
      "confidence_sum": 1,
      "refactoring_plan": 1,
      "lines": 1,
      "enhanced_results": 1,
      "Analyze current code structure": 1,
      "Register the recall_intelligently tool": 1,
      "technical_score": 1,
      "Assess risks based on plan steps": 1,
      "technical_indicators": 1,
      "pattern_count": 1,
      "Analyze code for debugging patterns": 1,
      "Perform selective cleanup based on context": 1,
      "int": 1,
      "memory_str": 1,
      "bool": 1,
      "Register the remember_important tool": 1,
      "enhanced_memory": 1,
      "Register the analyze_context_comprehensive tool": 1,
      "Register the code_analyze tool": 1,
      "complexity_assessment": 1,
      "Assess emotional complexity from context analysis": 1,
      "Perform context analysis on the cleanup criteria": 1,
      "debugging_recommendations": 1,
      "Check for common logical issues": 1,
      "nesting_level": 1,
      "Generate safe refactoring plan": 1,
      "Extract complexity information": 1,
      "safety_level": 1,
      "Comprehensive complexity assessment with ContextAnalyzer": 1,
      "line": 1,
      "Assess technical complexity of content": 1,
      "Register the understand_deeply tool": 1,
      "risks": 1,
      "plan": 1,
      "filtered_patterns": 1,
      "confirmation": 1,
      "complexity": 1,
      "Assess cognitive load of content": 1,
      "Register the assess_complexity tool": 1,
      "Safe code refactoring with ContextAnalyzer integration": 1,
      "Generate safety recommendations for refactoring": 1,
      "Intelligent memory retrieval with context analysis": 1,
      "Analyze which memories match cleanup criteria": 1,
      "Assess refactoring risks": 1,
      "code_structure": 1,
      "word_count": 1,
      "Query content matching": 1,
      "Check if memory matches cleanup criteria": 1,
      "Generate debugging recommendations": 1,
      "experiences": 1,
      "Generate refactoring plan": 1,
      "Perform context analysis on the code and error": 1,
      "search_term": 1,
      "Analyze code patterns for debugging": 1,
      "Assess contextual complexity from context analysis": 1,
      "Determine the best debugging strategy": 1,
      "method_count": 1,
      "Sort by relevance score": 1,
      "Add context-based recommendations": 1,
      "layer_count": 1,
      "End of class": 1,
      "emotional_context": 1,
      "context": 1,
      "criteria_lower": 1,
      "Add recommendations based on patterns": 1,
      "Assess different aspects of complexity": 1,
      "Intelligent debugging with ContextAnalyzer integration": 1,
      "Check for common syntax issues": 1,
      "Calculate complexity of a function": 1,
      "Helper methods for enhanced tools": 1,
      "Adjust risk level based on safety level": 1,
      "Generate recommendations based on complexity assessment": 1,
      "total_patterns": 1,
      "Selective memory cleanup with context analysis": 1,
      "cleanup_result": 1,
      "Enhance results with context analysis": 1,
      "Advanced pattern detection with ContextAnalyzer": 1,
      "memories_to_clean": 1,
      "Check if criteria appears in memory": 1,
      "risk_assessment": 1,
      "Register the forget_selectively tool": 1,
      "sentence_count": 1,
      "Calculate relevance score for memory retrieval": 1,
      "debug_patterns": 1,
      "Identify refactoring opportunities": 1,
      "Adjust plan based on safety level": 1,
      "base_score": 1,
      "_global_logger": 1,
      "input_data": 1,
      "error_message": 1,
      "successful_calls": 1,
      "inspect": 1,
      "Specific decorator for memory operations": 1,
      "asynccontextmanager": 1,
      "Initialize the logger with database connection": 1,
      "timestamp": 1,
      "For sync functions, create a simple log entry": 1,
      "Success rate": 1,
      "_session_id": 1,
      "_database": 1,
      "Create function_calls table for comprehensive logging": 1,
      "function_type": 1,
      "track_function_call": 1,
      "async_wrapper": 1,
      "function_calls": 1,
      "avg_execution_time": 1,
      "Update call info": 1,
      "call_info": 1,
      "Global function call logger instance": 1,
      "Get function call history": 1,
      "function_name": 1,
      "_ensure_function_calls_table": 1,
      "function_breakdown": 1,
      "Average execution time": 1,
      "Extract user message if present": 1,
      "call_data": 1,
      "execution_time_ms": 1,
      "Create indexes for fast queries": 1,
      "Remove from call stack": 1,
      "log_all_calls": 1,
      "output_data": 1,
      "_enabled": 1,
      "contextlib": 1,
      "Get comprehensive statistics for current session": 1,
      "columns": 1,
      "Create function_calls table if it doesn't exist": 1,
      "default": 1,
      "end_time": 1,
      "Handle common types": 1,
      "Any": 1,
      "wraps": 1,
      "Generate unique session ID": 1,
      "Log the complete function call": 1,
      "call_id": 1,
      "Specific decorator for database operations": 1,
      "traceback": 1,
      "Safely serialize data to JSON": 1,
      "Store output data": 1,
      "Truncate long strings": 1,
      "success": 1,
      "Get or create global function call logger": 1,
      "logger_instance": 1,
      "Add to call stack": 1,
      "Calculate execution time": 1,
      "Total calls in session": 1,
      "__all__": 1,
      "call": 1,
      "FunctionCallLogger": 1,
      "Specific decorator for MCP tools": 1,
      "Return appropriate wrapper based on function type": 1,
      "Search function calls by context or content": 1,
      "Combine args and kwargs for input data": 1,
      "Function breakdown": 1,
      "sync_wrapper": 1,
      "functools": 1,
      "total_calls": 1,
      "Specific decorator for brain functions": 1,
      "brain_interface": 1,
      "Check if brain memory store exists": 1,
      "check_health": 1,
      "Check if the server is running by looking for the brain interface": 1,
      "Simple health check": 1,
      "Check if the context analyzer module exists": 1,
      "Concept extraction patterns": 1,
      "Extract content based on section": 1,
      "Extract links": 1,
      "Parse general markdown files": 1,
      "KnowledgeGraphBuilder": 1,
      "Build concept clusters based on relationships": 1,
      "source_counts": 1,
      "extracted_concepts": 1,
      "dataclass": 1,
      "base_pattern": 1,
      "content, file_path": 1,
      "Process each document": 1,
      "A node in the knowledge graph": 1,
      "Generate a human-readable summary of the knowledge graph": 1,
      "Parse API specification files (OpenAPI, etc.)": 1,
      "Create relationship between document and concept": 1,
      "Create new concept node": 1,
      "Must be a file, not directory": 1,
      "link_matches": 1,
      "\ud83d\udcca Graph Statistics": 1,
      "updated_at": 1,
      "Complete knowledge graph structure": 1,
      "Parse generic files with basic text analysis": 1,
      "Parse README files for project information": 1,
      "Parse Python files for docstrings and function/class definitions": 1,
      "definitions": 1,
      "Detect sections": 1,
      "Search for concepts in the knowledge graph": 1,
      "Common documentation file patterns": 1,
      "_analyze_patterns": 1,
      "rel_id": 1,
      "Update metadata": 1,
      "Export the knowledge graph in various formats": 1,
      "Extract JSDoc comments": 1,
      "Get the ID of an existing concept node": 1,
      "Parse based on document type": 1,
      "Skip common non-documentation files": 1,
      "_build_concept_clusters": 1,
      "concept_counts": 1,
      "Main engine for knowledge ingestion and processing": 1,
      "Detect language for appropriate pattern matching": 1,
      "Get existing concept node or create new one": 1,
      "encoding": 1,
      "section": 1,
      "search_results": 1,
      "Analyze patterns": 1,
      "knowledge_graph": 1,
      "Find concepts that might be related": 1,
      "Add markdown concepts for all files": 1,
      "markdown_patterns": 1,
      "processing_time": 1,
      "strength": 1,
      "target_node": 1,
      "(.*?)": 1,
      "\ud83d\udd17 Relationship Types": 1,
      "Read content if not provided": 1,
      "Find documentation files": 1,
      "**Max Connections**: {graph.patterns.get('connectivity', {}).get('max_connections', 0)}": 1,
      "Get the current knowledge graph": 1,
      "concept_patterns": 1,
      "Extract class definitions": 1,
      "{1,6}\\s+(.+)$', content, re.MULTILINE)": 1,
      "created_at": 1,
      "related": 1,
      "Extract docstrings": 1,
      "Remove duplicates and sort": 1,
      "func_matches": 1,
      "Relationship type analysis": 1,
      "**Total Relationships**: {graph.metadata['total_relationships']}": 1,
      "type_counts": 1,
      "Builds and maintains the knowledge graph": 1,
      "OpenAPI/Swagger format": 1,
      "Concept frequency analysis": 1,
      "Processes various types of documentation and extracts knowledge": 1,
      "source_id": 1,
      "Must be readable": 1,
      "confidence": 1,
      "Export results": 1,
      "skip_patterns": 1,
      "jsdoc_matches": 1,
      "Source analysis": 1,
      "rel_type_counts": 1,
      "{1,6}\\s+(.+)$',": 1,
      "Count connections per node": 1,
      "Basic YAML parsing (can be enhanced with PyYAML)": 1,
      "top_concepts": 1,
      "class": 1,
      "graph_builder": 1,
      "min_connections": 1,
      "Create document node": 1,
      "Save detailed graph to file": 1,
      "relationship_patterns": 1,
      "Add concept nodes": 1,
      "concept_freq": 1,
      "'):": 1,
      "\ud83d\udcda Top Concepts": 1,
      "Build the complete knowledge graph": 1,
      "Add relationship nodes": 1,
      "Find related nodes": 1,
      "avg_connections": 1,
      "project_path": 1,
      "Add document context to the knowledge graph": 1,
      "Context extracted from a document": 1,
      "# \ud83d\udd0c Connectivity": 1,
      "errors": 1,
      "(\\w+)?\\n(.*?)": 1,
      "Extract imports": 1,
      "'concept', 'file', 'function', 'class', 'pattern'": 1,
      "KnowledgeIngestionEngine": 1,
      "\ud83e\udde0 Node Types": 1,
      "output_file": 1,
      "Knowledge Graph Summary": 1,
      "collections": 1,
      "Extract function definitions": 1,
      "concept_node_id": 1,
      "Extract code blocks": 1,
      "target_id": 1,
      "Build concept clusters": 1,
      "document": 1,
      "\\s*(.+)'": 1,
      "Source files with comments": 1,
      "query_lower": 1,
      "current_section": 1,
      "Generic JSON structure": 1,
      "Main function for testing the knowledge ingestion engine": 1,
      "suffix": 1,
      "added_nodes": 1,
      "title": 1,
      "defaultdict": 1,
      "doc_node": 1,
      "doc_context": 1,
      "**Created**: {datetime.fromtimestamp(graph.created_at).strftime('%Y-%m-%d %H:%M:%S')}": 1,
      "concept_node": 1,
      "Extract relationships": 1,
      "Build metadata": 1,
      "concepts": 1,
      "docstring_matches": 1,
      "Create a relationship between two nodes": 1,
      "code_matches": 1,
      "Analyze patterns in the knowledge graph": 1,
      "Export the knowledge graph": 1,
      "Clean up descriptions": 1,
      "Add to knowledge graph": 1,
      "Config files": 1,
      "**Total Nodes**: {graph.metadata['total_nodes']}": 1,
      "Extract concepts from document content": 1,
      "Detect the programming language of a file": 1,
      "Parse JavaScript files for JSDoc comments and function definitions": 1,
      "Group concepts by source": 1,
      "A relationship between knowledge nodes": 1,
      "relationship_counter": 1,
      "Parse configuration files": 1,
      "# \ud83e\udde0 Node Types": 1,
      "# \ud83d\udcda Top Concepts": 1,
      "Recursive pattern": 1,
      "Extract concepts": 1,
      "graph": 1,
      "project_root": 1,
      "Extract headings": 1,
      "Analyze graph connectivity": 1,
      "relationships": 1,
      "max_connections": 1,
      "', '').strip()": 1,
      "dataclasses": 1,
      "data": 1,
      "Find documentation files in the project": 1,
      "class_matches": 1,
      "parser_result": 1,
      "doc_node_id": 1,
      "metadata": 1,
      "connections": 1,
      "heading_matches": 1,
      "Count nodes by type": 1,
      "Configure logging": 1,
      "Ingest all documentation from a project": 1,
      "# \ud83d\udcca Graph Statistics": 1,
      "node_counter": 1,
      "doc_patterns": 1,
      "Relationship patterns": 1,
      "DocumentationProcessor": 1,
      "matches": 1,
      "\ud83d\udd0c Connectivity": 1,
      "Check if concept already exists": 1,
      "# \ud83d\udd17 Relationship Types": 1,
      "Read first 1KB to check readability": 1,
      "Process a document and extract knowledge": 1,
      "filtered_concepts": 1,
      "Build final knowledge graph": 1,
      "',\n                'inline_code': r'": 1,
      "]+)": 1,
      "'readme', 'api_doc', 'code_comment', 'config'": 1,
      "**Total Concepts**: {graph.metadata['total_concepts']}": 1,
      "language_map": 1,
      "parsers": 1,
      "Detect the type of document for appropriate parsing": 1,
      "Filter out common words and short concepts": 1,
      "**Average Connections**: {graph.patterns.get('connectivity', {}).get('average_connections', 0):.2f}": 1,
      "nodes": 1,
      "content_type": 1,
      "file_path": 1,
      "Simple pattern": 1,
      "relationship": 1,
      "Create engine and ingest knowledge": 1,
      "Demo search": 1,
      "relationship_type": 1,
      "import_matches": 1,
      "doc_processor": 1,
      "**Total Connections**: {graph.patterns.get('connectivity', {}).get('total_connections', 0)}": 1,
      "engine": 1,
      "Check if a file is a documentation file": 1,
      "Extract relationships between concepts": 1,
      "'implements', 'depends_on', 'similar_to', 'references'": 1,
      "type": 1,
      "Ollama": 1,
      "system_prompt": 1,
      "models_result": 1,
      "Context: \"User name/identity: Johny\"": 1,
      "Get global LLM client instance": 1,
      "Question: \"What is your name?\"": 1,
      "memory_response": 1,
      "Create a more structured prompt that the LLM can't ignore": 1,
      "Global LLM client instance": 1,
      "ollama_client": 1,
      "learned_something": 1,
      "Build enhanced prompt that forces the LLM to use context": 1,
      "_global_llm_client": 1,
      "health_ok": 1,
      "OllamaClient": 1,
      "max_tokens": 1,
      "test_result": 1,
      "Test basic response": 1,
      "aiohttp": 1,
      "List models": 1,
      "MemoryEnhancedLLM": 1,
      "llm": 1,
      "timeout": 1,
      "temperature": 1,
      "Test memory-enhanced response": 1,
      "Test memory-enhanced LLM": 1,
      "full_prompt": 1,
      "messages": 1,
      "base_url": 1,
      "Test the LLM integration": 1,
      "prompt": 1,
      "Test connection": 1,
      "Generate response": 1,
      "__aexit__": 1,
      "Create system prompt for memory-enhanced conversations": 1,
      "Construct messages": 1,
      "total": 1,
      "session": 1,
      "float": 1,
      "payload": 1,
      "Convert to seconds": 1,
      "Fallback response": 1,
      "Response: \"My name is Johny!\"": 1,
      "error_text": 1,
      "Test LLM connection with a simple prompt": 1,
      "model": 1,
      "__aenter__": 1,
      "test_llm_integration": 1,
      "memory_instructions.append(f\"Context: {context_summary}\")": 1,
      "conversation_data = {": 1,
      "Store error result": 1,
      "async def analyze_tool_performance(tool_name: str = \"all\", timeframe: str = \"session\") -> dict:": 1,
      "\"success\": False,": 1,
      "# Process through brain system": 1,
      "\"assistant_name\": next((name for name in user_info.get(\"name\", []) if name.lower() in [\"johny\", \"jonathan\"]), \"Memory Assistant\"),": 1,
      "except:": 1,
      "\"memory_working\": all(r.get(\"memory_used\") for r in results[1:])  # Should have memory from 2nd message onward": 1,
      "brain_state": 1,
      "We have exactly 6 consolidated tools": 1,
      "Initialize new tool registry": 1,
      "This would call the actual auto_process_message function": 1,
      "This would call the actual initialize_chat_session function": 1,
      "\"output\": result.get(\"ai_response\", \"\"),": 1,
      "This would call the actual enhanced_workflow_execution function": 1,
      "if not mcp_client:": 1,
      "\"context\": f\"Assistant ready (memory system: {str(e)})\",": 1,
      "plugin._setup()": 1,
      "brain": 1,
      "# Function call logging stats": 1,
      "\"test_response\": test_result[\"response\"],": 1,
      "This would call the actual cursor_auto_inject_context function": 1,
      "\"phase\": \"tool_orchestration\",": 1,
      "async def get_function_call_history(limit: int = 50, function_name: str = None) -> dict:": 1,
      "llm = await get_llm_client()": 1,
      "PluginManager": 1,
      "logger.info(f\"\ud83d\udce6 Processing {len(user_messages)} messages in batch\")": 1,
      "if memory_result.get(\"success\"):": 1,
      "result = await plugin._batch_workflow_processing_handler(user_messages, workflow_mode)": 1,
      "count": 1,
      "Patch JSON operations for backward compatibility": 1,
      "This would call the actual learn_from function": 1,
      "\"Hi there! My name is Johny and I love working on AI projects.\",": 1,
      "\ud83c\udfd7\ufe0f Build Comprehensive Context": 1,
      "llm_client": 1,
      "\"content_analyzed\": content[:100] + \"...\" if len(content) > 100 else content,": 1,
      "This would call the actual dream function": 1,
      "count = cursor.fetchone()[0]": 1,
      "\"server_name\": \"Memory Context Manager with AI Memory\",": 1,
      "enhanced_brain_tools = EnhancedBrainTools(mcp_client, tool_registry)": 1,
      "async def enhanced_context_retrieval(user_message: str, include_history: bool = True, include_preferences: bool = True) -> dict:": 1,
      "# Look for context analyzer in modules": 1,
      "# STEP 4: Generate AI response with memory context": 1,
      "===== DOMAIN 6: SELF-MONITORING =====": 1,
      "memory_data = db.get_memory_store()": 1,
      "\"version\": metadata.version,": 1,
      "Generate response using real LLM": 1,
      "\"memory_context_used\": \"\",": 1,
      "if assessment_criteria is None:": 1,
      "# Execute Phase 2": 1,
      "logger.info(f\"\ud83c\udfe5 Performing workflow health check: {check_level}\")": 1,
      "Process multiple messages through the enhanced workflow efficiently.": 1,
      "user_messages: List of user messages to process": 1,
      "# Recent activity": 1,
      "test_messages": 1,
      "\ud83c\udfaf Get comprehensive context for Cursor conversations": 1,
      "# Execute workflow health check": 1,
      "\"memory_enabled\": True,": 1,
      "Extract user's name from memory context": 1,
      "\"context_available\": False,": 1,
      "\"resources_available\": len(plugin_manager.registry.resources),": 1,
      "memory_context,": 1,
      "logger.error(f\"\u274c Enhanced workflow execution failed: {str(e)}\")": 1,
      "logger.info(\"\ud83c\udfaf Phase 2: Tool Orchestration\")": 1,
      "\"learned\": learning_result.get(\"important_info_found\", []) if learning_result.get(\"success\") else [],": 1,
      "\ud83d\ude80 Execute Complete Enhanced Workflow": 1,
      "This would call the actual refactor_safely function": 1,
      "\"system_status\": \"fully_operational\",": 1,
      "response": 1,
      "result = await plugin._continuous_learning_handler(interaction_data, learning_focus)": 1,
      "This would call the actual get_user_context function": 1,
      "Create internal MCP client": 1,
      "async def orchestrate_tools(context_data: dict, target_goal: str = \"enhanced_response\") -> dict:": 1,
      "Initialize server with clean brain interface": 1,
      "logger.info(f\"\ufffd\ufffd Processing message with memory: {user_message[:50]}...\")": 1,
      "\"How are you doing today?\"": 1,
      "\"logging_enabled\": function_logger._enabled": 1,
      "logger.error(f\"\u274c Tool orchestration failed: {str(e)}\")": 1,
      "logger.error(f\"\u274c Workflow health check failed: {str(e)}\")": 1,
      "async def analyze_context_deeply(content: str, analysis_type: str = \"comprehensive\") -> dict:": 1,
      "memory_instructions = []": 1,
      "logger.info(f\"\ud83d\udd27 Optimizing workflow: {optimization_focus}\")": 1,
      "Optimization results with recommendations": 1,
      "Import LLM client": 1,
      "cursor_context": 1,
      "\"search_results\": search_results,": 1,
      "Performance analysis with metrics and recommendations": 1,
      "This would call the actual reflect_enhanced function": 1,
      "cursor = conn.execute(f\"SELECT COUNT(*) FROM {table}\")": 1,
      "user_message=user_message": 1,
      "Create server": 1,
      "Performance analysis with insights": 1,
      "# Check if brain interface is available": 1,
      "search_results = function_logger.search_calls_by_context(search_term, limit)": 1,
      "Identifies bottlenecks and implements automatic improvements.": 1,
      "optimization opportunities and usage trends.": 1,
      "ai_response": 1,
      "context_parts = []": 1,
      "# Fallback: try to get basic analysis": 1,
      "Memory client for internal tool calls": 1,
      "\"session_id\": function_logger._session_id,": 1,
      "logger.error(f\"Memory-enhanced chat error: {str(e)}\")": 1,
      "from llm_client import get_llm_client": 1,
      "Automatically executes all three phases of context enhancement in sequence:": 1,
      "return {\"context\": \"Basic assistant without memory access\"}": 1,
      "Initialize plugin manager": 1,
      "Extracts learning patterns, identifies improvements, and": 1,
      "\"learned\": learning_result.get(\"important_info_found\", []) if learning_result.get(\"success\") else []": 1,
      "# Store conversation in database": 1,
      "\ud83d\udcc8 Get comprehensive session statistics and performance metrics": 1,
      "\"What's my name again?\",": 1,
      "timeframe: Timeframe for analysis": 1,
      "\"ready_for_conversation\": True": 1,
      "logger.error(f\"\u274c Comprehensive context building failed: {str(e)}\")": 1,
      "result = await plugin._assess_context_quality_handler(context_data, assessment_criteria)": 1,
      "Detailed context analysis with insights and recommendations": 1,
      "name_pattern": 1,
      "except Exception as e:": 1,
      "context_result = await mcp_client.call_tool(": 1,
      "user_info": 1,
      "Enhanced Context Integration Tools - Phase 1, 2, and 3 Implementation": 1,
      "logger.info(\"\ud83d\udd0d Phase 1: Enhanced Context Retrieval\")": 1,
      "# Execute workflow optimization": 1,
      "logger.error(f\"\u274c Workflow performance analysis failed: {str(e)}\")": 1,
      "Selects appropriate tools, creates execution plans, and coordinates": 1,
      "\"error\": str(e)": 1,
      "- Phase 2: Tool Orchestration": 1,
      "\"consciousness_level\": \"Aware and responsive\",": 1,
      "logger.error(f\"\u274c Tool performance analysis failed: {str(e)}\")": 1,
      "\"ai_response\": ai_response,": 1,
      "\"remember\": \"\ud83e\udde0 Remember important information\",": 1,
      "Returns just the AI response string": 1,
      "check_level: Health check level (basic, comprehensive, deep)": 1,
      "\"context_available\": True,": 1,
      "plugin_info[plugin_name] = {": 1,
      "logger.error(f\"Conversation tracking error: {str(e)}\")": 1,
      "# Plugin system status": 1,
      "async def optimize_workflow(optimization_focus: str = \"performance\", target_metrics: list = None) -> dict:": 1,
      "match": 1,
      "\"logging_status\": \"active\" if function_logger._enabled else \"disabled\"": 1,
      "context_results = {}": 1,
      "\ud83d\udcca Analyze Tool Performance": 1,
      "from database import get_brain_db": 1,
      "Store successful result": 1,
      "important_info = []": 1,
      "Executes all three phases to build comprehensive context:": 1,
      "tool usage for optimal context enhancement.": 1,
      "debug_mode": 1,
      "if context_summary:": 1,
      "return {": 1,
      "\"cross_referencing_enabled\": True,": 1,
      "Shows all function calls with inputs, outputs, execution time, and context": 1,
      "async def get_comprehensive_system_status() -> dict:": 1,
      "logger.info(\"\ud83c\udfaf Assessing context quality\")": 1,
      "if user_info.get(\"preferences\"):": 1,
      "content: The text content to analyze": 1,
      "\"available_functions\": brain_functions,": 1,
      "This is where your AI agent gets memory-enhanced responses!": 1,
      "\"conversation_tracking\": True,": 1,
      "\"database_path\": db.db_path": 1,
      "test_messages = [": 1,
      "\"comprehensive_logging\": {": 1,
      "workflow_mode: Workflow mode (standard, aggressive, conservative)": 1,
      "This would call the actual analyze_context_deeply function": 1,
      "\"author\": metadata.author,": 1,
      "tool_count = len(plugin_manager.registry.tools)": 1,
      "context_parts.append(f\"Preferences: {', '.join(user_info['preferences'][:2])}\")": 1,
      "\"data_storage_comprehensive\": {": 1,
      "\"platform\": \"cursor\",": 1,
      "\"plugins_loaded\": plugin_count,": 1,
      "\ud83e\udde0 Analyze content with enhanced contextual understanding": 1,
      "Test the memory system with sample conversations": 1,
      "# Execute tool performance analysis": 1,
      "context_data: Context data to assess": 1,
      "\"memory_processing\": {": 1,
      "- Phase 3: Continuous Learning Preparation": 1,
      "call_history = function_logger.get_call_history(limit=limit, function_name=function_name)": 1,
      "for plugin_name, plugin in plugin_manager.registry.plugins.items():": 1,
      "bool(important_info)": 1,
      "===== DOMAIN 5: OUTPUT & ACTION =====": 1,
      "\"context_score\": 0.5,": 1,
      "result = await plugin._analyze_workflow_performance_handler(timeframe, include_recommendations)": 1,
      "logger.error(f\"\u274c Continuous learning failed: {str(e)}\")": 1,
      "function_logger = get_function_logger()": 1,
      "\"get_user_context\",": 1,
      "table_counts = {}": 1,
      "total_data_points += count": 1,
      "context_results": 1,
      "===== DOMAIN 4: LEARNING & ADAPTATION =====": 1,
      "\"model\": test_result[\"model\"],": 1,
      "context_results = {": 1,
      "Initialize clean brain interface (replaces technical tools)": 1,
      "async def cursor_auto_inject_context() -> dict:": 1,
      "analysis_type: Type of analysis (comprehensive, subtlety, depth, goals, complexity)": 1,
      "\"assistant_response\": assistant_response,": 1,
      "Initialize database system first": 1,
      "consolidates memories for future context enhancement.": 1,
      "This would call the actual context_quality_assessment function": 1,
      "context_parts": 1,
      "result = brain.process_input(input_data)": 1,
      "\"logging_enabled\": function_logger._enabled,": 1,
      "Always register resources and prompts": 1,
      "This would call the actual think_deeply function": 1,
      "call_history": 1,
      "ai_response = await generate_memory_enhanced_response(": 1,
      "\ud83c\udfaf Get comprehensive system status including all logging and memory systems": 1,
      "logger.error(f\"Cursor context error: {str(e)}\")": 1,
      "logger.info(f\"\ud83d\udcca Analyzing tool performance: {tool_name}\")": 1,
      "Implements intelligent tool orchestration based on context analysis.": 1,
      "\ud83d\udd0d COMPREHENSIVE FUNCTION CALL LOGGING TOOLS": 1,
      "AI Chat with Automatic Memory - OPTION A INTEGRATION": 1,
      "Assesses the quality and completeness of current context": 1,
      "# Memory system status": 1,
      "test_result = await llm.test_connection()": 1,
      "include_recommendations: Include improvement recommendations": 1,
      "with sqlite3.connect(db.db_path) as conn:": 1,
      "\"system_status\": \"error\"": 1,
      "\"think\": \"\ud83d\udcad Think and respond with memory and context\",": 1,
      "\"important_info_stored\": [],": 1,
      "memory_instructions": 1,
      "global mcp_client": 1,
      "get_tool_registry": 1,
      "return result": 1,
      "result = await ai_chat_with_memory(message)": 1,
      "result = await plugin._execute_enhanced_workflow_handler(": 1,
      "Brain status and info tools": 1,
      "Provides detailed metrics and actionable recommendations.": 1,
      "if cursor_context.get(\"ready_for_conversation\"):": 1,
      "context_results = result[\"context_analyzer\"]": 1,
      "# Get recent conversation history": 1,
      "\"input\": message,": 1,
      "logger.error(f\"\u274c Batch workflow processing failed: {str(e)}\")": 1,
      "function_call_logger": 1,
      "- Phase 3: Continuous Learning": 1,
      "This would call the actual continuous_learning_cycle function": 1,
      "\"success\": True,": 1,
      "Start MCP server with stdio (works for both Docker and CLI)": 1,
      "\ud83e\udde0 Show available brain functions and cognitive capabilities": 1,
      "\"learned\": result.get(\"important_info_stored\", [])": 1,
      "\"memory_stats\": \"\ud83d\udcca Check memory database statistics and health\"": 1,
      "Fallback to simple response if LLM fails": 1,
      "from llm_client import OllamaClient": 1,
      "\"test_completed\": True,": 1,
      "# Calculate total data points": 1,
      "\"function_calls_logged\": session_stats.get(\"total_calls\", 0),": 1,
      "\"error\": f\"Memory processing failed: {str(e)}\"": 1,
      "import sqlite3": 1,
      "new": 1,
      "interactions": 1,
      "context_data: Context data from Phase 1": 1,
      "# Execute Phase 1": 1,
      "return {\"success\": False, \"error\": str(e)}": 1,
      "plugin = EnhancedWorkflowOrchestratorPlugin()": 1,
      "This reduces tool count from 48 to 12 while preserving 100% functionality": 1,
      "plugin_info": 1,
      "async def build_comprehensive_context(user_message: str, context_depth: str = \"comprehensive\") -> dict:": 1,
      "# Import and initialize enhanced context integration": 1,
      "\"conversation_stored\": True,": 1,
      "Register plugin tools for debugging": 1,
      "memory_result = await mcp_client.call_tool(": 1,
      "if user_info.get(\"name\"):": 1,
      "\"error\": test_result.get(\"error\")": 1,
      "\"conversation_count\": len(recent_conversations),": 1,
      "\"should_inject\": True": 1,
      "\"description\": metadata.description,": 1,
      "This would call the actual generate_memory_enhanced_response function": 1,
      "\"cross_references_available\": True": 1,
      "if \"context_analyzer\" in result:": 1,
      "context_summary": 1,
      "plugin_manager": 1,
      "conversations": 1,
      "\"memory_used\": result.get(\"memory_context_used\", \"\"),": 1,
      "include_history: Include conversation history": 1,
      "table_counts[table] = count": 1,
      "memory_instructions.append(f\"Just learned: {', '.join(important_info)}\")": 1,
      "Provides relevant context automatically when Cursor starts new conversations": 1,
      "tool_def": 1,
      "Get server status and statistics": 1,
      "\ud83e\udde0 OPTION A INTEGRATION - ADD THESE NEW MEMORY-ENHANCED TOOLS:": 1,
      "\"total_functions\": len(brain_functions),": 1,
      "\"\"\"Get server status and statistics\"\"\"": 1,
      "Learning results with patterns and improvements": 1,
      "\"inject_message\": \"Starting fresh conversation\",": 1,
      "\"table_breakdown\": table_counts,": 1,
      "include_history,": 1,
      "This would call the actual understand_deeply function": 1,
      "\"tools_available\": len(plugin_manager.registry.tools) + 4,  # +4 for core + memory tools": 1,
      "include_learning: Include learning phase": 1,
      "include_preferences: Include user preferences": 1,
      "Store not found error": 1,
      "\"llm_connection\": False,": 1,
      "\"type\": f\"context_{analysis_type}_analysis\" if analysis_type != \"comprehensive\" else \"context_analysis\",": 1,
      "\"\"\"\ud83e\udde0 Show available brain functions and cognitive capabilities\"\"\"": 1,
      "- Phase 1: Enhanced Context Retrieval": 1,
      "async def workflow_health_check(check_level: str = \"comprehensive\") -> dict:": 1,
      "Uses the new ContextAnalyzer module to detect subtle patterns,": 1,
      "\ud83d\udd27 Optimize Workflow": 1,
      "\"total_calls\": len(call_history),": 1,
      "\"assistant_identity\": cursor_context.get(\"assistant_name\", \"Johny\"),": 1,
      "Optimizes workflow based on performance metrics and usage patterns.": 1,
      "learning_result = await mcp_client.call_tool(\"auto_process_message\", user_message=user_message)": 1,
      "\"tools\": [tool.name for tool in plugin.get_tools()],": 1,
      "result = await plugin._build_comprehensive_context_handler(user_message, context_depth)": 1,
      "logger.error(f\"\u274c Context quality assessment failed: {str(e)}\")": 1,
      "This would call the actual code_analyze function": 1,
      "input_data = {": 1,
      "def list_plugins() -> dict:": 1,
      "db = get_brain_db()": 1,
      "result = await plugin._analyze_tool_performance_handler(tool_name, timeframe)": 1,
      "assessment_criteria = [\"completeness\", \"relevance\", \"freshness\"]": 1,
      "\"\"\"": 1,
      "plugin_count = len(plugin_manager.registry.plugins)": 1,
      "This would call the actual track_cursor_conversation function": 1,
      "results.append({": 1,
      "context_results = module_result": 1,
      "async def list_available_models() -> dict:": 1,
      "function": 1,
      "===== DOMAIN 1: PERCEPTION & INPUT =====": 1,
      "\"memory_updated\": learning_result.get(\"success\", False)": 1,
      "# Extract context analysis results": 1,
      "\"test_response\": \"\",": 1,
      "log_mcp_tool": 1,
      "\"error\": \"MCP client not initialized\",": 1,
      "\ud83d\udeab DISABLED: Enhanced brain tools to prevent tool duplication": 1,
      "return plugin_info": 1,
      "context_result = await mcp_client.call_tool(\"get_user_context\", query=\"assistant identity user preferences conversation\")": 1,
      "Analyzes tool performance and usage patterns to identify": 1,
      "memory": 1,
      "db.add_context_history(conversation_data)": 1,
      "important_info = memory_result.get(\"important_info_found\", [])": 1,
      "\"learning_capability\": \"Continuous from interactions\",": 1,
      "\"usage_example\": \"Use 'think' for conversations, 'remember' to store info, 'recall' to search memories\"": 1,
      "from enhanced_brain_tools_simple import EnhancedBrainTools": 1,
      "for module_name, module_result in result[\"modules\"].items():": 1,
      "This would call the actual get_cursor_context function": 1,
      "models_result = await ollama.list_models()": 1,
      "# Process the user message for learning": 1,
      "\"analysis_type\": analysis_type,": 1,
      "We'll manually register only the tools we need": 1,
      "cursor_context = await get_cursor_context()": 1,
      "user_message: User's message for context enhancement": 1,
      "\ud83d\udd0d Search function calls by content, context, or parameters": 1,
      "This would call the actual consciousness_check function": 1,
      "tool_info": 1,
      "context_depth: Context depth (basic, enhanced, comprehensive)": 1,
      "# Count all tables": 1,
      "plugin_count": 1,
      "Args:": 1,
      "List all loaded plugins and their information": 1,
      "Get tool information from new registry": 1,
      "workflow_mode: Workflow mode for batch processing": 1,
      "@log_mcp_tool": 1,
      "\"test_results\": results,": 1,
      "\ud83d\udcca Analyze Workflow Performance": 1,
      "\"should_inject\": False": 1,
      "# Execute complete workflow": 1,
      "async def batch_workflow_processing(user_messages: list, workflow_mode: str = \"standard\") -> dict:": 1,
      "\"conversations_stored\": len(conversations),": 1,
      "assessment_criteria: Criteria for assessment": 1,
      "table_counts": 1,
      "This would call the actual tool_performance_analysis function": 1,
      "\"recall\": \"\ud83d\udd0d Recall memories and past experiences\",": 1,
      "context_parts.append(f\"Recent conversations: {len(recent_conversations)} in memory\")": 1,
      "\"context_analysis\": context_results,": 1,
      "result = await plugin._optimize_workflow_handler(optimization_focus, target_metrics)": 1,
      "if recent_conversations:": 1,
      "\"total_memories\": len(memory_data.get(\"memory_store\", {})),": 1,
      "\ud83d\udcdd Track Cursor conversation for learning and context": 1,
      "Simple MCP client for internal tool calls with comprehensive logging": 1,
      "Get function logger": 1,
      "# Execute Phase 3": 1,
      "async def assess_context_quality(context_data: dict, assessment_criteria: list = None) -> dict:": 1,
      "This would call the actual batch_workflow_processing function": 1,
      "This would call the actual workflow_health_check function": 1,
      "Complete workflow results with performance metrics": 1,
      "logger.error(f\"\u274c Workflow optimization failed: {str(e)}\")": 1,
      "This would call the actual debug_intelligently function": 1,
      "\"plugins_loaded\": len(plugin_manager.registry.plugins),": 1,
      "\"mcp_configured\": True,": 1,
      "Enhanced Workflow Orchestrator Tools - Complete Workflow Automation": 1,
      "\"session_id\": function_logger._session_id": 1,
      "This would call the actual recall_intelligently function": 1,
      "Look for other common names": 1,
      "THINKING": 1,
      "brain_state = brain.get_brain_state()": 1,
      "# Import and initialize enhanced workflow orchestrator": 1,
      "\"content\": content,": 1,
      "else:": 1,
      "result = await plugin._workflow_health_check_handler(check_level)": 1,
      "async def ai_chat_with_memory(user_message: str, ai_model_name: str = \"assistant\") -> dict:": 1,
      "\"auto_context_injection\": True": 1,
      "# Get user context": 1,
      "This would call the actual assess_complexity function": 1,
      "\"brain_type\": \"Human-Inspired Cognitive System\",": 1,
      "session_stats": 1,
      "tool_name: Specific tool to analyze (default: all)": 1,
      "brain_db": 1,
      "Count actual MCP tools (our 6 consolidated tools)": 1,
      "async def get_cursor_context() -> dict:": 1,
      "plugin = EnhancedContextIntegrationPlugin()": 1,
      "\"\"\"List all loaded plugins and their information\"\"\"": 1,
      "async def track_cursor_conversation(user_message: str, assistant_response: str = \"\", conversation_type: str = \"coding\") -> dict:": 1,
      "\"phase\": \"continuous_learning\",": 1,
      "Implements comprehensive context retrieval with pre-response memory search,": 1,
      "List available LLM models from Ollama": 1,
      "async def quick_memory_chat(message: str) -> str:": 1,
      "This would call the actual workflow_performance_analysis function": 1,
      "try:": 1,
      "context_lower": 1,
      "\"brain_state\": brain_state,": 1,
      "\"reflect\": \"\ud83e\udd14 Engage in self-reflection and metacognition\",": 1,
      "\"memory_result\": memory_result.get(\"success\", False),": 1,
      "if not context_results:": 1,
      "This would call the actual remember_important function": 1,
      "\"ai_response\": f\"I'd be happy to help with: {user_message}\",": 1,
      "\"insights\": [\"Basic context analysis available\"],": 1,
      "async def continuous_learning_cycle(interaction_data: dict, learning_focus: str = \"context_patterns\") -> dict:": 1,
      "\"session_success_rate\": session_stats.get(\"success_rate\", 0),": 1,
      "\"error\": str(e),": 1,
      "\"tools_available\": tool_count,": 1,
      "tool_registry": 1,
      "conversations = db.get_conversation_history(limit=5)": 1,
      "MCPClient": 1,
      "Call the tool handler": 1,
      "\"auto_process_message\",": 1,
      "Test connection to the Ollama LLM service": 1,
      "async def analyze_workflow_performance(timeframe: str = \"session\", include_recommendations: bool = True) -> dict:": 1,
      "\"learn_from\": \"\ud83d\udcda Learn from new experiences and information\",": 1,
      "logger.info(f\"\ud83c\udfd7\ufe0f Building {context_depth} context\")": 1,
      "# STEP 1: Process user message and get memory context": 1,
      "This would call the actual orchestrate_tools function": 1,
      "for table in tables:": 1,
      "\"user_id\": \"current_user\",": 1,
      "Performs comprehensive health check of the enhanced workflow system.": 1,
      "This would call the actual ai_chat_with_memory function": 1,
      "return result.get(\"ai_response\", \"I'd be happy to help!\")": 1,
      "total_data_points": 1,
      "Clear any existing plugins to start fresh": 1,
      "\"total_data_points\": total_data_points,": 1,
      "elif \"modules\" in result:": 1,
      "if \"context_analyzer\" in module_name.lower():": 1,
      "return {\"success\": False, \"error\": \"Memory system not available\"}": 1,
      "context_summary = context_result.get(\"context_summary\", \"\")": 1,
      "2nd": 1,
      "our": 1,
      "\"context_result\": context_result.get(\"success\", False)": 1,
      "\ud83d\udcca Get comprehensive function call history with full traceability": 1,
      "\"automatic_storage_active\": True": 1,
      "\"prompts\": [prompt.name for prompt in plugin.get_prompts()],": 1,
      "Core server management tools": 1,
      "\"prompts_available\": len(plugin_manager.registry.prompts),": 1,
      "# Assistant identity": 1,
      "\"llm_connection\": test_result[\"connection_working\"],": 1,
      "logger.info(f\"\ud83e\udde0 Performing deep context analysis: {analysis_type}\")": 1,
      "\"memory_context_used\": memory_context,": 1,
      "error_result": 1,
      "Global MCP client instance": 1,
      "from plugins.enhanced_workflow_orchestrator import EnhancedWorkflowOrchestratorPlugin": 1,
      "\"model\": \"unknown\"": 1,
      "\ud83d\ude80 Auto-inject context for new Cursor conversations": 1,
      "for message in test_messages:": 1,
      "enhanced_brain_tools_simple": 1,
      "\"total_results\": len(search_results),": 1,
      "interaction_data: Data from the interaction": 1,
      "Add src to path": 1,
      "\"brain_functions\": 8  # From brain_info": 1,
      "Provides assistant identity, user info, and conversation history": 1,
      "result = await plugin._enhanced_context_retrieval_handler(": 1,
      "This would call the actual forget_selectively function": 1,
      "Batch processing results with performance metrics": 1,
      "Comprehensive context with overall quality score": 1,
      "\"inject_message\": f\"Context: {cursor_context['context']}\",": 1,
      "Health check results with status and recommendations": 1,
      "logger.info(f\"\ud83d\ude80 Executing Enhanced Workflow: {workflow_mode} mode\")": 1,
      "# Execute context quality assessment": 1,
      "async with OllamaClient() as ollama:": 1,
      "DISABLE ALL PLUGIN LOADING - We only want the restructured cognitive system": 1,
      "\"timestamp\": datetime.now().isoformat()": 1,
      "brain_functions = {": 1,
      "important_info": 1,
      "logger.info(f\"\ud83d\udcca Analyzing workflow performance: {timeframe}\")": 1,
      "\"important_info_stored\": important_info,": 1,
      "Complete overview of all data storage and cross-referencing capabilities": 1,
      "This would call the actual enhanced_context_workflow function": 1,
      "query=\"user name preferences important facts\"": 1,
      "get_llm_client": 1,
      "\"dream\": \"\ud83d\udca4 Background processing and memory consolidation\",": 1,
      "Analyzes workflow performance and identifies improvement opportunities.": 1,
      "\"error\": \"Brain interface not available\",": 1,
      "Identifies issues and provides maintenance recommendations.": 1,
      "\"preferences\": user_info.get(\"preferences\", []),": 1,
      "Shows function call breakdown, success rates, and execution times": 1,
      "\"memory_system\": {": 1,
      "\"call_history\": []": 1,
      "\ud83e\udde0 CONSOLIDATED TOOL REGISTRATION - All individual tools consolidated into cognitive domains": 1,
      "\"plugin_directories\": plugin_manager.plugin_dirs,": 1,
      "\"session_statistics\": session_stats,": 1,
      "memory_data": 1,
      "for seamless Cursor integration": 1,
      "# Execute batch workflow processing": 1,
      "context_summary = \"\"": 1,
      "Get LLM client": 1,
      "def server_status() -> dict:": 1,
      "initialize_server": 1,
      "if not brain:": 1,
      "Tool orchestration results with execution plan": 1,
      "async def test_memory_system() -> dict:": 1,
      "\"resources\": [resource.name for resource in plugin.get_resources()],": 1,
      "This would call the actual detect_patterns function": 1,
      "memory_context = \" | \".join(memory_instructions)": 1,
      "def brain_info() -> dict:": 1,
      "This would call the actual enhanced_context_retrieval function": 1,
      "Extract user message for context": 1,
      "optimization_focus: Focus area for optimization": 1,
      "tables = ['memory_store', 'conversation_memories', 'context_history', 'function_calls', 'memory_chunks']": 1,
      "\"context\": \" | \".join(context_parts) if context_parts else \"Fresh conversation - no prior context\",": 1,
      "\"user_message\": user_message,": 1,
      "Look for \"call me\" or \"name is\" patterns": 1,
      "async def test_llm_connection() -> dict:": 1,
      "# Get brain state for context": 1,
      "return models_result": 1,
      "results = []": 1,
      "\"consciousness_check\": \"\ud83e\uddd8 Check current state of consciousness\",": 1,
      "\"call_history\": call_history,": 1,
      "Cross-references all stored data for comprehensive search": 1,
      "if context_result.get(\"success\"):": 1,
      "tables": 1,
      "\ud83d\udd27 CONSOLIDATED TOOLS REGISTERED WITH MCP SERVER": 1,
      "This would call the actual workflow_optimization function": 1,
      "\"response\": f\"I'd help with: {user_message}\"": 1,
      "async def get_session_statistics() -> dict:": 1,
      "Optimized for handling multiple requests in sequence.": 1,
      "if important_info:": 1,
      "plugin_info = {}": 1,
      "async def execute_enhanced_workflow(user_message: str, workflow_mode: str = \"standard\", include_learning: bool = True) -> dict:": 1,
      "# STEP 2: Extract context for AI response": 1,
      "recent_conversations = db.get_conversation_history(limit=3)": 1,
      "function_logger": 1,
      "\"phase\": \"enhanced_context_retrieval\",": 1,
      "enhanced_brain_tools": 1,
      "session_stats = function_logger.get_session_stats()": 1,
      "\"search_term\": search_term,": 1,
      "conversation history analysis, and user preference integration.": 1,
      "metadata = plugin.metadata": 1,
      "implicit goals, and nuanced situations in user requests.": 1,
      "\ud83d\udce6 Batch Workflow Processing": 1,
      "Initialize function call logger FIRST": 1,
      "context_parts.append(f\"Assistant Identity: {context_summary}\")": 1,
      "user_message: User's message": 1,
      "Quality assessment with scores and suggestions": 1,
      "===== DOMAIN 3: PROCESSING & THINKING =====": 1,
      "workflow_mode,": 1,
      "\"recommendations\": [\"Enable full context analyzer for detailed insights\"]": 1,
      "# Execute workflow performance analysis": 1,
      "mcp_client": 1,
      "logger.info(\"\ud83d\udcda Phase 3: Continuous Learning\")": 1,
      "user_message,": 1,
      "logger.error(f\"Error in deep context analysis: {str(e)}\")": 1,
      "\"search_results\": []": 1,
      "This would call the actual memory_stats function": 1,
      "user_info = context_result.get(\"user_info\", {}) if context_result.get(\"success\") else {}": 1,
      "\ud83c\udfaf Assess Context Quality": 1,
      "MONITORING": 1,
      "# Prepare input for context analysis": 1,
      "Automatically learns from Cursor conversations and updates memory": 1,
      "get_function_logger": 1,
      "list": 1,
      "from plugins.enhanced_context_integration import EnhancedContextIntegrationPlugin": 1,
      "\"user_names\": user_info.get(\"name\", []),": 1,
      "Only register essential debugging tools in debug mode": 1,
      "Call a tool by name with parameters and automatically log everything": 1,
      "target_goal: What we're trying to achieve": 1,
      "Returns:": 1,
      "result = await plugin._orchestrate_tools_handler(context_data, target_goal)": 1,
      "table_counts[table] = 0": 1,
      "Enhanced context data with quality metrics": 1,
      "target_metrics: Target metrics to improve": 1,
      "\"assistant_name\": \"Johny\",": 1,
      "conversation_data": 1,
      "\"memory_system\": \"Persistent with emotional weighting\",": 1,
      "actual_mcp_tools": 1,
      "# STEP 3: Create enhanced AI prompt with memory context": 1,
      "# Fallback response without memory": 1,
      "\"function_filter\": function_name,": 1,
      "functionality": 1,
      "\"plugin_system\": {": 1,
      "logger.error(f\"\u274c Enhanced context retrieval failed: {str(e)}\")": 1,
      "\ud83c\udfe5 Workflow Health Check": 1,
      "\"cursor_integration\": {": 1,
      "Phase": 1,
      "INPUT": 1,
      "\"session_statistics\": {}": 1,
      "Quick memory-enabled chat - simplified version": 1,
      "using multiple criteria and generates improvement suggestions.": 1,
      "async def search_function_calls(search_term: str, limit: int = 20) -> dict:": 1,
      "break": 1,
      "learning_focus: What to focus on learning": 1,
      "brain_functions": 1,
      "# Execute comprehensive context building": 1,
      "ADAPTATION": 1,
      "total_data_points = 0": 1,
      "Implements continuous learning and context improvement.": 1,
      "===== DOMAIN 2: MEMORY & STORAGE =====": 1,
      "\"type\": conversation_type,": 1,
      "# User information": 1,
      "user_message: User's message for context analysis": 1,
      "context_parts.append(f\"User: {', '.join(user_info['name'][:2])}\")": 1,
      "Show first 5": 1,
      "imports": 1,
      "Record scan history for tracking and analysis": 1,
      "package_manager": 1,
      "Check for common file types": 1,
      "file_type_counts": 1,
      "Calculate a hash of the file content for change detection": 1,
      "Parse dependencies": 1,
      "File was deleted": 1,
      "history": 1,
      "Save detailed index to file": 1,
      "full_path": 1,
      "purpose_counts": 1,
      "by_source": 1,
      "**Root**: {index.project_root}": 1,
      "Update directory language and framework sets": 1,
      "_parse_dependency_file": 1,
      "size": 1,
      "# \ud83d\udde3\ufe0f Languages": 1,
      "subdir_count": 1,
      "index": 1,
      "Test coverage": 1,
      "Parse requirement line (basic implementation)": 1,
      "Parse go.mod file": 1,
      "Add purpose attribute": 1,
      "Detect the development environment and tools": 1,
      "Recursively convert sets to lists for JSON serialization": 1,
      "total_size": 1,
      "\ud83d\udde3\ufe0f Languages": 1,
      "_parse_go_dependencies": 1,
      "Determine if a file should be skipped during scanning": 1,
      "Extract imports from a file (basic implementation)": 1,
      "Java compiled": 1,
      "total_directories": 1,
      "framework_counts": 1,
      "build": 1,
      "Detect the purpose of a file or directory": 1,
      "scan_record": 1,
      "Main function for testing the project scanner": 1,
      "dir_info": 1,
      "Entity": 1,
      "Export the project index in various formats": 1,
      "Python cache": 1,
      "**Total Directories**: {index.total_directories}": 1,
      "**Dependencies**: {len(index.dependencies)}": 1,
      "Complete project index": 1,
      "Detect databases": 1,
      "Information about a directory": 1,
      "deps_match": 1,
      "Detect dependencies": 1,
      "Build project context and metadata": 1,
      "dependency_files": 1,
      "stack": 1,
      "Format framework summary for display": 1,
      "Keep only last 10 scans": 1,
      "SpringBootApplication": 1,
      "Process and index a directory": 1,
      "Skip common directories that don't need indexing": 1,
      "IDE files": 1,
      "Count files and subdirectories": 1,
      "Convert sets to lists for JSON serialization": 1,
      "Backup files": 1,
      "Scan file system": 1,
      "\ud83d\udcca Statistics": 1,
      "depth": 1,
      "Comprehensive project scanning and indexing": 1,
      "Parse Cargo.toml file": 1,
      "Comprehensive project scanning and indexing system": 1,
      "Categorize directories": 1,
      "**Scan Time**: {datetime.fromtimestamp(index.scan_time).strftime('%Y-%m-%d %H:%M:%S')}": 1,
      "'package', 'module', 'framework'": 1,
      "files": 1,
      "file_metadata": 1,
      "_process_file": 1,
      "file_hash": 1,
      "env": 1,
      "index_data": 1,
      "Detect the type of a file": 1,
      "Parse pip requirements.txt or pyproject.toml file": 1,
      "Calculate max depth": 1,
      "_parse_pip_dependencies": 1,
      "Identify the technology stack being used": 1,
      "Extract dependencies and imports (basic implementation)": 1,
      "version": 1,
      "hash": 1,
      "git_dir": 1,
      "Table": 1,
      "Extract dependencies from a file (basic implementation)": 1,
      "Parse npm package.json file": 1,
      "_detect_dependencies": 1,
      "Detect project dependencies from package manager files": 1,
      "Process files": 1,
      "Initialize purpose to None": 1,
      "Framework distribution": 1,
      "This is a basic implementation - can be enhanced later": 1,
      "Purpose distribution": 1,
      "relative_root": 1,
      "Detect purpose": 1,
      "Create and return project index": 1,
      "gitignore": 1,
      "Detect version control system and configuration": 1,
      "Detect build files": 1,
      "Project Index Summary": 1,
      "OS files": 1,
      "# \ud83d\udcca Statistics": 1,
      "_scan_file_system": 1,
      "Build context": 1,
      "Extract exports from a file (basic implementation)": 1,
      "path_str": 1,
      "language_patterns": 1,
      "_record_scan_history": 1,
      "Python compiled": 1,
      "Information about project dependencies": 1,
      "max_depth": 1,
      "Group by source": 1,
      "context_index": 1,
      "Generate a human-readable summary of the project": 1,
      "\ud83c\udfd7\ufe0f Frameworks": 1,
      "Detect the framework being used": 1,
      "parent_dir": 1,
      "stat": 1,
      "Lock files": 1,
      "# \ud83d\udce6 Dependencies": 1,
      "dep_info": 1,
      "Create scanner and scan project": 1,
      "Detect the build system and tools": 1,
      "modified_time": 1,
      "relative_path": 1,
      "_convert_sets_to_lists": 1,
      "vcs": 1,
      "root_path": 1,
      "Detect changes in the project since last scan": 1,
      "pattern_index": 1,
      "Detect testing frameworks": 1,
      "history_index": 1,
      "File type distribution": 1,
      "Process and index a file": 1,
      "Check if file has changed": 1,
      "_process_directory": 1,
      "Check for special files first": 1,
      "Detect build tools": 1,
      "'package.json', 'requirements.txt', etc.": 1,
      "\ud83d\udcc1 Project Overview": 1,
      "Version control": 1,
      "Format language summary for display": 1,
      "Detect IDE and editor files": 1,
      "\ud83d\udce6 Dependencies": 1,
      "Parse require line": 1,
      "Vim swap files": 1,
      "Build a dependency graph showing relationships": 1,
      "Get the current project index": 1,
      "Clear previous index": 1,
      "\ud83c\udfaf Project Structure": 1,
      "Simple regex-based parsing for now": 1,
      "Test": 1,
      "Compiled libraries": 1,
      "# \ud83c\udfaf Project Structure": 1,
      "Metadata for a single file": 1,
      "Determine if a directory should be skipped during scanning": 1,
      "Create file metadata": 1,
      "angular": 1,
      "_parse_cargo_dependencies": 1,
      "# \ud83d\udcc1 Project Overview": 1,
      "purpose_patterns": 1,
      "Project metadata": 1,
      "Check for .gitignore": 1,
      "# \ud83c\udfd7\ufe0f Frameworks": 1,
      "Detect file type and language": 1,
      "Analyze the overall project structure": 1,
      "exports": 1,
      "Add more package managers as needed": 1,
      "file_count": 1,
      "Add dependency nodes": 1,
      "Calculate file hash for change detection": 1,
      "Framework detection patterns": 1,
      "Analyze code patterns and project structure": 1,
      "Purpose detection patterns": 1,
      "Parse a dependency file and extract dependency information": 1,
      "Record scan history": 1,
      "dependencies": 1,
      "**Name**: {index.context.get('project_name', 'Unknown')}": 1,
      "_parse_npm_dependencies": 1,
      "hasher": 1,
      "Check for Git": 1,
      "framework_patterns": 1,
      "total_files": 1,
      "Node.js": 1,
      "language_counts": 1,
      "Language distribution": 1,
      "package": 1,
      "scan_time": 1,
      "Scan the file system and build file and directory indexes": 1,
      "Build outputs": 1,
      "Basic TOML parsing (can be enhanced with proper TOML library)": 1,
      "**Total Files**: {index.total_files}": 1,
      "_build_context": 1,
      "Add file nodes": 1,
      "Language and framework detection patterns": 1,
      "Basic TOML parsing for dependencies": 1,
      "deps_content": 1,
      "framework": 1,
      "**Total Size**: {index.total_size:,} bytes": 1,
      "current_hash": 1,
      "Process directories": 1,
      "Format project structure summary for display": 1,
      "Format dependency summary for display": 1,
      "Look for our enhanced tools": 1,
      "result_data": 1,
      "stdio_client": 1,
      "enhanced_tools": 1,
      "test_enhanced_functionality": 1,
      "Test enhanced brain tools": 1,
      "Test think tool": 1,
      "Test the analyze_context_deeply tool if available": 1,
      "context_tools": 1,
      "Parse the result": 1,
      "ClientSession": 1,
      "Test the enhanced functionality in the Docker container": 1,
      "Connect to the MCP server": 1,
      "test_content": 1,
      "arguments": 1,
      "test_info": 1,
      "Test the enhanced think tool": 1,
      "insights": 1,
      "Show some insights": 1,
      "brain_tools": 1,
      "test_message": 1,
      "context_enh": 1,
      "Check for enhanced features": 1,
      "Test the enhanced remember tool": 1,
      "Test the detect_patterns tool": 1,
      "Test the recall_intelligently tool": 1,
      "Test the code_analyze tool": 1,
      "Test the understand_deeply tool": 1,
      "calculate_complexity": 1,
      "Calculate test summary": 1,
      "This would normally call the MCP tool": 1,
      "total_tools": 1,
      "Test enhanced memory management tools": 1,
      "tester": 1,
      "report": 1,
      "Main test execution": 1,
      "Test the analyze_context_comprehensive tool": 1,
      "Test the reflect_enhanced tool": 1,
      "successful_tools": 1,
      "Test cognitive enhancement tools": 1,
      "Test the refactor_safely tool": 1,
      "Generate a comprehensive integration report": 1,
      "cache": 1,
      "Test the think_deeply tool": 1,
      "# \ud83d\ude80 NEXT STEPS\")": 1,
      "test_summary": 1,
      "Individual tool test methods": 1,
      "Test the assess_complexity tool": 1,
      "test_results": 1,
      "Test the forget_selectively tool": 1,
      "process": 1,
      "\ud83e\udde0 Enhanced Tool Integration Report\")": 1,
      "Test the remember_important tool": 1,
      "For now, simulate the expected behavior": 1,
      "Run all enhanced tool tests": 1,
      "EnhancedToolTester": 1,
      "complex_request": 1,
      "Test all tool categories": 1,
      "Test dedicated context analysis tools": 1,
      "Calculate complexity of data structure": 1,
      "# \ud83c\udfaf INTEGRATION STATUS\")": 1,
      "sample_code": 1,
      "Run all tests": 1,
      "Test Cursor-specific tools": 1,
      "DataProcessor": 1,
      "Test the debug_intelligently tool": 1,
      "Generate and display report": 1,
      "Test all enhanced tools and their integration": 1,
      "Save results to file": 1,
      "Test analysis and understanding tools": 1,
      "# {category.upper()} TOOLS\")": 1,
      "mcp_process": 1,
      "refactor_result": 1,
      "Main MCP integration test execution": 1,
      "think_result": 1,
      "_test_context_tools": 1,
      "Test all enhanced tools": 1,
      "_test_cognitive_tools": 1,
      "Run MCP integration tests": 1,
      "patterns_result": 1,
      "Clean up": 1,
      "Test analyze_context_comprehensive": 1,
      "Test think_deeply": 1,
      "For now, simulate MCP tool calls": 1,
      "Test recall_intelligently": 1,
      "Test understand_deeply": 1,
      "Test remember_important": 1,
      "MCPIntegrationTester": 1,
      "complexity_result": 1,
      "In a real implementation, this would use the MCP client library": 1,
      "Test forget_selectively": 1,
      "\ud83d\ude80 MCP Integration Test Report\")": 1,
      "understand_result": 1,
      "Test code_analyze": 1,
      "Test all enhanced tools through MCP": 1,
      "Test enhanced memory tools": 1,
      "Simulate tool execution": 1,
      "remember_result": 1,
      "Generate MCP integration report": 1,
      "Run all MCP integration tests": 1,
      "stdout": 1,
      "Return simulated successful result": 1,
      "stderr": 1,
      "Test assess_complexity": 1,
      "Check if server is running": 1,
      "subprocess": 1,
      "Wait for server to start": 1,
      "_test_cursor_tools": 1,
      "Test debug_intelligently": 1,
      "Test each category of tools": 1,
      "Test a specific MCP tool": 1,
      "cleanup": 1,
      "Test enhanced tools through MCP protocol": 1,
      "Test refactor_safely": 1,
      "code_result": 1,
      "Start the MCP server for testing": 1,
      "Start the MCP server in the background": 1,
      "forget_result": 1,
      "Test detect_patterns": 1,
      "reflect_result": 1,
      "_test_memory_tools": 1,
      "debug_result": 1,
      "Clean up MCP server process": 1,
      "_test_analysis_tools": 1,
      "# \ud83c\udfaf MCP INTEGRATION STATUS\")": 1,
      "recall_result": 1,
      "Would be \"real\" in production": 1,
      "Test reflect_enhanced": 1,
      "Simulate async operation": 1,
      "Check for specific enhanced tools": 1,
      "capture_output": 1,
      "logs_result": 1,
      "Test if MCP server is responding": 1,
      "found_tools": 1,
      "Check server logs for enhanced tools": 1,
      "Main test function": 1,
      "test_mcp_server": 1,
      "test_handler": 1,
      "success2": 1,
      "Test duplicate registration": 1,
      "decorator": 1,
      "Test creating registry": 1,
      "Test creating a mock MCP server": 1,
      "Test tool registration": 1,
      "Test tool info": 1,
      "mock_mcp": 1,
      "ToolRegistry": 1,
      "Test the tool registry system": 1,
      "Add current directory to path": 1,
      "test_tools": 1,
      "Same name": 1,
      "Test category listing": 1,
      "MockMCPServer": 1,
      "test_tool_registry": 1,
      "Test importing the tool registry": 1,
      "tool_decorator": 1,
      "tool_categories": 1,
      "Clean tool registry that prevents conflicts and organizes tools logically": 1,
      "List tools in a specific category": 1,
      "register_tool": 1,
      "Store tool info": 1,
      "registered_tools": 1,
      "decorated_handler": 1,
      "Get or create the global tool registry": 1,
      "Register with MCP server": 1,
      "Get description of a specific tool": 1,
      "Global tool registry instance": 1,
      "Get comprehensive tool information": 1,
      "Add to category": 1,
      "Get all registered tools with their handlers and info": 1,
      "Register a tool with conflict prevention": 1
    },
    "relationship_types": {
      "contains": 4691,
      "extends": 1
    },
    "source_distribution": {
      "CLEANUP_COMPLETE.md": 80,
      "CLEANUP_SUMMARY.md": 26,
      "COGNITIVE_RESTRUCTURING_SUMMARY.md": 115,
      "CURRENT_TOOLS_ANALYSIS.md": 85,
      "ENHANCED_CONTEXT_SYSTEM_README.md": 219,
      "INTEGRATION_GUIDE.md": 125,
      "MAINTENANCE_REPORT.md": 32,
      "PHASE_1_COMPLETION_SUMMARY.md": 150,
      "PRODUCTION_INTEGRATION_GUIDE.md": 207,
      "PROJECT_ORGANIZATION.md": 77,
      "README.md": 130,
      "README_RESTRUCTURED_SYSTEM.md": 116,
      "RESTRUCTURED_COGNITIVE_SYSTEM.md": 252,
      "ROADMAP.md": 161,
      "TOOLS_AND_WORKFLOWS.md": 177,
      "TOOL_CONSOLIDATION_SUCCESS.md": 119,
      "brain_interface.py": 152,
      "cleanup_project.py": 56,
      "demo_enhanced_context_system.py": 90,
      "demo_project_scanner.py": 51,
      "demo_restructured_cognitive_system.py": 57,
      "demo_results_1754957207.json": 1,
      "docker-compose.yml": 1,
      "enhanced_brain_tools.py": 42,
      "enhanced_brain_tools_simple.py": 110,
      "enhanced_integration_results.json": 1,
      "function_call_logger.py": 71,
      "healthcheck.py": 7,
      "knowledge_ingestion_engine.py": 214,
      "llm_client.py": 49,
      "main.py": 609,
      "mcp-server-config-shareable.json": 1,
      "mcp_integration_results.json": 1,
      "project_index_1754957141.json": 1,
      "project_index_1754957155.json": 1,
      "project_scanner.py": 207,
      "pyproject.toml": 1,
      "test_context_analyzer.py": 1,
      "test_docker_functionality.py": 16,
      "test_enhanced_docker.py": 10,
      "test_enhanced_integration.py": 48,
      "test_mcp_integration.py": 59,
      "test_mcp_tools.py": 9,
      "test_tool_registry.py": 19,
      "tool_registry.py": 17
    },
    "node_types": {
      "document": 45,
      "concept": 3928
    },
    "connectivity": {
      "average_connections": 2.367305751765893,
      "max_connections": 676,
      "min_connections": 1,
      "total_connections": 4692
    }
  },
  "metadata": {
    "total_nodes": 3973,
    "total_relationships": 4692,
    "total_concepts": 3928,
    "created_at": 1754957552.84108,
    "updated_at": 1754957552.84108
  },
  "created_at": 1754957552.8410811,
  "updated_at": 1754957552.8410811
}